<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>亂馬客</title>
  <icon>https://www.gravatar.com/avatar/cd3aed042ccd7a5a5d9956b0bc07dc81</icon>
  <subtitle>Re:從零開始的軟體開發生活</subtitle>
  <link href="https://rainmakerho.github.io/atom.xml" rel="self"/>
  
  <link href="https://rainmakerho.github.io/"/>
  <updated>2023-12-21T02:17:33.922Z</updated>
  <id>https://rainmakerho.github.io/</id>
  
  <author>
    <name>亂馬客</name>
    <email>rainmaker_ho@gss.com.tw</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Azure 設定 OIDC App 額外的 宣告(claim)</title>
    <link href="https://rainmakerho.github.io/2023/12/21/azure-oidc-add-claims-sso/"/>
    <id>https://rainmakerho.github.io/2023/12/21/azure-oidc-add-claims-sso/</id>
    <published>2023-12-21T01:04:27.000Z</published>
    <updated>2023-12-21T02:17:33.922Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近同仁透過 CAS 接 Azure OIDC ，當同仁登入 Azure 後，Azure 傳給 CAS 的 Claims 只有預設的那些。<br>但是在 Azure User 的屬性中有一個<code>mailnickname</code>，我們想要把這個屬性當作額外的 Claim 傳給 CAS。<br>這樣要怎麼設定呢?</p><h3 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h3><p>一般在設定時，一定會在 Microsoft Entra ID(舊 Azure AD) 中的 <code>App registrations</code> 建立 App(Supported account types 為 <code>Single tenant</code>)，<br>它同時也會在 <code>Enterprise applications</code> 建立該 App。</p><p>1.在 <code>App registrations</code> 中的 App 設定 <strong>Manifest</strong> 中的 <code>acceptMappedClaims</code><br>在 <code>App registrations</code> 中選到建立的 App ，點選 <code>Manifest</code> ，將 <code>acceptMappedClaims</code> 設定為 <code>true</code>。<br><code>accessTokenAcceptedVersion</code> 預設值為 null ，也就是 v1.0 id_tokens 的版本，如果需要 v2.0 ，就將它改成 2。<br>詳細設定請參考: <a href="https://learn.microsoft.com/zh-tw/entra/identity-platform/reference-app-manifest?WT.mc_id=Portal-Microsoft_AAD_RegisteredApps">Microsoft Entra 應用程式資訊清單</a></p><img src="/2023/12/21/azure-oidc-add-claims-sso/01.png" class="" title="Manifest"><p>2.在 <code>Enterprise applications</code> 中的 App 的 <code>Single sing-on</code> 中增加 Claims<br>在 <code>Enterprise applications</code> 中選到建立的 App，點選 <code>Single sing-on</code> 在 <strong>2</strong> <code>Atrributes &amp; Claims</code> 按下 Edit</p><img src="/2023/12/21/azure-oidc-add-claims-sso/02.png" class="" title="Single sing-on"><p>在<code>Atrributes &amp; Claims</code>功能中，按下<code>+ Add new claim</code>，</p><img src="/2023/12/21/azure-oidc-add-claims-sso/03.png" class="" title="Add new claim"><p>填入 <code>name</code> 並選擇 <code>Source attribute</code> 為 <code>user.mailnickname</code> (請依需求調整)，最後按下 <code>Save</code></p><img src="/2023/12/21/azure-oidc-add-claims-sso/04.png" class="" title="Save"><p>設定完成後，在 CAS 那透過 Azrue OIDC 登入後，就可以多取到一個叫 <code>mailnickname</code> 的 Claim 了哦~</p><ul><li>註:如果 CAS 出現 <code>This application is required to be configured with an application-specific signing key. It is either not configured with one, or the key has expired or is not yet valid.</code> 表示沒設定 <strong>Manifest</strong></li></ul><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://learn.microsoft.com/en-us/answers/questions/390941/app-registrations-vs-enterprise-applications-in-az">App Registrations vs Enterprise Applications in Azure AD - Certificate Significance</a><br><a href="https://stackoverflow.com/questions/54071385/difference-between-enterprise-application-and-app-registration-in-azure">Difference between “enterprise application” and “app registration” in Azure</a><br><a href="https://learn.microsoft.com/zh-tw/entra/identity-platform/reference-app-manifest?WT.mc_id=Portal-Microsoft_AAD_RegisteredApps">Microsoft Entra 應用程式資訊清單</a><br><a href="https://stackoverflow.com/questions/73746617/when-using-a-custom-azure-claimsmappingpolicy-cant-sign-in-this-application-is">When using a custom Azure ClaimsMappingPolicy can’t sign in “This application is required to be configured with an application-specific signing key. “</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;最近同仁透過 CAS 接 Azure OIDC ，當同仁登入 Azure 後，Azure 傳給 CAS 的 Claims 只有預設的那些。&lt;</summary>
      
    
    
    
    
    <category term="oidc" scheme="https://rainmakerho.github.io/tags/oidc/"/>
    
    <category term="azure" scheme="https://rainmakerho.github.io/tags/azure/"/>
    
    <category term="add" scheme="https://rainmakerho.github.io/tags/add/"/>
    
    <category term="claims" scheme="https://rainmakerho.github.io/tags/claims/"/>
    
    <category term="oauth" scheme="https://rainmakerho.github.io/tags/oauth/"/>
    
  </entry>
  
  <entry>
    <title>C# 把字串變短，以 GUID 為例</title>
    <link href="https://rainmakerho.github.io/2023/12/18/short-string-c/"/>
    <id>https://rainmakerho.github.io/2023/12/18/short-string-c/</id>
    <published>2023-12-18T05:56:06.000Z</published>
    <updated>2023-12-18T08:31:46.115Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>有時會覺得某字串太長了，例如 GUID, 網址 …<br>那有什麼方式可以將它們變短嗎?</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>以下以 GUID 為例子，</p><p>1.取 Byte Array 轉成 Base64 字串。<br>GUID 原始長度為 <strong>36</strong> ，取 byte Array 的值轉成 Base64 ，長度就會短為 <strong>22</strong>。<br>這個做法的好處是可以再轉回 GUID</p><p>如果上述長度<strong>22</strong>還是覺得太長，那就要自行取一個不會重覆的值去對應到原本的 GUID 。<br>這個重覆的值，可以是流水號、timestamp、Hash 前段的值 …<br>還要判斷值是否重覆。</p><p>2.取 MD5 or SHA Hash 值，取後取前幾個字出來，或是取<code>GetHashCode()</code> 轉 Base64</p><p>3.隨機取亂數值</p><p>測試的程式如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//dotnet add package Microsoft.AspNetCore.WebUtilities</span></span><br><span class="line"><span class="keyword">using</span> System.Numerics;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.WebUtilities;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> newGuid = Guid.NewGuid();</span><br><span class="line"><span class="keyword">var</span> strGuid = newGuid.ToString();</span><br><span class="line"><span class="comment">// GUID 長度為 36</span></span><br><span class="line">Console.WriteLine(<span class="string">$&quot;guid:<span class="subst">&#123;strGuid&#125;</span>, Len:<span class="subst">&#123;strGuid.Length&#125;</span>&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Guid Byte Array 轉成 Base64 長度為 22</span></span><br><span class="line"><span class="keyword">var</span> base64Guid = Guid2Base64(newGuid);</span><br><span class="line">Console.WriteLine(<span class="string">$&quot;base64:<span class="subst">&#123;base64Guid&#125;</span>, Len:<span class="subst">&#123;base64Guid.Length&#125;</span>&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> reverseGuid = Base642Guid(base64Guid);</span><br><span class="line">Console.WriteLine(<span class="string">$&quot;base64Guid:<span class="subst">&#123;reverseGuid&#125;</span>, Len:<span class="subst">&#123;reverseGuid.Length&#125;</span>&quot;</span>);</span><br><span class="line"><span class="comment">// 可再轉回 Guid</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// GUID 用 MD5 計算 Hash , 取前10</span></span><br><span class="line"><span class="keyword">var</span> md5Guid = Guid2Md5Pre10(strGuid);</span><br><span class="line">Console.WriteLine(<span class="string">$&quot;MD5 Base62:<span class="subst">&#123;md5Guid&#125;</span>, Len:<span class="subst">&#123;md5Guid.Length&#125;</span>&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// GUID HashCode , Base62 長度為 10~11</span></span><br><span class="line"><span class="keyword">var</span> hashCode = HashCode2Base62(strGuid);</span><br><span class="line">Console.WriteLine(<span class="string">$&quot;HashCode :<span class="subst">&#123;hashCode&#125;</span>, Len:<span class="subst">&#123;hashCode.Length&#125;</span>&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// GUID HashCode , Base64 長度為 10~11</span></span><br><span class="line"><span class="keyword">var</span> hashCodeB64 = HashCode2Base64(strGuid);</span><br><span class="line">Console.WriteLine(<span class="string">$&quot;HashCode :<span class="subst">&#123;hashCodeB64&#125;</span>, Len:<span class="subst">&#123;hashCodeB64.Length&#125;</span>&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 取隨機值，長度為 3~5</span></span><br><span class="line"><span class="keyword">var</span> randomStr = GenerateRandom();</span><br><span class="line">Console.WriteLine(<span class="string">$&quot;randomStr :<span class="subst">&#123;randomStr&#125;</span>, Len:<span class="subst">&#123;randomStr.Length&#125;</span>&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="built_in">string</span> <span class="title">Guid2Base64</span>(<span class="params">Guid guid</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span> modifiedBase64 = ConvertToBase64(guid.ToByteArray());</span><br><span class="line">    <span class="keyword">return</span> modifiedBase64;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="built_in">string</span> <span class="title">Base642Guid</span>(<span class="params"><span class="built_in">string</span> base64</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> bytesDecode = ConvertFromBase64(base64);</span><br><span class="line">    <span class="keyword">var</span> guid = <span class="keyword">new</span> Guid(bytesDecode);</span><br><span class="line">    <span class="keyword">return</span> guid.ToString();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="built_in">string</span> <span class="title">Guid2Md5Pre10</span>(<span class="params"><span class="built_in">string</span> guid</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> guidHash = System.Security.Cryptography.MD5.Create().ComputeHash(Encoding.UTF8.GetBytes(guid));</span><br><span class="line">    <span class="keyword">var</span> result = BitConverter.ToString(guidHash).Replace(<span class="string">&quot;-&quot;</span>, <span class="string">&quot;&quot;</span>).Substring(<span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="built_in">string</span> <span class="title">HashCode2Base62</span>(<span class="params"><span class="built_in">string</span> guid</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> guidHash = Encoding.UTF8.GetBytes(<span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0:X&#125;&quot;</span>, guid.GetHashCode()));</span><br><span class="line">    <span class="keyword">var</span> result = ConvertToBase62(guidHash);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="built_in">string</span> <span class="title">HashCode2Base64</span>(<span class="params"><span class="built_in">string</span> guid</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> guidHash = Encoding.UTF8.GetBytes(<span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0:X&#125;&quot;</span>, guid.GetHashCode()));</span><br><span class="line">    <span class="keyword">var</span> result = ConvertToBase64(guidHash);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="built_in">string</span> <span class="title">GenerateRandom</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span> urlsafe = <span class="built_in">string</span>.Empty;</span><br><span class="line">    Enumerable.Range(<span class="number">48</span>, <span class="number">75</span>)</span><br><span class="line">        .Where(i =&gt; i &lt; <span class="number">58</span> || i &gt; <span class="number">64</span> &amp;&amp; i &lt; <span class="number">91</span> || i &gt; <span class="number">96</span>)</span><br><span class="line">        .OrderBy(o =&gt; <span class="keyword">new</span> Random().Next())</span><br><span class="line">        .ToList()</span><br><span class="line">        .ForEach(i =&gt; urlsafe += Convert.ToChar(i));</span><br><span class="line">    <span class="keyword">var</span> result = urlsafe.Substring(<span class="keyword">new</span> Random().Next(<span class="number">0</span>, urlsafe.Length), <span class="keyword">new</span> Random().Next(<span class="number">2</span>, <span class="number">6</span>));</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="built_in">string</span> <span class="title">EzConvertToBase62</span>(<span class="params"><span class="built_in">byte</span>[] buffer</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="built_in">string</span> chars = <span class="string">&quot;0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="keyword">var</span> b <span class="keyword">in</span> buffer)</span><br><span class="line">    &#123;</span><br><span class="line">        sb.Append(chars[b % <span class="number">62</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sb.ToString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>結果如下，</p><img src="/2023/12/18/short-string-c/01.png" class="" title="執行結果"><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://dvoituron.com/2022/04/07/generate-small-unique-identifier/">A shorter, more user-friendly GUID</a><br><a href="https://dayvster.com/blog/make-a-url-shortener-csharp">Make a URL Shortener in C#</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;有時會覺得某字串太長了，例如 GUID, 網址 …&lt;br&gt;那有什麼方式可以將它們變短嗎?&lt;/p&gt;
&lt;h3 id=&quot;解法&quot;&gt;&lt;a href=&quot;</summary>
      
    
    
    
    
    <category term="C#" scheme="https://rainmakerho.github.io/tags/C/"/>
    
    <category term="Base64" scheme="https://rainmakerho.github.io/tags/Base64/"/>
    
    <category term="GUID" scheme="https://rainmakerho.github.io/tags/GUID/"/>
    
    <category term="Short" scheme="https://rainmakerho.github.io/tags/Short/"/>
    
    <category term="URL" scheme="https://rainmakerho.github.io/tags/URL/"/>
    
    <category term="短網址" scheme="https://rainmakerho.github.io/tags/%E7%9F%AD%E7%B6%B2%E5%9D%80/"/>
    
    <category term="Base62" scheme="https://rainmakerho.github.io/tags/Base62/"/>
    
    <category term="Base64UrlEncode" scheme="https://rainmakerho.github.io/tags/Base64UrlEncode/"/>
    
  </entry>
  
  <entry>
    <title>為什麼 OpenAI Assistants API 選不到 GPT4?</title>
    <link href="https://rainmakerho.github.io/2023/12/11/why-openai-assistants-api-no-gpt4/"/>
    <id>https://rainmakerho.github.io/2023/12/11/why-openai-assistants-api-no-gpt4/</id>
    <published>2023-12-11T01:19:18.000Z</published>
    <updated>2023-12-11T01:46:03.680Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>在測試 OpenAI Assistants API 時，為什麼選不到 GPT 4 model 呢?</p><h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p>原本以為升級到 <strong>ChatGPT Plus</strong> 才會有，<br>後來發現是因為 <strong>Usage tiers</strong> 的關系。<br>預設的 <strong>Usage tiers</strong> 是 <strong>Free</strong>，所以選不到 <strong>GPT4</strong> 的 Model。<br>起碼要付費成為 <strong>非 Free Tier</strong> 帳號才選得到 GPT4 哦~</p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://platform.openai.com/docs/guides/rate-limits/usage-tiers?context=tier-free">Usage tiers</a><br><a href="https://rainmakerho.github.io/2023/11/29/openai-assistant-api/">OpenAI Assistants API 初體驗</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;在測試 OpenAI Assistants API 時，為什麼選不到 GPT 4 model 呢?&lt;/p&gt;
&lt;h3 id=&quot;原因&quot;&gt;&lt;a h</summary>
      
    
    
    
    
    <category term="openai" scheme="https://rainmakerho.github.io/tags/openai/"/>
    
    <category term="assistants api" scheme="https://rainmakerho.github.io/tags/assistants-api/"/>
    
    <category term="gpt4" scheme="https://rainmakerho.github.io/tags/gpt4/"/>
    
    <category term="ChatGPT" scheme="https://rainmakerho.github.io/tags/ChatGPT/"/>
    
    <category term="Usage tiers" scheme="https://rainmakerho.github.io/tags/Usage-tiers/"/>
    
  </entry>
  
  <entry>
    <title>Checkmarx Path Traversal 的怪問題(File.)</title>
    <link href="https://rainmakerho.github.io/2023/12/11/path-traversal-checkmarx-file/"/>
    <id>https://rainmakerho.github.io/2023/12/11/path-traversal-checkmarx-file/</id>
    <published>2023-12-11T00:42:23.000Z</published>
    <updated>2023-12-11T01:18:04.850Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>最近同事詢問在處理 Checkmarx (V 9.4.5.1012 HF24) Path Traversal 透過 <code>Replace</code> 卻無法消除問題。<br>來源是 <code>data</code> ，目的地是 <code>FilesName</code><br>程式如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">HttpPost</span>]</span><br><span class="line"><span class="function"><span class="keyword">public</span> ActionResult <span class="title">UploadArichiveClassficationReport</span>(<span class="params">UploadArichiveClassficationReportForm data</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> filePath = data.File.FilesName.Replace(<span class="string">&quot;..&quot;</span>, <span class="string">&quot;&quot;</span>).Replace(<span class="string">&quot;/&quot;</span>, <span class="string">&quot;&quot;</span>).Replace(<span class="string">&quot;\\&quot;</span>, <span class="string">&quot;&quot;</span>).Replace(<span class="string">&quot;&#x27;&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>從 Checkmarx 管理 UI 中發現，Checkmarx 似乎不理會 <code>FilesName</code> 後面的 <code>Replace</code>，<br>直接就決定 <code>FilesName</code> 這裡有問題。</p><img src="/2023/12/11/path-traversal-checkmarx-file/01.png" class="" title="Checkmarx UI"><p>都還在處理 File 的路徑，Checkmarx 怎麼直接就噴有問題呢?</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>從 <code>data.File</code>，<code>File</code> 是 <code>UploadArichiveClassficationReportForm</code> 類別的屬性名稱。<br>但從上述來看， Checkmarx 將 <code>File.FilesName</code> 的 <code>File</code> 當成是 <code>System.IO.File</code>。<br>看來是因為 <strong>屬性</strong> 名稱取成 <code>File</code> ，所以中招了 …<br>那怎麼辦呢?</p><p>1.改屬性名稱，將<code>File</code>改成 別的屬性名稱，儘量別跟 <code>System.IO</code> 類別名稱一樣</p><p>2.先將 <code>data.File</code> 放到變數之中，再來操作，如下</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">HttpPost</span>]</span><br><span class="line"><span class="function"><span class="keyword">public</span> ActionResult <span class="title">UploadArichiveClassficationReport</span>(<span class="params">UploadArichiveClassficationReportForm data</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> file = data.File;</span><br><span class="line">    <span class="keyword">var</span> filePath = file.FilesName.Replace(<span class="string">&quot;..&quot;</span>, <span class="string">&quot;&quot;</span>).Replace(<span class="string">&quot;/&quot;</span>, <span class="string">&quot;&quot;</span>).Replace(<span class="string">&quot;\\&quot;</span>, <span class="string">&quot;&quot;</span>).Replace(<span class="string">&quot;&#x27;&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://rainmakerho.github.io/2021/05/21/Path-Traversal-Vulnerability-Checkmarx/">Checkmarx Path Traversal 的解法</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;最近同事詢問在處理 Checkmarx (V 9.4.5.1012 HF24) Path Traversal 透過 &lt;code&gt;Replac</summary>
      
    
    
    
    
    <category term="C#" scheme="https://rainmakerho.github.io/tags/C/"/>
    
    <category term="Checkmarx" scheme="https://rainmakerho.github.io/tags/Checkmarx/"/>
    
    <category term="Path Traversal" scheme="https://rainmakerho.github.io/tags/Path-Traversal/"/>
    
    <category term="File" scheme="https://rainmakerho.github.io/tags/File/"/>
    
  </entry>
  
  <entry>
    <title>OpenAI Assistants API 初體驗</title>
    <link href="https://rainmakerho.github.io/2023/11/29/openai-assistant-api/"/>
    <id>https://rainmakerho.github.io/2023/11/29/openai-assistant-api/</id>
    <published>2023-11-29T08:11:17.000Z</published>
    <updated>2023-12-08T08:32:17.977Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近 OpenAI 有推出 GPTs 可以很方便的讓人直接上傳文件做人知識庫並建立 Bot 來對話，<br>對話的理解能力還不輸之前自已將文件內容拆分一段段轉成 Embedding 後再跟使用者的問來來比較相似度。<br>但因為目前 GPTs 還不 Support API 存取，所以改用 OpenAI Assistants API 來試試。<br>另外 OpenAI Assistants API 是用多少算多少$，可以從 <a href="https://platform.openai.com/usage">usage</a> 看到目前的花費(預設有給 <code>5</code>美元)。</p><h3 id="體驗"><a href="#體驗" class="headerlink" title="體驗"></a>體驗</h3><p>如果要手動測試的話，可以直接到 <a href="https://platform.openai.com/playground?mode=assistant">Assistants playground</a> ，<br>建立新的 Assistant、上傳文件、設定 Model (<code>gpt-3.5-turbo-1106</code> or …) 、啟用 Tools <code>Retrieval</code>)後，就可以進行對話。</p><img src="/2023/11/29/openai-assistant-api/01.png" class="" title="Assistants playground"><h3 id="說明"><a href="#說明" class="headerlink" title="說明"></a>說明</h3><p>開始之前，先來了解什麼是 Assistant, Thread, Message, Run 及 File。</p><table><thead><tr><th>Assistant</th><th>就是一個知識助理，包含要使用的 instructions, model, files 及 tools</th></tr></thead><tbody><tr><td>Thread</td><td>使用者的 Session，所有的對話都會在這裡面。以前在 Chat 需要多輪對話時，需要自已將多次的對話訊息包含在一起，現在則不需要，會自動被記錄在 Thread 之中。</td></tr><tr><td>Message</td><td>使用者發送的問題及 Assistant 回覆的內容</td></tr><tr><td>Run</td><td>當使用者發送問題後，透過 <code>Run</code> 來讓 Assistant 回覆使用者的問題</td></tr><tr><td>File</td><td>要給 Fine-tuning 或 Assistants 使用的檔案</td></tr></tbody></table><h3 id="使用-API"><a href="#使用-API" class="headerlink" title="使用 API"></a>使用 API</h3><p>以下介紹使用 C# HttpClient 呼叫 Assistants API 來建立 Assistant 並對話及取得 Assistant 回覆內容。<br>要達到這樣子的過程有以下幾個步驟，</p><ol start="0"><li>取得 API Key</li><li>上傳要做為知識庫的文件</li><li>建立 Assistant</li><li>為一個使用者建立 Thread</li><li>在這個 Thread 中發送使用者 Message</li><li>發送 Run 來讓 Assistant 處理使用者詢問的問題</li><li>取回 Message</li><li>最後跟使用者結束所有對話時，可以將 Thread 刪除掉</li></ol><p>以下我們一步步展開來看，</p><h5 id="0-取得-API-Key"><a href="#0-取得-API-Key" class="headerlink" title="0. 取得 API Key"></a>0. 取得 API Key</h5><p>到 <a href="https://platform.openai.com/api-keys">API Keys</a> 建立 Secretkey ，並將它 Copy 下來</p><h5 id="1-上傳要做為知識庫的文件"><a href="#1-上傳要做為知識庫的文件" class="headerlink" title="1. 上傳要做為知識庫的文件"></a>1. 上傳要做為知識庫的文件</h5><p>這裡的文件格式目前只支援 <code>&#39;c&#39;, &#39;cpp&#39;, &#39;csv&#39;, &#39;docx&#39;, &#39;html&#39;, &#39;java&#39;, &#39;json&#39;, &#39;md&#39;, &#39;pdf&#39;, &#39;php&#39;, &#39;pptx&#39;, &#39;py&#39;, &#39;rb&#39;, &#39;tex&#39;, &#39;txt&#39;, &#39;css&#39;, &#39;jpeg&#39;, &#39;jpg&#39;, &#39;js&#39;, &#39;gif&#39;, &#39;png&#39;, &#39;tar&#39;, &#39;ts&#39;, &#39;xlsx&#39;, &#39;xml&#39;, &#39;zip&#39;</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> jsonContentType = <span class="string">&quot;application/json&quot;</span>;</span><br><span class="line"><span class="built_in">string</span> apiKey = <span class="string">&quot;取得的Secretkey&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> leaveDoc = <span class="string">@&quot;C:\OpenAI\docs\請假規則.docx&quot;</span>;</span><br><span class="line"><span class="keyword">await</span> UploadFile(leaveDoc);</span><br><span class="line"><span class="comment">//將 fileId 記錄下來，在建立 Assistant 會使用到</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//要查看有上傳那些檔案可以呼叫</span></span><br><span class="line"><span class="comment">//await ListUploadFiles();</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">async</span> Task <span class="title">UploadFile</span>(<span class="params"><span class="built_in">string</span> filePath</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> url = <span class="string">&quot;https://api.openai.com/v1/files&quot;</span>;</span><br><span class="line">    <span class="keyword">using</span> <span class="keyword">var</span> client = <span class="keyword">new</span> HttpClient();</span><br><span class="line">    client.DefaultRequestHeaders.Add(<span class="string">&quot;Authorization&quot;</span>, <span class="string">$&quot;Bearer <span class="subst">&#123;apiKey&#125;</span>&quot;</span>);</span><br><span class="line">    <span class="keyword">using</span> <span class="keyword">var</span> content = <span class="keyword">new</span> MultipartFormDataContent();</span><br><span class="line">    <span class="keyword">using</span> <span class="keyword">var</span> fileStream = <span class="keyword">new</span> FileStream(filePath, FileMode.Open);</span><br><span class="line">    content.Add(<span class="keyword">new</span> StreamContent(fileStream), <span class="string">&quot;file&quot;</span>, Path.GetFileName(filePath));</span><br><span class="line">    <span class="keyword">var</span> purpose = <span class="keyword">new</span> StringContent(<span class="string">&quot;assistants&quot;</span>);</span><br><span class="line">    content.Add(purpose, <span class="string">&quot;purpose&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> response = <span class="keyword">await</span> client.PostAsync(url, content);</span><br><span class="line">    <span class="keyword">if</span> (response.IsSuccessStatusCode)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> responseBody = <span class="keyword">await</span> response.Content.ReadAsStringAsync();</span><br><span class="line">        Console.WriteLine(responseBody);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;錯誤：<span class="subst">&#123;response.StatusCode&#125;</span> - <span class="subst">&#123;response.ReasonPhrase&#125;</span>&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> responseBody = <span class="keyword">await</span> response.Content.ReadAsStringAsync();</span><br><span class="line">        Console.WriteLine(responseBody);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">async</span> Task <span class="title">ListUploadFiles</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> url = <span class="string">&quot;https://api.openai.com/v1/files&quot;</span>;</span><br><span class="line">    <span class="keyword">using</span> <span class="keyword">var</span> client = <span class="keyword">new</span> HttpClient();</span><br><span class="line">    client.DefaultRequestHeaders.Add(<span class="string">&quot;Authorization&quot;</span>, <span class="string">$&quot;Bearer <span class="subst">&#123;apiKey&#125;</span>&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> response = <span class="keyword">await</span> client.GetAsync(url);</span><br><span class="line">    <span class="keyword">if</span> (response.IsSuccessStatusCode)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> responseBody = <span class="keyword">await</span> response.Content.ReadAsStringAsync();</span><br><span class="line">        Console.WriteLine(responseBody);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;錯誤：<span class="subst">&#123;response.StatusCode&#125;</span> - <span class="subst">&#123;response.ReasonPhrase&#125;</span>&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> responseBody = <span class="keyword">await</span> response.Content.ReadAsStringAsync();</span><br><span class="line">        Console.WriteLine(responseBody);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>結果如下，</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;file&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;file-9xpwQr4rni98mUcrQtlkDkvc&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;purpose&quot;</span><span class="punctuation">:</span> <span class="string">&quot;assistants&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;filename&quot;</span><span class="punctuation">:</span> <span class="string">&quot;請假規則.docx&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;bytes&quot;</span><span class="punctuation">:</span> <span class="number">33078</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;created_at&quot;</span><span class="punctuation">:</span> <span class="number">1701237463</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="string">&quot;processed&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;status_details&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h5 id="2-建立-Assistant"><a href="#2-建立-Assistant" class="headerlink" title="2. 建立 Assistant"></a>2. 建立 Assistant</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> file1Id = <span class="string">&quot;file-9xpwQr4rni98mUcrQtlkDkvc&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> instructions = <span class="string">@&quot;你是GSS的請假助手，你的任務是基於上傳的檔案內容，回答使用者的問題。</span></span><br><span class="line"><span class="string">任務說明:</span></span><br><span class="line"><span class="string">- 當使用者提問時，仔細分析問題並基於上傳的檔案內容給出回答。</span></span><br><span class="line"><span class="string">- 如果上傳的檔案內容沒有能回答使用者問題的參考內容，請直接回答&#x27;我不知道&#x27;&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> assistantName = <span class="string">&quot;GSS的請假助手&quot;</span>;</span><br><span class="line"><span class="comment">//code_interpreter, retrieval, or function</span></span><br><span class="line"><span class="keyword">var</span> tools = <span class="keyword">new</span> List&lt;<span class="built_in">object</span>&gt; &#123; <span class="keyword">new</span> &#123; type = <span class="string">&quot;retrieval&quot;</span> &#125; &#125;;</span><br><span class="line"><span class="keyword">var</span> model = <span class="string">&quot;gpt-3.5-turbo-1106&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> file_ids = <span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt; &#123; file1Id &#125;;</span><br><span class="line"><span class="keyword">await</span> CreateAssistant(instructions, assistantName, tools, model, file_ids);</span><br><span class="line"><span class="comment">//將  assistantId 記錄下來</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//要查看有那些 Assistants 可以呼叫 ListAssistants()</span></span><br><span class="line"><span class="comment">//await ListAssistants();</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">async</span> Task <span class="title">CreateAssistant</span>(<span class="params"><span class="built_in">string</span> instructions, <span class="built_in">string</span> name, List&lt;<span class="built_in">object</span>&gt; tools, <span class="built_in">string</span> model, List&lt;<span class="built_in">string</span>&gt; file_ids</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> url = <span class="string">&quot;https://api.openai.com/v1/assistants&quot;</span>;</span><br><span class="line">    <span class="keyword">using</span> <span class="keyword">var</span> client = <span class="keyword">new</span> HttpClient();</span><br><span class="line">    client.DefaultRequestHeaders.Add(<span class="string">&quot;Authorization&quot;</span>, <span class="string">$&quot;Bearer <span class="subst">&#123;apiKey&#125;</span>&quot;</span>);</span><br><span class="line">    client.DefaultRequestHeaders.Add(<span class="string">&quot;OpenAI-Beta&quot;</span>, <span class="string">&quot;assistants=v1&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> jsonStr = JsonSerializer.Serialize(<span class="keyword">new</span></span><br><span class="line">    &#123;</span><br><span class="line">        instructions = instructions,</span><br><span class="line">        name = name,</span><br><span class="line">        tools = tools,</span><br><span class="line">        model = model,</span><br><span class="line">        file_ids = file_ids</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">using</span> <span class="keyword">var</span> jsonContent = <span class="keyword">new</span> StringContent(jsonStr,</span><br><span class="line">        Encoding.UTF8,</span><br><span class="line">        <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> response = <span class="keyword">await</span> client.PostAsync(url, jsonContent);</span><br><span class="line">    <span class="keyword">if</span> (response.IsSuccessStatusCode)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> responseBody = <span class="keyword">await</span> response.Content.ReadAsStringAsync();</span><br><span class="line">        Console.WriteLine(responseBody);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;Err:<span class="subst">&#123;response.StatusCode&#125;</span>-<span class="subst">&#123;response.ReasonPhrase&#125;</span>&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> responseBody = <span class="keyword">await</span> response.Content.ReadAsStringAsync();</span><br><span class="line">        Console.WriteLine(responseBody);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">async</span> Task <span class="title">ListAssistants</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> url = <span class="string">&quot;https://api.openai.com/v1/assistants?order=desc&amp;limit=20&quot;</span>;</span><br><span class="line">    <span class="keyword">using</span> <span class="keyword">var</span> client = <span class="keyword">new</span> HttpClient();</span><br><span class="line">    client.DefaultRequestHeaders.Add(<span class="string">&quot;Authorization&quot;</span>, <span class="string">$&quot;Bearer <span class="subst">&#123;apiKey&#125;</span>&quot;</span>);</span><br><span class="line">    client.DefaultRequestHeaders.Add(<span class="string">&quot;OpenAI-Beta&quot;</span>, <span class="string">&quot;assistants=v1&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> response = <span class="keyword">await</span> client.GetAsync(url);</span><br><span class="line">    <span class="keyword">if</span> (response.IsSuccessStatusCode)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> responseBody = <span class="keyword">await</span> response.Content.ReadAsStringAsync();</span><br><span class="line">        Console.WriteLine(responseBody);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;錯誤：<span class="subst">&#123;response.StatusCode&#125;</span> - <span class="subst">&#123;response.ReasonPhrase&#125;</span>&quot;</span>);</span><br><span class="line">        <span class="built_in">string</span> responseBody = <span class="keyword">await</span> response.Content.ReadAsStringAsync();</span><br><span class="line">        Console.WriteLine(responseBody);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>執行結果如下，</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;asst_zsAKidrHJw3GwgI0mtsLFTnf&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;assistant&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;created_at&quot;</span><span class="punctuation">:</span> <span class="number">1701237547</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;GSS的請假助手&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;gpt-3.5-turbo-1106&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;instructions&quot;</span><span class="punctuation">:</span> <span class="string">&quot;你是GSS的請假助手，你的任務是基於上傳的檔案內容，回答使用者的問題。\r\n任務說明:\r\n- 當使用者提問時，仔細分析問題並基於上傳的檔案內容給出回答。\r\n- 如</span></span><br><span class="line"><span class="string">果上傳的檔案內容沒有能回答使用者問題的參考內容，請直接回答&#x27;我不知道&#x27;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;tools&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;retrieval&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;file_ids&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;file-9xpwQr4rni98mUcrQtlkDkvc&quot;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;metadata&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h5 id="3-為一個使用者建立-Thread"><a href="#3-為一個使用者建立-Thread" class="headerlink" title="3. 為一個使用者建立 Thread"></a>3. 為一個使用者建立 Thread</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> assistantId = <span class="string">&quot;asst_zsAKidrHJw3GwgI0mtsLFTnf&quot;</span>;</span><br><span class="line"><span class="comment">//為使用者建立 Thread</span></span><br><span class="line"><span class="keyword">await</span> CreateThread();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">async</span> Task <span class="title">CreateThread</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> url = <span class="string">&quot;https://api.openai.com/v1/threads&quot;</span>;</span><br><span class="line">    <span class="keyword">using</span> <span class="keyword">var</span> client = <span class="keyword">new</span> HttpClient();</span><br><span class="line">    client.DefaultRequestHeaders.Add(<span class="string">&quot;Authorization&quot;</span>, <span class="string">$&quot;Bearer <span class="subst">&#123;apiKey&#125;</span>&quot;</span>);</span><br><span class="line">    client.DefaultRequestHeaders.Add(<span class="string">&quot;OpenAI-Beta&quot;</span>, <span class="string">&quot;assistants=v1&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> response = <span class="keyword">await</span> client.PostAsync(url, <span class="literal">null</span>);</span><br><span class="line">    <span class="keyword">if</span> (response.IsSuccessStatusCode)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> responseBody = <span class="keyword">await</span> response.Content.ReadAsStringAsync();</span><br><span class="line">        Console.WriteLine(responseBody);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;Err:<span class="subst">&#123;response.StatusCode&#125;</span>-<span class="subst">&#123;response.ReasonPhrase&#125;</span>&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> responseBody = <span class="keyword">await</span> response.Content.ReadAsStringAsync();</span><br><span class="line">        Console.WriteLine(responseBody);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>執行結果如下，</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;thread_CwNorPHLj7eGt7UmoCEp7PxV&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;thread&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;created_at&quot;</span><span class="punctuation">:</span> <span class="number">1701237686</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;metadata&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h5 id="4-在這個-Thread-中發送使用者-Message"><a href="#4-在這個-Thread-中發送使用者-Message" class="headerlink" title="4. 在這個 Thread 中發送使用者 Message"></a>4. 在這個 Thread 中發送使用者 Message</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> threadId = <span class="string">&quot;thread_CwNorPHLj7eGt7UmoCEp7PxV&quot;</span>;</span><br><span class="line"><span class="comment">//發送問題</span></span><br><span class="line"><span class="keyword">var</span> q1 = <span class="string">@&quot;請問出差有什麼規定嗎?&quot;</span>;</span><br><span class="line"><span class="keyword">await</span> CreateMessage(threadId, q1);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">async</span> Task <span class="title">CreateMessage</span>(<span class="params"><span class="built_in">string</span> threadId, <span class="built_in">string</span> question</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> url = <span class="string">$&quot;https://api.openai.com/v1/threads/<span class="subst">&#123;threadId&#125;</span>/messages&quot;</span>;</span><br><span class="line">    <span class="keyword">using</span> <span class="keyword">var</span> client = <span class="keyword">new</span> HttpClient();</span><br><span class="line">    client.DefaultRequestHeaders.Add(<span class="string">&quot;Authorization&quot;</span>, <span class="string">$&quot;Bearer <span class="subst">&#123;apiKey&#125;</span>&quot;</span>);</span><br><span class="line">    client.DefaultRequestHeaders.Add(<span class="string">&quot;OpenAI-Beta&quot;</span>, <span class="string">&quot;assistants=v1&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> jsonStr = JsonSerializer.Serialize(<span class="keyword">new</span></span><br><span class="line">    &#123;</span><br><span class="line">        role = <span class="string">&quot;user&quot;</span>,</span><br><span class="line">        content = question</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">using</span> <span class="keyword">var</span> jsonContent = <span class="keyword">new</span> StringContent(jsonStr,</span><br><span class="line">        Encoding.UTF8,</span><br><span class="line">        <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> response = <span class="keyword">await</span> client.PostAsync(url, jsonContent);</span><br><span class="line">    <span class="keyword">if</span> (response.IsSuccessStatusCode)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> responseBody = <span class="keyword">await</span> response.Content.ReadAsStringAsync();</span><br><span class="line">        Console.WriteLine(responseBody);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;Err:<span class="subst">&#123;response.StatusCode&#125;</span>-<span class="subst">&#123;response.ReasonPhrase&#125;</span>&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> responseBody = <span class="keyword">await</span> response.Content.ReadAsStringAsync();</span><br><span class="line">        Console.WriteLine(responseBody);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>執行結果如下，</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;msg_RY12iYrr14wESdn4v6xUuwHJ&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;thread.message&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;created_at&quot;</span><span class="punctuation">:</span> <span class="number">1701237757</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;thread_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;thread_CwNorPHLj7eGt7UmoCEp7PxV&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;role&quot;</span><span class="punctuation">:</span> <span class="string">&quot;user&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;content&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;請問出差有什麼規定嗎?&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;annotations&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;file_ids&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;assistant_id&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;run_id&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;metadata&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h5 id="5-發送-Run-來讓-Assistant-處理使用者詢問的問題"><a href="#5-發送-Run-來讓-Assistant-處理使用者詢問的問題" class="headerlink" title="5. 發送 Run 來讓 Assistant 處理使用者詢問的問題"></a>5. 發送 Run 來讓 Assistant 處理使用者詢問的問題</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">await</span> CreateRun(assistantId, threadId);</span><br><span class="line"><span class="comment">//將 runId 記錄下來</span></span><br><span class="line"><span class="keyword">var</span> run1Id = <span class="string">&quot;run_B62wmGcFQyBllyRDGhNXfTBG&quot;</span>;</span><br><span class="line">Thread.Sleep(<span class="number">2000</span>);</span><br><span class="line"><span class="comment">//Loop 等到 Run 的狀態為 completed 才離開</span></span><br><span class="line"><span class="keyword">await</span> RetrievesRun(threadId, run1Id);</span><br></pre></td></tr></table></figure><p>結果如下，</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;run_B62wmGcFQyBllyRDGhNXfTBG&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;thread.run&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;created_at&quot;</span><span class="punctuation">:</span> <span class="number">1701237910</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;assistant_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;asst_zsAKidrHJw3GwgI0mtsLFTnf&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;thread_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;thread_CwNorPHLj7eGt7UmoCEp7PxV&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="string">&quot;queued&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;started_at&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;expires_at&quot;</span><span class="punctuation">:</span> <span class="number">1701238510</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;cancelled_at&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;failed_at&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;completed_at&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;last_error&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;gpt-3.5-turbo-1106&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;instructions&quot;</span><span class="punctuation">:</span> <span class="string">&quot;你是GSS的請假助手，你的任務是基於上傳的檔案內容，回答使用者的問題。\r\n任務說明:\r\n- 當使用者提問時，仔細分析問題並基於上傳的檔案內容給出回答。\r\n- 如</span></span><br><span class="line"><span class="string">果上傳的檔案內容沒有能回答使用者問題的參考內容，請直接回答&#x27;我不知道&#x27;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;tools&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;retrieval&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;file_ids&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;file-9xpwQr4rni98mUcrQtlkDkvc&quot;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;metadata&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;run_B62wmGcFQyBllyRDGhNXfTBG&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;thread.run&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;created_at&quot;</span><span class="punctuation">:</span> <span class="number">1701237910</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;assistant_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;asst_zsAKidrHJw3GwgI0mtsLFTnf&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;thread_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;thread_CwNorPHLj7eGt7UmoCEp7PxV&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="string">&quot;completed&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;started_at&quot;</span><span class="punctuation">:</span> <span class="number">1701237910</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;expires_at&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;cancelled_at&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;failed_at&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;completed_at&quot;</span><span class="punctuation">:</span> <span class="number">1701237918</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;last_error&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;gpt-3.5-turbo-1106&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;instructions&quot;</span><span class="punctuation">:</span> <span class="string">&quot;你是GSS的請假助手，你的任務是基於上傳的檔案內容，回答使用者的問題。\r\n任務說明:\r\n- 當使用者提問時，仔細分析問題並基於上傳的檔案內容給出回答。\r\n- 如</span></span><br><span class="line"><span class="string">果上傳的檔案內容沒有能回答使用者問題的參考內容，請直接回答&#x27;我不知道&#x27;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;tools&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;retrieval&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;file_ids&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;file-9xpwQr4rni98mUcrQtlkDkvc&quot;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;metadata&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h5 id="6-取回-Message"><a href="#6-取回-Message" class="headerlink" title="6. 取回 Message"></a>6. 取回 Message</h5><p>取得最後回 2 個訊息</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">await</span> ListMessages(threadId);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">async</span> Task <span class="title">ListMessages</span>(<span class="params"><span class="built_in">string</span> threadId</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">var</span> url = <span class="string">$&quot;https://api.openai.com/v1/threads/<span class="subst">&#123;threadId&#125;</span>/messages?order=desc&amp;limit=2&quot;</span>;</span><br><span class="line">  <span class="keyword">using</span> <span class="keyword">var</span> client = <span class="keyword">new</span> HttpClient();</span><br><span class="line">  client.DefaultRequestHeaders.Add(<span class="string">&quot;Authorization&quot;</span>, <span class="string">$&quot;Bearer <span class="subst">&#123;apiKey&#125;</span>&quot;</span>);</span><br><span class="line">  client.DefaultRequestHeaders.Add(<span class="string">&quot;OpenAI-Beta&quot;</span>, <span class="string">&quot;assistants=v1&quot;</span>);</span><br><span class="line">  <span class="keyword">var</span> response = <span class="keyword">await</span> client.GetAsync(url);</span><br><span class="line">  <span class="keyword">if</span> (response.IsSuccessStatusCode)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">string</span> responseBody = <span class="keyword">await</span> response.Content.ReadAsStringAsync();</span><br><span class="line">    Console.WriteLine(responseBody);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    Console.WriteLine(<span class="string">$&quot;錯誤：<span class="subst">&#123;response.StatusCode&#125;</span> - <span class="subst">&#123;response.ReasonPhrase&#125;</span>&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> responseBody = <span class="keyword">await</span> response.Content.ReadAsStringAsync();</span><br><span class="line">    Console.WriteLine(responseBody);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>結果如下，</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;list&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;msg_TfOynQ2UdfJUaJ77HAjiuytv&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;thread.message&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;created_at&quot;</span><span class="punctuation">:</span> <span class="number">1701237913</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;thread_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;thread_CwNorPHLj7eGt7UmoCEp7PxV&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;role&quot;</span><span class="punctuation">:</span> <span class="string">&quot;assistant&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;content&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;根據公司的請假規定，有幾個主要的規則需要注意：\n1. 請假時數計算：每週一至五的工作日有具體的時間計算，上午8:30~12:00計3.5小時，下午13:00~17:30計4.5小</span></span><br><span class="line"><span class="string">時，共計8小時【7†source】。\n2. 特休假的核算方式以休假年資為準，依特定規定給予特別休假，具體以年資表為準。\n3. 遇到臨時狀況，如果因突發事件或生病必須於當日請假，可以於當日</span></span><br><span class="line"><span class="string">10:00前以電話向主管報備，並在事後補辦請假手續【7†source】。\n\n以上是關於請假的一些規定，如果你有其他問題或需要進一步了解請假的相關規定，請隨時告訴我。&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;annotations&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;file_citation&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;【7†source】&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;start_index&quot;</span><span class="punctuation">:</span> <span class="number">96</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;end_index&quot;</span><span class="punctuation">:</span> <span class="number">106</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;file_citation&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;file_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;file-9xpwQr4rni98mUcrQtlkDkvc&quot;</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;quote&quot;</span><span class="punctuation">:</span> <span class="string">&quot;臨時狀況\n同仁因突發事件或生病必須於當日請假者，得於當日10:00前以電話向主管報備，並於事後補辦請假手續。\n同仁未依規定辦理請假手續者，事後又不補</span></span><br><span class="line"><span class="string">辦請假手續並說明原因者，視同曠職。\n\n第一條 請假時數計算\n＊每週一～五，上午8:30~12:00，計3.5小時；\n 下午13:00~17:30，計4.5小時，共8小時。\n＊請假最小單位依各假別規定。</span></span><br><span class="line"><span class="string">\n\n第二條 給假規定 \n特休假\n\t特休假的核算方式以休假年資為準，依下列規定給予特別休假：\n六個月以上一年未滿者，三日。\n一年以上二年未滿者，七日。\n二年以上三年未滿者，十</span></span><br><span class="line"><span class="string">日。\n三年以上五年未滿者，每年十四日。\n五年以上十年未滿者，每年十五日。\n十年以上者，每一年加給一日，加至三十日為止。\n\n＊ 同仁於年度開始時應做休假規劃，以期達到身心舒展</span></span><br><span class="line"><span class="string">的目的。休假之規劃應與主管取得溝通，以免造成工作安排之困擾。\n＊ 因年度終結或終止契約而應休未休之日數，由本公司發給工資。經勞資雙方協商，同仁可選擇全數遞延一年或結算薪資；</span></span><br><span class="line"><span class="string">遞延者，至多以遞延一年為限；若員工未於期限內回覆者，將一律結算薪資予同仁。\n＊ 如特休年度屆滿或終止契約而應休未休之日數，將依原始年度之薪資結算給同仁。\n＊ 特休假期間薪資</span></span><br><span class="line"><span class="string">照給。\n＊ 請假最小單位為0.5小時。\n\n加班補休\n＊ 加班補休時數使用期限以當年度特休假使用期限之迄日做為加班補休之迄日。\n＊ 加班補休期限屆滿於約定之工資給付日結算薪資發給</span></span><br><span class="line"><span class="string">。\n＊ 請假最小單位為0.5小時。\n\n生日假\n＊ 同仁到職當年度即享有一天生日假，生日當月可擇一日請 ( 放 ) 生日假。\n＊ 生日假於生日當月有效，棄權者不得再補休。\n＊ 生日假薪資</span></span><br><span class="line"><span class="string">照給。\n＊ 請假最小單位為1天。\n\n普通傷病假\n＊ 同仁因普通傷害、疾病或生理原因造成身體狀況無法正常工作，而必須治療或休養者，得請普通傷病假。\n1. 未住院者，一年內合計不得</span></span><br><span class="line"><span class="string">超過30日。\n2. 住院者，二年內合計不得超過一年。\n3. 未住院及住院者，二年內合計不得超過一年。\n＊ 普通傷病假第一年合計未超過30日部份，工資折半發給。超過30日時以特休假或事假</span></span><br><span class="line"><span class="string">抵充，抵充後若仍然不夠者，得予留職停薪，以一年為限，之後若仍然無法工作者，依法資遣或自請退休。\n＊ 請假超過五日者，須於事後持醫院證明銷假，未持證明者以特休假處理，超過十五</span></span><br><span class="line"><span class="string">日而又未能提出醫院證明者，以曠職論。\n＊ 一次連續請普通傷病假超過三十日以上之期間，如遇例假日、紀念日、勞動節日及由中央主管機關規定應放假之日，併計於請假期間內。\n＊ 薪資</span></span><br><span class="line"><span class="string">減半發給&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;file_citation&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;【7†source】&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;start_index&quot;</span><span class="punctuation">:</span> <span class="number">207</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;end_index&quot;</span><span class="punctuation">:</span> <span class="number">217</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;file_citation&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;file_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;file-9xpwQr4rni98mUcrQtlkDkvc&quot;</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;quote&quot;</span><span class="punctuation">:</span> <span class="string">&quot;臨時狀況\n同仁因突發事件或生病必須於當日請假者，得於當日10:00前以電話向主管報備，並於事後補辦請假手續。\n同仁未依規定辦理請假手續者，事後又不補</span></span><br><span class="line"><span class="string">辦請假手續並說明原因者，視同曠職。\n\n第一條 請假時數計算\n＊每週一～五，上午8:30~12:00，計3.5小時；\n 下午13:00~17:30，計4.5小時，共8小時。\n＊請假最小單位依各假別規定。</span></span><br><span class="line"><span class="string">\n\n第二條 給假規定 \n特休假\n\t特休假的核算方式以休假年資為準，依下列規定給予特別休假：\n六個月以上一年未滿者，三日。\n一年以上二年未滿者，七日。\n二年以上三年未滿者，十</span></span><br><span class="line"><span class="string">日。\n三年以上五年未滿者，每年十四日。\n五年以上十年未滿者，每年十五日。\n十年以上者，每一年加給一日，加至三十日為止。\n\n＊ 同仁於年度開始時應做休假規劃，以期達到身心舒展</span></span><br><span class="line"><span class="string">的目的。休假之規劃應與主管取得溝通，以免造成工作安排之困擾。\n＊ 因年度終結或終止契約而應休未休之日數，由本公司發給工資。經勞資雙方協商，同仁可選擇全數遞延一年或結算薪資；</span></span><br><span class="line"><span class="string">遞延者，至多以遞延一年為限；若員工未於期限內回覆者，將一律結算薪資予同仁。\n＊ 如特休年度屆滿或終止契約而應休未休之日數，將依原始年度之薪資結算給同仁。\n＊ 特休假期間薪資</span></span><br><span class="line"><span class="string">照給。\n＊ 請假最小單位為0.5小時。\n\n加班補休\n＊ 加班補休時數使用期限以當年度特休假使用期限之迄日做為加班補休之迄日。\n＊ 加班補休期限屆滿於約定之工資給付日結算薪資發給</span></span><br><span class="line"><span class="string">。\n＊ 請假最小單位為0.5小時。\n\n生日假\n＊ 同仁到職當年度即享有一天生日假，生日當月可擇一日請 ( 放 ) 生日假。\n＊ 生日假於生日當月有效，棄權者不得再補休。\n＊ 生日假薪資</span></span><br><span class="line"><span class="string">照給。\n＊ 請假最小單位為1天。\n\n普通傷病假\n＊ 同仁因普通傷害、疾病或生理原因造成身體狀況無法正常工作，而必須治療或休養者，得請普通傷病假。\n1. 未住院者，一年內合計不得</span></span><br><span class="line"><span class="string">超過30日。\n2. 住院者，二年內合計不得超過一年。\n3. 未住院及住院者，二年內合計不得超過一年。\n＊ 普通傷病假第一年合計未超過30日部份，工資折半發給。超過30日時以特休假或事假</span></span><br><span class="line"><span class="string">抵充，抵充後若仍然不夠者，得予留職停薪，以一年為限，之後若仍然無法工作者，依法資遣或自請退休。\n＊ 請假超過五日者，須於事後持醫院證明銷假，未持證明者以特休假處理，超過十五</span></span><br><span class="line"><span class="string">日而又未能提出醫院證明者，以曠職論。\n＊ 一次連續請普通傷病假超過三十日以上之期間，如遇例假日、紀念日、勞動節日及由中央主管機關規定應放假之日，併計於請假期間內。\n＊ 薪資</span></span><br><span class="line"><span class="string">減半發給&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;file_ids&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;assistant_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;asst_zsAKidrHJw3GwgI0mtsLFTnf&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;run_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;run_B62wmGcFQyBllyRDGhNXfTBG&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;metadata&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;role&quot;</span><span class="punctuation">:</span> <span class="string">&quot;user&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;content&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;請問出差有什麼規定嗎?&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;annotations&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;file_ids&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;assistant_id&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;run_id&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;metadata&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;first_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;msg_TfOynQ2UdfJUaJ77HAjiuytv&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;last_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;msg_RY12iYrr14wESdn4v6xUuwHJ&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;has_more&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>可以發現，第一個內容就是 Assistant 的回覆。</p><h5 id="7-最後跟使用者結束所有對話時，可以將-Thread-刪除掉"><a href="#7-最後跟使用者結束所有對話時，可以將-Thread-刪除掉" class="headerlink" title="7. 最後跟使用者結束所有對話時，可以將 Thread 刪除掉"></a>7. 最後跟使用者結束所有對話時，可以將 Thread 刪除掉</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//清除使用者的 Thread</span></span><br><span class="line"><span class="keyword">await</span> DeleteThread(threadId);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">async</span> Task <span class="title">DeleteThread</span>(<span class="params"><span class="built_in">string</span> threadId</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">var</span> url = <span class="string">$&quot;https://api.openai.com/v1/threads/<span class="subst">&#123;threadId&#125;</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">using</span> <span class="keyword">var</span> client = <span class="keyword">new</span> HttpClient();</span><br><span class="line">  client.DefaultRequestHeaders.Add(<span class="string">&quot;Authorization&quot;</span>, <span class="string">$&quot;Bearer <span class="subst">&#123;apiKey&#125;</span>&quot;</span>);</span><br><span class="line">  client.DefaultRequestHeaders.Add(<span class="string">&quot;OpenAI-Beta&quot;</span>, <span class="string">&quot;assistants=v1&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> response = <span class="keyword">await</span> client.DeleteAsync(url);</span><br><span class="line">  <span class="keyword">if</span> (response.IsSuccessStatusCode)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">var</span> responseBody = <span class="keyword">await</span> response.Content.ReadAsStringAsync();</span><br><span class="line">    Console.WriteLine(responseBody);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    Console.WriteLine(<span class="string">$&quot;Err:<span class="subst">&#123;response.StatusCode&#125;</span>-<span class="subst">&#123;response.ReasonPhrase&#125;</span>&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> responseBody = <span class="keyword">await</span> response.Content.ReadAsStringAsync();</span><br><span class="line">    Console.WriteLine(responseBody);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h3><p>從整個測試下來，只要給文件就幫忙做成知識庫，<br>省去了之前建立 Bot 時，要依不同文件格式，切節章、轉成 Embedding 再跟使用者問題比對相似度的成本。<br>透過 Thread 來掌控 Bot 與 使用者對話的內容，不需要將所有的對話一直附加到對話中，導致 Token 逾來逾多的問題。<br>不過要 loop 看 <code>Run</code> 是否執行完成對使用 API 來說，不是很方便。</p><ul><li>註: 要看 HTTP 的過程，可以在 <a href="https://platform.openai.com/playground?mode=assistant">Assistants playground</a> 的 <code>Log</code> 中查看哦~</li></ul><img src="/2023/11/29/openai-assistant-api/02.png" class="" title="playground log"><ul><li>註: 如果要使用到 <code>GPT 4</code> ，會員等級起碼要是 <code>Tier 1</code> 以上，就是起碼要付 <strong>5 美元</strong></li></ul><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://platform.openai.com/docs/assistants/overview">Assistants API</a><br><a href="https://pakotinia.medium.com/openais-assistants-api-a-hands-on-demo-110a861cf2d0">OpenAI’s Assistants API — A hands-on demo</a><br><a href="https://platform.openai.com/docs/guides/rate-limits?context=tier-one">Assistants API - Rate limits</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;最近 OpenAI 有推出 GPTs 可以很方便的讓人直接上傳文件做人知識庫並建立 Bot 來對話，&lt;br&gt;對話的理解能力還不輸之前自已將文</summary>
      
    
    
    
    
    <category term="C#" scheme="https://rainmakerho.github.io/tags/C/"/>
    
    <category term="HttpClient" scheme="https://rainmakerho.github.io/tags/HttpClient/"/>
    
    <category term="Upload" scheme="https://rainmakerho.github.io/tags/Upload/"/>
    
    <category term="OpenAI" scheme="https://rainmakerho.github.io/tags/OpenAI/"/>
    
    <category term="Assistants" scheme="https://rainmakerho.github.io/tags/Assistants/"/>
    
  </entry>
  
  <entry>
    <title>在地端 Firewall 中的 Teams Bot 要如何設定 Egress 及 Ingress?</title>
    <link href="https://rainmakerho.github.io/2023/11/29/teams-bot-behind-firewall/"/>
    <id>https://rainmakerho.github.io/2023/11/29/teams-bot-behind-firewall/</id>
    <published>2023-11-29T07:39:11.000Z</published>
    <updated>2023-11-29T08:07:08.944Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>在企業內的 Teams Bot ，Firewall 要怎麼設定才能讓使用者在 Teams 中可以順利跟 Bot 對話呢?</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>在開發 Bot 時，通常會透過 ngrok 來測試，所以可以看到 teams 打過來的 ip 是 <code>52.187.55.201</code>，<br>但下次測試又是別的 ip ，直接請網管設定 firewall 允許進來的 ip 為它又不太保險。<br>後來有查到 <a href="https://blog.botframework.com/2020/11/23/bots-secured-behind-a-firewall-teams/">Bots Secured Behind a Firewall &amp; Teams</a> ，<br>Ingress 設定為允許 <code>52.112.0.0/14</code>，Egress 設定為允許 <code>52.112.0.0/14</code>，<code>login.microsoftonline.com</code> 及 <code>login.botframework.com</code>。</p><p>後來再問 Microsoft Support 則建議參考，<a href="https://learn.microsoft.com/en-us/microsoft-365/enterprise/urls-and-ip-address-ranges?view=o365-worldwide#skype-for-business-online-and-microsoft-teams">Office 365 URLs and IP address ranges-Skype for Business Online and Microsoft Teams</a> 中的 ID 12 的部份，<br>FQDN 則設定 <code>*.lync.com</code>, <code>*.teams.microsoft.com</code>, <code>teams.microsoft.com</code><br>IPv4 則設定 <code>13.107.64.0/18</code>, <code>52.112.0.0/14</code>, <code>52.122.0.0/15</code>, <code>52.238.119.141/32</code>, <code>52.244.160.207/32</code><br>IPv6 則設定 <code>603:1027::/48</code>, <code>2603:1037::/48</code>, <code>2603:1047::/48</code>, <code>2603:1057::/48</code>, <code>2603:1063::/38</code>, <code>2620:1ec:6::/48</code>, <code>2620:1ec:40::/42</code></p><p>當然，還是要隨注 <a href="https://learn.microsoft.com/en-us/microsoft-365/enterprise/urls-and-ip-address-ranges?view=o365-worldwide#skype-for-business-online-and-microsoft-teams">Office 365 URLs and IP address ranges-Skype for Business Online and Microsoft Teams</a> 有沒有改變哦~</p><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="https://blog.botframework.com/2020/11/23/bots-secured-behind-a-firewall-teams/">Bots Secured Behind a Firewall &amp; Teams</a></p><p><a href="https://learn.microsoft.com/en-us/microsoft-365/enterprise/urls-and-ip-address-ranges?view=o365-worldwide#skype-for-business-online-and-microsoft-teams">Office 365 URLs and IP address ranges-Skype for Business Online and Microsoft Teams</a></p><p><a href="https://learn.microsoft.com/en-us/microsoftteams/platform/sbs-teams-conversation-bot?source=recommendations&tabs=dev">Create Teams conversation bot</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;在企業內的 Teams Bot ，Firewall 要怎麼設定才能讓使用者在 Teams 中可以順利跟 Bot 對話呢?&lt;/p&gt;
&lt;h3 i</summary>
      
    
    
    
    
    <category term="Teams" scheme="https://rainmakerho.github.io/tags/Teams/"/>
    
    <category term="Bot" scheme="https://rainmakerho.github.io/tags/Bot/"/>
    
    <category term="Firewall" scheme="https://rainmakerho.github.io/tags/Firewall/"/>
    
    <category term="Ingress" scheme="https://rainmakerho.github.io/tags/Ingress/"/>
    
    <category term="Egress" scheme="https://rainmakerho.github.io/tags/Egress/"/>
    
  </entry>
  
  <entry>
    <title>axios 透過 proxy 連線發生 502 錯誤問題</title>
    <link href="https://rainmakerho.github.io/2023/11/27/axios-proxy-err-502/"/>
    <id>https://rainmakerho.github.io/2023/11/27/axios-proxy-err-502/</id>
    <published>2023-11-27T03:28:46.000Z</published>
    <updated>2023-12-01T07:43:17.901Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>Windows Server 連外要透過 Proxy 時，原本在 Windows 設定中，設定 proxy 。<br>結果我們的 nodejs app 卻沒辦法吃到系統的設定。<br>設定 <code>npm config set https-proxy http://192.168.0.100:808</code> 去跑，<br>也還是會噴 <strong>502</strong> 的錯誤。<br>在 axios 設定 <code>proxy</code> config ，也還是噴 <strong>502</strong> 的錯誤。</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>最後參考 <a href="https://github.com/axios/axios/issues/2937">Axios proxy is not working.</a> 的設定，<br><code>proxy</code> config 設定成 false, 並使用 <code>https-proxy-agent</code> 這個套件來設定 proxy。<br>這個也可以套用到 <code>node-fetch</code> 哦~<br>所以最後，環境變數，npm config 都不用設定，只要設定 <code>httpsAgent</code> 及 <code>proxy</code> 就可以了哦。<br><code>npm install --save axios https-proxy-agent node-fetch dotenv</code><br>package type 為 “module”<br>以下為 axios 及 node-fetch 的測試程式，</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> dotenv <span class="keyword">from</span> <span class="string">&quot;dotenv&quot;</span>;</span><br><span class="line">dotenv.<span class="title function_">config</span>();</span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&quot;axios&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">HttpsProxyAgent</span> &#125; <span class="keyword">from</span> <span class="string">&quot;https-proxy-agent&quot;</span>;</span><br><span class="line"><span class="comment">//http://192.168.0.100:808</span></span><br><span class="line"><span class="keyword">let</span> httpsAgent = <span class="keyword">new</span> <span class="title class_">HttpsProxyAgent</span>(process.<span class="property">env</span>.<span class="property">proxy</span>);</span><br><span class="line"><span class="keyword">const</span> clientId = process.<span class="property">env</span>.<span class="property">clientId</span>;</span><br><span class="line"><span class="keyword">const</span> clientSecret = process.<span class="property">env</span>.<span class="property">clientSecret</span>;</span><br><span class="line"><span class="keyword">const</span> tenantId = process.<span class="property">env</span>.<span class="property">tenantId</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> url = <span class="string">`https://login.microsoftonline.com/<span class="subst">$&#123;tenantId&#125;</span>/oauth2/v2.0/token`</span>;</span><br><span class="line"><span class="keyword">let</span> formData = <span class="keyword">new</span> <span class="title class_">FormData</span>();</span><br><span class="line">formData.<span class="title function_">append</span>(<span class="string">&quot;client_id&quot;</span>, clientId);</span><br><span class="line">formData.<span class="title function_">append</span>(<span class="string">&quot;scope&quot;</span>, <span class="string">&quot;https://graph.microsoft.com/.default&quot;</span>);</span><br><span class="line">formData.<span class="title function_">append</span>(<span class="string">&quot;client_secret&quot;</span>, clientSecret);</span><br><span class="line">formData.<span class="title function_">append</span>(<span class="string">&quot;grant_type&quot;</span>, <span class="string">&quot;client_credentials&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(</span><br><span class="line">    <span class="string">&quot;============================ Start axios Testing ============================================&quot;</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">const</span> options = &#123;</span><br><span class="line">    <span class="attr">proxy</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">httpsAgent</span>: httpsAgent,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">axios.<span class="title function_">post</span>(url, formData, options).<span class="title function_">then</span>(</span><br><span class="line">    <span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;****** OK ******&quot;</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(response.<span class="property">data</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;XXXXX ERROR XXXXX&quot;</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(error);</span><br><span class="line">    &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> dotenv <span class="keyword">from</span> <span class="string">&quot;dotenv&quot;</span>;</span><br><span class="line">dotenv.<span class="title function_">config</span>();</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">HttpsProxyAgent</span> &#125; <span class="keyword">from</span> <span class="string">&quot;https-proxy-agent&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> fetch <span class="keyword">from</span> <span class="string">&quot;node-fetch&quot;</span>;</span><br><span class="line"><span class="comment">//http://192.168.0.100:808</span></span><br><span class="line"><span class="keyword">let</span> httpsAgent = <span class="keyword">new</span> <span class="title class_">HttpsProxyAgent</span>(process.<span class="property">env</span>.<span class="property">proxy</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> clientId = process.<span class="property">env</span>.<span class="property">clientId</span>;</span><br><span class="line"><span class="keyword">const</span> clientSecret = process.<span class="property">env</span>.<span class="property">clientSecret</span>;</span><br><span class="line"><span class="keyword">const</span> tenantId = process.<span class="property">env</span>.<span class="property">tenantId</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> url = <span class="string">`https://login.microsoftonline.com/<span class="subst">$&#123;tenantId&#125;</span>/oauth2/v2.0/token`</span>;</span><br><span class="line"><span class="keyword">let</span> formData = <span class="keyword">new</span> <span class="title class_">FormData</span>();</span><br><span class="line">formData.<span class="title function_">append</span>(<span class="string">&quot;client_id&quot;</span>, clientId);</span><br><span class="line">formData.<span class="title function_">append</span>(<span class="string">&quot;scope&quot;</span>, <span class="string">&quot;https://graph.microsoft.com/.default&quot;</span>);</span><br><span class="line">formData.<span class="title function_">append</span>(<span class="string">&quot;client_secret&quot;</span>, clientSecret);</span><br><span class="line">formData.<span class="title function_">append</span>(<span class="string">&quot;grant_type&quot;</span>, <span class="string">&quot;client_credentials&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(</span><br><span class="line">    <span class="string">&quot;============================ Start fetch Testing ============================================&quot;</span></span><br><span class="line">);</span><br><span class="line"><span class="title function_">fetch</span>(url, &#123;</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">    <span class="attr">body</span>: formData,</span><br><span class="line">    <span class="attr">agent</span>: httpsAgent,</span><br><span class="line">&#125;)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!response.<span class="property">ok</span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;XXXXX ERROR XXXXX&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 解析 JSON 格式的 response body</span></span><br><span class="line">        <span class="keyword">return</span> response.<span class="title function_">json</span>();</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Response from server:&quot;</span>, data);</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">catch</span>(<span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 處理錯誤</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;Error:&quot;</span>, error);</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><p>查看 npm 的 proxy 設定可以查看</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config get proxy</span><br><span class="line">npm config get https-proxy</span><br></pre></td></tr></table></figure><h3 id="UNABLE-TO-GET-ISSUER-CERT-LOCALLY"><a href="#UNABLE-TO-GET-ISSUER-CERT-LOCALLY" class="headerlink" title="UNABLE_TO_GET_ISSUER_CERT_LOCALLY"></a>UNABLE_TO_GET_ISSUER_CERT_LOCALLY</h3><p>如果噴 <code>UNABLE_TO_GET_ISSUER_CERT_LOCALLY</code> <code>unable to get local issuer certificate</code> 的錯誤，<br>請參考 <a href="https://weekendprojects.dev/posts/fixed-npm-err-code-unable_to_get_issuer_cert_locally/">NPM err code unable_to_get_issuer_cert_locally</a> 調整</p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://github.com/axios/axios/issues/2937">Axios proxy is not working.</a><br><a href="https://github.com/axios/axios/issues/5078">ERR_BAD_RESPONSE 502 when using proxy</a><br><a href="https://weekendprojects.dev/posts/fixed-npm-err-code-unable_to_get_issuer_cert_locally/">NPM err code unable_to_get_issuer_cert_locally</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;Windows Server 連外要透過 Proxy 時，原本在 Windows 設定中，設定 proxy 。&lt;br&gt;結果我們的 nodej</summary>
      
    
    
    
    
    <category term="node" scheme="https://rainmakerho.github.io/tags/node/"/>
    
    <category term="axios" scheme="https://rainmakerho.github.io/tags/axios/"/>
    
    <category term="proxy" scheme="https://rainmakerho.github.io/tags/proxy/"/>
    
    <category term="502" scheme="https://rainmakerho.github.io/tags/502/"/>
    
    <category term="httpsAgent" scheme="https://rainmakerho.github.io/tags/httpsAgent/"/>
    
    <category term="UNABLE_TO_GET_ISSUER_CERT_LOCALLY" scheme="https://rainmakerho.github.io/tags/UNABLE-TO-GET-ISSUER-CERT-LOCALLY/"/>
    
  </entry>
  
  <entry>
    <title>HttpClientFactory.CreateClient 造成 Checkmarx 狂噴 CSRF</title>
    <link href="https://rainmakerho.github.io/2023/11/13/checkmarx-csrf-httpclientfactory-createclient-false-positive/"/>
    <id>https://rainmakerho.github.io/2023/11/13/checkmarx-csrf-httpclientfactory-createclient-false-positive/</id>
    <published>2023-11-13T07:38:41.000Z</published>
    <updated>2023-11-13T07:56:36.990Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>ASP.NET Core MVC 專案中的 WebAPI Controller 被 Checkmarx V9.4.5.1012 HF24 掃出一堆的 <strong>CSRF</strong> 問題。</p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>查看它的 <code>Find_CSRF</code> Rule 中，在過濾掉 <code>Find_CSRF_Sanitize</code> 結果後，<br>又再加入 <code>Find_ASP_MVC_CSRF()</code>。<br>而在 <code>Find_ASP_MVC_CSRF()</code> 中又會去找一些可能跟 DB Update 相關的 Method，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">CxList dbUpdateMethods = methods.FindByShortNames(<span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt; &#123;</span><br><span class="line"><span class="string">&quot;SaveChanges&quot;</span>, <span class="string">&quot;SaveChangesAsync&quot;</span>,</span><br><span class="line"><span class="string">&quot;SubmitChanges&quot;</span>, <span class="string">&quot;TryUpdateModel&quot;</span>,</span><br><span class="line"><span class="string">&quot;TryUpdateModelAsync&quot;</span>, <span class="string">&quot;UpdateModel&quot;</span></span><br><span class="line">&#125;, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">dbUpdateMethods.Add(methods.FindByShortNames(<span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt;()&#123;</span><br><span class="line"><span class="string">&quot;Set*&quot;</span>, <span class="string">&quot;Change*&quot;</span>, <span class="string">&quot;Update*&quot;</span>, <span class="string">&quot;Save*&quot;</span>, <span class="string">&quot;Apply*&quot;</span>, <span class="string">&quot;Create*&quot;</span>, <span class="string">&quot;Add*&quot;</span>, <span class="string">&quot;Delete*&quot;</span></span><br><span class="line">&#125;));</span><br><span class="line">dbUpdateMethods.Add(methods.FindByMemberAccess(<span class="string">&quot;UserManager&quot;</span>, <span class="string">&quot;CreateAsync&quot;</span>, <span class="literal">true</span>));</span><br><span class="line">dbUpdateMethods -= All.FindByMemberAccesses(<span class="keyword">new</span> <span class="built_in">string</span>[]&#123;<span class="string">&quot;ModelState.AddModelError&quot;</span>,<span class="string">&quot;List.Add&quot;</span>&#125;);</span><br></pre></td></tr></table></figure><p>詢問同事 Jer 後，有可能是因為 keyword Create 找到了程式中的 <code>HttpClientFactory.CreateClient</code> 所以它就認為它有 <strong>CSRF</strong> 問題。<br>將原本用 <code>HttpClientFactory.CreateClient</code> 改成 <code>new HttpClient()</code> 後，<br>CSRF 的問題果然就不見了。</p><p>這個問題原廠的回覆如下，</p><blockquote><p>After reviewing your case, we can confirm the issue is as you suspected. The engine is assuming that the “CreateClient()” method is a database access because it contains the keyword “create”, which is used to search for CSRF vulnerabilities in the code.</p></blockquote><p>只能等待以色列原廠的修復了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;ASP.NET Core MVC 專案中的 WebAPI Controller 被 Checkmarx V9.4.5.1012 HF24 掃</summary>
      
    
    
    
    
    <category term="C#" scheme="https://rainmakerho.github.io/tags/C/"/>
    
    <category term="Checkmarx" scheme="https://rainmakerho.github.io/tags/Checkmarx/"/>
    
    <category term="CSRF" scheme="https://rainmakerho.github.io/tags/CSRF/"/>
    
    <category term="HttpClientFactory.CreateClient" scheme="https://rainmakerho.github.io/tags/HttpClientFactory-CreateClient/"/>
    
  </entry>
  
  <entry>
    <title>Azure 看不到訂閱(Subscriptions)</title>
    <link href="https://rainmakerho.github.io/2023/11/09/azure-cannot-see-subscriptions/"/>
    <id>https://rainmakerho.github.io/2023/11/09/azure-cannot-see-subscriptions/</id>
    <published>2023-11-09T03:50:18.000Z</published>
    <updated>2023-11-09T05:46:15.959Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>當你擁有新的訂閱權限時，在訂用帳戶(Subscriptions)中卻看不到它，但卻又能在搜尋到。<br>要怎麼讓這些 訂用帳戶(Subscriptions) 預設顯示出來呢?</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>點選右上方<strong>入口網站設定(Portal settings)</strong> 或是連到 <code>https://portal.azure.com/#settings/directory</code><br>在 <strong><a href="https://portal.azure.com/#settings/directory">目錄+訂閱(Directories + subscriptions)</a></strong> 中，<br>設定 <strong>預設訂用帳戶篩選(Default subscription filter)</strong> 為 <strong>所有訂閱(All subscriptions)</strong> 就可以了哦~<br>如下，</p><img src="/2023/11/09/azure-cannot-see-subscriptions/01.png" class="" title="目錄+訂閱"><img src="/2023/11/09/azure-cannot-see-subscriptions/02.png" class="" title="Directories + subscriptions">]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;當你擁有新的訂閱權限時，在訂用帳戶(Subscriptions)中卻看不到它，但卻又能在搜尋到。&lt;br&gt;要怎麼讓這些 訂用帳戶(Subscr</summary>
      
    
    
    
    
    <category term="Azure" scheme="https://rainmakerho.github.io/tags/Azure/"/>
    
    <category term="Subscription" scheme="https://rainmakerho.github.io/tags/Subscription/"/>
    
    <category term="subscription filter" scheme="https://rainmakerho.github.io/tags/subscription-filter/"/>
    
  </entry>
  
  <entry>
    <title>knex Error Undefined binding(s) detected for keys when compiling RAW query</title>
    <link href="https://rainmakerho.github.io/2023/11/08/knex-undefined-bindings-detected-for-keys/"/>
    <id>https://rainmakerho.github.io/2023/11/08/knex-undefined-bindings-detected-for-keys/</id>
    <published>2023-11-08T07:01:06.000Z</published>
    <updated>2023-11-08T07:12:04.991Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>最近程式透過 <code>knex.raw(...).toQuery</code> 時，發生 <code>Undefined binding(s) detected for keys</code> 的錯誤，詳細如下，</p><blockquote><p>Error: Undefined binding(s) detected for keys [GroupOrRoomId] when compiling RAW query: (?,:GroupOrRoomId,?)at Raw.toSQL</p></blockquote><p>程式碼如下，</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> value = knex</span><br><span class="line">    .<span class="title function_">raw</span>(</span><br><span class="line">        <span class="string">`(</span></span><br><span class="line"><span class="string">                :Id, </span></span><br><span class="line"><span class="string">                :GroupOrRoomId, </span></span><br><span class="line"><span class="string">                :Data</span></span><br><span class="line"><span class="string">                )`</span>,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="title class_">Id</span>: data.<span class="property">id</span>,</span><br><span class="line">            <span class="title class_">GroupOrRoomId</span>: data.<span class="property">groupOrRoomId</span>,</span><br><span class="line">            <span class="title class_">Data</span>: data.<span class="property">data</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">    .<span class="title function_">toQuery</span>();</span><br></pre></td></tr></table></figure><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>錯誤有將 Key 指出來，就是 <code>GroupOrRoomId</code> 對應的物件為 <code>Undefined</code> 。<br>所以就針對 <code>data.groupOrRoomId</code> 檢查它的值為 <code>undefined</code> 是否合理，<br>或是允許它為空字串，就可以加上保護程式，如下，</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!data.<span class="property">groupOrRoomId</span>) data.<span class="property">groupOrRoomId</span>=<span class="string">&#x27;&#x27;</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;最近程式透過 &lt;code&gt;knex.raw(...).toQuery&lt;/code&gt; 時，發生 &lt;code&gt;Undefined binding</summary>
      
    
    
    
    
    <category term="node" scheme="https://rainmakerho.github.io/tags/node/"/>
    
    <category term="knex" scheme="https://rainmakerho.github.io/tags/knex/"/>
    
    <category term="Undefined" scheme="https://rainmakerho.github.io/tags/Undefined/"/>
    
    <category term="Raw.toSQL" scheme="https://rainmakerho.github.io/tags/Raw-toSQL/"/>
    
  </entry>
  
  <entry>
    <title>SqlException (0x80131904) 此憑證鏈結是由不受信任的授權單位發出的</title>
    <link href="https://rainmakerho.github.io/2023/11/06/sqlexception-80131904-ssl-provider/"/>
    <id>https://rainmakerho.github.io/2023/11/06/sqlexception-80131904-ssl-provider/</id>
    <published>2023-11-06T08:15:14.000Z</published>
    <updated>2023-11-06T09:45:56.684Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>透過 Dapper 連到 Microsoft SQL Server 時，使用以下的連線字串，<br><code>Server=SQL2019-01;Database=MYDB;User Id=myUserId;Password=myUserPwd;</code><br>結果發生 <code>Microsoft.Data.SqlClient.SqlException (0x80131904)</code> 的錯誤，詳細如下，</p><blockquote><p>Microsoft.Data.SqlClient.SqlException (0x80131904): A connection was successfully established with the server, but then an error occurred during the login process. (provider: SSL Provider, error: 0 - 此憑證鏈結是由不受信任的授權單位發出的。)<br>—&gt; System.ComponentModel.Win32Exception (0x80090325): 此憑證鏈結是由不受信任的授權單位發出的。<br>at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action&#96;1 wrapCloseInAction)<br>at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)<br>at Microsoft.Data.SqlClient.TdsParserStateObject.ThrowExceptionAndWarning(Boolean callerHasConnectionLock, Boolean asyncClose)<br>at Microsoft.Data.SqlClient.TdsParserStateObject.SNIWritePacket(PacketHandle packet, UInt32&amp; sniError, Boolean canAccumulate, Boolean callerHasConnectionLock, Boolean asyncClose)<br>at Microsoft.Data.SqlClient.TdsParserStateObject.WriteSni(Boolean canAccumulate)<br>at Microsoft.Data.SqlClient.TdsParserStateObject.WritePacket(Byte flushMode, Boolean canAccumulate)<br>at Microsoft.Data.SqlClient.TdsParser.TdsLogin(SqlLogin rec, FeatureExtension requestedFeatures, SessionData recoverySessionData, FederatedAuthenticationFeatureExtensionData fedAuthFeatureExtensionData, SqlConnectionEncryptOption encrypt)<br>at Microsoft.Data.SqlClient.SqlInternalConnectionTds.Login(ServerInfo server, TimeoutTimer timeout, String newPassword, SecureString newSecurePassword, SqlConnectionEncryptOption encrypt)</p></blockquote><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>在連線字串中加入 <code>Encrypt=false;</code>, 如下，<br><code>Server=SQL2019-01;Database=MYDB;User Id=myUserId;Password=myUserPwd;Encrypt=false;</code></p><ul><li>註: 注意 <code>Encrypt=false;</code> 大小寫哦~</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;透過 Dapper 連到 Microsoft SQL Server 時，使用以下的連線字串，&lt;br&gt;&lt;code&gt;Server=SQL2019</summary>
      
    
    
    
    
    <category term="SSL" scheme="https://rainmakerho.github.io/tags/SSL/"/>
    
    <category term="SqlException" scheme="https://rainmakerho.github.io/tags/SqlException/"/>
    
    <category term="0x80131904" scheme="https://rainmakerho.github.io/tags/0x80131904/"/>
    
    <category term="0x80090325" scheme="https://rainmakerho.github.io/tags/0x80090325/"/>
    
    <category term="此憑證鏈結是由不受信任的授權單位發出的" scheme="https://rainmakerho.github.io/tags/%E6%AD%A4%E6%86%91%E8%AD%89%E9%8F%88%E7%B5%90%E6%98%AF%E7%94%B1%E4%B8%8D%E5%8F%97%E4%BF%A1%E4%BB%BB%E7%9A%84%E6%8E%88%E6%AC%8A%E5%96%AE%E4%BD%8D%E7%99%BC%E5%87%BA%E7%9A%84/"/>
    
  </entry>
  
  <entry>
    <title>為什麼系統中新增一堆空白名稱的Cookie?</title>
    <link href="https://rainmakerho.github.io/2023/10/23/why-multiple-empty-name-cookies-iis/"/>
    <id>https://rainmakerho.github.io/2023/10/23/why-multiple-empty-name-cookies-iis/</id>
    <published>2023-10-23T06:29:00.000Z</published>
    <updated>2023-10-23T08:17:49.153Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>最近同事詢問一個怪問題，透過 Browser 操作系統時，會產生出一堆空白名稱的 Cookie，如下，</p><img src="/2023/10/23/why-multiple-empty-name-cookies-iis/01.png" class="" title="Empty Name Cookies"><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>請同事存一下操作系統的網路狀況發現，<strong>每個 Request</strong>都會往 Client 端寫 Cookie，如下，</p><img src="/2023/10/23/why-multiple-empty-name-cookies-iis/02.png" class="" title="set-cookie"><p>從上面的狀況來看，有可能是 <code>Global.asax</code>, <code>Middleware</code> 或是寫在 IIS 的<code>HTTP 回應標頭</code>之中。<br>而操作公司 VM 中的系統，並不會有這種狀況，所以應該是 IIS 的問題。<br>於是請同事檢查一下 IIS 的<code>HTTP 回應標頭</code>，<br>果然，被寫在裡面，如下，</p><img src="/2023/10/23/why-multiple-empty-name-cookies-iis/03.png" class="" title="HTTP 回應標頭"><p>請同事將它移除之後就沒問題了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;最近同事詢問一個怪問題，透過 Browser 操作系統時，會產生出一堆空白名稱的 Cookie，如下，&lt;/p&gt;
&lt;img src=&quot;/202</summary>
      
    
    
    
    
    <category term="IIS" scheme="https://rainmakerho.github.io/tags/IIS/"/>
    
    <category term=".NET" scheme="https://rainmakerho.github.io/tags/NET/"/>
    
    <category term="Cookie" scheme="https://rainmakerho.github.io/tags/Cookie/"/>
    
    <category term="Empty Name" scheme="https://rainmakerho.github.io/tags/Empty-Name/"/>
    
  </entry>
  
  <entry>
    <title>MSDeploy.targets Web 部署工作失敗 基礎連接已關閉 無法從傳輸連接讀取資料 遠端主機已強制關閉一個現存的連線</title>
    <link href="https://rainmakerho.github.io/2023/10/19/msdeploy-an-existing-connection-was-forcibly-closed-by-the-remote-host-140-5/"/>
    <id>https://rainmakerho.github.io/2023/10/19/msdeploy-an-existing-connection-was-forcibly-closed-by-the-remote-host-140-5/</id>
    <published>2023-10-19T01:16:23.000Z</published>
    <updated>2023-10-19T02:02:55.270Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>最近朋友詢問一個從 <code>Visual Studio 2022</code> 透過 Web Deploy 發佈到 <code>Windows 2019</code> IIS 上的問題。<br>主要是因為他將 IIS Server 上的 <code>RC4</code> 及 <code>Triple DES</code> Cipher Disable 掉，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\RC4 128/128]</span><br><span class="line">&quot;Enabled=dword:00000000&quot;</span><br><span class="line"></span><br><span class="line">[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\Triple DES 168]</span><br><span class="line">&quot;Enabled=dword:00000000&quot;</span><br></pre></td></tr></table></figure><p>結果導致發佈發生錯誤，訊息如下，</p><blockquote><p>Microsoft.NET.Sdk.Publish.MSDeploy.targets(140,5): 錯誤 : Web 部署工作失敗。(無法完成對遠端代理程式 URL ‘<a href="https://win2019-test:8172/msdeploy.axd">https://win2019-test:8172/msdeploy.axd</a>?’ 的要求)<br>錯誤詳細資料:<br>無法完成對遠端代理程式 URL ‘<a href="https://win2019-test:8172/msdeploy.axd">https://win2019-test:8172/msdeploy.axd</a>?’ 的要求。<br>基礎連接已關閉: 傳送時發生未預期的錯誤。<br>無法從專輸連接讀取資料: 遠端主機已強制關閉一個現存的連線。。<br>遠端主機已強制關閉一個現存的連線。<br>發佈無法部署。</p></blockquote><p>從 <code>Wireshark</code> 發現，Client 發出 <code>Client Hello</code> 後，就被 Server <code>RST, ACK</code> 掉了。</p><img src="/2023/10/19/msdeploy-an-existing-connection-was-forcibly-closed-by-the-remote-host-140-5/01.png" class="" title="RST"><h3 id="研究與解法"><a href="#研究與解法" class="headerlink" title="研究與解法"></a>研究與解法</h3><p>從網路上有查到 <a href="https://medium.com/@eric.rodriguez/microsoft-web-deployment-an-existing-connection-was-forcibly-closed-by-the-remote-host-fe365980af77">Microsoft.Web.Deployment : An existing connection was forcibly closed by the remote host.</a> 似乎是一樣的錯誤，<br>但設定了 Client 與 Server 的機碼後，還是一樣的錯誤。<br>於是在 <code>PowerShell</code> 中透過 <code>curl</code> 來測試看看<br><code>curl https://win2019-test</code> 會發生 <code>基礎連接已關閉: 無法為SSL/TLS 安全通道建立信任關係</code><br><code>curl https://win2019的FQDN</code> 會正常給出頁面資料<br><code>curl https://win2019-test:8172</code> 會發生 <code>基礎連接已關閉: 傳送時發生未預期的錯誤</code> &#x2F; 客戶端與伺服器無法溝通，因為它們沒有公用的演算法 | The client and server cannot communicate, because they do not possess a common algorithm</p><p>猜想有可能是憑證的問題，與朋友討論是用 FQDN 的憑證或是 自簽憑證，<br>後來朋友將原本使用 自簽憑證 改成 FQDN 的憑證後，<br>就可以正常部署了。</p><img src="/2023/10/19/msdeploy-an-existing-connection-was-forcibly-closed-by-the-remote-host-140-5/02.png" class="" title="FQDN"><blockquote><p>猜想或許 Client 端給出的演算法不在 Server 端 自簽憑證所支援的演算法範圍中, 或許再建立一個新的自簽憑證也可以 Pass</p></blockquote><p>最後，感謝 聖德 一起研究</p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://medium.com/@eric.rodriguez/microsoft-web-deployment-an-existing-connection-was-forcibly-closed-by-the-remote-host-fe365980af77">Microsoft.Web.Deployment : An existing connection was forcibly closed by the remote host.</a><br><a href="https://devbricker.github.io/post/devtools/aspnetcorewebdeploy/">Visual Studio 2019 的 WebDeploy 到 IIS 發生憑證無效</a><br><a href="https://blog.darkthread.net/blog/underlying-conn-closed-error-again/">再遇 C# 與 PowerShell 「基礎連接已關閉」錯誤</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;最近朋友詢問一個從 &lt;code&gt;Visual Studio 2022&lt;/code&gt; 透過 Web Deploy 發佈到 &lt;code&gt;Wind</summary>
      
    
    
    
    
    <category term="TLS" scheme="https://rainmakerho.github.io/tags/TLS/"/>
    
    <category term="基礎連接已關閉" scheme="https://rainmakerho.github.io/tags/%E5%9F%BA%E7%A4%8E%E9%80%A3%E6%8E%A5%E5%B7%B2%E9%97%9C%E9%96%89/"/>
    
    <category term="MSDeploy" scheme="https://rainmakerho.github.io/tags/MSDeploy/"/>
    
    <category term="8172" scheme="https://rainmakerho.github.io/tags/8172/"/>
    
    <category term="無法從傳輸連接讀取資料" scheme="https://rainmakerho.github.io/tags/%E7%84%A1%E6%B3%95%E5%BE%9E%E5%82%B3%E8%BC%B8%E9%80%A3%E6%8E%A5%E8%AE%80%E5%8F%96%E8%B3%87%E6%96%99/"/>
    
    <category term="RC4" scheme="https://rainmakerho.github.io/tags/RC4/"/>
    
    <category term="Triple DES" scheme="https://rainmakerho.github.io/tags/Triple-DES/"/>
    
    <category term="Client Hello" scheme="https://rainmakerho.github.io/tags/Client-Hello/"/>
    
    <category term="RST, ACK" scheme="https://rainmakerho.github.io/tags/RST-ACK/"/>
    
  </entry>
  
  <entry>
    <title>為什麼在 Host 檔案中自定的 Host 在 IIS 的 Windows 整合驗證都無法通過?</title>
    <link href="https://rainmakerho.github.io/2023/10/12/iis-windows-authentication-custom-hostname/"/>
    <id>https://rainmakerho.github.io/2023/10/12/iis-windows-authentication-custom-hostname/</id>
    <published>2023-10-12T09:30:36.000Z</published>
    <updated>2023-10-13T05:52:19.412Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>最近在 Client 測試 IIS 的 Windows 驗證，<br>於是在 <code>Default.aspx</code> 只將 <code>Windows 驗證</code>啟用，</p><img src="/2023/10/12/iis-windows-authentication-custom-hostname/01.png" class="" title="Windows 驗證"><p>並在 <code>C:\Windows\System32\drivers\etc\hosts</code> 加入<br><code>127.0.0.1  rm.gss.com.tw</code> 的設定。</p><p><code>default.aspx</code> 的內容如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">Page_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> adUserId = Request.ServerVariables[<span class="string">&quot;LOGON_USER&quot;</span>]?.ToString();</span><br><span class="line">    Response.Write(<span class="string">$&quot;LOGON_USER:&#x27;<span class="subst">&#123;adUserId&#125;</span>&#x27;&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用 <code>localhost</code>, <code>127.0.0.1</code> 及 <code>rm.gss.com.tw</code> 為 Host 來測試。</p><h4 id="使用-localhost"><a href="#使用-localhost" class="headerlink" title="使用 localhost"></a>使用 localhost</h4><p>連到 <code>http://localhost/web1/default.aspx</code><br>會直接顯示這台電腦的登入者，如下，</p><img src="/2023/10/12/iis-windows-authentication-custom-hostname/02.png" class="" title="localhost"><h4 id="使用-127-0-0-1"><a href="#使用-127-0-0-1" class="headerlink" title="使用 127.0.0.1"></a>使用 127.0.0.1</h4><p>連到 <code>http://127.0.0.1/web1/default.aspx</code><br>會要使用者輸入這台電腦(本機)的登入者及密碼來登入，如下，</p><img src="/2023/10/12/iis-windows-authentication-custom-hostname/03.png" class="" title="127.0.0.1"><h4 id="使用-rm-gss-com-tw"><a href="#使用-rm-gss-com-tw" class="headerlink" title="使用 rm.gss.com.tw"></a>使用 rm.gss.com.tw</h4><p>連到 <code>http://rm.gss.com.tw/web1/default.aspx</code><br>會要使用者輸入這台電腦(本機)的登入者及密碼來登入，<br>但卻一直沒有辦法通過驗證，</p><img src="/2023/10/12/iis-windows-authentication-custom-hostname/04.png" class="" title="rm.gss.com.tw"><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>參考 <a href="https://stackoverflow.com/questions/7387156/unable-to-get-windows-authentication-to-work-through-local-iis/13017510">Unable to get windows authentication to work through local IIS</a> 這篇解法，<br>要設定 <code>DisableStrictNameChecking</code> 及 <code>BackConnectionHostNames</code> 2 個機碼。</p><p>依筆者的測試，只需將 <code>rm.gss.com.tw</code> 加入到 <code>BackConnectionHostNames</code> 中就可以了哦~</p><img src="/2023/10/12/iis-windows-authentication-custom-hostname/05.png" class="" title="BackConnectionHostNames"><ul><li>註: 感謝同事 Garry 江 的分享</li></ul><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://stackoverflow.com/questions/7387156/unable-to-get-windows-authentication-to-work-through-local-iis/13017510">Unable to get windows authentication to work through local IIS</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;最近在 Client 測試 IIS 的 Windows 驗證，&lt;br&gt;於是在 &lt;code&gt;Default.aspx&lt;/code&gt; 只將 &lt;c</summary>
      
    
    
    
    
    <category term="IIS" scheme="https://rainmakerho.github.io/tags/IIS/"/>
    
    <category term="Host" scheme="https://rainmakerho.github.io/tags/Host/"/>
    
    <category term="自定Host" scheme="https://rainmakerho.github.io/tags/%E8%87%AA%E5%AE%9AHost/"/>
    
    <category term="Windows 驗證" scheme="https://rainmakerho.github.io/tags/Windows-%E9%A9%97%E8%AD%89/"/>
    
    <category term="hosts" scheme="https://rainmakerho.github.io/tags/hosts/"/>
    
    <category term="localhost" scheme="https://rainmakerho.github.io/tags/localhost/"/>
    
    <category term="DisableStrictNameChecking" scheme="https://rainmakerho.github.io/tags/DisableStrictNameChecking/"/>
    
    <category term="BackConnectionHostNames" scheme="https://rainmakerho.github.io/tags/BackConnectionHostNames/"/>
    
  </entry>
  
  <entry>
    <title>別忽略 CS1988 非同步方法缺少 &#39;await&#39; 運算子 的警告</title>
    <link href="https://rainmakerho.github.io/2023/10/06/cs1998-missing-await/"/>
    <id>https://rainmakerho.github.io/2023/10/06/cs1998-missing-await/</id>
    <published>2023-10-06T09:01:58.000Z</published>
    <updated>2023-10-06T09:18:36.043Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>最近同事透過 K6 進行 WebAPI 壓測時，<br>發現當 Thread 數多時，就會出奇怪的錯誤，<br>例如 在 進入 Middlewares 中取好資料到 UserRols 中，<br>然後在 Controller 中判斷是否存在某個角色時 <code>UserRols.Any(ur =&gt; ur.Code == &quot;Admin&quot;)</code> ，<br>本應有資料的，卻變成沒有資料。</p><h3 id="研究"><a href="#研究" class="headerlink" title="研究"></a>研究</h3><p>原本懷疑是不是有 <code>static</code> 物件互相干擾，但沒找到。<br>現來發現有一段程式碼下面有蚯蚓符號的警告，<br>看了那個 Function 是 <code>async</code>，<br>但呼叫的地方卻沒有加上 <code>await</code> ，<br>於是將 <code>await</code> 加上去，再測試一次，就沒出現錯誤了。</p><p>有時使用 VS.NET 開發時，<br>都只專注在 <code>錯誤</code> 卻忽略了 <code>警告</code>，<br>尤其是 <code>CS1988</code> 少加上 <code>await</code> 的這個警告，<br>更有可能會造成系統在多人操作時，產生非預期的錯誤。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;最近同事透過 K6 進行 WebAPI 壓測時，&lt;br&gt;發現當 Thread 數多時，就會出奇怪的錯誤，&lt;br&gt;例如 在 進入 Middle</summary>
      
    
    
    
    
    <category term=".NET" scheme="https://rainmakerho.github.io/tags/NET/"/>
    
    <category term="CS1988" scheme="https://rainmakerho.github.io/tags/CS1988/"/>
    
    <category term="await" scheme="https://rainmakerho.github.io/tags/await/"/>
    
    <category term="async" scheme="https://rainmakerho.github.io/tags/async/"/>
    
  </entry>
  
  <entry>
    <title>AppScan Missing or insecure &quot;Script-Src&quot; or &quot;Default-src&quot; policy in &quot;Content-Security-Policy&quot; header</title>
    <link href="https://rainmakerho.github.io/2023/10/05/missing-or-insecure-content-security-policy-header-appscan/"/>
    <id>https://rainmakerho.github.io/2023/10/05/missing-or-insecure-content-security-policy-header-appscan/</id>
    <published>2023-10-05T07:32:05.000Z</published>
    <updated>2023-10-05T07:43:01.889Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>系統透過 AppScan 掃過後，其中有 <code>Missing or insecure &quot;Script-Src&quot; or &quot;Default-src&quot; policy in &quot;Content-Security-Policy&quot; header</code> 的 Issue。<br>但系統中的 <code>Content-Security-Policy</code> Header 都已設定 <code>self</code> 了，<br>怎麼還會有那個 Issue 呢?</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>系統的 <code>Content-Security-Policy</code> Header 值如下，<br><code>default-src &#39;self&#39;; script-src &#39;self&#39;; img-src &#39;self&#39;; style-src &#39;self&#39;;frame-src &#39;self&#39;; font-src &#39;self&#39;;</code></p><p>Report 中的建議值為 <code>none</code>，<br>這樣加上去不就全不能用了嗎??</p><p>後來看到 <a href="https://csplite.com/csp283/">Security: HCL &#x2F; IBM AppScan: Missing or insecure Content-Security-Policy header</a> ，<br>是先將預設成 <code>none</code>，再針對其他項目設定 <code>self</code>，<br>所以只要把原本的<code>default-src &#39;self&#39;;</code> 改成 <code>default-src &#39;none&#39;;</code> 就可以了。<br>最後的 CSP 值如下，<br><code>default-src &#39;none&#39;; script-src &#39;self&#39;; img-src &#39;self&#39;; style-src &#39;self&#39;;frame-src &#39;self&#39;; font-src &#39;self&#39;;</code></p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://csplite.com/csp283/">Security: HCL &#x2F; IBM AppScan: Missing or insecure Content-Security-Policy header</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;系統透過 AppScan 掃過後，其中有 &lt;code&gt;Missing or insecure &amp;quot;Script-Src&amp;quot; </summary>
      
    
    
    
    
    <category term="AppScan" scheme="https://rainmakerho.github.io/tags/AppScan/"/>
    
    <category term="Content-Security-Policy" scheme="https://rainmakerho.github.io/tags/Content-Security-Policy/"/>
    
    <category term="CSP" scheme="https://rainmakerho.github.io/tags/CSP/"/>
    
    <category term="none" scheme="https://rainmakerho.github.io/tags/none/"/>
    
    <category term="self" scheme="https://rainmakerho.github.io/tags/self/"/>
    
  </entry>
  
  <entry>
    <title>DB Query + File 操作，導致 Checkmarx 噴 Heuristic 2nd Order SQL Injection 問題?</title>
    <link href="https://rainmakerho.github.io/2023/09/27/checkmark-heuristic-2nd-order-sql-injection/"/>
    <id>https://rainmakerho.github.io/2023/09/27/checkmark-heuristic-2nd-order-sql-injection/</id>
    <published>2023-09-27T05:45:11.000Z</published>
    <updated>2023-09-27T07:35:25.965Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近遇到專案被 Checkmarx 掃出 <code>Heuristic_2nd_Order_SQL_Injection</code> 的低風險問題。<br>看了一下程式，它的邏輯是在 MVC 的 Controller 接收一個 No 字串參數，再透過該參數到 DB 中取回單號的年度，<br>再依年度組出檔案路徑，進行檔案的操作。<br>才一個 DB 的 Query ，怎麼會<strong>疑似</strong>有 <strong>2nd Order SQL Injection</strong> 問題呢?</p><h3 id="研究"><a href="#研究" class="headerlink" title="研究"></a>研究</h3><p>針對 SQL Injection 的防護，大多使用 Parameter 的方式，<br>而該 Query 也是使用 DbParameter 的方式，<br>為什麼 Checkmarx 會覺得有 Injection 的問題呢?<br>程式是使用 Dapper 的 SqlMapper 來 Query</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Controller</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> JsonResult <span class="title">Delete</span>(<span class="params"><span class="built_in">string</span> SRNO</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> Json(dac.DeletePlan(SRNO));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//DeletePlan</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> RtnResultModel <span class="title">DeletePlan</span>(<span class="params"><span class="built_in">string</span> SRNO</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">using</span> (TransactionScope scope = <span class="keyword">new</span> TransactionScope())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">using</span> (CommonDac dac = <span class="keyword">new</span> CommonDac(loggedUser))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">string</span> year = dac.GetPlanYear(SRNO);</span><br><span class="line">            <span class="comment">// file 操作 ... call fileaccess(year);</span></span><br><span class="line">        &#125;</span><br><span class="line">        scope.Complete();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> RtnResultModel(<span class="literal">true</span>, <span class="string">&quot;訊息...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//GetYear</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">GetPlanYear</span>(<span class="params"><span class="built_in">string</span> SRNO</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> conn =  ...;</span><br><span class="line">    strSql = <span class="string">@&quot;SELECT [dbo].[fn_GetPlanYear](@SRNO) &quot;</span>;</span><br><span class="line">    objParam = <span class="keyword">new</span></span><br><span class="line">    &#123;</span><br><span class="line">        SRNO = SRNO</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">var</span> strYear = conn.Query&lt;<span class="built_in">string</span>&gt;(conn,strSql, objParam).ToList().SingleOrDefault();</span><br><span class="line">    <span class="keyword">return</span> strYear;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>從 Checkmarx 的圖中，經過的 Path 只有一個 DB 的 Query，</p><img src="/2023/09/27/checkmark-heuristic-2nd-order-sql-injection/01.png" class="" title="checkmarx"><p>而且 SQL 的參數，也沒有使用 字串 串接的方式，<br>所以沒有 2nd Order SQL Injection 的問題。<br>有可能是 Checkmarx 不認得 <code>SqlMapper.Query</code> 的擴充 Method。<br>將 Dapper 改用 Ado.NET 來操作，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">GetPlanYear</span>(<span class="params"><span class="built_in">string</span> SRNO</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> conn =  ...;</span><br><span class="line">    strSql = <span class="string">@&quot;SELECT [dbo].[fn_GetPlanYear](@SRNO) &quot;</span>;</span><br><span class="line">    SqlCommand cmd = <span class="keyword">new</span> SqlCommand(strSql, conn);</span><br><span class="line">    cmd.Parameters.Add(<span class="string">&quot;@SRNO&quot;</span>, SqlDbType.VarChar);</span><br><span class="line">    cmd.Parameters[<span class="string">&quot;@SRNO&quot;</span>].Value = CryptSet.DecryptAES(SRNO);</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        conn.Open();</span><br><span class="line">        <span class="keyword">return</span> (<span class="built_in">string</span>)cmd.ExecuteScalar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">throw</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再掃一次 <code>Heuristic_2nd_Order_SQL_Injection</code> 就不會再出現。<br>如果客戶可以接受說明，應該可以不需要進行調整，<br>如果一定要調整的話，除了改用 Ado.NET 方式外，<br>也可以透過驗證資料型別的方式來解，<br>例如，判斷是否為 int 再將值傳出，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">GetPlanYear</span>(<span class="params"><span class="built_in">string</span> SRNO</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> conn =  ...;</span><br><span class="line">    strSql = <span class="string">@&quot;SELECT [dbo].[fn_GetPlanYear](@SRNO) &quot;</span>;</span><br><span class="line">    objParam = <span class="keyword">new</span></span><br><span class="line">    &#123;</span><br><span class="line">        SRNO = SRNO</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">var</span> strYear = conn.Query&lt;<span class="built_in">string</span>&gt;(conn,strSql, objParam).ToList().SingleOrDefault();</span><br><span class="line">    <span class="keyword">var</span> intYear = <span class="built_in">int</span>.Parse(strYear);</span><br><span class="line">    <span class="keyword">return</span> intYear.ToString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://infosecwriteups.com/the-wrath-of-second-order-sql-injection-c9338a51c6d">What is a Second-Order SQL Injection and how can you exploit it successfully?</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;最近遇到專案被 Checkmarx 掃出 &lt;code&gt;Heuristic_2nd_Order_SQL_Injection&lt;/code&gt; 的低</summary>
      
    
    
    
    
    <category term="Checkmarx" scheme="https://rainmakerho.github.io/tags/Checkmarx/"/>
    
    <category term="Heuristic_2nd_Order_SQL_Injection" scheme="https://rainmakerho.github.io/tags/Heuristic-2nd-Order-SQL-Injection/"/>
    
    <category term="SqlMapper" scheme="https://rainmakerho.github.io/tags/SqlMapper/"/>
    
    <category term="Path" scheme="https://rainmakerho.github.io/tags/Path/"/>
    
    <category term="Dapper" scheme="https://rainmakerho.github.io/tags/Dapper/"/>
    
  </entry>
  
  <entry>
    <title>SK-Semantic Kernel 動態新增 Function</title>
    <link href="https://rainmakerho.github.io/2023/09/21/sk-semantic-kernel-inline-function/"/>
    <id>https://rainmakerho.github.io/2023/09/21/sk-semantic-kernel-inline-function/</id>
    <published>2023-09-21T06:09:21.000Z</published>
    <updated>2023-09-21T06:45:54.714Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在<a href="https://rainmakerho.github.io/2023/09/20/sk-getting-started/">Semantic Kernel 呼叫說笑話 Skill</a>的<code>Skill</code>是透過<code>ImportSemanticSkillFromDirectory</code>匯入。<br>但如果需要可以動態建立 Function 要如何做呢?<br>Semantic Kernel 提供 <code>RegisterSemanticFunction</code> 及 <code>CreateSemanticFunction</code> 來動態建立 Function，<br>以下就來測試看看吧~</p><h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><p>先在 VSCode 中建立 <code>in-line-function.ipynb</code>，<br>以下以 <code>Summary</code> Function 來 Demo <code>RegisterSemanticFunction</code> 及 <code>CreateSemanticFunction</code> 的方式。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!import config/SettingsReader.cs</span></span><br><span class="line"><span class="meta">#r &quot;nuget: Microsoft.SemanticKernel, *-*&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Microsoft.SemanticKernel;</span><br><span class="line"><span class="keyword">using</span> Microsoft.SemanticKernel.SemanticFunctions;</span><br><span class="line"><span class="keyword">var</span> builder = <span class="keyword">new</span> KernelBuilder();</span><br><span class="line"><span class="keyword">var</span> config = SettingsReader.LoadFromFile(<span class="keyword">alias</span>:<span class="string">&quot;gpt&quot;</span>).FirstOrDefault();</span><br><span class="line">builder.WithAzureChatCompletionService(config.model, config.endpoint, config.apikey, serviceId:config.alais);</span><br><span class="line"><span class="keyword">var</span> kernel = builder.Build();</span><br></pre></td></tr></table></figure><p>以下透過 <code>RegisterSemanticFunction</code> 及 <code>CreateSemanticFunction</code> 來動態建立 <code>summaryFunction</code> 及 <code>summaryFunction2</code> 2 個 Function。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> skPrompt = <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">&#123;&#123;$input&#125;&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">請以10個詞以內，結總以上內容</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> promptConfig = <span class="keyword">new</span> PromptTemplateConfig</span><br><span class="line">&#123;</span><br><span class="line">    Completion =</span><br><span class="line">    &#123;</span><br><span class="line">        MaxTokens = <span class="number">1000</span>,</span><br><span class="line">        Temperature = <span class="number">0.2</span>,</span><br><span class="line">        TopP = <span class="number">0.5</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> promptTemplate = <span class="keyword">new</span> PromptTemplate(</span><br><span class="line">    skPrompt,</span><br><span class="line">    promptConfig,</span><br><span class="line">    kernel</span><br><span class="line">);</span><br><span class="line"><span class="keyword">var</span> functionConfig = <span class="keyword">new</span> SemanticFunctionConfig(promptConfig, promptTemplate);</span><br><span class="line"><span class="keyword">var</span> summaryFunction = kernel.RegisterSemanticFunction( <span class="string">&quot;Summary&quot;</span>,  functionConfig);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> summaryFunction2 = kernel.CreateSemanticFunction(skPrompt, promptConfig);</span><br></pre></td></tr></table></figure><p>最後一樣可以將內容傳進 Function 之中，讓 chatGPT 來產生結論，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> textToSummarize = <span class="string">@&quot;大家好，我是亂馬客 Rainmaker，目前任職於叡揚資訊，大家也都叫我 RM 。</span></span><br><span class="line"><span class="string">專注在微軟相關技術，例如 Azure, SQL Server, .NET, Blazor</span></span><br><span class="line"><span class="string">我很樂意與大家可以一起討論軟體的相關問題，</span></span><br><span class="line"><span class="string">請留言或是Email與我一起討論哦~</span></span><br><span class="line"><span class="string">&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> summary = <span class="keyword">await</span> summaryFunction.InvokeAsync(textToSummarize);</span><br><span class="line"><span class="keyword">var</span> summary2 = <span class="keyword">await</span> summaryFunction2.InvokeAsync(textToSummarize);</span><br><span class="line">Console.WriteLine(summary);</span><br><span class="line">Console.WriteLine(summary2);</span><br></pre></td></tr></table></figure><img src="/2023/09/21/sk-semantic-kernel-inline-function/01.png" class="" title="inline-function"><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://github.com/microsoft/semantic-kernel/blob/main/dotnet/notebooks/03-semantic-function-inline.ipynb">semantic-function-inline.ipynb</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;在&lt;a href=&quot;https://rainmakerho.github.io/2023/09/20/sk-getting-started/</summary>
      
    
    
    
    
    <category term="SK" scheme="https://rainmakerho.github.io/tags/SK/"/>
    
    <category term="Semantic Kernel" scheme="https://rainmakerho.github.io/tags/Semantic-Kernel/"/>
    
    <category term="inline" scheme="https://rainmakerho.github.io/tags/inline/"/>
    
    <category term="function" scheme="https://rainmakerho.github.io/tags/function/"/>
    
    <category term="WithAzureChatCompletionService" scheme="https://rainmakerho.github.io/tags/WithAzureChatCompletionService/"/>
    
    <category term="RegisterSemanticFunction" scheme="https://rainmakerho.github.io/tags/RegisterSemanticFunction/"/>
    
    <category term="CreateSemanticFunction" scheme="https://rainmakerho.github.io/tags/CreateSemanticFunction/"/>
    
  </entry>
  
  <entry>
    <title>SK-Semantic Kernel 呼叫說笑話 Skill</title>
    <link href="https://rainmakerho.github.io/2023/09/20/sk-getting-started/"/>
    <id>https://rainmakerho.github.io/2023/09/20/sk-getting-started/</id>
    <published>2023-09-20T05:17:43.000Z</published>
    <updated>2023-09-21T06:13:57.810Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在<a href="https://rainmakerho.github.io/2023/09/19/sk-vscode-settings/">Semantic Kernel VSCode 環境設定</a>已將 VSCode 環境設定好。<br>再來建立一個 說笑話的 Skill 來練習。</p><h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><p>建立 <code>skills\Joke</code> 目錄，新增 <code>config.json</code> 及 <code>skprompt.txt</code>，</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;schema&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Generate a funny joke&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;completion&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;completion&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;max_tokens&quot;</span><span class="punctuation">:</span> <span class="number">1000</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;temperature&quot;</span><span class="punctuation">:</span> <span class="number">0.9</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;top_p&quot;</span><span class="punctuation">:</span> <span class="number">0.0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;presence_penalty&quot;</span><span class="punctuation">:</span> <span class="number">0.0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;frequency_penalty&quot;</span><span class="punctuation">:</span> <span class="number">0.0</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;input&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;parameters&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;input&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Joke subject&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;defaultValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;style&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Give a hint about the desired joke style&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;defaultValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">準確寫出一個關於以下主題的笑話或幽默故事</span><br><span class="line"></span><br><span class="line">笑話必須是：</span><br><span class="line">- 工作場所/家庭安全</span><br><span class="line">沒有性別歧視、種族主義或其他偏見/偏執</span><br><span class="line"></span><br><span class="line">要有創意且有趣。</span><br><span class="line">合併樣式建議（如果提供）：&#123;&#123;$style&#125;&#125;</span><br><span class="line">+++++</span><br><span class="line"></span><br><span class="line">&#123;&#123;$input&#125;&#125;</span><br><span class="line">+++++</span><br></pre></td></tr></table></figure><p>再來就是建立 <code>00-getting-started-2.ipynb</code> 來一步步測試，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!import config/SettingsReader.cs</span></span><br><span class="line"><span class="comment">//使用最新的 preview 版本</span></span><br><span class="line"><span class="meta">#r &quot;nuget:Microsoft.SemanticKernel, *-*&quot;</span></span><br></pre></td></tr></table></figure><p>這裡使用版本號使用 <code>*-*&quot;</code> 表示取得 最新的 Preview 版本</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Microsoft.SemanticKernel;</span><br><span class="line"><span class="comment">//Create Kernel Builder</span></span><br><span class="line"><span class="keyword">var</span> builder = <span class="keyword">new</span> KernelBuilder();</span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> aiAlais = <span class="string">&quot;gpt&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> config = SettingsReader.LoadFromFile(<span class="keyword">alias</span>:<span class="string">&quot;gpt&quot;</span>).FirstOrDefault();</span><br><span class="line">builder.WithAzureChatCompletionService(config.model, config.endpoint, config.apikey);</span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> skillsFolder = <span class="string">&quot;skills&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> skillsDirectory = Path.Combine(Directory.GetCurrentDirectory(), skillsFolder);</span><br><span class="line"><span class="keyword">var</span> funSkillsFolder = <span class="string">&quot;FunSkill&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> funSkillFunctions = kernel.ImportSemanticSkillFromDirectory(skillsDirectory, funSkillsFolder);</span><br><span class="line"><span class="keyword">var</span> result = <span class="keyword">await</span> funSkillFunctions[<span class="string">&quot;Joke&quot;</span>].InvokeAsync(<span class="string">&quot;穿越到凡人修仙時代&quot;</span>);</span><br><span class="line">Console.WriteLine(result);</span><br></pre></td></tr></table></figure><img src="/2023/09/20/sk-getting-started/01.png" class="" title="joke-skill"><p>從上面可以發現，只要透過 <code>config.json</code> 及 <code>skprompt.txt</code> 就可以建立 Skill，<br>然後透過 SemanticKernel 將它 Import 進來，就可以使用它了。<br><code>skprompt.txt</code>中的<code>&#123;&#123;$input&#125;&#125;</code>會被取代成<code>穿越到凡人修仙時代</code></p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://github.com/microsoft/semantic-kernel/blob/main/dotnet/notebooks/00-getting-started.ipynb">00-getting-started.ipynb</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;在&lt;a href=&quot;https://rainmakerho.github.io/2023/09/19/sk-vscode-settings/</summary>
      
    
    
    
    
    <category term="SK" scheme="https://rainmakerho.github.io/tags/SK/"/>
    
    <category term="Semantic Kernel" scheme="https://rainmakerho.github.io/tags/Semantic-Kernel/"/>
    
    <category term="Skill" scheme="https://rainmakerho.github.io/tags/Skill/"/>
    
    <category term="Joke" scheme="https://rainmakerho.github.io/tags/Joke/"/>
    
    <category term="WithAzureChatCompletionService" scheme="https://rainmakerho.github.io/tags/WithAzureChatCompletionService/"/>
    
    <category term="ImportSemanticSkillFromDirectory" scheme="https://rainmakerho.github.io/tags/ImportSemanticSkillFromDirectory/"/>
    
  </entry>
  
  <entry>
    <title>SK-Semantic Kernel VSCode 環境設定</title>
    <link href="https://rainmakerho.github.io/2023/09/19/sk-vscode-settings/"/>
    <id>https://rainmakerho.github.io/2023/09/19/sk-vscode-settings/</id>
    <published>2023-09-19T09:51:43.000Z</published>
    <updated>2023-09-20T06:29:12.032Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>想要達到企業級的 AI 解決方案，往往需要多個步驟來完成。<br>例如我們要做一個客服的 Bot，可能會有以下幾個步驟，</p><p>1.將資文件資料分章節把資料轉成 Embedding 存到 DB</p><p>2.把使用者輸入的問題也轉成 Embedding</p><p>3.拿使用者輸入問題的 Embedding 與 DB 中的 Embedding 比較，取出相似度高的</p><p>4.取出使用者輸入問題的 NER ，判斷是否需要到 系統資料庫之中查詢，例如訂單號碼<br>…<br>這時可以透過<a href="https://github.com/microsoft/semantic-kernel/tree/main">Semantic Kernel</a>來將這些功能建立<a href="https://learn.microsoft.com/en-us/semantic-kernel/ai-orchestration/plugins/?tabs=Csharp">Skill&#x2F;plugin</a>，<br>並且可以透過 Planner 的方式來將這些 Task 整合起來。</p><h3 id="VSCode-環境設定"><a href="#VSCode-環境設定" class="headerlink" title="VSCode 環境設定"></a>VSCode 環境設定</h3><p>環境: VSCode, .NET</p><p>在 VSCode 做這測試時，通常會建立 <strong>ipynb</strong> 檔案來練習，<br>而我們是透過 .NET 來練習，<br>所以請在 VSCode 中安裝<a href="https://marketplace.visualstudio.com/items?itemName=ms-dotnettools.dotnet-interactive-vscode">Polyglot Notebooks</a>這個擴充。</p><p>因為在測試中，常常會使用到 OpenAI 的設定值，所以可以將存起來。<br>可依<a href="https://github.com/microsoft/semantic-kernel/blob/main/dotnet/notebooks/0-AI-settings.ipynb">0-AI-settings.ipynb</a>來測試透過 <code>Settings.cs</code> 來操作設定檔。</p><h3 id="讀取-Azure-OpenAI-設定"><a href="#讀取-Azure-OpenAI-設定" class="headerlink" title="讀取 Azure OpenAI 設定"></a>讀取 Azure OpenAI 設定</h3><p>筆者會使用 Azure OpenAI 的 <code>gpt-35-turbo</code> 及 <code>text-embedding-ada-002</code>，<br>所以仿 <a href="https://github.com/microsoft/semantic-kernel/blob/main/dotnet/notebooks/0-AI-settings.ipynb">0-AI-settings.ipynb</a> 的方式，建立 config 來記錄多項 OpenAI 的設定。<br>所以我在 config 目錄中建立 <code>aiSettings.json</code>，如下，</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;azure&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;部署名稱&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;endpoint&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://myopenai.openai.azure.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;apikey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;服務的apikey&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;org&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;alais&quot;</span><span class="punctuation">:</span> <span class="string">&quot;gpt&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;azure&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;部署名稱&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;endpoint&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://myopenai.openai.azure.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;apikey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;服務的apikey&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;org&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;alais&quot;</span><span class="punctuation">:</span> <span class="string">&quot;embedding&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p>再透過 <code>SettingsReader.cs</code> 來取得想要的設定，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Text.Json;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> Microsoft.DotNet.Interactive;</span><br><span class="line"><span class="keyword">using</span> InteractiveKernel = Microsoft.DotNet.Interactive.Kernel;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">SettingsReader</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">const</span> <span class="built_in">string</span> DefaultConfigFile = <span class="string">&quot;config/aiSettings.json&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">const</span> <span class="built_in">string</span> TypeKey = <span class="string">&quot;type&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">const</span> <span class="built_in">string</span> ModelKey = <span class="string">&quot;model&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">const</span> <span class="built_in">string</span> EndpointKey = <span class="string">&quot;endpoint&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">const</span> <span class="built_in">string</span> SecretKey = <span class="string">&quot;apikey&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">const</span> <span class="built_in">string</span> OrgKey = <span class="string">&quot;org&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">const</span> <span class="built_in">string</span> AlaisKey = <span class="string">&quot;alais&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">record</span> <span class="keyword">struct</span> <span class="title">Settings</span>(<span class="params"><span class="built_in">string</span> type, <span class="built_in">string</span> model, <span class="built_in">string</span> endpoint, <span class="built_in">string</span> apikey, <span class="built_in">string</span> org, <span class="built_in">string</span> alais</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> IEnumerable&lt;Settings&gt;</span></span><br><span class="line"><span class="function">        <span class="title">LoadFromFile</span>(<span class="params"><span class="built_in">string</span> configFile = DefaultConfigFile, <span class="built_in">string</span> <span class="keyword">alias</span> = <span class="string">&quot;&quot;</span></span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!File.Exists(configFile))</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Configuration not found: &quot;</span> + configFile);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;\nPlease run the Setup Notebook (0-AI-settings.ipynb) to configure your AI backend first.\n&quot;</span>);</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">&quot;Configuration not found, please setup the notebooks first using notebook 0-AI-settings.pynb&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> settings = JsonSerializer.Deserialize&lt;List&lt;Settings&gt;&gt;(File.ReadAllText(configFile));</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">string</span>.IsNullOrEmpty(<span class="keyword">alias</span>))</span><br><span class="line">                <span class="keyword">return</span> settings;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> settings.Where(config =&gt; config.alais == <span class="keyword">alias</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (Exception e)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Something went wrong: &quot;</span> + e.Message);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> List&lt;Settings&gt;();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在測試 OpenAI 的 ipynb 如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!import config/SettingsReader.cs</span></span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> settings = SettingsReader.LoadFromFile();</span><br><span class="line">settings</span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> gptConfig = SettingsReader.LoadFromFile(<span class="keyword">alias</span>:<span class="string">&quot;gpt&quot;</span>).FirstOrDefault();</span><br><span class="line">gptConfig</span><br></pre></td></tr></table></figure><img src="/2023/09/19/sk-vscode-settings/01.png" class="" title="ipynb"><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://github.com/microsoft/semantic-kernel/tree/main">Semantic Kernel Github</a><br><a href="https://github.com/kinfey/dotNETOAIBooks">Learn Azure OpenAI Service with .NET</a><br><a href="https://marketplace.visualstudio.com/items?itemName=ms-dotnettools.dotnet-interactive-vscode">Polyglot Notebooks</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;想要達到企業級的 AI 解決方案，往往需要多個步驟來完成。&lt;br&gt;例如我們要做一個客服的 Bot，可能會有以下幾個步驟，&lt;/p&gt;
&lt;p&gt;1.</summary>
      
    
    
    
    
    <category term="VSCode" scheme="https://rainmakerho.github.io/tags/VSCode/"/>
    
    <category term="SK" scheme="https://rainmakerho.github.io/tags/SK/"/>
    
    <category term="Semantic Kernel" scheme="https://rainmakerho.github.io/tags/Semantic-Kernel/"/>
    
  </entry>
  
</feed>
