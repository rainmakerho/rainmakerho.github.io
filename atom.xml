<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>亂馬客</title>
  <icon>https://www.gravatar.com/avatar/cd3aed042ccd7a5a5d9956b0bc07dc81</icon>
  <subtitle>Hello! 我是RM</subtitle>
  <link href="https://rainmakerho.github.io/atom.xml" rel="self"/>
  
  <link href="https://rainmakerho.github.io/"/>
  <updated>2024-03-01T08:12:20.369Z</updated>
  <id>https://rainmakerho.github.io/</id>
  
  <author>
    <name>亂馬客</name>
    <email>rainmaker_ho@gss.com.tw</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Molecular Weight Calculator(計算化學運算式的分子量)</title>
    <link href="https://rainmakerho.github.io/2024/03/01/molecular-weight-calculator/"/>
    <id>https://rainmakerho.github.io/2024/03/01/molecular-weight-calculator/</id>
    <published>2024-03-01T07:11:39.000Z</published>
    <updated>2024-03-01T08:12:20.369Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>最近有個需求要將化學運算式字串算出它的分子量是多少，例如，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CaCO3 =&gt; 100.0869</span><br><span class="line">CO2 =&gt; 44.0095</span><br><span class="line">CO2 / CaCO3 =&gt; 0.4397</span><br><span class="line">2 * CO2/C2H2 =&gt; 3.380499038</span><br><span class="line">C2H2 +2.5 * O2 =&gt; 106.03428</span><br></pre></td></tr></table></figure><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>為什麼 <strong>CaCO3</strong> 的分子量是 100.0869 呢?<br>可以從<a href="https://www.calculatorsoup.com/calculators/chemistry/molecular-weight.php">Molecular Weight Calculator</a>發現，<br>它是<code>Calcium(40.078)</code> + <code>Carbon(12.0107)</code> + <code>Oxygen(15.9994)*3</code>，<br>所以總共分子量是 <code>40.078 + 12.0107 + 47.9982</code> &#x3D; <code>100.0869</code></p><p>處理拆分成四步</p><ol><li>找出運算式中的變數(CO2, CaCO3 …)</li><li>計算出這些變數的值(加總)</li><li>指定將運算式中變數的值</li><li>計算出運算式的結果</li></ol><p>1.找出運算式中的變數，可透過<a href="https://github.com/ncalc/ncalc">ncalc</a>的<code>Expression.Compile</code>來幫忙，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> ec = Expression.Compile(expression, <span class="literal">false</span>);</span><br><span class="line">ParameterExtractionVisitor visitor = <span class="keyword">new</span> ParameterExtractionVisitor();</span><br><span class="line">ec.Accept(visitor);</span><br><span class="line"><span class="keyword">var</span> extractedParameters = visitor.Parameters;</span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">internal</span> <span class="keyword">class</span> <span class="title">ParameterExtractionVisitor</span> : <span class="title">LogicalExpressionVisitor</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> HashSet&lt;<span class="built_in">string</span>&gt; Parameters = <span class="keyword">new</span> HashSet&lt;<span class="built_in">string</span>&gt;();</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Visit</span>(<span class="params">NCalc.Domain.Identifier function</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//Parameter - add to list</span></span><br><span class="line">        Parameters.Add(function.Name);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Visit</span>(<span class="params">NCalc.Domain.UnaryExpression expression</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        expression.Expression.Accept(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Visit</span>(<span class="params">NCalc.Domain.BinaryExpression expression</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//Visit left and right</span></span><br><span class="line">        expression.LeftExpression.Accept(<span class="keyword">this</span>);</span><br><span class="line">        expression.RightExpression.Accept(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Visit</span>(<span class="params">NCalc.Domain.TernaryExpression expression</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//Visit left, right and middle</span></span><br><span class="line">        expression.LeftExpression.Accept(<span class="keyword">this</span>);</span><br><span class="line">        expression.RightExpression.Accept(<span class="keyword">this</span>);</span><br><span class="line">        expression.MiddleExpression.Accept(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Visit</span>(<span class="params">LogicalExpression expression</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Visit</span>(<span class="params">ValueExpression expression</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Visit</span>(<span class="params">NCalc.Domain.Function function</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">var</span> expression <span class="keyword">in</span> function.Expressions)</span><br><span class="line">        &#123;</span><br><span class="line">            expression.Accept(<span class="keyword">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.計算出這些變數的值(加總)，可以透過正則表達式匹配元素及其數量，並計算出分子量總和</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="built_in">double</span> <span class="title">CalcMolecularFormulaMass</span>(<span class="params"><span class="built_in">string</span> formula</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 使用正則表達式匹配元素及其數量</span></span><br><span class="line">    <span class="built_in">string</span> pattern = <span class="string">@&quot;([A-Z][a-z]*)(\d*)&quot;</span>;</span><br><span class="line">    MatchCollection matches = Regex.Matches(formula, pattern);</span><br><span class="line">    <span class="built_in">double</span> totalFormulaWeight = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">foreach</span> (Match match <span class="keyword">in</span> matches)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> element = match.Groups[<span class="number">1</span>].Value;</span><br><span class="line">        <span class="built_in">int</span> count = match.Groups[<span class="number">2</span>].Value == <span class="string">&quot;&quot;</span> ? <span class="number">1</span> : <span class="built_in">int</span>.Parse(match.Groups[<span class="number">2</span>].Value);</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> atomicWeight = _MolecularWeights[element];</span><br><span class="line">            <span class="keyword">var</span> formulaWeight = atomicWeight * count;</span><br><span class="line">            totalFormulaWeight += formulaWeight;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span>(KeyNotFoundException)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> KeyNotFoundException(<span class="string">$&quot;&#x27;<span class="subst">&#123;element&#125;</span>&#x27; was not present in the Periodic Table&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">catch</span>(Exception)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> totalFormulaWeight;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然後建立元素分子量對應表，讓<code>CalcMolecularFormulaMass</code>可以取到每個元素的分子量，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> IReadOnlyDictionary&lt;<span class="built_in">string</span>, <span class="built_in">double</span>&gt; _MolecularWeights</span><br><span class="line">    = <span class="keyword">new</span> Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">double</span>&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            &#123;<span class="string">&quot;H&quot;</span>, <span class="number">1.00794</span>&#125;, <span class="comment">//Hydrogen</span></span><br><span class="line">            &#123;<span class="string">&quot;He&quot;</span>, <span class="number">4.002602</span>&#125;, <span class="comment">//Helium</span></span><br><span class="line">            &#123;<span class="string">&quot;Li&quot;</span>, <span class="number">6.941</span>&#125;, <span class="comment">//Lithium</span></span><br><span class="line">            &#123;<span class="string">&quot;Be&quot;</span>, <span class="number">9.012182</span>&#125;, <span class="comment">//Beryllium</span></span><br><span class="line">            &#123;<span class="string">&quot;B&quot;</span>, <span class="number">10.811</span>&#125;, <span class="comment">//Boron</span></span><br><span class="line">            &#123;<span class="string">&quot;C&quot;</span>, <span class="number">12.0107</span>&#125;, <span class="comment">//Carbon</span></span><br><span class="line">            &#123;<span class="string">&quot;N&quot;</span>, <span class="number">14.0067</span>&#125;, <span class="comment">//Nitrogen</span></span><br><span class="line">            &#123;<span class="string">&quot;O&quot;</span>, <span class="number">15.9994</span>&#125;, <span class="comment">//Oxygen</span></span><br><span class="line">            &#123;<span class="string">&quot;F&quot;</span>, <span class="number">18.9984032</span>&#125;, <span class="comment">//Fluorine</span></span><br><span class="line">            &#123;<span class="string">&quot;Ne&quot;</span>, <span class="number">20.1797</span>&#125;, <span class="comment">//Neon</span></span><br><span class="line">            &#123;<span class="string">&quot;Na&quot;</span>, <span class="number">22.98976928</span>&#125;, <span class="comment">//Sodium</span></span><br><span class="line">            &#123;<span class="string">&quot;Mg&quot;</span>, <span class="number">24.3050</span>&#125;, <span class="comment">//Magnesium</span></span><br><span class="line">            &#123;<span class="string">&quot;Al&quot;</span>, <span class="number">26.9815386</span>&#125;, <span class="comment">//Aluminum</span></span><br><span class="line">            &#123;<span class="string">&quot;Si&quot;</span>, <span class="number">28.0855</span>&#125;, <span class="comment">//Silicon</span></span><br><span class="line">            &#123;<span class="string">&quot;P&quot;</span>, <span class="number">30.973762</span>&#125;, <span class="comment">//Phosphorus</span></span><br><span class="line">            &#123;<span class="string">&quot;S&quot;</span>, <span class="number">32.065</span>&#125;, <span class="comment">//Sulfur</span></span><br><span class="line">            &#123;<span class="string">&quot;Cl&quot;</span>, <span class="number">35.453</span>&#125;, <span class="comment">//Chlorine</span></span><br><span class="line">            &#123;<span class="string">&quot;Ar&quot;</span>, <span class="number">39.948</span>&#125;, <span class="comment">//Argon</span></span><br><span class="line">            &#123;<span class="string">&quot;K&quot;</span>, <span class="number">39.0983</span>&#125;, <span class="comment">//Potassium</span></span><br><span class="line">            &#123;<span class="string">&quot;Ca&quot;</span>, <span class="number">40.078</span>&#125;, <span class="comment">//Calcium</span></span><br><span class="line">            &#123;<span class="string">&quot;Sc&quot;</span>, <span class="number">44.955912</span>&#125;, <span class="comment">//Scandium</span></span><br><span class="line">            &#123;<span class="string">&quot;Ti&quot;</span>, <span class="number">47.867</span>&#125;, <span class="comment">//Titanium</span></span><br><span class="line">            &#123;<span class="string">&quot;V&quot;</span>, <span class="number">50.9415</span>&#125;, <span class="comment">//Vanadium</span></span><br><span class="line">            &#123;<span class="string">&quot;Cr&quot;</span>, <span class="number">51.9961</span>&#125;, <span class="comment">//Chromium</span></span><br><span class="line">            &#123;<span class="string">&quot;Mn&quot;</span>, <span class="number">54.938045</span>&#125;, <span class="comment">//Manganese</span></span><br><span class="line">            &#123;<span class="string">&quot;Fe&quot;</span>, <span class="number">55.845</span>&#125;, <span class="comment">//Iron</span></span><br><span class="line">            &#123;<span class="string">&quot;Co&quot;</span>, <span class="number">58.933195</span>&#125;, <span class="comment">//Cobalt</span></span><br><span class="line">            &#123;<span class="string">&quot;Ni&quot;</span>, <span class="number">58.6934</span>&#125;, <span class="comment">//Nickel</span></span><br><span class="line">            &#123;<span class="string">&quot;Cu&quot;</span>, <span class="number">63.546</span>&#125;, <span class="comment">//Copper</span></span><br><span class="line">            &#123;<span class="string">&quot;Zn&quot;</span>, <span class="number">65.409</span>&#125;, <span class="comment">//Zinc</span></span><br><span class="line">            &#123;<span class="string">&quot;Ga&quot;</span>, <span class="number">69.723</span>&#125;, <span class="comment">//Gallium</span></span><br><span class="line">            &#123;<span class="string">&quot;Ge&quot;</span>, <span class="number">72.64</span>&#125;, <span class="comment">//Germanium</span></span><br><span class="line">            &#123;<span class="string">&quot;As&quot;</span>, <span class="number">74.92160</span>&#125;, <span class="comment">//Arsenic</span></span><br><span class="line">            &#123;<span class="string">&quot;Se&quot;</span>, <span class="number">78.96</span>&#125;, <span class="comment">//Selenium</span></span><br><span class="line">            &#123;<span class="string">&quot;Br&quot;</span>, <span class="number">79.904</span>&#125;, <span class="comment">//Bromine</span></span><br><span class="line">            &#123;<span class="string">&quot;Kr&quot;</span>, <span class="number">83.798</span>&#125;, <span class="comment">//Krypton</span></span><br><span class="line">            &#123;<span class="string">&quot;Rb&quot;</span>, <span class="number">85.4678</span>&#125;, <span class="comment">//Rubidium</span></span><br><span class="line">            &#123;<span class="string">&quot;Sr&quot;</span>, <span class="number">87.62</span>&#125;, <span class="comment">//Strontium</span></span><br><span class="line">            &#123;<span class="string">&quot;Y&quot;</span>, <span class="number">88.90585</span>&#125;, <span class="comment">//Yttrium</span></span><br><span class="line">            &#123;<span class="string">&quot;Zr&quot;</span>, <span class="number">91.224</span>&#125;, <span class="comment">//Zirconium</span></span><br><span class="line">            &#123;<span class="string">&quot;Nb&quot;</span>, <span class="number">92.90638</span>&#125;, <span class="comment">//Niobium</span></span><br><span class="line">            &#123;<span class="string">&quot;Mo&quot;</span>, <span class="number">95.94</span>&#125;, <span class="comment">//Molybdenum</span></span><br><span class="line">            &#123;<span class="string">&quot;Tc&quot;</span>, <span class="number">98.9063</span>&#125;, <span class="comment">//Technetium</span></span><br><span class="line">            &#123;<span class="string">&quot;Ru&quot;</span>, <span class="number">101.07</span>&#125;, <span class="comment">//Ruthenium</span></span><br><span class="line">            &#123;<span class="string">&quot;Rh&quot;</span>, <span class="number">102.90550</span>&#125;, <span class="comment">//Rhodium</span></span><br><span class="line">            &#123;<span class="string">&quot;Pd&quot;</span>, <span class="number">106.42</span>&#125;, <span class="comment">//Palladium</span></span><br><span class="line">            &#123;<span class="string">&quot;Ag&quot;</span>, <span class="number">107.8682</span>&#125;, <span class="comment">//Silver</span></span><br><span class="line">            &#123;<span class="string">&quot;Cd&quot;</span>, <span class="number">112.411</span>&#125;, <span class="comment">//Cadmium</span></span><br><span class="line">            &#123;<span class="string">&quot;In&quot;</span>, <span class="number">114.818</span>&#125;, <span class="comment">//Indium</span></span><br><span class="line">            &#123;<span class="string">&quot;Sn&quot;</span>, <span class="number">118.710</span>&#125;, <span class="comment">//Tin</span></span><br><span class="line">            &#123;<span class="string">&quot;Sb&quot;</span>, <span class="number">121.760</span>&#125;, <span class="comment">//Antimony</span></span><br><span class="line">            &#123;<span class="string">&quot;Te&quot;</span>, <span class="number">127.60</span>&#125;, <span class="comment">//Tellurium</span></span><br><span class="line">            &#123;<span class="string">&quot;I&quot;</span>, <span class="number">126.90447</span>&#125;, <span class="comment">//Iodine</span></span><br><span class="line">            &#123;<span class="string">&quot;Xe&quot;</span>, <span class="number">131.293</span>&#125;, <span class="comment">//Xenon</span></span><br><span class="line">            &#123;<span class="string">&quot;Cs&quot;</span>, <span class="number">132.9054519</span>&#125;, <span class="comment">//Caesium</span></span><br><span class="line">            &#123;<span class="string">&quot;Ba&quot;</span>, <span class="number">137.327</span>&#125;, <span class="comment">//Barium</span></span><br><span class="line">            &#123;<span class="string">&quot;La&quot;</span>, <span class="number">138.90547</span>&#125;, <span class="comment">//Lanthanum</span></span><br><span class="line">            &#123;<span class="string">&quot;Ce&quot;</span>, <span class="number">140.116</span>&#125;, <span class="comment">//Cerium</span></span><br><span class="line">            &#123;<span class="string">&quot;Pr&quot;</span>, <span class="number">140.90765</span>&#125;, <span class="comment">//Praseodymium</span></span><br><span class="line">            &#123;<span class="string">&quot;Nd&quot;</span>, <span class="number">144.242</span>&#125;, <span class="comment">//Neodymium</span></span><br><span class="line">            &#123;<span class="string">&quot;Pm&quot;</span>, <span class="number">146.9151</span>&#125;, <span class="comment">//Promethium</span></span><br><span class="line">            &#123;<span class="string">&quot;Sm&quot;</span>, <span class="number">150.36</span>&#125;, <span class="comment">//Samarium</span></span><br><span class="line">            &#123;<span class="string">&quot;Eu&quot;</span>, <span class="number">151.964</span>&#125;, <span class="comment">//Europium</span></span><br><span class="line">            &#123;<span class="string">&quot;Gd&quot;</span>, <span class="number">157.25</span>&#125;, <span class="comment">//Gadolinium</span></span><br><span class="line">            &#123;<span class="string">&quot;Tb&quot;</span>, <span class="number">158.92535</span>&#125;, <span class="comment">//Terbium</span></span><br><span class="line">            &#123;<span class="string">&quot;Dy&quot;</span>, <span class="number">162.500</span>&#125;, <span class="comment">//Dysprosium</span></span><br><span class="line">            &#123;<span class="string">&quot;Ho&quot;</span>, <span class="number">164.93032</span>&#125;, <span class="comment">//Holmium</span></span><br><span class="line">            &#123;<span class="string">&quot;Er&quot;</span>, <span class="number">167.259</span>&#125;, <span class="comment">//Erbium</span></span><br><span class="line">            &#123;<span class="string">&quot;Tm&quot;</span>, <span class="number">168.93421</span>&#125;, <span class="comment">//Thulium</span></span><br><span class="line">            &#123;<span class="string">&quot;Yb&quot;</span>, <span class="number">173.04</span>&#125;, <span class="comment">//Ytterbium</span></span><br><span class="line">            &#123;<span class="string">&quot;Lu&quot;</span>, <span class="number">174.967</span>&#125;, <span class="comment">//Lutetium</span></span><br><span class="line">            &#123;<span class="string">&quot;Hf&quot;</span>, <span class="number">178.49</span>&#125;, <span class="comment">//Hafnium</span></span><br><span class="line">            &#123;<span class="string">&quot;Ta&quot;</span>, <span class="number">180.9479</span>&#125;, <span class="comment">//Tantalum</span></span><br><span class="line">            &#123;<span class="string">&quot;W&quot;</span>, <span class="number">183.84</span>&#125;, <span class="comment">//Tungsten</span></span><br><span class="line">            &#123;<span class="string">&quot;Re&quot;</span>, <span class="number">186.207</span>&#125;, <span class="comment">//Rhenium</span></span><br><span class="line">            &#123;<span class="string">&quot;Os&quot;</span>, <span class="number">190.23</span>&#125;, <span class="comment">//Osmium</span></span><br><span class="line">            &#123;<span class="string">&quot;Ir&quot;</span>, <span class="number">192.217</span>&#125;, <span class="comment">//Iridium</span></span><br><span class="line">            &#123;<span class="string">&quot;Pt&quot;</span>, <span class="number">195.084</span>&#125;, <span class="comment">//Platinum</span></span><br><span class="line">            &#123;<span class="string">&quot;Au&quot;</span>, <span class="number">196.966569</span>&#125;, <span class="comment">//Gold</span></span><br><span class="line">            &#123;<span class="string">&quot;Hg&quot;</span>, <span class="number">200.59</span>&#125;, <span class="comment">//Mercury</span></span><br><span class="line">            &#123;<span class="string">&quot;Tl&quot;</span>, <span class="number">204.3833</span>&#125;, <span class="comment">//Thallium</span></span><br><span class="line">            &#123;<span class="string">&quot;Pb&quot;</span>, <span class="number">207.2</span>&#125;, <span class="comment">//Lead</span></span><br><span class="line">            &#123;<span class="string">&quot;Bi&quot;</span>, <span class="number">208.98040</span>&#125;, <span class="comment">//Bismuth</span></span><br><span class="line">            &#123;<span class="string">&quot;Po&quot;</span>, <span class="number">208.9824</span>&#125;, <span class="comment">//Polonium</span></span><br><span class="line">            &#123;<span class="string">&quot;At&quot;</span>, <span class="number">209.9871</span>&#125;, <span class="comment">//Astatine</span></span><br><span class="line">            &#123;<span class="string">&quot;Rn&quot;</span>, <span class="number">222.0176</span>&#125;, <span class="comment">//Radon</span></span><br><span class="line">            &#123;<span class="string">&quot;Fr&quot;</span>, <span class="number">223.0197</span>&#125;, <span class="comment">//Francium</span></span><br><span class="line">            &#123;<span class="string">&quot;Ra&quot;</span>, <span class="number">226.0254</span>&#125;, <span class="comment">//Radium</span></span><br><span class="line">            &#123;<span class="string">&quot;Ac&quot;</span>, <span class="number">227.0278</span>&#125;, <span class="comment">//Actinium</span></span><br><span class="line">            &#123;<span class="string">&quot;Th&quot;</span>, <span class="number">232.03806</span>&#125;, <span class="comment">//Thorium</span></span><br><span class="line">            &#123;<span class="string">&quot;Pa&quot;</span>, <span class="number">231.03588</span>&#125;, <span class="comment">//Protactinium</span></span><br><span class="line">            &#123;<span class="string">&quot;U&quot;</span>, <span class="number">238.02891</span>&#125;, <span class="comment">//Uranium</span></span><br><span class="line">            &#123;<span class="string">&quot;Np&quot;</span>, <span class="number">237.0482</span>&#125;, <span class="comment">//Neptunium</span></span><br><span class="line">            &#123;<span class="string">&quot;Pu&quot;</span>, <span class="number">244.0642</span>&#125;, <span class="comment">//Plutonium</span></span><br><span class="line">            &#123;<span class="string">&quot;Am&quot;</span>, <span class="number">243.0614</span>&#125;, <span class="comment">//Americium</span></span><br><span class="line">            &#123;<span class="string">&quot;Cm&quot;</span>, <span class="number">247.0703</span>&#125;, <span class="comment">//Curium</span></span><br><span class="line">            &#123;<span class="string">&quot;Bk&quot;</span>, <span class="number">247.0703</span>&#125;, <span class="comment">//Berkelium</span></span><br><span class="line">            &#123;<span class="string">&quot;Cf&quot;</span>, <span class="number">251.0796</span>&#125;, <span class="comment">//Californium</span></span><br><span class="line">            &#123;<span class="string">&quot;Es&quot;</span>, <span class="number">252.0829</span>&#125;, <span class="comment">//Einsteinium</span></span><br><span class="line">            &#123;<span class="string">&quot;Fm&quot;</span>, <span class="number">257.0951</span>&#125;, <span class="comment">//Fermium</span></span><br><span class="line">            &#123;<span class="string">&quot;Md&quot;</span>, <span class="number">258.0986</span>&#125;, <span class="comment">//Mendelevium</span></span><br><span class="line">            &#123;<span class="string">&quot;No&quot;</span>, <span class="number">259.1009</span>&#125;, <span class="comment">//Nobelium</span></span><br><span class="line">            &#123;<span class="string">&quot;Lr&quot;</span>, <span class="number">260.1053</span>&#125;, <span class="comment">//Lawrencium</span></span><br><span class="line">            &#123;<span class="string">&quot;Rf&quot;</span>, <span class="number">261.1087</span>&#125;, <span class="comment">//Rutherfordium</span></span><br><span class="line">            &#123;<span class="string">&quot;Db&quot;</span>, <span class="number">262.1138</span>&#125;, <span class="comment">//Dubnium</span></span><br><span class="line">            &#123;<span class="string">&quot;Sg&quot;</span>, <span class="number">263.1182</span>&#125;, <span class="comment">//Seaborgium</span></span><br><span class="line">            &#123;<span class="string">&quot;Bh&quot;</span>, <span class="number">262.1229</span>&#125;, <span class="comment">//Bohrium</span></span><br><span class="line">            &#123;<span class="string">&quot;Hs&quot;</span>, <span class="number">265</span>&#125;, <span class="comment">//Hassium</span></span><br><span class="line">            &#123;<span class="string">&quot;Mt&quot;</span>, <span class="number">266</span>&#125;, <span class="comment">//Meitnerium</span></span><br><span class="line">            &#123;<span class="string">&quot;Ds&quot;</span>, <span class="number">269</span>&#125;, <span class="comment">//Darmstadtium</span></span><br><span class="line">            &#123;<span class="string">&quot;Rg&quot;</span>, <span class="number">272</span>&#125;, <span class="comment">//Roentgenium</span></span><br><span class="line">            &#123;<span class="string">&quot;Uub&quot;</span>, <span class="number">285</span>&#125;, <span class="comment">//Ununbium</span></span><br><span class="line">            &#123;<span class="string">&quot;Uut&quot;</span>, <span class="number">284</span>&#125;, <span class="comment">//Ununtrium</span></span><br><span class="line">            &#123;<span class="string">&quot;Uuq&quot;</span>, <span class="number">289</span>&#125;, <span class="comment">//Ununquadium</span></span><br><span class="line">            &#123;<span class="string">&quot;Uup&quot;</span>, <span class="number">288</span>&#125;, <span class="comment">//Ununpentium</span></span><br><span class="line">            &#123;<span class="string">&quot;Uuh&quot;</span>, <span class="number">292</span>&#125;, <span class="comment">//Ununhexium</span></span><br><span class="line">            &#123;<span class="string">&quot;Uuo&quot;</span>, <span class="number">294</span>&#125;, <span class="comment">//Ununoctium</span></span><br><span class="line">        &#125;;</span><br></pre></td></tr></table></figure><p>3.指定將運算式中變數的值及 4.計算出運算式的結果，可以再透過<a href="https://github.com/ncalc/ncalc">ncalc</a>的<code>Expression</code>來幫忙，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> e = <span class="keyword">new</span> Expression(ec);</span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> param <span class="keyword">in</span> extractedParameters)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">double</span> paramValue = CalcMolecularFormulaMass(param);</span><br><span class="line">    e.Parameters[param] = paramValue;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> result = e.Evaluate();</span><br></pre></td></tr></table></figure><p>以上的內容筆者已放到 Nuget 之中，可以安裝<strong>MolecularWeightCalculator</strong>套件，直接使用即可。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> molecularMath = <span class="keyword">new</span> MolecularMath();</span><br><span class="line"><span class="built_in">string</span> exp1 = <span class="string">&quot;CO2&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> exp1Result = molecularMath.ComputeMass(exp1);</span><br><span class="line">Console.WriteLine(<span class="string">$&quot;<span class="subst">&#123;exp1&#125;</span>=&gt;<span class="subst">&#123;exp1Result&#125;</span>&quot;</span>);</span><br><span class="line"><span class="comment">//CO2=&gt;44.0095</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> exp2 = <span class="string">&quot;CaCO3&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> exp2Result = molecularMath.ComputeMass(exp2);</span><br><span class="line">Console.WriteLine(<span class="string">$&quot;<span class="subst">&#123;exp2&#125;</span>=&gt;<span class="subst">&#123;exp2Result&#125;</span>&quot;</span>);</span><br><span class="line"><span class="comment">//CaCO3=&gt;100.0869</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> exp3 = <span class="string">&quot;CO2 / CaCO3&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> exp3Result = molecularMath.ComputeMass(exp3);</span><br><span class="line">Console.WriteLine(<span class="string">$&quot;<span class="subst">&#123;exp3&#125;</span>=&gt;<span class="subst">&#123;exp3Result&#125;</span>&quot;</span>);</span><br><span class="line"><span class="comment">//CO2 / CaCO3=&gt;0.43971288949902537</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> exp4 = <span class="string">&quot;C2H2 +2.5 * O2&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> exp4Result = molecularMath.ComputeMass(exp4);</span><br><span class="line">Console.WriteLine(<span class="string">$&quot;<span class="subst">&#123;exp4&#125;</span>=&gt;<span class="subst">&#123;exp4Result&#125;</span>&quot;</span>);</span><br><span class="line"><span class="comment">//C2H2 +2.5 * O2=&gt;106.03428</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> exp5 = <span class="string">&quot;2*CO2/C2H2&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> exp5Result = molecularMath.ComputeMass(exp5);</span><br><span class="line">Console.WriteLine(<span class="string">$&quot;<span class="subst">&#123;exp5&#125;</span>=&gt;<span class="subst">&#123;exp5Result&#125;</span>&quot;</span>);</span><br><span class="line"><span class="comment">//2*CO2/C2H2=&gt;3.380499038302004</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> exp6 = <span class="string">&quot;1*2*3*4&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> exp6Result = molecularMath.ComputeMass(exp6);</span><br><span class="line">Console.WriteLine(<span class="string">$&quot;<span class="subst">&#123;exp6&#125;</span>=&gt;<span class="subst">&#123;exp6Result&#125;</span>&quot;</span>);</span><br><span class="line"><span class="comment">//1*2*3*4=&gt;24</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> exp7 = <span class="string">&quot;CaCO3 * A2 + B3&quot;</span>;</span><br><span class="line"><span class="comment">//var exp7Result = molecularMath.ComputeMass(exp7);</span></span><br><span class="line"><span class="comment">//Console.WriteLine($&quot;&#123;exp7&#125;=&gt;&#123;exp7Result&#125;&quot;);</span></span><br><span class="line"><span class="comment">//KeyNotFoundException: &#x27;A&#x27; was not present in the Periodic Table</span></span><br></pre></td></tr></table></figure><p>程式碼放請參考<a href="https://github.com/rainmakerho/MolecularWeightCalculator">MolecularWeightCalculator Source</a></p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://github.com/rainmakerho/MolecularWeightCalculator">MolecularWeightCalculator Source</a><br><a href="https://www.calculatorsoup.com/calculators/chemistry/molecular-weight.php">Molecular Weight Calculator</a><br><a href="https://github.com/ncalc/ncalc">ncalc</a></p><blockquote><p>一尺青天，蓋一尺土: 每個人都有自己的天地，每個人都有自己的生活方式</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;最近有個需求要將化學運算式字串算出它的分子量是多少，例如，&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;</summary>
      
    
    
    
    
    <category term="C#" scheme="https://rainmakerho.github.io/tags/C/"/>
    
    <category term="molecular" scheme="https://rainmakerho.github.io/tags/molecular/"/>
    
    <category term="chemical" scheme="https://rainmakerho.github.io/tags/chemical/"/>
    
    <category term="formulas" scheme="https://rainmakerho.github.io/tags/formulas/"/>
    
  </entry>
  
  <entry>
    <title>Checkmarx Unsafe Reflection</title>
    <link href="https://rainmakerho.github.io/2024/03/01/checkmarx-unsafe-reflection-2/"/>
    <id>https://rainmakerho.github.io/2024/03/01/checkmarx-unsafe-reflection-2/</id>
    <published>2024-03-01T06:44:18.000Z</published>
    <updated>2024-03-01T07:06:50.669Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在前篇 <a href="https://rainmakerho.github.io/2023/02/17/checkmarx-unsafe-reflection/">Checkmarx Unsafe_Reflection</a> 是依 <strong>if + 白名單 + Contains</strong> 的方式來處理，<br>但 Checkmarx 更版後，就沒辦法成功了，怎麼辦呢?</p><ul><li>環境: Checkmarx 版本：V 9.5.5.1007 HF14</li><li>類別：Unsafe Reflection</li><li>嚴重程度：高風險</li></ul><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>Checkmarx 最新的 Rule 如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">CxList inputs = Find_Inputs();</span><br><span class="line">CxList comCreations = Find_ObjectCreations().FindByTypes(<span class="keyword">new</span> String[]&#123;</span><br><span class="line">    <span class="string">&quot;CodeSnippetExpression&quot;</span>,</span><br><span class="line">    <span class="string">&quot;CodeEntryPointMethod&quot;</span>,</span><br><span class="line">    <span class="string">&quot;CodeTypeReference&quot;</span>,</span><br><span class="line">    <span class="string">&quot;CodeTypeReference&quot;</span>,</span><br><span class="line">    <span class="string">&quot;CodeObjectCreateExpression&quot;</span>,</span><br><span class="line">    <span class="string">&quot;CodeMethodInvokeExpression&quot;</span>,</span><br><span class="line">    <span class="string">&quot;CodeTypeReferenceExpression&quot;</span>,</span><br><span class="line">    <span class="string">&quot;CodeMethodReturnStatement&quot;</span>,</span><br><span class="line">    <span class="string">&quot;CodeMemberMethod&quot;</span>&#125;);</span><br><span class="line"></span><br><span class="line">CxList unknownList = All.NewCxList();</span><br><span class="line">unknownList.Add(</span><br><span class="line">    Find_UnknownReference(),</span><br><span class="line">    Find_Param(),</span><br><span class="line">    Find_TypeRef());</span><br><span class="line"></span><br><span class="line">CxList auxInput = All.NewCxList();</span><br><span class="line">auxInput.Add(</span><br><span class="line">    inputs,</span><br><span class="line">    unknownList.FindAllReferences(inputs.GetAssignee()));</span><br><span class="line"></span><br><span class="line">CxList methods = Find_Methods();</span><br><span class="line"></span><br><span class="line">CxList relevantMethods = methods.FindByMemberAccesses(<span class="keyword">new</span> <span class="built_in">string</span> [] &#123;<span class="string">&quot;Type.GetType&quot;</span>, <span class="string">&quot;Type.GetMethod&quot;</span>, <span class="string">&quot;Type.InvokeMember&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Module.GetType&quot;</span>, <span class="string">&quot;Module.GetMethod&quot;</span>, <span class="string">&quot;Assembly.Load&quot;</span>, <span class="string">&quot;Assembly.LoadFile&quot;</span>, <span class="string">&quot;Assembly.LoadFrom&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Assembly.LoadModule&quot;</span>, <span class="string">&quot;Assembly.LoadWithPartialName&quot;</span>, <span class="string">&quot;Assembly.ReflectionOnlyLoad&quot;</span>, <span class="string">&quot;Assembly.ReflectionOnlyLoadFrom&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Assembly.UnsafeLoadFrom&quot;</span>, <span class="string">&quot;Assembly.GetType&quot;</span>, <span class="string">&quot;TypeInfo.GetMethod&quot;</span>,</span><br><span class="line">    <span class="string">&quot;TypeInfo.InvokeMember&quot;</span>, <span class="string">&quot;TypeDelegator.InvokeMember&quot;</span>&#125;, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">CxList relevantSinks = unknownList.GetParameters(relevantMethods, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">CxList containsMethods = methods.FindByMemberAccess(<span class="string">&quot;*.Contains&quot;</span>).GetByAncs(Find_Ifs());</span><br><span class="line">CxList influenceIfparams = auxInput.GetParameters(containsMethods.FindByParameters(auxInput), <span class="number">0</span>);</span><br><span class="line">CxList allReferencesOfifParams = auxInput.FindAllReferences(influenceIfparams);</span><br><span class="line"></span><br><span class="line">CxList notInfluencedChecks = relevantSinks - relevantSinks.FindByParameters(allReferencesOfifParams);</span><br><span class="line">notInfluencedChecks.Add(All.FindAllReferences(notInfluencedChecks.GetAssignee()));</span><br><span class="line"></span><br><span class="line">CxList notInfluencedComCreations = comCreations - comCreations.FindByParameters(allReferencesOfifParams);</span><br><span class="line">CxList objsC = notInfluencedComCreations.FindByParameters(All.GetParameters(notInfluencedComCreations) * auxInput);</span><br><span class="line"></span><br><span class="line">CxList sinks = All.NewCxList();</span><br><span class="line">sinks.Add(notInfluencedChecks, objsC);</span><br><span class="line"></span><br><span class="line">CxList sanitizers = Find_Integers();</span><br><span class="line"></span><br><span class="line">result = inputs.InfluencingOnAndNotSanitized(sinks, sanitizers).ReduceFlow(CxList.ReduceFlowType.ReduceBigFlow);</span><br></pre></td></tr></table></figure><p>在上面程式中，可以發現，<strong>if + 白名單 + Contains</strong>還是存在的，<br>而另一個確定的做法是轉成 <strong>Int</strong> (如果轉 int 可以，那 GUID 也應該可以才對)。<br>有問題的程式類似如下，是一個 WebService 程式，<br>主要是依 reportId 來取得報表範本，並產生報表。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ResponseData <span class="title">ReportServiceInData</span>(<span class="params"><span class="built_in">string</span> reportId, <span class="built_in">string</span> user, DataSet data</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    IReportGenerator rpt;</span><br><span class="line">    rpt = factory.CreateReportGenerator(reportId, user);</span><br><span class="line">    result = rpt.ExportReport(data);</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//CreateReportGenerator 就透過 Assembly.LoadFile 來載入 DLL</span></span><br></pre></td></tr></table></figure><p>因為有轉 int 的 rule 在，所以可以檢查一下 reportId 是不是有固定的命名規則，<br>有的話，就先將它轉成 int 後，再組回來，就可以解掉問題。<br>例如 reportId 為 R001, R002, R003 …<br>所以就可以將 reportId 去掉 R ，轉成 int ，再組回去就行了，<br>傳給<code>factory.CreateReportGenerator</code> 就是轉過 <code>int</code> 的 <code>newRptId</code> 如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ResponseData <span class="title">ReportServiceInData</span>(<span class="params"><span class="built_in">string</span> reportId, <span class="built_in">string</span> user, DataSet data</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">int</span> rptId = Convert.ToInt32(reportId.Replace(<span class="string">&quot;R&quot;</span>, <span class="built_in">string</span>.Empty));</span><br><span class="line">    <span class="keyword">var</span> newRptId = <span class="string">$&quot;R<span class="subst">&#123;rptId:##<span class="number">000</span>&#125;</span>&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> factory = <span class="keyword">new</span> Factory();</span><br><span class="line">    IReportGenerator rpt;</span><br><span class="line">    rpt = factory.CreateReportGenerator(newRptId, user);</span><br><span class="line">    result = rpt.ExportReport(data);</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>當然，以上僅在規則中調整，最好當然將 <code>Assembly.LoadFile</code> 改掉。</p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://rainmakerho.github.io/2023/02/17/checkmarx-unsafe-reflection/">Checkmarx Unsafe_Reflection</a></p><blockquote><p>一文錢買個糖人(吃了沒玩的，玩了沒吃的):喻人對某一件事，處於取捨兩難之間，一時無法抉擇的意思</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;在前篇 &lt;a href=&quot;https://rainmakerho.github.io/2023/02/17/checkmarx-unsafe</summary>
      
    
    
    
    
    <category term="Checkmarx" scheme="https://rainmakerho.github.io/tags/Checkmarx/"/>
    
    <category term="Unsafe Reflection" scheme="https://rainmakerho.github.io/tags/Unsafe-Reflection/"/>
    
    <category term="Assembly.LoadFile" scheme="https://rainmakerho.github.io/tags/Assembly-LoadFile/"/>
    
  </entry>
  
  <entry>
    <title>Visual Studio 2019 - Typescript 發生 找不到模組/類型 ... 沒有屬性 錯誤</title>
    <link href="https://rainmakerho.github.io/2024/02/23/visual-studio-2019-typescript-build-cannot-find-module/"/>
    <id>https://rainmakerho.github.io/2024/02/23/visual-studio-2019-typescript-build-cannot-find-module/</id>
    <published>2024-02-23T03:52:27.000Z</published>
    <updated>2024-03-01T06:23:02.720Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>同事開啟一個包含 Typescript 檔案的 Web 專案，結果出現一堆 <code>TS2411</code>, <code>TS2339</code>, <code>TS2536</code> 及 <code>TS2792</code> 的錯誤，如下圖，</p><img src="/2024/02/23/visual-studio-2019-typescript-build-cannot-find-module/01.png" class="" title="Error"><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>因為專案中沒有 tsconfig.json 設定，<br>而且也只有該同事有環境有問題。<br>後來同事說，調整專案屬性中<code>TypeScript</code>中的<code>模組系統</code>。<br>將原本的<code>無</code>改成<code>CommonJS</code>就可以了。<br>有類似問題的朋友，也可以試著調整看看哦~</p><img src="/2024/02/23/visual-studio-2019-typescript-build-cannot-find-module/02.png" class="" title="模組系統"><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">PropertyGroup</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;<span class="name">TypeScriptModuleKind</span>&gt;</span>commonjs<span class="tag">&lt;/<span class="name">TypeScriptModuleKind</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">PropertyGroup</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://stackoverflow.com/questions/39957100/visual-studio-2015-typescript-buildcannot-find-module">Visual Studio 2015 - Typescript “Build:Cannot find module…”</a></p><blockquote><p>一兩元寶灰，出四兩錫: 喻人花樣百出，變化多端的意思</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;同事開啟一個包含 Typescript 檔案的 Web 專案，結果出現一堆 &lt;code&gt;TS2411&lt;/code&gt;, &lt;code&gt;TS233</summary>
      
    
    
    
    
    <category term="Visual Studio" scheme="https://rainmakerho.github.io/tags/Visual-Studio/"/>
    
    <category term="Cannot find module" scheme="https://rainmakerho.github.io/tags/Cannot-find-module/"/>
    
    <category term="Typescript" scheme="https://rainmakerho.github.io/tags/Typescript/"/>
    
    <category term="TS2411" scheme="https://rainmakerho.github.io/tags/TS2411/"/>
    
    <category term="TS2339" scheme="https://rainmakerho.github.io/tags/TS2339/"/>
    
    <category term="TS2536" scheme="https://rainmakerho.github.io/tags/TS2536/"/>
    
    <category term="TS2792" scheme="https://rainmakerho.github.io/tags/TS2792/"/>
    
  </entry>
  
  <entry>
    <title>C# 為什麼 Console App 不需要 using System 就可以直接用 Console.WriteLine?</title>
    <link href="https://rainmakerho.github.io/2024/02/15/implicitly-imported-namespaces-csharp/"/>
    <id>https://rainmakerho.github.io/2024/02/15/implicitly-imported-namespaces-csharp/</id>
    <published>2024-02-15T05:27:37.000Z</published>
    <updated>2024-02-16T00:50:21.388Z</updated>
    
    <content type="html"><![CDATA[<h3 id="疑問"><a href="#疑問" class="headerlink" title="疑問"></a>疑問</h3><p>不知道有沒有發現新增 Console 應用程式後，<br>沒有任何的 <code>using</code>，程式中就可以直接使用 <code>Console.WriteLine(&quot;Hello, World!&quot;);</code>?</p><h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p>那是因為 .NET 6(含以後版本)使用 C# 10 的<strong>global namespace imports</strong>，<br>會把常用的一些 namespace 自動 import 進來哦~<br>會加那些 namespace 呢?<br>可以從專案屬性中看到，如下，</p><img src="/2024/02/15/implicitly-imported-namespaces-csharp/02.png" class="" title="專案屬性"><p>專案內容中有設定<code>ImplicitUsings</code>(隱含全域 Using)，預設是為<code>enable</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ImplicitUsings</span>&gt;</span>enable<span class="tag">&lt;/<span class="name">ImplicitUsings</span>&gt;</span></span><br></pre></td></tr></table></figure><p>或是在建置專案後，可以查看 <strong>obj&#x2F;Debug</strong> 目錄中的 <code>&#123;專案名稱&#125;.GlobalUsings.g.cs</code> 內容，</p><img src="/2024/02/15/implicitly-imported-namespaces-csharp/01.png" class="" title="GlobalUsings.g.cs"><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// &lt;auto-generated/&gt;</span></span><br><span class="line"><span class="keyword">global</span> <span class="keyword">using</span> <span class="keyword">global</span>::System;</span><br><span class="line"><span class="keyword">global</span> <span class="keyword">using</span> <span class="keyword">global</span>::System.Collections.Generic;</span><br><span class="line"><span class="keyword">global</span> <span class="keyword">using</span> <span class="keyword">global</span>::System.IO;</span><br><span class="line"><span class="keyword">global</span> <span class="keyword">using</span> <span class="keyword">global</span>::System.Linq;</span><br><span class="line"><span class="keyword">global</span> <span class="keyword">using</span> <span class="keyword">global</span>::System.Net.Http;</span><br><span class="line"><span class="keyword">global</span> <span class="keyword">using</span> <span class="keyword">global</span>::System.Threading;</span><br><span class="line"><span class="keyword">global</span> <span class="keyword">using</span> <span class="keyword">global</span>::System.Threading.Tasks;</span><br></pre></td></tr></table></figure><p>如果要加其他的 Global Using ，可以在<code>csproj</code>檔案中加入，如下，</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ItemGroup</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Using</span> <span class="attr">Include</span>=<span class="string">&quot;System.Text.Json&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Using</span> <span class="attr">Include</span>=<span class="string">&quot;System.Text.Json.Serialization&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ItemGroup</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://learn.microsoft.com/zh-tw/dotnet/core/tutorials/top-level-templates">C# 主控台應用程式範本會產生最上層語句</a><br><a href="https://xamlabs.com/2023/08/03/simplifying-namespace-imports-in-c-with-global-using-directives/">Simplifying Namespace Imports in C# with Global Using Directives</a><br><a href="https://endjin.com/blog/2021/09/dotnet-csharp-10-implicit-global-using-directives">C# 10.0 implicit global using directives</a></p><blockquote><p>一百句，五十雙: 喻人說來說去都是這一套，沒有新意，一點建議性都沒有</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;疑問&quot;&gt;&lt;a href=&quot;#疑問&quot; class=&quot;headerlink&quot; title=&quot;疑問&quot;&gt;&lt;/a&gt;疑問&lt;/h3&gt;&lt;p&gt;不知道有沒有發現新增 Console 應用程式後，&lt;br&gt;沒有任何的 &lt;code&gt;using&lt;/code&gt;，程式中就可以直接使用 &lt;code</summary>
      
    
    
    
    
    <category term="C#" scheme="https://rainmakerho.github.io/tags/C/"/>
    
    <category term="Console" scheme="https://rainmakerho.github.io/tags/Console/"/>
    
    <category term="Implicitly imported namespaces" scheme="https://rainmakerho.github.io/tags/Implicitly-imported-namespaces/"/>
    
    <category term=".NET 6" scheme="https://rainmakerho.github.io/tags/NET-6/"/>
    
    <category term="隱含全域 Using" scheme="https://rainmakerho.github.io/tags/%E9%9A%B1%E5%90%AB%E5%85%A8%E5%9F%9F-Using/"/>
    
  </entry>
  
  <entry>
    <title>Edge開發者工具中的網路沒辦法顯示任何的要求訊息</title>
    <link href="https://rainmakerho.github.io/2024/02/07/edge-network-empty/"/>
    <id>https://rainmakerho.github.io/2024/02/07/edge-network-empty/</id>
    <published>2024-02-07T04:04:11.000Z</published>
    <updated>2024-02-15T00:41:54.962Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>最近開啟 Edge 的開發者工具中的網路來錄網頁的要求行為時，<br>下方的區塊都是空空的，似乎不知道被那裡過濾掉，要怎麼辦呢?</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>不知那個設定把要求都過濾掉，那就只好<strong>還原</strong>它。</p><p>在 <strong>開發者工具</strong> 右邊，按下 <code>...</code> ，選擇 <code>設定</code> ，</p><img src="/2024/02/07/edge-network-empty/01.png" class="" title="DevTools-設定"><p>在<code>同步</code>最下方有一個<code>還原成預設值，並重新整理</code>，<br>按下它，就可以了哦。</p><img src="/2024/02/07/edge-network-empty/02.png" class="" title="還原成預設值"><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://blog.csdn.net/u013427969/article/details/113135474">edge 等浏览器打开开发者工具（F12）之后在 NetWork 看不到请求头等信息</a></p><blockquote><p>一天一個現在:「現在」只有一個，若把這個「現在」放過，第二個「現在」就不會再出現</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;最近開啟 Edge 的開發者工具中的網路來錄網頁的要求行為時，&lt;br&gt;下方的區塊都是空空的，似乎不知道被那裡過濾掉，要怎麼辦呢?&lt;/p&gt;
&lt;</summary>
      
    
    
    
    
    <category term="Edge" scheme="https://rainmakerho.github.io/tags/Edge/"/>
    
    <category term="Empty" scheme="https://rainmakerho.github.io/tags/Empty/"/>
    
    <category term="DevTools" scheme="https://rainmakerho.github.io/tags/DevTools/"/>
    
    <category term="Network" scheme="https://rainmakerho.github.io/tags/Network/"/>
    
  </entry>
  
  <entry>
    <title>改變 Windows 10 網卡的 MAC Address(實體位址)</title>
    <link href="https://rainmakerho.github.io/2024/02/07/change-mac-address-in-windows10/"/>
    <id>https://rainmakerho.github.io/2024/02/07/change-mac-address-in-windows10/</id>
    <published>2024-02-07T03:00:17.000Z</published>
    <updated>2024-02-15T00:46:00.171Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>在 Windows 中如何改變網卡的 MAC Address(實體位址) 呢?</p><h3 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h3><p>可以參考 <a href="https://www.shareus.com/windows/how-to-change-my-mac-address-in-windows-10-mac-address-spoofing.html">How to Change My MAC Address in Windows 10 - MAC Address Spoofing</a> 做法，找到網卡-&gt;設定-&gt;進階 有 <code>Network Address</code> 可以設定的網卡，<br>設定它的值後，再到命令視窗輸入 <code>ipconfig /all</code> 就可以發現 mac address 被改成剛才的設定值。</p><img src="/2024/02/07/change-mac-address-in-windows10/01.png" class="" title="change mac address"><p>可以到機碼中，<code>NetworkAddress</code> 的值也被加進去哦~</p><blockquote><p>最穩定的改變方式是從 <code>電腦管理</code>-&gt;<code>裝置管理員</code>-&gt;<code>網路介面卡</code>-&gt;選網卡-&gt;按右鍵-&gt;進階 Tab-&gt;內容裡面的<code>Network Address</code></p></blockquote><ul><li>有些設定值是不會改變的，例如 <code>0123456789AB</code></li></ul><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://www.shareus.com/windows/how-to-change-my-mac-address-in-windows-10-mac-address-spoofing.html">How to Change My MAC Address in Windows 10 - MAC Address Spoofing</a></p><blockquote><p>一百隻麻雀炒成一碟菜(都是嘴): 比喻很多人聚集在一起，興高彩烈地說個不停或只憑一張嘴的意思</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;在 Windows 中如何改變網卡的 MAC Address(實體位址) 呢?&lt;/p&gt;
&lt;h3 id=&quot;做法&quot;&gt;&lt;a href=&quot;#做法&quot; </summary>
      
    
    
    
    
    <category term="windows" scheme="https://rainmakerho.github.io/tags/windows/"/>
    
    <category term="ipconfig" scheme="https://rainmakerho.github.io/tags/ipconfig/"/>
    
    <category term="mac address" scheme="https://rainmakerho.github.io/tags/mac-address/"/>
    
    <category term="實體位址" scheme="https://rainmakerho.github.io/tags/%E5%AF%A6%E9%AB%94%E4%BD%8D%E5%9D%80/"/>
    
    <category term="Spoofing" scheme="https://rainmakerho.github.io/tags/Spoofing/"/>
    
    <category term="NetworkAddress" scheme="https://rainmakerho.github.io/tags/NetworkAddress/"/>
    
  </entry>
  
  <entry>
    <title>使用 SSL.com eSigner Cloud Key Adapter 噴 Can not retrieve credential 錯誤</title>
    <link href="https://rainmakerho.github.io/2024/02/02/ssl-com-eSigner-Can-not-retrieve-credential-error/"/>
    <id>https://rainmakerho.github.io/2024/02/02/ssl-com-eSigner-Can-not-retrieve-credential-error/</id>
    <published>2024-02-02T05:39:01.000Z</published>
    <updated>2024-02-02T06:10:47.276Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>要簽署 EXE 程式的發行公司，我們使用 SSL.COM 上的憑證。<br>當公司管理人員將我邀進 SSL.COM 的團隊後，<br>我註冊登入 SSL.COM 後，<br>下載 <a href="https://www.ssl.com/download/ssl-com-esigner-cka">eSigner CKA (Cloud Key Adapter)</a> 安裝完成後，<br>透過使用者登入後，就噴 <code>Can not retrieve credential!</code> 的錯誤。</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>透過 Fiddler 發現，透過 <strong>eSigner CKA</strong> 登入後會取得 User 的 AccessToken，<br>然後呼叫 <code>https://cs.ssl.com/csc/v0/credentials/list</code> 要取得公司的 EVCS (Extended Validation Code Signing)，結果取不到資料，就回傳 <strong>400</strong> 的錯誤。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;error&quot;</span><span class="punctuation">:</span> <span class="string">&quot;invalid_request&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;error_description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Signing credentials not configured. Make sure certificate is issued before signing&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>為什麼會這樣子呢?<br>因為<strong>少了設定 eSigner PIN 碼</strong>，<br>而 <strong>eSigner CKA</strong> 在登入後，就是需要使用者輸入它的 <code>secret code</code>。</p><p>所以，登入到 SSL.COM 後，就要到公司 order 頁面(<code>https://secure.ssl.com/team/&#123;teamid&#125;/certificate_orders/co-&#123;orderid&#125;</code>)，設定 <strong>eSigner PIN 碼</strong>，<br>設定的 PIN 碼要記錄下來，下次如果要 Show PIN QRCode 時，需要輸入當時的 PIN 碼。</p><p>其他簽署的方式可以參考 <a href="https://hackmd.io/@vantist/ryFqUUvqp">SSL.com eSigner 使用方法</a></p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://www.ssl.com/how-to/automate-ev-code-signing-with-signtool-or-certutil-esigner/">How to Automate EV Code Signing With Signtool.exe or Certutil.exe Using eSigner CKA (Cloud Key Adapter)</a><br><a href="https://hackmd.io/@vantist/ryFqUUvqp">SSL.com eSigner 使用方法</a></p><blockquote><p>一天叫三次苦，黃金變成土: 時常聽人說，不窮也被你叫窮，有的人因小小的不如意，就長歎短歎的，這種人即無大志，也不腳踏實地，改善自己的生活，只知怨天尤人，不能成大事立大業的。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;要簽署 EXE 程式的發行公司，我們使用 SSL.COM 上的憑證。&lt;br&gt;當公司管理人員將我邀進 SSL.COM 的團隊後，&lt;br&gt;我註冊</summary>
      
    
    
    
    
    <category term="ssl.com" scheme="https://rainmakerho.github.io/tags/ssl-com/"/>
    
    <category term="Can not retrieve credential" scheme="https://rainmakerho.github.io/tags/Can-not-retrieve-credential/"/>
    
    <category term="eSigner" scheme="https://rainmakerho.github.io/tags/eSigner/"/>
    
    <category term="Signing credentials not configured" scheme="https://rainmakerho.github.io/tags/Signing-credentials-not-configured/"/>
    
  </entry>
  
  <entry>
    <title>Visual Studio Nuget 套件管理員中的 &quot;只顯示易受攻擊&quot; 選項</title>
    <link href="https://rainmakerho.github.io/2024/02/02/vs-show-only-vulnerable-checkbox/"/>
    <id>https://rainmakerho.github.io/2024/02/02/vs-show-only-vulnerable-checkbox/</id>
    <published>2024-02-02T04:02:07.000Z</published>
    <updated>2024-02-02T05:34:11.380Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Nuget-套件-只顯示易受攻擊-選項"><a href="#Nuget-套件-只顯示易受攻擊-選項" class="headerlink" title="Nuget 套件 只顯示易受攻擊 選項"></a>Nuget 套件 只顯示易受攻擊 選項</h3><p>系統程式碼除了透過資安黑、白箱掃描外，又會有掃描套件是否有漏洞。<br>像是 <a href="https://github.com/jeremylong/DependencyCheck">DependencyCheck</a>, <a href="https://www.mend.io/">Mend</a>, <a href="https://www.sonatype.com/">sonatype</a> 等等。<br>現在 Visual Studio 的 Nuget 套件管理員中，有一個 <strong>只顯示易受攻擊</strong> 選項，將它勾選起來，就可以知道那些套件有風險。</p><img src="/2024/02/02/vs-show-only-vulnerable-checkbox/01.png" class="" title="只顯示易受攻擊"><p>所以開發人員可以隨時知道，進行更新，<br>而不用等到被掃出來後，才拿著報表進行更新哦~</p><blockquote><p>一人算，不如百人算:一個人的計謀，不如多數人的籌劃。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Nuget-套件-只顯示易受攻擊-選項&quot;&gt;&lt;a href=&quot;#Nuget-套件-只顯示易受攻擊-選項&quot; class=&quot;headerlink&quot; title=&quot;Nuget 套件 只顯示易受攻擊 選項&quot;&gt;&lt;/a&gt;Nuget 套件 只顯示易受攻擊 選項&lt;/h3&gt;&lt;p&gt;系統</summary>
      
    
    
    
    
    <category term="Visual Studio" scheme="https://rainmakerho.github.io/tags/Visual-Studio/"/>
    
    <category term="show only vulnerable" scheme="https://rainmakerho.github.io/tags/show-only-vulnerable/"/>
    
    <category term="Nuget" scheme="https://rainmakerho.github.io/tags/Nuget/"/>
    
    <category term="DependencyCheck" scheme="https://rainmakerho.github.io/tags/DependencyCheck/"/>
    
  </entry>
  
  <entry>
    <title>ASP.NET Bundle 的 Javascript, CSS ，IIS 設定靜態壓縮沒作用?</title>
    <link href="https://rainmakerho.github.io/2024/01/17/iis-compression-donnt-work-bundle-files/"/>
    <id>https://rainmakerho.github.io/2024/01/17/iis-compression-donnt-work-bundle-files/</id>
    <published>2024-01-17T06:36:40.000Z</published>
    <updated>2024-01-17T07:36:49.779Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>最近同事詢問，為什麼一些透過 Bundle 出來的 JS, CSS 無法被壓縮傳遞呢?</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>開始之前先來了解一下 IIS，</p><p>IIS 的動態壓縮預設是不會安裝的，但<strong>預設會被啟用</strong>，<br>所以在操作 IIS 中的<strong>壓縮</strong>可以發現<strong>動態壓縮</strong>是被勾選起來的，<br>但是它卻是<strong>灰灰的</strong></p><img src="/2024/01/17/iis-compression-donnt-work-bundle-files/01.png" class="" title="IIS"><p>這就表示沒有安裝<strong>動態壓縮</strong>功能。<br>而如果沒有灰灰的，就表示有安裝<strong>動態壓縮</strong>功能。</p><p>所以，如果勾選<strong>靜態壓縮</strong>，那實體檔案的 js, css 就會被透過壓縮傳遞。</p><p>所以如果發現<strong>動態壓縮</strong>有被勾選，但是<strong>灰灰的</strong>，就新增 IIS <strong>動態壓縮</strong> 功能，再重開機就可以了。</p><p>好了，確認 IIS 的環境後，回到原本的問題，<br>為什麼實體 js, css 檔可以透過<strong>靜態壓縮</strong>，Bundle 的 js, css 卻沒辦法呢?<br>因為 Bundle 的 js, css 是透過程式動態產生出來的，所以要透過<strong>動態壓縮</strong>來進行壓縮才行哦!</p><blockquote><p>如果啟用<strong>靜態壓縮</strong>，但實體 js , css 檔卻沒被壓縮，請檢查對應的<strong>應用程式集區</strong>識別(例如: Network Service)是否有加入 <strong>IIS_IUSRS</strong> 群組中<br>如果<strong>啟用動態壓縮</strong>，會包含 靜態、動態一起進行壓縮(全壓縮)</p></blockquote><p>預設 IIS 壓縮 會使用低於 CPU 50% ， 如果怕 CPU 被用太多，可以在<strong>設定編輯器</strong>中進行調整，</p><img src="/2024/01/17/iis-compression-donnt-work-bundle-files/02.png" class="" title="設定編輯器"><blockquote><p>一人開井，千人飲水: 大家都能互愛，人人都能得益</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;最近同事詢問，為什麼一些透過 Bundle 出來的 JS, CSS 無法被壓縮傳遞呢?&lt;/p&gt;
&lt;h3 id=&quot;解法&quot;&gt;&lt;a href=&quot;#</summary>
      
    
    
    
    
    <category term="IIS" scheme="https://rainmakerho.github.io/tags/IIS/"/>
    
    <category term="Compression" scheme="https://rainmakerho.github.io/tags/Compression/"/>
    
    <category term="urlCompression" scheme="https://rainmakerho.github.io/tags/urlCompression/"/>
    
    <category term="靜態壓縮" scheme="https://rainmakerho.github.io/tags/%E9%9D%9C%E6%85%8B%E5%A3%93%E7%B8%AE/"/>
    
    <category term="doStaticCompression" scheme="https://rainmakerho.github.io/tags/doStaticCompression/"/>
    
    <category term="doDynamicCompression" scheme="https://rainmakerho.github.io/tags/doDynamicCompression/"/>
    
  </entry>
  
  <entry>
    <title>500.21 處理常式 &quot;aspNetCore&quot; 的模組清單中有錯誤的模組 &quot;AspNetCoreModuleV2&quot;</title>
    <link href="https://rainmakerho.github.io/2024/01/08/aspnetcore-error-aspnetcoremodulev2/"/>
    <id>https://rainmakerho.github.io/2024/01/08/aspnetcore-error-aspnetcoremodulev2/</id>
    <published>2024-01-08T08:22:26.000Z</published>
    <updated>2024-01-08T09:18:53.992Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>最近把程式移到另一台 IIS Server 上，安裝好 .NET 6 後，設定好應用程式。<br>測試時，會出現</p><blockquote><p>HTTP 錯誤 500.21 - Internal Server Error<br>處理常式 “aspNetCore” 的模組清單中有錯誤的模組 “AspNetCoreModuleV2”</p></blockquote><h3 id="解決"><a href="#解決" class="headerlink" title="解決"></a>解決</h3><p>這通常是 <code>web.config</code> 設定要使用的為 <code>AspNetCoreModuleV2</code> 模組，</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">location</span> <span class="attr">path</span>=<span class="string">&quot;.&quot;</span> <span class="attr">inheritInChildApplications</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">system.webServer</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">handlers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">add</span> <span class="attr">name</span>=<span class="string">&quot;aspNetCore&quot;</span> <span class="attr">path</span>=<span class="string">&quot;*&quot;</span> <span class="attr">verb</span>=<span class="string">&quot;*&quot;</span> <span class="attr">modules</span>=<span class="string">&quot;AspNetCoreModuleV2&quot;</span> <span class="attr">resourceType</span>=<span class="string">&quot;Unspecified&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">handlers</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">aspNetCore</span> <span class="attr">processPath</span>=<span class="string">&quot;dotnet&quot;</span> <span class="attr">arguments</span>=<span class="string">&quot;.\你的dll.dll&quot;</span> <span class="attr">stdoutLogEnabled</span>=<span class="string">&quot;false&quot;</span> <span class="attr">stdoutLogFile</span>=<span class="string">&quot;.\logs\stdout&quot;</span> <span class="attr">hostingModel</span>=<span class="string">&quot;inprocess&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">system.webServer</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">location</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>但目前 IIS 沒有安裝 <code>AspNetCoreModuleV2</code> 模組，<br>就是 <strong>IIS runtime support (ASP.NET Core Module v2)</strong> 沒有裝。<br>所以請再安裝 <code>Hosting Bundle</code> 就可以了。</p><img src="/2024/01/08/aspnetcore-error-aspnetcoremodulev2/01.png" class="" title="Hosting Bundle"><p>當然，如果 runtime 沒裝的話，也要一併安裝哦~</p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://dotnet.microsoft.com/en-us/download/dotnet/6.0">下載 .net 6 SDK, Runtime, IIS Hosting Bundle</a><br><a href="https://dotnet.microsoft.com/en-us/download/dotnet/8.0">下載 .net 8 SDK, Runtime, IIS Hosting Bundle</a></p><blockquote><p>一人主張，不值兩人思量: 一個人的意見，不如二個人的研討。因為個人的見解往往存有主觀和偏見，所以，共策共勵，處理事情較為妥當。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;最近把程式移到另一台 IIS Server 上，安裝好 .NET 6 後，設定好應用程式。&lt;br&gt;測試時，會出現&lt;/p&gt;
&lt;blockquo</summary>
      
    
    
    
    
    <category term="IIS" scheme="https://rainmakerho.github.io/tags/IIS/"/>
    
    <category term="aspNetCore" scheme="https://rainmakerho.github.io/tags/aspNetCore/"/>
    
    <category term="AspNetCoreModuleV2" scheme="https://rainmakerho.github.io/tags/AspNetCoreModuleV2/"/>
    
    <category term="Hosting Bundle" scheme="https://rainmakerho.github.io/tags/Hosting-Bundle/"/>
    
  </entry>
  
  <entry>
    <title>DevExpress XtraReport 報表列印或匯出 PDF ，中文字都變空白(不見了)</title>
    <link href="https://rainmakerho.github.io/2024/01/05/devexpress-report-pdf-not-display-chinese-characters/"/>
    <id>https://rainmakerho.github.io/2024/01/05/devexpress-report-pdf-not-display-chinese-characters/</id>
    <published>2024-01-05T08:37:05.000Z</published>
    <updated>2024-01-05T09:11:03.264Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>ASP.NET 程式在預覽 DevExpress 報表後，列印或匯出 PDF 後，中文字全不見了。<br>為什麼中文字都不見了呢? 是因為英文作業系統的關係嗎? 可是 <code>標楷體</code> 有安裝了呀~</p><blockquote><p>環境</p></blockquote><p>作業系統: <strong>英文版 Windows</strong><br>程式: IIS, ASP.NET<br>報表: <strong>DevExpress 報表字型都是設定為 <code>標楷體</code></strong><br>字型: <strong>標楷體</strong>(有將標楷體安裝進 %windir%&#x2F;fonts 目錄)</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>查看 <a href="https://supportcenter.devexpress.com/ticket/details/t1195725/reporting-in-net-core-not-supporting-chinese-characters">Reporting in .net core not supporting chinese characters</a> 是說 DevExpress 要將報表轉成 PDF 時，需要去找到它的字型，<br>如果找不到，那就不會把字畫出來，自然就看不見了。<br>同事在安裝字型後，也有重新開機過。</p><p>本來以為是因為 IIS Application Pool 的 <code>載入使用者設定檔</code> 沒有設定成 <strong>true</strong> ，<br>但同事查了一下是有設 true 的。</p><p>後來同事在OS中建立一個新的帳號，並在 Application Pool 設定那個 帳號 去執行，<br>報表列印或匯出 PDF ，中文字就可以正常呈現了。</p><p>猜想有可能是 Application Pool 帳號沒權限讀到 <code>%windir%/fonts 目錄</code>。<br>或許可以試著在 <code>%windir%/fonts 目錄</code> 設定給 Application Pool 帳號讀的權限，<br>試看看是否一樣有效。</p><p>以上最後的解法，感謝同事 Eric 及 Jenny 的分享</p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://supportcenter.devexpress.com/ticket/details/t1195725/reporting-in-net-core-not-supporting-chinese-characters">Reporting in .net core not supporting chinese characters</a><br><a href="https://supportcenter.devexpress.com/ticket/details/t621865/how-to-solve-the-problem-of-missing-chinese-character-when-exporting-report-to-pdf">How to solve the problem of missing Chinese character when exporting report to PDF</a><br><a href="https://www.thedummyprogrammer.com/asp-net/configure-access-permission-to-a-folder-for-an-iis-application-pool">Configure access permission to a folder for an IIS Application pool</a></p><blockquote><p>一人不喝酒、二人不賭錢 : 志趣相同，嗜好相同，大家便會聚集在一起的。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;ASP.NET 程式在預覽 DevExpress 報表後，列印或匯出 PDF 後，中文字全不見了。&lt;br&gt;為什麼中文字都不見了呢? 是因為英</summary>
      
    
    
    
    
    <category term="標楷體" scheme="https://rainmakerho.github.io/tags/%E6%A8%99%E6%A5%B7%E9%AB%94/"/>
    
    <category term="Font" scheme="https://rainmakerho.github.io/tags/Font/"/>
    
    <category term="DevExpress" scheme="https://rainmakerho.github.io/tags/DevExpress/"/>
    
    <category term="XtraReport" scheme="https://rainmakerho.github.io/tags/XtraReport/"/>
    
    <category term="Empty" scheme="https://rainmakerho.github.io/tags/Empty/"/>
    
    <category term="IIS Application pool" scheme="https://rainmakerho.github.io/tags/IIS-Application-pool/"/>
    
  </entry>
  
  <entry>
    <title>Semantic Kernel(SK) 如何建立智慧助理(Agent)</title>
    <link href="https://rainmakerho.github.io/2024/01/04/sk-agent/"/>
    <id>https://rainmakerho.github.io/2024/01/04/sk-agent/</id>
    <published>2024-01-04T03:11:19.000Z</published>
    <updated>2024-01-05T06:20:50.518Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>之前，做 ChatBot 時，收到使用者輸入，會先判斷它的意圖，<br>然後判斷要完成該意圖缺多少的內容，再一一地詢問使用者。<br>現在，透過 Semantic Kernel(SK)，這些不足的資訊，可以透過<code>ChatCompletionService</code>來幫我們。<br>以下就來看看要如何做到呢?</p><p>Agent 在 由 Semantic Kernel 中，由<a href="https://learn.microsoft.com/en-us/semantic-kernel/agents/plugins/">plugins</a>, <a href="https://learn.microsoft.com/en-us/semantic-kernel/agents/planners/">planners</a> 及 persona(角色&#x2F;人設) 三個核心組件組成。<br>這些組件是讓 Agent 能夠從使用者或其他系統獲取資訊，規劃如何使用資訊，並使用資訊來回應使用者或執行動作。<br>以下我們以一個幫助使用者請假的 HR Copilot 為例。<br>在取得使用者資訊後，Semantic Kernel 透過 <code>ChatCompletionService</code> 找尋要完成任務的<a href="https://learn.microsoft.com/en-us/semantic-kernel/agents/plugins/">plugins</a>並呼叫它，<br>最後再將這些<a href="https://learn.microsoft.com/en-us/semantic-kernel/agents/plugins/">plugins</a>的結果給使用者。</p><h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><p>建立 Console 程式，並加入以下套件，</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">dotnet new console <span class="literal">-n</span> hragent <span class="literal">-o</span> hragent</span><br><span class="line">dotnet add package Microsoft.Extensions.Logging</span><br><span class="line">dotnet add package Microsoft.Extensions.Logging.Debug</span><br><span class="line">dotnet add package Microsoft.SemanticKernel <span class="literal">--prerelease</span></span><br><span class="line">dotnet add package Microsoft.SemanticKernel.Connectors.OpenAI <span class="literal">--prerelease</span></span><br><span class="line">dotnet add package Microsoft.SemanticKernel.Plugins.Core <span class="literal">--prerelease</span></span><br></pre></td></tr></table></figure><p>要完成這個簡單的<strong>請假計畫</strong>包含以下幾步， 1.取得請假的起、迄日期區間 2.請假假別 3.請假原因</p><p>所以我們要建立 Plugins 來讓 Agent 有請假的能力。<br>這個就是 Plugins 的作用，讓 Agent 增加技能。<br>所以就建立 <code>LeavePlanner</code> 類別，<br>裡面有 <code>ApplyLeaveAsync</code> 處理請假，<code>ParseTimeRange</code>處理<code>上/下午</code>時間區間，<br>Function 要設定 <code>KernelFunction</code> ，<code>Description</code> 也要寫清楚，<br>這樣 <code>ChatCompletionService</code> 才可以找得到它，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Microsoft.SemanticKernel;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">hragent.plugins.leave</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">LeavePlanner</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">KernelFunction</span>]</span><br><span class="line">    [<span class="meta">Description(<span class="string">&quot;執行請假，並回傳請假資訊&quot;</span>)</span>]</span><br><span class="line">    [<span class="meta">return: Description(<span class="string">&quot;執行請假結果&quot;</span>)</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;<span class="built_in">string</span>&gt; <span class="title">ApplyLeaveAsync</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">        Kernel kernel,</span></span></span><br><span class="line"><span class="params"><span class="function">        [Description(<span class="string">&quot;開始請假日期及時間&quot;</span></span>)] <span class="built_in">string</span> startDateTime,</span></span><br><span class="line"><span class="function">        [<span class="title">Description</span>(<span class="params"><span class="string">&quot;結束請假日期及時間&quot;</span></span>)] <span class="built_in">string</span> endDateTime,</span></span><br><span class="line"><span class="function">        [<span class="title">Description</span>(<span class="params"><span class="string">&quot;假別&quot;</span></span>)] <span class="built_in">string</span> leaveType,</span></span><br><span class="line"><span class="function">        [<span class="title">Description</span>(<span class="params"><span class="string">&quot;請假原因&quot;</span></span>)] <span class="built_in">string</span> reason</span></span><br><span class="line"><span class="function">    )</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> result = <span class="string">$&quot;執行請假:從<span class="subst">&#123;startDateTime&#125;</span>~<span class="subst">&#123;endDateTime&#125;</span>, 假別:<span class="subst">&#123;leaveType&#125;</span>, 原因:<span class="subst">&#123;reason&#125;</span>&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">await</span> Task.FromResult&lt;<span class="built_in">string</span>&gt;(result);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    [<span class="meta">KernelFunction</span>]</span><br><span class="line">    [<span class="meta">Description(<span class="string">&quot;將 上午、下午 轉成時間區間&quot;</span>)</span>]</span><br><span class="line">    [<span class="meta">return: Description(<span class="string">&quot;時間區間&quot;</span>)</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;TimeRange&gt; <span class="title">ParseTimeRange</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">        Kernel kernel,</span></span></span><br><span class="line"><span class="params"><span class="function">        [Description(<span class="string">&quot;上午、下午 &quot;</span></span>)] <span class="built_in">string</span> morning_afternoon</span></span><br><span class="line"><span class="function">    )</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> result = <span class="keyword">new</span> TimeRange(TimeSpan.FromHours(<span class="number">8.5</span>), TimeSpan.FromHours(<span class="number">17.5</span>));</span><br><span class="line">        <span class="keyword">if</span> (morning_afternoon == <span class="string">&quot;morning&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            result = <span class="keyword">new</span> TimeRange(TimeSpan.FromHours(<span class="number">8.5</span>), TimeSpan.FromHours(<span class="number">12</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (morning_afternoon == <span class="string">&quot;afternoon&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            result = <span class="keyword">new</span> TimeRange(TimeSpan.FromHours(<span class="number">13</span>), TimeSpan.FromHours(<span class="number">17.5</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">await</span> Task.FromResult&lt;TimeRange&gt;(result);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">record</span> <span class="title">TimeRange</span>(<span class="params">TimeSpan <span class="keyword">from</span>, TimeSpan to</span>)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接著將這些 Plugins 載入進來，並讓 Semantic Kernel 可以依語義自動去執行它們，<br>以下是 <code>Program.cs</code> 的程式碼，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Microsoft.Extensions.DependencyInjection;</span><br><span class="line"><span class="keyword">using</span> Microsoft.Extensions.Logging;</span><br><span class="line"><span class="keyword">using</span> Microsoft.SemanticKernel;</span><br><span class="line"><span class="keyword">using</span> Microsoft.SemanticKernel.ChatCompletion;</span><br><span class="line"><span class="keyword">using</span> Microsoft.SemanticKernel.Connectors.OpenAI;</span><br><span class="line"><span class="keyword">using</span> Microsoft.SemanticKernel.Plugins.Core;</span><br><span class="line"><span class="keyword">var</span> builder = Kernel.CreateBuilder();</span><br><span class="line">builder.Services.AddLogging(c =&gt; c.SetMinimumLevel(LogLevel.Trace).AddDebug());</span><br><span class="line">builder.Services.AddAzureOpenAIChatCompletion(</span><br><span class="line">    deploymentName: <span class="string">&quot;&lt;你的aoai的deploymentName&gt;&quot;</span>,</span><br><span class="line">    modelId: <span class="string">&quot;&lt;你的aoai的modelId(gpt-35-turbo or gpt-4)&gt;&quot;</span>,</span><br><span class="line">    endpoint: <span class="string">&quot;&lt;你的aoai的endpoint&gt;&quot;</span>,</span><br><span class="line">    apiKey: <span class="string">&quot;&lt;你的aoai的apikey&gt;&quot;</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">//載入內建的時間Plugin</span></span><br><span class="line">builder.Plugins.AddFromType&lt;TimePlugin&gt;();</span><br><span class="line"><span class="comment">//找入請假Plugin</span></span><br><span class="line">builder.Plugins.AddFromType&lt;LeavePlanner&gt;();</span><br><span class="line"><span class="keyword">var</span> kernel = builder.Build();</span><br><span class="line"><span class="comment">//設定它的角色(Personas)</span></span><br><span class="line"><span class="keyword">var</span> chatMessages = <span class="keyword">new</span> ChatHistory(<span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">你是一個專業的人力資源助手，專門為用戶提供人力資源相關的建議和資訊。</span></span><br><span class="line"><span class="string">如果使用者沒有提供足夠的資訊讓您完成任務，您將繼續提出問題，直到您有足夠的資訊來完成任務。</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> chatCompletionService = kernel.GetRequiredService&lt;IChatCompletionService&gt;();</span><br><span class="line"><span class="comment">// Start the conversation</span></span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Get user input</span></span><br><span class="line">    Console.Write(<span class="string">&quot;User &gt; &quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> userInput = Console.ReadLine()!;</span><br><span class="line">    <span class="keyword">if</span> (userInput == <span class="string">&quot;exit&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    chatMessages.AddUserMessage(userInput);</span><br><span class="line"></span><br><span class="line">    OpenAIPromptExecutionSettings openAIPromptExecutionSettings = <span class="keyword">new</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//設定讓 ChatCompletionService 可依語義自動去呼叫需要的 Functions</span></span><br><span class="line">        ToolCallBehavior = ToolCallBehavior.AutoInvokeKernelFunctions</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">var</span> result = chatCompletionService.GetStreamingChatMessageContentsAsync(</span><br><span class="line">        chatMessages,</span><br><span class="line">        executionSettings: openAIPromptExecutionSettings,</span><br><span class="line">        kernel: kernel);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Stream the results</span></span><br><span class="line">    <span class="built_in">string</span> fullMessage = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> first = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">await</span> <span class="keyword">foreach</span> (<span class="keyword">var</span> content <span class="keyword">in</span> result)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (content.Role.HasValue &amp;&amp; first)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.Write(<span class="string">$&quot;Assistant &gt; &quot;</span>);</span><br><span class="line">            first = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Console.Write(content.Content);</span><br><span class="line">        fullMessage += content.Content;</span><br><span class="line">    &#125;</span><br><span class="line">    Console.WriteLine();</span><br><span class="line">    <span class="comment">// Add the message from the agent to the chat history</span></span><br><span class="line">    chatMessages.AddAssistantMessage(fullMessage);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Console.WriteLine(<span class="string">&quot;結束對話...&quot;</span>);</span><br></pre></td></tr></table></figure><p>我們的 Agent 有了請假功能，所以將程式跑起來，<br>輸入<code>我明天下午要到UUU訓練中心上 Azure AZ-900 課程，所以要請公假</code>，<br><code>ChatCompletionService</code>會將<code>明天</code>呼叫<code>TimePlugin_Today</code> Function 解析出<code>2024/1/5</code>，如下，</p><img src="/2024/01/04/sk-agent/01.png" class="" title="TimePlugin_Today"><p>因為有下午，所以會呼叫<code>ParseTimeRange</code>取得<code>13:00~17:30</code>時間區段，</p><img src="/2024/01/04/sk-agent/02.png" class="" title="ParseTimeRange"><p>有了時間、假別、原因，就可以呼叫<code>ApplyLeaveAsync</code> 來進行請假，</p><img src="/2024/01/04/sk-agent/03.png" class="" title="ApplyLeaveAsync"><p>所以最後 Agent 就會回，已請假完成等 Summary 的資訊，如下，</p><img src="/2024/01/04/sk-agent/04.png" class="" title="請假完成"><p>另一個範例，</p><img src="/2024/01/04/sk-agent/05.png" class="" title="請病假"><p>以往我們通常會先將使用者的要求，找出它的意圖，及相關資訊，不足地方則程式控制來詢問使用者，<br>例如使用者只說我要請假，那程式則將必填的欄位透過程式一個一個詢問使用者。</p><p><code>ChatCompletionService</code>是透過語義的方式<strong>自動</strong>尋找可完成的<code>Planner</code>並搭配許多<code>Plugins</code>來完成使用者的要求，<br>如果使用者給的訊息，缺少 Function 需要的參數，則是由 Agent 自動詢問使用者取得來完成工作。<br>雖然這種方式很方便，但是透過 GPT 來整理相關的訊息會花費較長時間，<br>因為它將要將目前的<code>ChatHistory</code>做整理。</p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://learn.microsoft.com/en-us/semantic-kernel/agents/">What is an agent?</a><br><a href="https://learn.microsoft.com/en-us/semantic-kernel/agents/plugins/">plugins</a><br><a href="https://learn.microsoft.com/en-us/semantic-kernel/agents/planners/">planners</a></p><blockquote><p>一人計，不如百人算:集合外數人的意見，可成客觀而有系統的結論(三個臭皮匠，湊個諸葛亮)。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;之前，做 ChatBot 時，收到使用者輸入，會先判斷它的意圖，&lt;br&gt;然後判斷要完成該意圖缺多少的內容，再一一地詢問使用者。&lt;br&gt;現在，</summary>
      
    
    
    
    
    <category term="Plugins" scheme="https://rainmakerho.github.io/tags/Plugins/"/>
    
    <category term="Semantic Kernel" scheme="https://rainmakerho.github.io/tags/Semantic-Kernel/"/>
    
    <category term="Planners" scheme="https://rainmakerho.github.io/tags/Planners/"/>
    
    <category term="Personas" scheme="https://rainmakerho.github.io/tags/Personas/"/>
    
    <category term="KernelFunction" scheme="https://rainmakerho.github.io/tags/KernelFunction/"/>
    
    <category term="ChatCompletionService" scheme="https://rainmakerho.github.io/tags/ChatCompletionService/"/>
    
    <category term="semantic-kernel" scheme="https://rainmakerho.github.io/tags/semantic-kernel/"/>
    
  </entry>
  
  <entry>
    <title>Semantic Kernel(SK) Prompt template</title>
    <link href="https://rainmakerho.github.io/2024/01/02/sk-prompt-template/"/>
    <id>https://rainmakerho.github.io/2024/01/02/sk-prompt-template/</id>
    <published>2024-01-02T06:19:26.000Z</published>
    <updated>2024-01-05T06:22:18.364Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在 Semantic Kernel(SK) 可以直接給 Prompt 來執行。<br>也可以透過 <code>Prompt template</code> 來建立可重覆使用的功能。</p><h3 id="建立-Prompt-Function"><a href="#建立-Prompt-Function" class="headerlink" title="建立 Prompt Function"></a>建立 Prompt Function</h3><p>1.透過 <code>CreateFunctionFromPrompt</code> 建立</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Microsoft.SemanticKernel;</span><br><span class="line"><span class="keyword">using</span> Microsoft.SemanticKernel.ChatCompletion;</span><br><span class="line"><span class="keyword">var</span> builder = Kernel.CreateBuilder();</span><br><span class="line"><span class="comment">// Add a text or chat completion service using either:</span></span><br><span class="line"><span class="comment">// builder.Services.AddAzureOpenAIChatCompletion()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> kernel = builder.Build();</span><br><span class="line"><span class="keyword">var</span> chat = kernel.CreateFunctionFromPrompt(</span><br><span class="line">    <span class="string">@&quot;User: &#123;&#123;$request&#125;&#125;</span></span><br><span class="line"><span class="string">    Assistant: &quot;</span></span><br><span class="line">);</span><br><span class="line">Console.Write(<span class="string">&quot;User &gt; &quot;</span>);</span><br><span class="line"><span class="keyword">var</span> request = Console.ReadLine();</span><br><span class="line"><span class="comment">// 使用時傳入所需要的參數</span></span><br><span class="line"><span class="keyword">var</span> chatResult = kernel.InvokeStreamingAsync&lt;StreamingChatMessageContent&gt;(</span><br><span class="line">    chat,</span><br><span class="line">    <span class="keyword">new</span>() &#123;</span><br><span class="line">        &#123; <span class="string">&quot;request&quot;</span>, request &#125;</span><br><span class="line">    &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>透過<code>CreateFunctionFromPrompt</code>沒設定<code>PromptTemplateConfig</code>時，<br>function 的 name 會用<code>func&#123;GUID&#125;</code>，Desc 會用<code>Generic function, unknown purpose</code><br>所以也可以透過<code>PromptTemplateConfig</code>設定，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> chat = kernel.CreateFunctionFromPrompt(</span><br><span class="line">    <span class="keyword">new</span> PromptTemplateConfig()</span><br><span class="line">    &#123;</span><br><span class="line">        Name = <span class="string">&quot;Chat&quot;</span>,</span><br><span class="line">        Description = <span class="string">&quot;Chat with the assistant.&quot;</span>,</span><br><span class="line">        Template =<span class="string">@&quot;User: &#123;&#123;$request&#125;&#125;</span></span><br><span class="line"><span class="string">                    Assistant: &quot;</span>,</span><br><span class="line">        TemplateFormat = <span class="string">&quot;semantic-kernel&quot;</span>,</span><br><span class="line">        InputVariables = [</span><br><span class="line">            <span class="keyword">new</span>() &#123; Name = <span class="string">&quot;request&quot;</span>, Description = <span class="string">&quot;The user&#x27;s request.&quot;</span>, IsRequired = <span class="literal">true</span> &#125;</span><br><span class="line">        ],</span><br><span class="line">        ExecutionSettings = &#123;</span><br><span class="line">            &#123; <span class="string">&quot;default&quot;</span>, <span class="keyword">new</span> OpenAIPromptExecutionSettings() &#123;</span><br><span class="line">                MaxTokens = <span class="number">1000</span>,</span><br><span class="line">                Temperature = <span class="number">0</span></span><br><span class="line">            &#125; &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>2.透過 <code>CreatePluginFromPromptDirectory</code> 讀取檔案<br>建立<code>pluigns</code>目錄後，再建立<code>chat</code>目錄，在該目錄中建立<code>config.json</code> 及 <code>skprompt.txt</code><br><code>consig.json</code> 設定 function 相關資訊</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;schema&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;completion&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Creates a chat response to the user&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;execution_settings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;default&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;max_tokens&quot;</span><span class="punctuation">:</span> <span class="number">1000</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;temperature&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;input_variables&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;request&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;The user&#x27;s request.&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;required&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>skprompt.txt 如下，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">User: &#123;&#123;$request&#125;&#125;</span><br><span class="line">Assistant:</span><br></pre></td></tr></table></figure><p>透過 <code>CreatePluginFromPromptDirectory</code> 載入</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Microsoft.SemanticKernel;</span><br><span class="line"><span class="keyword">using</span> Microsoft.SemanticKernel.ChatCompletion;</span><br><span class="line"><span class="keyword">var</span> builder = Kernel.CreateBuilder();</span><br><span class="line"><span class="comment">// Add a text or chat completion service using either:</span></span><br><span class="line"><span class="comment">// builder.Services.AddAzureOpenAIChatCompletion()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> kernel = builder.Build();</span><br><span class="line"><span class="keyword">var</span> pluigns = kernel.CreatePluginFromPromptDirectory(<span class="string">&quot;pluigns&quot;</span>);</span><br><span class="line">Console.Write(<span class="string">&quot;User &gt; &quot;</span>);</span><br><span class="line"><span class="keyword">var</span> request = Console.ReadLine();</span><br><span class="line"><span class="comment">// 使用時傳入所需要的參數</span></span><br><span class="line"><span class="keyword">var</span> chatResult = kernel.InvokeStreamingAsync&lt;StreamingChatMessageContent&gt;(</span><br><span class="line">    pluigns[<span class="string">&quot;chat&quot;</span>],</span><br><span class="line">    <span class="keyword">new</span>() &#123;</span><br><span class="line">        &#123; <span class="string">&quot;request&quot;</span>, request &#125;</span><br><span class="line">    &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>3.透過<code>CreateFunctionFromPromptYaml</code><br><code>config.json</code> 及 <code>skprompt.txt</code> 也可以合併成 <code>YAML</code>檔案，<br>例如，在 <code>plugins</code> 目錄中建立 <code>chat.yaml</code>，建置動作設定為<code>內嵌資源</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">chat</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">Creates</span> <span class="string">a</span> <span class="string">chat</span> <span class="string">response</span> <span class="string">to</span> <span class="string">the</span> <span class="string">user</span></span><br><span class="line"><span class="attr">template:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    User: &#123;&#123;request&#125;&#125;</span></span><br><span class="line"><span class="string">    Assistant:</span></span><br><span class="line"><span class="string"></span><span class="attr">template_format:</span> <span class="string">semantic-kernel</span></span><br><span class="line"><span class="attr">input_variables:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">request</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">The</span> <span class="string">user&#x27;s</span> <span class="string">request</span></span><br><span class="line">      <span class="attr">is_required:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">execution_settings:</span></span><br><span class="line">    <span class="attr">default:</span></span><br><span class="line">        <span class="attr">max_tokens:</span> <span class="number">10</span></span><br><span class="line">        <span class="attr">temperature:</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><p>template_format 的值可以為 <code>semantic-kernel</code>(參數前要加$)，或是 <code>handlebars</code>(參數前要不用加$)<br>將 <code>chat.yaml</code><br>程式要加入 <code>Microsoft.SemanticKernel.Yaml --prerelease</code> 套件，<br>使用 Handlebars Templae ，要加入 <code>Microsoft.SemanticKernel.PromptTemplates.Handlebars --prerelease</code> 套件， <code>using Microsoft.SemanticKernel.PromptTemplates.Handlebars;</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Microsoft.SemanticKernel;</span><br><span class="line"><span class="keyword">using</span> Microsoft.SemanticKernel.ChatCompletion;</span><br><span class="line"><span class="keyword">using</span> Microsoft.SemanticKernel.PromptTemplates.Handlebars;</span><br><span class="line"><span class="keyword">var</span> builder = Kernel.CreateBuilder();</span><br><span class="line"><span class="comment">// Add a text or chat completion service using either:</span></span><br><span class="line"><span class="comment">// builder.Services.AddAzureOpenAIChatCompletion()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> kernel = builder.Build();</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> StreamReader reader = <span class="keyword">new</span>(Assembly.GetExecutingAssembly().GetManifestResourceStream(<span class="string">&quot;專案namespace.plugins.chat.yaml&quot;</span>)!);</span><br><span class="line"><span class="keyword">var</span> chatTemplate = reader.ReadToEnd();</span><br><span class="line">chat = kernel.CreateFunctionFromPromptYaml(chatTemplate, promptTemplateFactory: <span class="keyword">new</span> HandlebarsPromptTemplateFactory());</span><br><span class="line"></span><br><span class="line">Console.Write(<span class="string">&quot;User &gt; &quot;</span>);</span><br><span class="line"><span class="keyword">var</span> request = Console.ReadLine();</span><br><span class="line"><span class="comment">// 使用時傳入所需要的參數</span></span><br><span class="line"><span class="keyword">var</span> chatResult = kernel.InvokeStreamingAsync&lt;StreamingChatMessageContent&gt;(</span><br><span class="line">    chat,</span><br><span class="line">    <span class="keyword">new</span>() &#123;</span><br><span class="line">        &#123; <span class="string">&quot;request&quot;</span>, request &#125;</span><br><span class="line">    &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>呼叫時，使用 <code>kernel.InvokeStreamingAsync</code> or <code>await kernel.InvokeAsync</code></p><h4 id="Prompt-template-語法"><a href="#Prompt-template-語法" class="headerlink" title="Prompt template 語法"></a>Prompt template 語法</h4><h5 id="變數"><a href="#變數" class="headerlink" title="變數"></a>變數</h5><p>Semantic Kernel Prompt Template 中的變數使用 <strong>2 個大括號</strong> 將 <code>$變數</code> 包起來。<br>Handlebars Prompt Template 是用 <strong>2 個大括號</strong> 將 <code>變數</code> 包起來(變數前沒有$)。</p><blockquote><p>如果想要做到多階層 or Loop 的 Template，要用 <code>Handlebars Template</code></p></blockquote><h5 id="Function-Call"><a href="#Function-Call" class="headerlink" title="Function Call"></a>Function Call</h5><p>呼叫 Function 的話，使用<code>&#123;&#123;namespace.functionName&#125;&#125;</code> 例如使用 <code>ConversationSummaryPlugin.SummarizeConversation</code>，<code>history</code> 為 SummarizeConversation 所需的參數</p><p>Semantic Kernel Prompt Template: <code>&#123;&#123;ConversationSummaryPlugin.SummarizeConversation $history&#125;&#125;</code><br>Handlebars Prompt Template: <code>&#123;&#123;ConversationSummaryPlugin.SummarizeConversation history&#125;&#125;</code></p><h5 id="特殊字處理"><a href="#特殊字處理" class="headerlink" title="特殊字處理"></a>特殊字處理</h5><p>如果 template 中有<strong>大括號</strong>就使用<strong>雙引號</strong>包起來，例如 <code>&#123;&#123; "&#123;&#123;"  &#125;&#125;</code><br>那如果 <strong>雙引號</strong>中要呈現<strong>雙引號</strong>呢? 就用<strong>反邪線</strong>，例如 <code>&#123;&#123; "Quotes' \" example"&#125;&#125;</code> 輸出為 <code>Quotes&#39; &quot; example</code><br>那如果要 <strong>反邪線</strong> 呢? 那就用<strong>2</strong>個<strong>反邪線</strong> ，例如 <code>&#123;&#123; 'two special chars \\\' here' &#125;&#125;</code> 輸出為 <code>two special chars \&#39; here</code></p><blockquote><p>註:反邪線 只對 <code>&#39;</code>, <code>&quot;</code> 及 <code>\</code> 有效果</p></blockquote><blockquote><p>註: C# 中的 $+3 個雙引號+字串內容+3 個雙引號，字串內容可以多行，例如，</p></blockquote><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> name=<span class="string">&quot;rainmaker&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> desc = <span class="string">$&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">    Hello!</span></span><br><span class="line"><span class="string">    This is &#123;name&#125;.</span></span><br><span class="line"><span class="string">    ...</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://learn.microsoft.com/en-us/semantic-kernel/prompts/templatizing-prompts?tabs=Csharp">Semantic Kernel Templatizing your prompts</a><br><a href="https://handlebarsjs.com/zh/guide/#%E4%BB%80%E4%B9%88%E6%98%AF-handlebars">什么是 Handlebars？</a></p><blockquote><p>一二三四五，青菜煮豆腐: 比喻農村生活、一年三百六十五天之中，除了千篇一律的豆腐青菜之中，極少吃到其他菜餚，單調清苦。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;在 Semantic Kernel(SK) 可以直接給 Prompt 來執行。&lt;br&gt;也可以透過 &lt;code&gt;Prompt template</summary>
      
    
    
    
    
    <category term="Semantic Kernel" scheme="https://rainmakerho.github.io/tags/Semantic-Kernel/"/>
    
    <category term="Prompt" scheme="https://rainmakerho.github.io/tags/Prompt/"/>
    
    <category term="template" scheme="https://rainmakerho.github.io/tags/template/"/>
    
    <category term="yaml" scheme="https://rainmakerho.github.io/tags/yaml/"/>
    
    <category term="HandlebarsPromptTemplateFactory" scheme="https://rainmakerho.github.io/tags/HandlebarsPromptTemplateFactory/"/>
    
    <category term="plugins" scheme="https://rainmakerho.github.io/tags/plugins/"/>
    
    <category term="Handlebars" scheme="https://rainmakerho.github.io/tags/Handlebars/"/>
    
    <category term="semantic-kernel" scheme="https://rainmakerho.github.io/tags/semantic-kernel/"/>
    
  </entry>
  
  <entry>
    <title>Semantic Kernel(SK) 改善 LLM 的 prompt</title>
    <link href="https://rainmakerho.github.io/2023/12/29/sk-improving-prompt-with-prompt-engineering/"/>
    <id>https://rainmakerho.github.io/2023/12/29/sk-improving-prompt-with-prompt-engineering/</id>
    <published>2023-12-29T02:54:22.000Z</published>
    <updated>2024-01-05T06:21:39.889Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>提示工程相當於提示設計，它涉及選擇正確的字、句子、符號及格式來指導模型產生高品質的相關文字。<br>例如以下會有不同的結果，<br>請告訴我人類的歷史。 VS 請用三句話告訴我人類的歷史。</p><p>在 <a href="https://learn.microsoft.com/en-us/semantic-kernel/prompts/your-first-prompt">Improving the prompt with prompt engineering</a> 有一些改善 prompt 的方式，以下就來看看有前些做法吧 ^_^</p><h3 id="改善-prompt-方式"><a href="#改善-prompt-方式" class="headerlink" title="改善 prompt 方式"></a>改善 prompt 方式</h3><p>在 AOAI 的 聊天遊樂場 來測試，prompt 是要取得使用者輸入的意圖<br><code>以下的意圖是什麼？ 我想向行銷團隊發送一封電子郵件，慶祝他們達到了目標</code><br>AI 會回 <code>這個意圖是要寫一封慶祝行銷團隊達到目標的電子郵件。</code><br>但在程式中，我們需要它回覆的是可預測性的幾種選項就好，<br>以方便透過程式判斷去執行程式，所以可以進行以下幾種改善方式，</p><blockquote><p>1.讓回覆內容更具體，例如提供項選讓它選擇</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">以下的意圖是什麼？</span><br><span class="line">我想向行銷團隊發送一封電子郵件，慶祝他們達到了目標</span><br><span class="line">你可以從以下選擇 SendEmail, SendMessage, CompleteTask, CreateDocument</span><br></pre></td></tr></table></figure><p>AI 回答如下，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">這個意圖是要進行 &quot;SendEmail&quot; 的動作，向行銷團隊發送一封電子郵件來慶祝他們達到目標。</span><br></pre></td></tr></table></figure><p>它有輸出我們的意圖選項，但包含許多其他文字，<br>如果要程式拿來使用，不是很方便。<br>所以可以設定它的輸出格式，以利程式來利用 AI 輸出結果。</p><blockquote><p>2.設定輸出 json 格式</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">以下的意圖是什麼？ 請以 jsno &#123;&quot;intent&quot;:intent&#125; 格式輸出</span><br><span class="line">我想向行銷團隊發送一封電子郵件，慶祝他們達到了目標</span><br><span class="line">從以下選擇意圖 SendEmail, SendMessage, CompleteTask, CreateDocument</span><br></pre></td></tr></table></figure><p>AI 回答如下，</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span> <span class="attr">&quot;intent&quot;</span><span class="punctuation">:</span> <span class="string">&quot;SendEmail&quot;</span> <span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><blockquote><p>3.few-shot</p></blockquote><p>也可以提供一些範例讓它學習(<code>few-shot</code>)，沒提供範例的就叫 <code>zero-shot</code><br>例如，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">以下的意圖是什麼？ 請以 jsno &#123;&quot;intent&quot;:intent&#125; 格式輸出</span><br><span class="line">從以下選擇意圖 SendEmail, SendMessage, CompleteTask, CreateDocument</span><br><span class="line"></span><br><span class="line">user: 您可以向行銷團隊發送非常快速的批准嗎？</span><br><span class="line">intent: &#123;&quot;intent&quot;:&quot;SendMessage&quot;&#125;</span><br><span class="line">user: 您能否將完整的更新發送給行銷團隊？</span><br><span class="line">intent: &#123;&quot;intent&quot;:&quot;SendEmail&quot;&#125;</span><br><span class="line">user: 我想向行銷團隊發送一封電子郵件，慶祝他們達到了目標</span><br><span class="line">intent:</span><br></pre></td></tr></table></figure><blockquote><p>4.告訴 AI 要做什麼才會避免做錯事</p></blockquote><p>有時我們將 temputure 設定成 0 ，可能會得到完全無關的回應，<br>比較建議是當什麼狀況時，做什麼事，例如，<br>如果你不知道意圖，就不要猜測；而是回覆 “Unknow”<br>例如，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">以下的意圖是什麼？ 請以 jsno &#123;&quot;intent&quot;:intent&#125; 格式輸出</span><br><span class="line">從以下選擇意圖 SendEmail, SendMessage, CompleteTask, CreateDocument</span><br><span class="line">如果你不知道意圖，不要猜測；回覆 &#123;&quot;intent&quot;:&quot;Unknow&quot;&#125;</span><br><span class="line"></span><br><span class="line">user: 您可以向行銷團隊發送非常快速的批准嗎？</span><br><span class="line">intent: &#123;&quot;intent&quot;:&quot;SendMessage&quot;&#125;</span><br><span class="line">user: 您能否將完整的更新發送給行銷團隊？</span><br><span class="line">intent: &#123;&quot;intent&quot;:&quot;SendEmail&quot;&#125;</span><br><span class="line">user: 今晚打老虎</span><br><span class="line">intent:</span><br></pre></td></tr></table></figure><blockquote><p>5.提供背景訊息(上下文)給 AI</p></blockquote><p>有時提供先前跟 AI 的對話，可以讓 AI 更了解使用者的意思，<br>例如，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">以下的意圖是什麼？ 請以 jsno &#123;&quot;intent&quot;:intent&#125; 格式輸出</span><br><span class="line">從以下選擇意圖 SendEmail, SendMessage, CompleteTask, CreateDocument</span><br><span class="line">如果你不知道意圖，不要猜測；回覆 &#123;&quot;intent&quot;:&quot;Unknow&quot;&#125;</span><br><span class="line"></span><br><span class="line">user: 您可以向行銷團隊發送非常快速的批准嗎？</span><br><span class="line">intent: &#123;&quot;intent&quot;:&quot;SendMessage&quot;&#125;</span><br><span class="line">user: 您能否將完整的更新發送給行銷團隊？</span><br><span class="line">intent: &#123;&quot;intent&quot;:&quot;SendEmail&quot;&#125;</span><br><span class="line"></span><br><span class="line">+++</span><br><span class="line">user: 我討厭發送電子郵件(SendEmail)，因為沒有人閱讀它們。</span><br><span class="line">intent: &#123;&quot;intent&quot;:&quot;SendMessage&quot;&#125;</span><br><span class="line">user: 我想向行銷團隊發送一封電子郵件，慶祝他們達到了目標</span><br><span class="line">intent:</span><br></pre></td></tr></table></figure><blockquote><p>6.使用訊息角色</p></blockquote><p>當對話逾來逾多，使用訊息角色可讓 AI 區分出 system instructions, user input 及 AI response，<br>例如，</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;role&quot;</span><span class="punctuation">:</span> <span class="string">&quot;system&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;content&quot;</span><span class="punctuation">:</span> <span class="string">&quot;以下的意圖是什麼？ 請以 jsno &#123;\&quot;intent\&quot;:intent&#125; 格式輸出\\n從以下選擇意圖 SendEmail, SendMessage, CompleteTask, CreateDocument\\n如果你不知道意圖，不要猜測；回覆 &#123;\&quot;intent\&quot;:\&quot;Unknow\&quot;&#125;&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#123;</span> <span class="attr">&quot;role&quot;</span><span class="punctuation">:</span> <span class="string">&quot;user&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;content&quot;</span><span class="punctuation">:</span> <span class="string">&quot;我討厭發送電子郵件(SendEmail)，因為沒有人閱讀它們。&quot;</span> <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span> <span class="attr">&quot;role&quot;</span><span class="punctuation">:</span> <span class="string">&quot;assistant&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;content&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;\&quot;intent\&quot;:\&quot;SendMessage\&quot;&#125;&quot;</span> <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span> <span class="attr">&quot;role&quot;</span><span class="punctuation">:</span> <span class="string">&quot;user&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;content&quot;</span><span class="punctuation">:</span> <span class="string">&quot;我想向行銷團隊發送一封電子郵件，慶祝他們達到了目標&quot;</span> <span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><blockquote><p>7.加上改變規則</p></blockquote><p>在上述如果因為使用者因素，所以要判斷是 Email 要改成 Message 時，<br>可以明確寫到規則之中，會比讓 AI 判斷更直接，例如，</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">以下的意圖是什麼？ 請以 jsno <span class="punctuation">&#123;</span><span class="attr">&quot;intent&quot;</span><span class="punctuation">:</span><span class="string">&quot;&#123;&#123;intent&#125;&#125;&quot;</span><span class="punctuation">&#125;</span> 格式輸出</span><br><span class="line">從以下選擇意圖 SendEmail<span class="punctuation">,</span> SendMessage<span class="punctuation">,</span> CompleteTask<span class="punctuation">,</span> CreateDocument</span><br><span class="line">如果你不知道意圖，不要猜測；回覆 <span class="punctuation">&#123;</span><span class="attr">&quot;intent&quot;</span><span class="punctuation">:</span><span class="string">&quot;Unknow&quot;</span><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">user<span class="punctuation">:</span> 您可以向行銷團隊發送非常快速的批准嗎？</span><br><span class="line">intent<span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="attr">&quot;intent&quot;</span><span class="punctuation">:</span><span class="string">&quot;SendMessage&quot;</span><span class="punctuation">&#125;</span></span><br><span class="line">user<span class="punctuation">:</span> 您能否將完整的更新發送給行銷團隊？</span><br><span class="line">intent<span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="attr">&quot;intent&quot;</span><span class="punctuation">:</span><span class="string">&quot;SendEmail&quot;</span><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">user<span class="punctuation">:</span> 我想向行銷團隊發送一封電子郵件，慶祝他們達到了目標。(意圖是 SendEmail 請改以 SendMessage 輸出)</span><br><span class="line">intent<span class="punctuation">:</span></span><br></pre></td></tr></table></figure><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://learn.microsoft.com/en-us/semantic-kernel/prompts/your-first-prompt">Improving the prompt with prompt engineering</a></p><blockquote><p>一二三四五六七，忠孝仁愛禮義廉(古謠): 說人不知恥辱之義(忘八無恥)</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;提示工程相當於提示設計，它涉及選擇正確的字、句子、符號及格式來指導模型產生高品質的相關文字。&lt;br&gt;例如以下會有不同的結果，&lt;br&gt;請告訴我</summary>
      
    
    
    
    
    <category term="Semantic Kernel" scheme="https://rainmakerho.github.io/tags/Semantic-Kernel/"/>
    
    <category term="prompt" scheme="https://rainmakerho.github.io/tags/prompt/"/>
    
    <category term="engineering" scheme="https://rainmakerho.github.io/tags/engineering/"/>
    
    <category term="improving" scheme="https://rainmakerho.github.io/tags/improving/"/>
    
    <category term="提示工程" scheme="https://rainmakerho.github.io/tags/%E6%8F%90%E7%A4%BA%E5%B7%A5%E7%A8%8B/"/>
    
    <category term="semantic-kernel" scheme="https://rainmakerho.github.io/tags/semantic-kernel/"/>
    
  </entry>
  
  <entry>
    <title>dotnet 專案如何設定將某目錄建置時 Copy 到輸出目錄呢?</title>
    <link href="https://rainmakerho.github.io/2023/12/28/vs-copy-folder-to-output-directory/"/>
    <id>https://rainmakerho.github.io/2023/12/28/vs-copy-folder-to-output-directory/</id>
    <published>2023-12-28T09:25:46.000Z</published>
    <updated>2023-12-28T09:38:59.765Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>dotnet 專案如何設定將某目錄建置時 Copy 到輸出目錄呢?</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>開啟專案檔(.csproj)，<br>在 <code>ItemGroup</code> 區段中加入 <code>None</code> 項目，設定要 Copy 的 目錄，如下，</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ItemGroup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">None</span> <span class="attr">Update</span>=<span class="string">&quot;prompts\**&quot;</span> <span class="attr">CopyToOutputDirectory</span>=<span class="string">&quot;PreserveNewest&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ItemGroup</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>CopyToOutputDirectory</code> 的值可以為 <code>Never</code>, <code>Always</code> 或是 <code>PreserveNewest</code></p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://github.com/dotnet/msbuild/issues/2949#issuecomment-362824225">How to copy a folder to output directory and keep its root folder?</a><br><a href="https://learn.microsoft.com/en-us/visualstudio/msbuild/common-msbuild-project-items?view=vs-2022">Common MSBuild project items</a></p><blockquote><p>冬不可以廢葛，夏不可以廢裘 : 不能因為眼前一時用不著，便不作預防，為人應作長遠計劃。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;dotnet 專案如何設定將某目錄建置時 Copy 到輸出目錄呢?&lt;/p&gt;
&lt;h3 id=&quot;解法&quot;&gt;&lt;a href=&quot;#解法&quot; class=</summary>
      
    
    
    
    
    <category term="Visual Studio" scheme="https://rainmakerho.github.io/tags/Visual-Studio/"/>
    
    <category term="dotnet" scheme="https://rainmakerho.github.io/tags/dotnet/"/>
    
    <category term="copy" scheme="https://rainmakerho.github.io/tags/copy/"/>
    
    <category term="folder" scheme="https://rainmakerho.github.io/tags/folder/"/>
    
    <category term="output" scheme="https://rainmakerho.github.io/tags/output/"/>
    
  </entry>
  
  <entry>
    <title>CS8652 功能 &#39;collection literals&#39; 目前處理預覽階段，且*不受支援*。若要使用預覽功能，請使用「預覽語言」版本。</title>
    <link href="https://rainmakerho.github.io/2023/12/28/vs-CS8652/"/>
    <id>https://rainmakerho.github.io/2023/12/28/vs-CS8652/</id>
    <published>2023-12-28T03:47:39.000Z</published>
    <updated>2023-12-28T09:29:32.375Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>原本使用 Visual Studio Code 建置並沒有錯誤，<br>改用 Visual Studio 2022 開始後，<br>在錯誤清單中出現了 <strong>CS8652</strong> <code>CS8652 功能 &#39;collection literals&#39; 目前處理預覽階段，且*不受支援*。若要使用預覽功能，請使用「預覽語言」版本。</code> 錯誤要如何解決呢?</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>那就是要設定<strong>使用「預覽語言」版本</strong>，<br>開啟專案檔(.csproj)，<br>在<code>PropertyGroup</code>中加入<code>LangVersion</code>的設定(<code>&lt;LangVersion&gt;preview&lt;/LangVersion&gt;</code>)，如下，</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Project</span> <span class="attr">Sdk</span>=<span class="string">&quot;Microsoft.NET.Sdk&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">PropertyGroup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">OutputType</span>&gt;</span>Exe<span class="tag">&lt;/<span class="name">OutputType</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TargetFramework</span>&gt;</span>net8.0<span class="tag">&lt;/<span class="name">TargetFramework</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ImplicitUsings</span>&gt;</span>enable<span class="tag">&lt;/<span class="name">ImplicitUsings</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Nullable</span>&gt;</span>enable<span class="tag">&lt;/<span class="name">Nullable</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LangVersion</span>&gt;</span>preview<span class="tag">&lt;/<span class="name">LangVersion</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">PropertyGroup</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">ItemGroup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">PackageReference</span> <span class="attr">Include</span>=<span class="string">&quot;Microsoft.Extensions.Logging&quot;</span> <span class="attr">Version</span>=<span class="string">&quot;8.0.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">PackageReference</span> <span class="attr">Include</span>=<span class="string">&quot;Microsoft.Extensions.Logging.Console&quot;</span> <span class="attr">Version</span>=<span class="string">&quot;8.0.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">PackageReference</span> <span class="attr">Include</span>=<span class="string">&quot;Microsoft.Extensions.Logging.Debug&quot;</span> <span class="attr">Version</span>=<span class="string">&quot;8.0.0&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ItemGroup</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">Project</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://learn.microsoft.com/zh-tw/dotnet/csharp/language-reference/configure-language-version">C# 語言版本控制</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;原本使用 Visual Studio Code 建置並沒有錯誤，&lt;br&gt;改用 Visual Studio 2022 開始後，&lt;br&gt;在錯誤清</summary>
      
    
    
    
    
    <category term="Visual Studio" scheme="https://rainmakerho.github.io/tags/Visual-Studio/"/>
    
    <category term="CS8652" scheme="https://rainmakerho.github.io/tags/CS8652/"/>
    
  </entry>
  
  <entry>
    <title>Semantic Kernel(SK) - Kernel Memory (KM) 使用 Postgres 當 Vector DB</title>
    <link href="https://rainmakerho.github.io/2023/12/26/sk-kernel-memory-postgresql/"/>
    <id>https://rainmakerho.github.io/2023/12/26/sk-kernel-memory-postgresql/</id>
    <published>2023-12-26T01:05:19.000Z</published>
    <updated>2024-01-05T06:22:00.610Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>現在開始 Kernel Memory 可以使用 <a href="https://github.com/pgvector/pgvector">Postgres+pgvector</a> 來當作 vector storage 了哦~</p><h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><h4 id="安裝-PostgreSQL-pgvector"><a href="#安裝-PostgreSQL-pgvector" class="headerlink" title="安裝 PostgreSQL + pgvector"></a>安裝 PostgreSQL + pgvector</h4><p>到 <a href="https://www.postgresql.org/">PostgreSQL</a> 下載安裝後，<br>再到 <a href="https://github.com/pgvector/pgvector">pgvector</a> 依說明安裝。<br>目前 <a href="https://github.com/pgvector/pgvector">pgvector</a> 在 Windows 平台上還是實驗性的，在透過 <code>nmake</code> 建置時，<br>如果在<code>nmake /F Makefile.win install</code>無法 Copy 檔案，請<strong>以系統管理員身份執行</strong>來開啟命令視窗，再執行一次。<br>沒問題後，開啟 PostgreSQL ，執行 <code>CREATE EXTENSION vector;</code>來啟用 vector;</p><h4 id="設定-vector-storage-為-PostgreSQL"><a href="#設定-vector-storage-為-PostgreSQL" class="headerlink" title="設定 vector storage 為 PostgreSQL"></a>設定 vector storage 為 PostgreSQL</h4><p>要使用 PostgreSQL ，要加入 <code>Microsoft.KernelMemory.Postgres</code> 套件。<br>以下 VSCode 建立 <code>ipynb</code> 檔，並用 OpenAI 及 PostgreSQL 來測試，<br>建立 <code>.env</code> 檔案，並放入相關的設定值，如下，</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">OPENAI_APIKEY</span>=你的OpenAI API Key</span><br><span class="line"><span class="attr">POSTGRESQL_CONNSTRING</span>=<span class="string">&quot;Host=localhost;Port=5432;Username=你的UID;Password=你的pwd&quot;</span></span><br></pre></td></tr></table></figure><p>1.加入套件</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#r &quot;nuget:Microsoft.KernelMemory.Core, *-*&quot;</span></span><br><span class="line"><span class="meta">#r &quot;nuget:Microsoft.KernelMemory.Postgres, *-*&quot;</span></span><br><span class="line"><span class="keyword">using</span> Microsoft.KernelMemory;</span><br><span class="line"><span class="keyword">using</span> Microsoft.KernelMemory.Handlers;</span><br><span class="line"><span class="meta">#r &quot;nuget:dotenv.net&quot;</span></span><br><span class="line">dotenv.net.DotEnv.Load();</span><br><span class="line"><span class="keyword">var</span> env = dotenv.net.DotEnv.Read();</span><br></pre></td></tr></table></figure><p>2.設定 PostgreSQL</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Microsoft.KernelMemory.Postgres;</span><br><span class="line"><span class="keyword">using</span> Microsoft.Extensions.Configuration;</span><br><span class="line"><span class="keyword">var</span> openaiApikey = env[<span class="string">&quot;OPENAI_APIKEY&quot;</span>];</span><br><span class="line"><span class="keyword">var</span> postgreConnString = env[<span class="string">&quot;POSTGRESQL_CONNSTRING&quot;</span>];</span><br><span class="line"><span class="keyword">var</span> postgresConfig = <span class="keyword">new</span> PostgresConfig&#123;</span><br><span class="line">    ConnectionString = postgreConnString</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> memory = <span class="keyword">new</span> KernelMemoryBuilder()</span><br><span class="line">    .WithPostgres(postgresConfig)</span><br><span class="line">    .WithOpenAIDefaults(openaiApikey)</span><br><span class="line">    .Build&lt;MemoryServerless&gt;();</span><br></pre></td></tr></table></figure><p>3.extract,partition,gen_embeddings,save_records<br>接下來將上傳檔案，讀取內容，切 Chunks 並透過 OpenAI 建立內容 embedding ，存到 PostgreSQL 並設定 index 為 <strong>tooth</strong>。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> id = <span class="string">&quot;tooth&quot;</span>;</span><br><span class="line"><span class="keyword">await</span> memory.ImportDocumentAsync(<span class="keyword">new</span> Document(id)</span><br><span class="line">    .AddFiles(<span class="keyword">new</span> [] &#123;<span class="string">@&quot;C:\OpenAI\docs\tooth\qa.docx&quot;</span></span><br><span class="line">     ,<span class="string">@&quot;C:\OpenAI\docs\tooth\stdtable.docx&quot;</span></span><br><span class="line">     , <span class="string">@&quot;C:\OpenAI\docs\tooth\terms.docx&quot;</span>&#125;)</span><br><span class="line">    .AddTag(<span class="string">&quot;type&quot;</span>,<span class="string">&quot;tooth&quot;</span>)</span><br><span class="line">    , index:id);</span><br></pre></td></tr></table></figure><p>所以在 PostgreSQL 上可以看到這次建立的 <strong>tooth</strong> index，會放在 <code>km-tooth</code> Table 之中。</p><img src="/2023/12/26/sk-kernel-memory-postgresql/01.png" class="" title="PostgreSQL"><p>4.將使用者問題轉成 Embeddings 到 PostgreSQL 進行搜尋，並將相關內容透過 OpenAI 進行 Summary</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> answer = <span class="keyword">await</span> memory.AskAsync(<span class="string">&quot;請總結關於洗牙的相關規定&quot;</span>, index:id);</span><br><span class="line">Console.WriteLine(<span class="string">$&quot;\nAnswer: <span class="subst">&#123;answer.Result&#125;</span>&quot;</span>);</span><br><span class="line">Console.WriteLine(<span class="string">$&quot; ====== 參考資訊 ======&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> x <span class="keyword">in</span> answer.RelevantSources)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(x.SourceUrl != <span class="literal">null</span></span><br><span class="line">        ? <span class="string">$&quot;  - <span class="subst">&#123;x.SourceUrl&#125;</span> [<span class="subst">&#123;x.Partitions.First().LastUpdate:D&#125;</span>]&quot;</span></span><br><span class="line">        : <span class="string">$&quot;  - <span class="subst">&#123;x.SourceName&#125;</span>  - <span class="subst">&#123;x.Link&#125;</span> [<span class="subst">&#123;x.Partitions.First().LastUpdate:D&#125;</span>]&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">answer</span><br></pre></td></tr></table></figure><img src="/2023/12/26/sk-kernel-memory-postgresql/02.png" class="" title="Answer"><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://github.com/microsoft/kernel-memory-postgres">kernel-memory-postgres</a><br><a href="https://github.com/pgvector/pgvector">pgvector</a><br><a href="https://github.com/microsoft/kernel-memory">kernel-memory</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;現在開始 Kernel Memory 可以使用 &lt;a href=&quot;https://github.com/pgvector/pgvector&quot;</summary>
      
    
    
    
    
    <category term="Semantic Kernel" scheme="https://rainmakerho.github.io/tags/Semantic-Kernel/"/>
    
    <category term="Kernel Memory" scheme="https://rainmakerho.github.io/tags/Kernel-Memory/"/>
    
    <category term="Postgres" scheme="https://rainmakerho.github.io/tags/Postgres/"/>
    
    <category term="pgvector" scheme="https://rainmakerho.github.io/tags/pgvector/"/>
    
    <category term="semantic-kernel" scheme="https://rainmakerho.github.io/tags/semantic-kernel/"/>
    
  </entry>
  
  <entry>
    <title>Semantic Kernel(SK) - Kernel Memory (KM) 設定內容切段的 Tokens 數</title>
    <link href="https://rainmakerho.github.io/2023/12/25/sk-kernel-memory-custom-partitioning/"/>
    <id>https://rainmakerho.github.io/2023/12/25/sk-kernel-memory-custom-partitioning/</id>
    <published>2023-12-25T05:03:18.000Z</published>
    <updated>2024-01-05T06:21:53.638Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在前幾篇文章中，從直接使用 <a href="https://rainmakerho.github.io/2023/12/22/sk-kernel-memory/">MemoryServerless</a> 到將 <a href="https://rainmakerho.github.io/2023/12/22/sk-kernel-memory-service-memorywebclient/">Kernel Memory 啟動為 Service</a> ，並以 <code>MemoryWebClient</code> 去操作它。<br>接下來我們將 Embedding DB 改存到 Qdrant 並透過 <code>TextPartitioningOptions</code> 來設定切 Chunks 的 Token 數</p><h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><h4 id="使用-Qdrant"><a href="#使用-Qdrant" class="headerlink" title="使用 Qdrant"></a>使用 Qdrant</h4><p>您可以透過 Docker 來啟動 <code>Qdrant</code> 或是到 <a href="https://cloud.qdrant.io/">cloud.qdrant</a> 建立免費試用的 DB。<br>如果是 cloud Qdrant 會多一個 Apikey 才可以存取它。</p><h4 id="設定-Qdrant-及-TextPartitioningOptions"><a href="#設定-Qdrant-及-TextPartitioningOptions" class="headerlink" title="設定 Qdrant 及 TextPartitioningOptions"></a>設定 Qdrant 及 TextPartitioningOptions</h4><p>以下 VSCode 建立 <code>ipynb</code> 檔，並用 OpenAI 及 <a href="https://cloud.qdrant.io/">cloud.qdrant</a> 來測試，<br>建立 <code>.env</code> 檔案，並放入相關的設定值，如下，</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">OPENAI_APIKEY</span>=你的OpenAI API Key</span><br><span class="line"><span class="attr">QDRANT_ENDPOINT</span>=qdrant endpoint</span><br><span class="line"><span class="attr">QDRANT_APIKEY</span>=qdrant apikey</span><br></pre></td></tr></table></figure><p>1.加入套件</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#r &quot;nuget:Microsoft.KernelMemory.Core, *-*&quot;</span></span><br><span class="line"><span class="keyword">using</span> Microsoft.KernelMemory;</span><br><span class="line"><span class="keyword">using</span> Microsoft.KernelMemory.Handlers;</span><br><span class="line"><span class="meta">#r &quot;nuget:dotenv.net&quot;</span></span><br><span class="line">dotenv.net.DotEnv.Load();</span><br><span class="line"><span class="keyword">var</span> env = dotenv.net.DotEnv.Read();</span><br></pre></td></tr></table></figure><p>2.設定 Qdrant 及 TextPartitioningOptions</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> openaiApikey = env[<span class="string">&quot;OPENAI_APIKEY&quot;</span>];</span><br><span class="line"><span class="keyword">var</span> qdrantEndpoint = env[<span class="string">&quot;QDRANT_ENDPOINT&quot;</span>];</span><br><span class="line"><span class="keyword">var</span> qdrantApikey = env[<span class="string">&quot;QDRANT_APIKEY&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> memoryBuilder = <span class="keyword">new</span> KernelMemoryBuilder()</span><br><span class="line">    .WithQdrant(qdrantEndpoint, qdrantApikey)</span><br><span class="line">    .WithOpenAIDefaults(openaiApikey)</span><br><span class="line">    .With(<span class="keyword">new</span> TextPartitioningOptions&#123;</span><br><span class="line">        MaxTokensPerParagraph = <span class="number">800</span>,</span><br><span class="line">        MaxTokensPerLine = <span class="number">150</span>,</span><br><span class="line">        OverlappingTokens = <span class="number">50</span></span><br><span class="line">    &#125;);</span><br><span class="line"><span class="keyword">var</span> memory = memoryBuilder.Build&lt;MemoryServerless&gt;();</span><br><span class="line"><span class="built_in">string</span>.Join(<span class="string">&quot;,&quot;</span> , Constants.DefaultPipeline)</span><br></pre></td></tr></table></figure><p><a href="https://github.com/microsoft/kernel-memory/blob/main/service/Core/Handlers/TextPartitioningOptions.cs">TextPartitioningOptions</a>的各屬性初始值如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> <span class="built_in">int</span> _maxTokensPerParagraph = <span class="number">1000</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> <span class="built_in">int</span> _maxTokensPerLine = <span class="number">300</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> <span class="built_in">int</span> _overlappingTokens = <span class="number">100</span>;</span><br></pre></td></tr></table></figure><p>以上改成每段最大的 Token 數為 800，每行最多的 Token 數為 150，Overlapping 的 Token 為 50。<br><code>Constants.DefaultPipeline</code> 就是預設會進行處理的 Tasks ，分別是 extract,partition,gen_embeddings 及 save_records</p><p>3.extract,partition,gen_embeddings,save_records<br>接下來將上傳檔案，讀取內容，依<code>TextPartitioningOptions</code>設定切Chunk的大小，<br>透過 OpenAI 建立內容 embedding ，存到 Qdrant 並設定 index 為 <strong>tooth</strong>。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> id = <span class="string">&quot;tooth&quot;</span>;</span><br><span class="line"><span class="keyword">await</span> memory.ImportDocumentAsync(<span class="keyword">new</span> Document(id)</span><br><span class="line">    .AddFiles(<span class="keyword">new</span> [] &#123;<span class="string">@&quot;C:\OpenAI\docs\tooth\qa.docx&quot;</span></span><br><span class="line">     ,<span class="string">@&quot;C:\OpenAI\docs\tooth\stdtable.docx&quot;</span></span><br><span class="line">     , <span class="string">@&quot;C:\OpenAI\docs\tooth\terms.docx&quot;</span>&#125;)</span><br><span class="line">    .AddTag(<span class="string">&quot;type&quot;</span>,<span class="string">&quot;tooth&quot;</span>)</span><br><span class="line">    , index:id);</span><br></pre></td></tr></table></figure><p>所以在 Qdrant 上可以看到這次建立的 <strong>tooth</strong> index。</p><img src="/2023/12/25/sk-kernel-memory-custom-partitioning/01.png" class="" title="Qdrant"><p>從 <strong>tooth</strong> index 可以看到設定的 documentId, Tag 及檔案名稱，</p><img src="/2023/12/25/sk-kernel-memory-custom-partitioning/02.png" class="" title="Qdrant index"><p>4.將使用者問題轉成 Embeddings 到 Qdrant <strong>tooth</strong> index 進行搜尋，並將相關內容透過 OpenAI 進行 Summary</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> answer = <span class="keyword">await</span> memory.AskAsync(<span class="string">&quot;請問洗牙有什麼規定?&quot;</span>, index:id);</span><br><span class="line">Console.WriteLine(<span class="string">$&quot;\nAnswer: <span class="subst">&#123;answer.Result&#125;</span>&quot;</span>);</span><br><span class="line">Console.WriteLine(<span class="string">$&quot; ====== 參考資訊 ======&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> x <span class="keyword">in</span> answer.RelevantSources)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(x.SourceUrl != <span class="literal">null</span></span><br><span class="line">        ? <span class="string">$&quot;  - <span class="subst">&#123;x.SourceUrl&#125;</span> [<span class="subst">&#123;x.Partitions.First().LastUpdate:D&#125;</span>]&quot;</span></span><br><span class="line">        : <span class="string">$&quot;  - <span class="subst">&#123;x.SourceName&#125;</span>  - <span class="subst">&#123;x.Link&#125;</span> [<span class="subst">&#123;x.Partitions.First().LastUpdate:D&#125;</span>]&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2023/12/25/sk-kernel-memory-custom-partitioning/03.png" class="" title="Answer"><p>5.刪除 index ，<br>最後如果不想再用這個 index ，可以刪除它</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">await</span> memory.DeleteIndexAsync(id);</span><br></pre></td></tr></table></figure><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://rainmakerho.github.io/2023/12/22/sk-kernel-memory/">SK-Kernel Memory (KM) 初探</a><br><a href="https://rainmakerho.github.io/2023/12/22/sk-kernel-memory-service-memorywebclient/">SK-Kernel Memory (KM) Service 與 MemoryWebClient</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;在前幾篇文章中，從直接使用 &lt;a href=&quot;https://rainmakerho.github.io/2023/12/22/sk-ker</summary>
      
    
    
    
    
    <category term="Semantic Kernel" scheme="https://rainmakerho.github.io/tags/Semantic-Kernel/"/>
    
    <category term="Kernel Memory" scheme="https://rainmakerho.github.io/tags/Kernel-Memory/"/>
    
    <category term="TextPartitioningOptions" scheme="https://rainmakerho.github.io/tags/TextPartitioningOptions/"/>
    
    <category term="Qdrant" scheme="https://rainmakerho.github.io/tags/Qdrant/"/>
    
    <category term="MaxTokensPerParagraph" scheme="https://rainmakerho.github.io/tags/MaxTokensPerParagraph/"/>
    
    <category term="MaxTokensPerLine" scheme="https://rainmakerho.github.io/tags/MaxTokensPerLine/"/>
    
    <category term="OverlappingTokens" scheme="https://rainmakerho.github.io/tags/OverlappingTokens/"/>
    
    <category term="Chunks" scheme="https://rainmakerho.github.io/tags/Chunks/"/>
    
    <category term="semantic-kernel" scheme="https://rainmakerho.github.io/tags/semantic-kernel/"/>
    
  </entry>
  
  <entry>
    <title>Semantic Kernel(SK) - Kernel Memory (KM) Service 與 MemoryWebClient</title>
    <link href="https://rainmakerho.github.io/2023/12/22/sk-kernel-memory-service-memorywebclient/"/>
    <id>https://rainmakerho.github.io/2023/12/22/sk-kernel-memory-service-memorywebclient/</id>
    <published>2023-12-22T09:19:26.000Z</published>
    <updated>2024-01-05T06:22:05.850Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在<a href="https://rainmakerho.github.io/2023/12/22/sk-kernel-memory/">SK-Kernel Memory (KM) 初探</a>透過 <code>KernelMemoryBuilder</code> 來建立 <code>MemoryServerless</code>，<br>讓我們將一些檔案進行讀取、切段、轉成 Embeddings，最後存到資料庫。<br>並可以讓我們詢問問題後，再取回答案。</p><p><code>Kernel Memory</code> 可以讓我們啟動為一個 Web API 的服務，<br>這樣就有一個服務來專門來匯入資料，並提供問問題及回覆問題，<br>使用別的開發語言也可以使用它，例如 JavaScript, Java …<br>或是檔案太大的話，先上傳上去，不會 Block 使用的動作 …<br>以下就來看將 <code>Kernel Memory</code> 設定成 Service ，<br>並透過 <code>MemoryWebClient</code> 來操作它。</p><h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><h4 id="Kernel-Memory-as-a-Service"><a href="#Kernel-Memory-as-a-Service" class="headerlink" title="Kernel Memory as a Service"></a>Kernel Memory as a Service</h4><h5 id="設定-Kernel-Memory-Service"><a href="#設定-Kernel-Memory-Service" class="headerlink" title="設定 Kernel Memory Service"></a>設定 Kernel Memory Service</h5><p>依 <a href="https://github.com/microsoft/kernel-memory/blob/main/service/Service/README.md">Kernel Memory as a Service</a> 的說明，先從 Github <a href="https://github.com/microsoft/kernel-memory">kernel-memory</a> 將程式下載下來。<br>開啟 Command 視窗，切到 <code>/service/Service</code> 目錄，執行 <code>dotnet build</code> 沒錯誤後，<br>再執行 <code>dotnet run setup</code> 來進行各項設定，<br>除了 <code>Open AI</code> or <code>AOAI</code> 外，先設定為 Memory 方式執行(<code>Simple</code>系列)，及使用 Azure OpenAI，<br>因為 Kernel Memory 會卡 Apikey，所以會讓我們設定 2 組 Apikey，可以輸入 GUID。<br>預設是 Development 環境，所以會建立 <code>appsettings.Development.json</code>，<br>內容如下，</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;KernelMemory&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;Service&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;RunWebService&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;RunHandlers&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;OpenApiEnabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;ContentStorageType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;SimpleFileStorage&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;TextGeneratorType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;AzureOpenAIText&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;ServiceAuthorization&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;Enabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;AuthenticationType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;APIKey&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;HttpHeaderName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Authorization&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;AccessKey1&quot;</span><span class="punctuation">:</span> <span class="string">&quot;9de9b81e-8ecb-45dd-b8ac-f18d3baa0a4f&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;AccessKey2&quot;</span><span class="punctuation">:</span> <span class="string">&quot;62ad1718-decb-46d8-ab4d-40fadf2f6833&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;DataIngestion&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;OrchestrationType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Distributed&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;DistributedOrchestration&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;QueueType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;SimpleQueues&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;EmbeddingGenerationEnabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;EmbeddingGeneratorTypes&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;AzureOpenAIEmbedding&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;MemoryDbTypes&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;SimpleVectorDb&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;ImageOcrType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;None&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;DefaultSteps&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;Retrieval&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;MemoryDbType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;SimpleVectorDb&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;EmbeddingGeneratorType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;AzureOpenAIEmbedding&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;SearchClient&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;MaxAskPromptSize&quot;</span><span class="punctuation">:</span> <span class="number">-1</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;MaxMatchesCount&quot;</span><span class="punctuation">:</span> <span class="number">100</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;AnswerTokens&quot;</span><span class="punctuation">:</span> <span class="number">300</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;EmptyAnswer&quot;</span><span class="punctuation">:</span> <span class="string">&quot;INFO NOT FOUND&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;Services&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;SimpleQueues&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;Directory&quot;</span><span class="punctuation">:</span> <span class="string">&quot;_queues&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;SimpleFileStorage&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;Directory&quot;</span><span class="punctuation">:</span> <span class="string">&quot;_files&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;AzureOpenAIEmbedding&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;APIType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;EmbeddingGeneration&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;Auth&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ApiKey&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;Endpoint&quot;</span><span class="punctuation">:</span> <span class="string">&quot;AOAI的 Endpoint&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;Deployment&quot;</span><span class="punctuation">:</span> <span class="string">&quot;AOAI Embedding Model 部署名稱&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;APIKey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;你的AOAI API Key&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;SimpleVectorDb&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;Directory&quot;</span><span class="punctuation">:</span> <span class="string">&quot;_vectors&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;AzureOpenAIText&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;APIType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ChatCompletion&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;Auth&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ApiKey&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;Endpoint&quot;</span><span class="punctuation">:</span> <span class="string">&quot;AOAI的 Endpoint&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;Deployment&quot;</span><span class="punctuation">:</span> <span class="string">&quot;AOAI Chat Model 部署名稱&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;APIKey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;你的AOAI API Key&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;MaxRetries&quot;</span><span class="punctuation">:</span> <span class="number">10</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;Logging&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;LogLevel&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;Default&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Trace&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;AllowedHosts&quot;</span><span class="punctuation">:</span> <span class="string">&quot;*&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h5 id="執行-Kernel-Memory-Service"><a href="#執行-Kernel-Memory-Service" class="headerlink" title="執行 Kernel Memory Service"></a>執行 Kernel Memory Service</h5><p>設定好了之後，就可以執行 <code>dotnet run</code> 跑起來，</p><img src="/2023/12/22/sk-kernel-memory-service-memorywebclient/01.png" class="" title="Service"><p>正常啟動後，可以連到 <code>http://127.0.0.1:9001/swagger/index.html</code> 查看有多少 API 可以使用。</p><img src="/2023/12/22/sk-kernel-memory-service-memorywebclient/02.png" class="" title="Swagger"><h4 id="透過-MemoryWebClient-操作"><a href="#透過-MemoryWebClient-操作" class="headerlink" title="透過 MemoryWebClient 操作"></a>透過 MemoryWebClient 操作</h4><p>一樣在 VSCode 建立 <code>ipynb</code> 檔來測試，</p><p>1.上傳檔案建立個人知識庫<br>先將檔案透過 MemoryWebClient 呼叫 API 上傳上去，<br>這裡可以多設定 <code>index</code>名稱(<code>index:&quot;tooth&quot;</code>)，並檢查是否上傳過。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#r &quot;nuget:Microsoft.KernelMemory.WebClient, *-*&quot;</span></span><br><span class="line"><span class="keyword">using</span> Microsoft.KernelMemory;</span><br><span class="line"><span class="keyword">var</span> serverApiKey = <span class="string">&quot;9de9b81e-8ecb-45dd-b8ac-f18d3baa0a4f&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> memory = <span class="keyword">new</span> MemoryWebClient(<span class="string">&quot;http://127.0.0.1:9001/&quot;</span>, serverApiKey);</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">await</span> memory.IsDocumentReadyAsync(documentId: <span class="string">&quot;tooth&quot;</span>))&#123;</span><br><span class="line">    <span class="keyword">await</span> memory.ImportDocumentAsync(<span class="keyword">new</span> Document(<span class="string">&quot;tooth&quot;</span>)</span><br><span class="line">        .AddFiles(<span class="keyword">new</span> [] &#123;<span class="string">@&quot;C:\OpenAI\docs\tooth\qa.docx&quot;</span></span><br><span class="line">        ,<span class="string">@&quot;C:\OpenAI\docs\tooth\stdtable.docx&quot;</span></span><br><span class="line">        , <span class="string">@&quot;C:\OpenAI\docs\tooth\terms.docx&quot;</span>&#125;)</span><br><span class="line">        .AddTag(<span class="string">&quot;type&quot;</span>,<span class="string">&quot;tooth&quot;</span>)</span><br><span class="line">        , index:<span class="string">&quot;tooth&quot;</span>);</span><br><span class="line">    Console.WriteLine(<span class="string">&quot;檔案上傳完成~~&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    Console.WriteLine(<span class="string">&quot;檔案已上傳~~&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.詢問問題<br>建立好知識庫後，就可以進行詢問，因為剛才有指定 <code>index</code>名稱，<br>所以在詢問問題時，也要給 <code>index</code>名稱</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> answer = <span class="keyword">await</span> memory.AskAsync(<span class="string">&quot;請問洗牙有什麼規定&quot;</span>, index:<span class="string">&quot;tooth&quot;</span>);</span><br><span class="line">Console.WriteLine(<span class="string">$&quot;\nAnswer: <span class="subst">&#123;answer.Result&#125;</span>&quot;</span>);</span><br><span class="line">Console.WriteLine(<span class="string">$&quot; ====== 參考資訊 ======&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> x <span class="keyword">in</span> answer.RelevantSources)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(x.SourceUrl != <span class="literal">null</span></span><br><span class="line">        ? <span class="string">$&quot;  - <span class="subst">&#123;x.SourceUrl&#125;</span> [<span class="subst">&#123;x.Partitions.First().LastUpdate:D&#125;</span>]&quot;</span></span><br><span class="line">        : <span class="string">$&quot;  - <span class="subst">&#123;x.SourceName&#125;</span>  - <span class="subst">&#123;x.Link&#125;</span> [<span class="subst">&#123;x.Partitions.First().LastUpdate:D&#125;</span>]&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">answer</span><br></pre></td></tr></table></figure><p>結果如下，</p><img src="/2023/12/22/sk-kernel-memory-service-memorywebclient/03.png" class="" title="answer"><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://github.com/microsoft/kernel-memory">kernel-memory</a><br><a href="https://github.com/microsoft/kernel-memory/blob/main/service/Service/README.md">Kernel Memory as a Service</a><br><a href="https://www.cnblogs.com/xbotter/p/kernel_memory_service.html">Kernel Memory 入门系列：Kernel Memory Service</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;在&lt;a href=&quot;https://rainmakerho.github.io/2023/12/22/sk-kernel-memory/&quot;&gt;</summary>
      
    
    
    
    
    <category term="Semantic Kernel" scheme="https://rainmakerho.github.io/tags/Semantic-Kernel/"/>
    
    <category term="Kernel Memory" scheme="https://rainmakerho.github.io/tags/Kernel-Memory/"/>
    
    <category term="MemoryWebClient" scheme="https://rainmakerho.github.io/tags/MemoryWebClient/"/>
    
    <category term="semantic-kernel" scheme="https://rainmakerho.github.io/tags/semantic-kernel/"/>
    
  </entry>
  
  <entry>
    <title>Semantic Kernel(SK) - Kernel Memory (KM) 初探</title>
    <link href="https://rainmakerho.github.io/2023/12/22/sk-kernel-memory/"/>
    <id>https://rainmakerho.github.io/2023/12/22/sk-kernel-memory/</id>
    <published>2023-12-22T03:19:54.000Z</published>
    <updated>2024-01-05T06:22:12.442Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>現在很多企業都在使用 Retrieval Augmented Generation(RAG)，<br>先把各個文件先切一段一段(例如 利用各種 Library 將文件讀進來，再將 200 個字，每段又 overlap 50 個字)轉成 embeddings 再放到 embeddings 資料庫，<br>這裡會使用到 LLM 的 embeddings model ，例如 <code>text-embedding-ada-002</code>。<br>當使用者輸入問題後，同時也將這個問題轉成 embeddings ，再與 embeddings 資料庫找相似度，例如使用 BM25 來比較。<br>取得相似度高的內容後，再呼叫 <code>GPT-3.5 Turbo</code> 轉成較口語化的回答內容。<br>這麼多的 Task ，現在可以透過 <a href="https://github.com/microsoft/kernel-memory">kernel-memory</a> 來達成，<br>以下就來看看它有多簡單 ^_^</p><h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><p>以下 VSCode 建立 <code>ipynb</code> 檔，並用 AOAI 及 OpenAI 來測試，<br>建立 <code>.env</code> 檔案，並放入相關的設定值，如下，</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">AOAI_APIKEY</span>=你的AOAI API Key</span><br><span class="line"><span class="attr">EMBEDDING_DEPLOYMENT</span>=AOAI Embedding Model 部署名稱</span><br><span class="line"><span class="attr">CHAT_DEPLOYMENT</span>=AOAI Chat Model 部署名稱</span><br><span class="line"><span class="attr">ENDPOINT</span>=AOAI的 Endpoint</span><br><span class="line"><span class="attr">OPENAI_APIKEY</span>=你的OpenAI API Key</span><br></pre></td></tr></table></figure><p>1.加入套件</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#r &quot;nuget:Microsoft.KernelMemory.Core, *-*&quot;</span></span><br><span class="line"><span class="keyword">using</span> Microsoft.KernelMemory;</span><br><span class="line"><span class="meta">#r &quot;nuget:dotenv.net&quot;</span></span><br><span class="line"></span><br><span class="line">dotenv.net.DotEnv.Load();</span><br><span class="line"><span class="keyword">var</span> env = dotenv.net.DotEnv.Read();</span><br></pre></td></tr></table></figure><p>2.透過 OpenAI 建立知識庫(存在 Memory 之中)</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> openaiApikey = env[<span class="string">&quot;OPENAI_APIKEY&quot;</span>];</span><br><span class="line"><span class="keyword">var</span> memory = <span class="keyword">new</span> KernelMemoryBuilder()</span><br><span class="line">    .WithOpenAIDefaults(openaiApikey)</span><br><span class="line">    .Build&lt;MemoryServerless&gt;();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 讓 Kernel Memory 自動幫我們切段，並轉成 Embeddings</span></span><br><span class="line"><span class="keyword">await</span> memory.ImportDocumentAsync(<span class="keyword">new</span> Document(<span class="string">&quot;tooth&quot;</span>)</span><br><span class="line">    .AddFiles(<span class="keyword">new</span> [] &#123;<span class="string">@&quot;C:\OpenAI\docs\tooth\qa.docx&quot;</span></span><br><span class="line">     ,<span class="string">@&quot;C:\OpenAI\docs\tooth\stdtable.docx&quot;</span></span><br><span class="line">     , <span class="string">@&quot;C:\OpenAI\docs\tooth\terms.docx&quot;</span>&#125;)</span><br><span class="line">    .AddTag(<span class="string">&quot;type&quot;</span>,<span class="string">&quot;tooth&quot;</span>));</span><br></pre></td></tr></table></figure><p>3.透過 AOAI 建立知識庫(存在 Memory 之中)</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> embeddingDeployment = env[<span class="string">&quot;EMBEDDING_DEPLOYMENT&quot;</span>];</span><br><span class="line"><span class="keyword">var</span> chatDeployment = env[<span class="string">&quot;CHAT_DEPLOYMENT&quot;</span>];</span><br><span class="line"><span class="keyword">var</span> endpoint = env[<span class="string">&quot;ENDPOINT&quot;</span>];</span><br><span class="line"><span class="keyword">var</span> apiKey = env[<span class="string">&quot;AOAI_APIKEY&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> azureOpenAIEmbeddingConfig = <span class="keyword">new</span> AzureOpenAIConfig</span><br><span class="line">&#123;</span><br><span class="line">    Endpoint = endpoint,</span><br><span class="line">    APIKey = apiKey,</span><br><span class="line">    Deployment = embeddingDeployment,</span><br><span class="line">    APIType = AzureOpenAIConfig.APITypes.EmbeddingGeneration,</span><br><span class="line">    Auth = AzureOpenAIConfig.AuthTypes.APIKey</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> azureOpenAITextConfig = <span class="keyword">new</span> AzureOpenAIConfig</span><br><span class="line">&#123;</span><br><span class="line">    Endpoint = endpoint,</span><br><span class="line">    APIKey = apiKey,</span><br><span class="line">    Deployment = chatDeployment,</span><br><span class="line">    APIType = AzureOpenAIConfig.APITypes.ChatCompletion,</span><br><span class="line">    Auth = AzureOpenAIConfig.AuthTypes.APIKey</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> memory2 = <span class="keyword">new</span> KernelMemoryBuilder()</span><br><span class="line">    .WithAzureOpenAITextEmbeddingGeneration(azureOpenAIEmbeddingConfig)</span><br><span class="line">    .WithAzureOpenAITextGeneration(azureOpenAITextConfig)</span><br><span class="line">    .Build&lt;MemoryServerless&gt;();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 讓 Kernel Memory 自動幫我們切段，並轉成 Embeddings</span></span><br><span class="line"><span class="keyword">await</span> memory2.ImportDocumentAsync(<span class="keyword">new</span> Document(<span class="string">&quot;tooth&quot;</span>)</span><br><span class="line">    .AddFiles(<span class="keyword">new</span> [] &#123;<span class="string">@&quot;C:\OpenAI\docs\tooth\qa.docx&quot;</span></span><br><span class="line">     ,<span class="string">@&quot;C:\OpenAI\docs\tooth\stdtable.docx&quot;</span></span><br><span class="line">     , <span class="string">@&quot;C:\OpenAI\docs\tooth\terms.docx&quot;</span>&#125;)</span><br><span class="line">    .AddTag(<span class="string">&quot;type&quot;</span>,<span class="string">&quot;tooth&quot;</span>));</span><br></pre></td></tr></table></figure><p>上述設定好之後，透過 ImportDocumentAsync 就幫我們做到，<br>取出文件的內容，<br>將文件的內容切成一段段易於搜尋，<br>將一段段的內容透過 embedding model 來轉成 embedding，<br>將這些內容存在 Memory 之中(目前是使用 MemoryServerless)</p><p>3.分別詢問 OpenAI 及 AOAI</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> answer = <span class="keyword">await</span> memory.AskAsync(<span class="string">&quot;請問洗牙有什麼規定&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> answer2 = <span class="keyword">await</span> memory2.AskAsync(<span class="string">&quot;請問洗牙有什麼規定&quot;</span>);</span><br></pre></td></tr></table></figure><p>OpenAI (Embeddings + GPT-3.5 Turbo)結果如下，</p><img src="/2023/12/22/sk-kernel-memory/01.png" class="" title="OpenAI"><p>AOAI (Embeddings + GPT-4)結果如下，</p><img src="/2023/12/22/sk-kernel-memory/02.png" class="" title="AOAI"><p>比較起來，OpenAI 似乎比 AOAI 來的簡潔一些，<br>另外筆者覺得利害的地方是，洗牙的同義詞是建立在 qa.docx 文件之中，<br>但是 <a href="https://github.com/microsoft/kernel-memory">kernel-memory</a> 卻可以將它們與其他文件關連起來找出對應的內容，</p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://github.com/microsoft/kernel-memory">kernel-memory</a><br><a href="https://medium.com/@evertongomede/understanding-the-bm25-ranking-algorithm-19f6d45c6ce">Understanding the BM25 Ranking Algorithm</a><br><a href="https://rainmakerho.github.io/2023/11/29/openai-assistant-api/">OpenAI Assistants API 初體驗</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;現在很多企業都在使用 Retrieval Augmented Generation(RAG)，&lt;br&gt;先把各個文件先切一段一段(例如 利用各</summary>
      
    
    
    
    
    <category term="Semantic Kernel" scheme="https://rainmakerho.github.io/tags/Semantic-Kernel/"/>
    
    <category term="Kernel Memory" scheme="https://rainmakerho.github.io/tags/Kernel-Memory/"/>
    
    <category term="LLM" scheme="https://rainmakerho.github.io/tags/LLM/"/>
    
    <category term="RAG" scheme="https://rainmakerho.github.io/tags/RAG/"/>
    
    <category term="embeddings" scheme="https://rainmakerho.github.io/tags/embeddings/"/>
    
    <category term="KernelMemoryBuilder" scheme="https://rainmakerho.github.io/tags/KernelMemoryBuilder/"/>
    
    <category term="MemoryServerless" scheme="https://rainmakerho.github.io/tags/MemoryServerless/"/>
    
    <category term="semantic-kernel" scheme="https://rainmakerho.github.io/tags/semantic-kernel/"/>
    
  </entry>
  
</feed>
