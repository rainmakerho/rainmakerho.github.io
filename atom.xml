<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>亂馬客</title>
  <icon>https://www.gravatar.com/avatar/cd3aed042ccd7a5a5d9956b0bc07dc81</icon>
  <subtitle>Re:從零開始的軟體開發生活</subtitle>
  <link href="https://rainmakerho.github.io/atom.xml" rel="self"/>
  
  <link href="https://rainmakerho.github.io/"/>
  <updated>2023-11-27T03:44:23.512Z</updated>
  <id>https://rainmakerho.github.io/</id>
  
  <author>
    <name>亂馬客</name>
    <email>rainmaker_ho@gss.com.tw</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>axios 透過 proxy 連線發生 502 錯誤問題</title>
    <link href="https://rainmakerho.github.io/2023/11/27/axios-proxy-err-502/"/>
    <id>https://rainmakerho.github.io/2023/11/27/axios-proxy-err-502/</id>
    <published>2023-11-27T03:28:46.000Z</published>
    <updated>2023-11-27T03:44:23.512Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>Windows Server 連外要透過 Proxy 時，原本在 Windows 設定中，設定 proxy 。<br>結果我們的 nodejs app 卻沒辦法吃到系統的設定。<br>設定 <code>npm config set https-proxy http://192.168.0.100:808</code> 去跑，<br>也還是會噴 <strong>502</strong> 的錯誤。<br>在 axios 設定 <code>proxy</code> config ，也還是噴 <strong>502</strong> 的錯誤。</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>最後參考 <a href="https://github.com/axios/axios/issues/2937">Axios proxy is not working.</a> 的設定，<br><code>proxy</code> config 設定成 false, 並使用 <code>https-proxy-agent</code> 這個套件來設定 proxy。<br>這個也可以套用到 <code>node-fetch</code> 哦~<br>所以最後，環境變數，npm config 都不用設定，只要設定 <code>httpsAgent</code> 及 <code>proxy</code> 就可以了哦。<br><code>npm install --save axios https-proxy-agent node-fetch dotenv</code><br>package type 為 “module”<br>以下為 axios 及 node-fetch 的測試程式，</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> dotenv <span class="keyword">from</span> <span class="string">&quot;dotenv&quot;</span>;</span><br><span class="line">dotenv.<span class="title function_">config</span>();</span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&quot;axios&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">HttpsProxyAgent</span> &#125; <span class="keyword">from</span> <span class="string">&quot;https-proxy-agent&quot;</span>;</span><br><span class="line"><span class="comment">//http://192.168.0.100:808</span></span><br><span class="line"><span class="keyword">let</span> httpsAgent = <span class="keyword">new</span> <span class="title class_">HttpsProxyAgent</span>(process.<span class="property">env</span>.<span class="property">proxy</span>);</span><br><span class="line"><span class="keyword">const</span> clientId = process.<span class="property">env</span>.<span class="property">clientId</span>;</span><br><span class="line"><span class="keyword">const</span> clientSecret = process.<span class="property">env</span>.<span class="property">clientSecret</span>;</span><br><span class="line"><span class="keyword">const</span> tenantId = process.<span class="property">env</span>.<span class="property">tenantId</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> url = <span class="string">`https://login.microsoftonline.com/<span class="subst">$&#123;tenantId&#125;</span>/oauth2/v2.0/token`</span>;</span><br><span class="line"><span class="keyword">let</span> formData = <span class="keyword">new</span> <span class="title class_">FormData</span>();</span><br><span class="line">formData.<span class="title function_">append</span>(<span class="string">&quot;client_id&quot;</span>, clientId);</span><br><span class="line">formData.<span class="title function_">append</span>(<span class="string">&quot;scope&quot;</span>, <span class="string">&quot;https://graph.microsoft.com/.default&quot;</span>);</span><br><span class="line">formData.<span class="title function_">append</span>(<span class="string">&quot;client_secret&quot;</span>, clientSecret);</span><br><span class="line">formData.<span class="title function_">append</span>(<span class="string">&quot;grant_type&quot;</span>, <span class="string">&quot;client_credentials&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(</span><br><span class="line">    <span class="string">&quot;============================ Start axios Testing ============================================&quot;</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">const</span> options = &#123;</span><br><span class="line">    <span class="attr">proxy</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">httpsAgent</span>: httpsAgent,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">axios.<span class="title function_">post</span>(url, formData, options).<span class="title function_">then</span>(</span><br><span class="line">    <span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;****** OK ******&quot;</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(response.<span class="property">data</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;XXXXX ERROR XXXXX&quot;</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(error);</span><br><span class="line">    &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> dotenv <span class="keyword">from</span> <span class="string">&quot;dotenv&quot;</span>;</span><br><span class="line">dotenv.<span class="title function_">config</span>();</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">HttpsProxyAgent</span> &#125; <span class="keyword">from</span> <span class="string">&quot;https-proxy-agent&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> fetch <span class="keyword">from</span> <span class="string">&quot;node-fetch&quot;</span>;</span><br><span class="line"><span class="comment">//http://192.168.0.100:808</span></span><br><span class="line"><span class="keyword">let</span> httpsAgent = <span class="keyword">new</span> <span class="title class_">HttpsProxyAgent</span>(process.<span class="property">env</span>.<span class="property">proxy</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> clientId = process.<span class="property">env</span>.<span class="property">clientId</span>;</span><br><span class="line"><span class="keyword">const</span> clientSecret = process.<span class="property">env</span>.<span class="property">clientSecret</span>;</span><br><span class="line"><span class="keyword">const</span> tenantId = process.<span class="property">env</span>.<span class="property">tenantId</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> url = <span class="string">`https://login.microsoftonline.com/<span class="subst">$&#123;tenantId&#125;</span>/oauth2/v2.0/token`</span>;</span><br><span class="line"><span class="keyword">let</span> formData = <span class="keyword">new</span> <span class="title class_">FormData</span>();</span><br><span class="line">formData.<span class="title function_">append</span>(<span class="string">&quot;client_id&quot;</span>, clientId);</span><br><span class="line">formData.<span class="title function_">append</span>(<span class="string">&quot;scope&quot;</span>, <span class="string">&quot;https://graph.microsoft.com/.default&quot;</span>);</span><br><span class="line">formData.<span class="title function_">append</span>(<span class="string">&quot;client_secret&quot;</span>, clientSecret);</span><br><span class="line">formData.<span class="title function_">append</span>(<span class="string">&quot;grant_type&quot;</span>, <span class="string">&quot;client_credentials&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(</span><br><span class="line">    <span class="string">&quot;============================ Start fetch Testing ============================================&quot;</span></span><br><span class="line">);</span><br><span class="line"><span class="title function_">fetch</span>(url, &#123;</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">    <span class="attr">body</span>: formData,</span><br><span class="line">    <span class="attr">agent</span>: httpsAgent,</span><br><span class="line">&#125;)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!response.<span class="property">ok</span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;XXXXX ERROR XXXXX&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 解析 JSON 格式的 response body</span></span><br><span class="line">        <span class="keyword">return</span> response.<span class="title function_">json</span>();</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Response from server:&quot;</span>, data);</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">catch</span>(<span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 處理錯誤</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;Error:&quot;</span>, error);</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://github.com/axios/axios/issues/2937">Axios proxy is not working.</a><br><a href="https://github.com/axios/axios/issues/5078">ERR_BAD_RESPONSE 502 when using proxy</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;Windows Server 連外要透過 Proxy 時，原本在 Windows 設定中，設定 proxy 。&lt;br&gt;結果我們的 nodej</summary>
      
    
    
    
    
    <category term="node" scheme="https://rainmakerho.github.io/tags/node/"/>
    
    <category term="axios" scheme="https://rainmakerho.github.io/tags/axios/"/>
    
    <category term="proxy" scheme="https://rainmakerho.github.io/tags/proxy/"/>
    
    <category term="502" scheme="https://rainmakerho.github.io/tags/502/"/>
    
    <category term="httpsAgent" scheme="https://rainmakerho.github.io/tags/httpsAgent/"/>
    
  </entry>
  
  <entry>
    <title>HttpClientFactory.CreateClient 造成 Checkmarx 狂噴 CSRF</title>
    <link href="https://rainmakerho.github.io/2023/11/13/checkmarx-csrf-httpclientfactory-createclient-false-positive/"/>
    <id>https://rainmakerho.github.io/2023/11/13/checkmarx-csrf-httpclientfactory-createclient-false-positive/</id>
    <published>2023-11-13T07:38:41.000Z</published>
    <updated>2023-11-13T07:56:36.990Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>ASP.NET Core MVC 專案中的 WebAPI Controller 被 Checkmarx V9.4.5.1012 HF24 掃出一堆的 <strong>CSRF</strong> 問題。</p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>查看它的 <code>Find_CSRF</code> Rule 中，在過濾掉 <code>Find_CSRF_Sanitize</code> 結果後，<br>又再加入 <code>Find_ASP_MVC_CSRF()</code>。<br>而在 <code>Find_ASP_MVC_CSRF()</code> 中又會去找一些可能跟 DB Update 相關的 Method，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">CxList dbUpdateMethods = methods.FindByShortNames(<span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt; &#123;</span><br><span class="line"><span class="string">&quot;SaveChanges&quot;</span>, <span class="string">&quot;SaveChangesAsync&quot;</span>,</span><br><span class="line"><span class="string">&quot;SubmitChanges&quot;</span>, <span class="string">&quot;TryUpdateModel&quot;</span>,</span><br><span class="line"><span class="string">&quot;TryUpdateModelAsync&quot;</span>, <span class="string">&quot;UpdateModel&quot;</span></span><br><span class="line">&#125;, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">dbUpdateMethods.Add(methods.FindByShortNames(<span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt;()&#123;</span><br><span class="line"><span class="string">&quot;Set*&quot;</span>, <span class="string">&quot;Change*&quot;</span>, <span class="string">&quot;Update*&quot;</span>, <span class="string">&quot;Save*&quot;</span>, <span class="string">&quot;Apply*&quot;</span>, <span class="string">&quot;Create*&quot;</span>, <span class="string">&quot;Add*&quot;</span>, <span class="string">&quot;Delete*&quot;</span></span><br><span class="line">&#125;));</span><br><span class="line">dbUpdateMethods.Add(methods.FindByMemberAccess(<span class="string">&quot;UserManager&quot;</span>, <span class="string">&quot;CreateAsync&quot;</span>, <span class="literal">true</span>));</span><br><span class="line">dbUpdateMethods -= All.FindByMemberAccesses(<span class="keyword">new</span> <span class="built_in">string</span>[]&#123;<span class="string">&quot;ModelState.AddModelError&quot;</span>,<span class="string">&quot;List.Add&quot;</span>&#125;);</span><br></pre></td></tr></table></figure><p>詢問同事 Jer 後，有可能是因為 keyword Create 找到了程式中的 <code>HttpClientFactory.CreateClient</code> 所以它就認為它有 <strong>CSRF</strong> 問題。<br>將原本用 <code>HttpClientFactory.CreateClient</code> 改成 <code>new HttpClient()</code> 後，<br>CSRF 的問題果然就不見了。</p><p>這個問題原廠的回覆如下，</p><blockquote><p>After reviewing your case, we can confirm the issue is as you suspected. The engine is assuming that the “CreateClient()” method is a database access because it contains the keyword “create”, which is used to search for CSRF vulnerabilities in the code.</p></blockquote><p>只能等待以色列原廠的修復了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;ASP.NET Core MVC 專案中的 WebAPI Controller 被 Checkmarx V9.4.5.1012 HF24 掃</summary>
      
    
    
    
    
    <category term="C#" scheme="https://rainmakerho.github.io/tags/C/"/>
    
    <category term="Checkmarx" scheme="https://rainmakerho.github.io/tags/Checkmarx/"/>
    
    <category term="CSRF" scheme="https://rainmakerho.github.io/tags/CSRF/"/>
    
    <category term="HttpClientFactory.CreateClient" scheme="https://rainmakerho.github.io/tags/HttpClientFactory-CreateClient/"/>
    
  </entry>
  
  <entry>
    <title>Azure 看不到訂閱(Subscriptions)</title>
    <link href="https://rainmakerho.github.io/2023/11/09/azure-cannot-see-subscriptions/"/>
    <id>https://rainmakerho.github.io/2023/11/09/azure-cannot-see-subscriptions/</id>
    <published>2023-11-09T03:50:18.000Z</published>
    <updated>2023-11-09T05:46:15.959Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>當你擁有新的訂閱權限時，在訂用帳戶(Subscriptions)中卻看不到它，但卻又能在搜尋到。<br>要怎麼讓這些 訂用帳戶(Subscriptions) 預設顯示出來呢?</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>點選右上方<strong>入口網站設定(Portal settings)</strong> 或是連到 <code>https://portal.azure.com/#settings/directory</code><br>在 <strong><a href="https://portal.azure.com/#settings/directory">目錄+訂閱(Directories + subscriptions)</a></strong> 中，<br>設定 <strong>預設訂用帳戶篩選(Default subscription filter)</strong> 為 <strong>所有訂閱(All subscriptions)</strong> 就可以了哦~<br>如下，</p><img src="/2023/11/09/azure-cannot-see-subscriptions/01.png" class="" title="目錄+訂閱"><img src="/2023/11/09/azure-cannot-see-subscriptions/02.png" class="" title="Directories + subscriptions">]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;當你擁有新的訂閱權限時，在訂用帳戶(Subscriptions)中卻看不到它，但卻又能在搜尋到。&lt;br&gt;要怎麼讓這些 訂用帳戶(Subscr</summary>
      
    
    
    
    
    <category term="Azure" scheme="https://rainmakerho.github.io/tags/Azure/"/>
    
    <category term="Subscription" scheme="https://rainmakerho.github.io/tags/Subscription/"/>
    
    <category term="subscription filter" scheme="https://rainmakerho.github.io/tags/subscription-filter/"/>
    
  </entry>
  
  <entry>
    <title>knex Error Undefined binding(s) detected for keys when compiling RAW query</title>
    <link href="https://rainmakerho.github.io/2023/11/08/knex-undefined-bindings-detected-for-keys/"/>
    <id>https://rainmakerho.github.io/2023/11/08/knex-undefined-bindings-detected-for-keys/</id>
    <published>2023-11-08T07:01:06.000Z</published>
    <updated>2023-11-08T07:12:04.991Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>最近程式透過 <code>knex.raw(...).toQuery</code> 時，發生 <code>Undefined binding(s) detected for keys</code> 的錯誤，詳細如下，</p><blockquote><p>Error: Undefined binding(s) detected for keys [GroupOrRoomId] when compiling RAW query: (?,:GroupOrRoomId,?)at Raw.toSQL</p></blockquote><p>程式碼如下，</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> value = knex</span><br><span class="line">    .<span class="title function_">raw</span>(</span><br><span class="line">        <span class="string">`(</span></span><br><span class="line"><span class="string">                :Id, </span></span><br><span class="line"><span class="string">                :GroupOrRoomId, </span></span><br><span class="line"><span class="string">                :Data</span></span><br><span class="line"><span class="string">                )`</span>,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="title class_">Id</span>: data.<span class="property">id</span>,</span><br><span class="line">            <span class="title class_">GroupOrRoomId</span>: data.<span class="property">groupOrRoomId</span>,</span><br><span class="line">            <span class="title class_">Data</span>: data.<span class="property">data</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">    .<span class="title function_">toQuery</span>();</span><br></pre></td></tr></table></figure><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>錯誤有將 Key 指出來，就是 <code>GroupOrRoomId</code> 對應的物件為 <code>Undefined</code> 。<br>所以就針對 <code>data.groupOrRoomId</code> 檢查它的值為 <code>undefined</code> 是否合理，<br>或是允許它為空字串，就可以加上保護程式，如下，</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!data.<span class="property">groupOrRoomId</span>) data.<span class="property">groupOrRoomId</span>=<span class="string">&#x27;&#x27;</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;最近程式透過 &lt;code&gt;knex.raw(...).toQuery&lt;/code&gt; 時，發生 &lt;code&gt;Undefined binding</summary>
      
    
    
    
    
    <category term="node" scheme="https://rainmakerho.github.io/tags/node/"/>
    
    <category term="knex" scheme="https://rainmakerho.github.io/tags/knex/"/>
    
    <category term="Undefined" scheme="https://rainmakerho.github.io/tags/Undefined/"/>
    
    <category term="Raw.toSQL" scheme="https://rainmakerho.github.io/tags/Raw-toSQL/"/>
    
  </entry>
  
  <entry>
    <title>SqlException (0x80131904) 此憑證鏈結是由不受信任的授權單位發出的</title>
    <link href="https://rainmakerho.github.io/2023/11/06/sqlexception-80131904-ssl-provider/"/>
    <id>https://rainmakerho.github.io/2023/11/06/sqlexception-80131904-ssl-provider/</id>
    <published>2023-11-06T08:15:14.000Z</published>
    <updated>2023-11-06T09:45:56.684Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>透過 Dapper 連到 Microsoft SQL Server 時，使用以下的連線字串，<br><code>Server=SQL2019-01;Database=MYDB;User Id=myUserId;Password=myUserPwd;</code><br>結果發生 <code>Microsoft.Data.SqlClient.SqlException (0x80131904)</code> 的錯誤，詳細如下，</p><blockquote><p>Microsoft.Data.SqlClient.SqlException (0x80131904): A connection was successfully established with the server, but then an error occurred during the login process. (provider: SSL Provider, error: 0 - 此憑證鏈結是由不受信任的授權單位發出的。)<br>—&gt; System.ComponentModel.Win32Exception (0x80090325): 此憑證鏈結是由不受信任的授權單位發出的。<br>at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action&#96;1 wrapCloseInAction)<br>at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)<br>at Microsoft.Data.SqlClient.TdsParserStateObject.ThrowExceptionAndWarning(Boolean callerHasConnectionLock, Boolean asyncClose)<br>at Microsoft.Data.SqlClient.TdsParserStateObject.SNIWritePacket(PacketHandle packet, UInt32&amp; sniError, Boolean canAccumulate, Boolean callerHasConnectionLock, Boolean asyncClose)<br>at Microsoft.Data.SqlClient.TdsParserStateObject.WriteSni(Boolean canAccumulate)<br>at Microsoft.Data.SqlClient.TdsParserStateObject.WritePacket(Byte flushMode, Boolean canAccumulate)<br>at Microsoft.Data.SqlClient.TdsParser.TdsLogin(SqlLogin rec, FeatureExtension requestedFeatures, SessionData recoverySessionData, FederatedAuthenticationFeatureExtensionData fedAuthFeatureExtensionData, SqlConnectionEncryptOption encrypt)<br>at Microsoft.Data.SqlClient.SqlInternalConnectionTds.Login(ServerInfo server, TimeoutTimer timeout, String newPassword, SecureString newSecurePassword, SqlConnectionEncryptOption encrypt)</p></blockquote><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>在連線字串中加入 <code>Encrypt=false;</code>, 如下，<br><code>Server=SQL2019-01;Database=MYDB;User Id=myUserId;Password=myUserPwd;Encrypt=false;</code></p><ul><li>註: 注意 <code>Encrypt=false;</code> 大小寫哦~</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;透過 Dapper 連到 Microsoft SQL Server 時，使用以下的連線字串，&lt;br&gt;&lt;code&gt;Server=SQL2019</summary>
      
    
    
    
    
    <category term="SSL" scheme="https://rainmakerho.github.io/tags/SSL/"/>
    
    <category term="SqlException" scheme="https://rainmakerho.github.io/tags/SqlException/"/>
    
    <category term="0x80131904" scheme="https://rainmakerho.github.io/tags/0x80131904/"/>
    
    <category term="0x80090325" scheme="https://rainmakerho.github.io/tags/0x80090325/"/>
    
    <category term="此憑證鏈結是由不受信任的授權單位發出的" scheme="https://rainmakerho.github.io/tags/%E6%AD%A4%E6%86%91%E8%AD%89%E9%8F%88%E7%B5%90%E6%98%AF%E7%94%B1%E4%B8%8D%E5%8F%97%E4%BF%A1%E4%BB%BB%E7%9A%84%E6%8E%88%E6%AC%8A%E5%96%AE%E4%BD%8D%E7%99%BC%E5%87%BA%E7%9A%84/"/>
    
  </entry>
  
  <entry>
    <title>為什麼系統中新增一堆空白名稱的Cookie?</title>
    <link href="https://rainmakerho.github.io/2023/10/23/why-multiple-empty-name-cookies-iis/"/>
    <id>https://rainmakerho.github.io/2023/10/23/why-multiple-empty-name-cookies-iis/</id>
    <published>2023-10-23T06:29:00.000Z</published>
    <updated>2023-10-23T08:17:49.153Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>最近同事詢問一個怪問題，透過 Browser 操作系統時，會產生出一堆空白名稱的 Cookie，如下，</p><img src="/2023/10/23/why-multiple-empty-name-cookies-iis/01.png" class="" title="Empty Name Cookies"><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>請同事存一下操作系統的網路狀況發現，<strong>每個 Request</strong>都會往 Client 端寫 Cookie，如下，</p><img src="/2023/10/23/why-multiple-empty-name-cookies-iis/02.png" class="" title="set-cookie"><p>從上面的狀況來看，有可能是 <code>Global.asax</code>, <code>Middleware</code> 或是寫在 IIS 的<code>HTTP 回應標頭</code>之中。<br>而操作公司 VM 中的系統，並不會有這種狀況，所以應該是 IIS 的問題。<br>於是請同事檢查一下 IIS 的<code>HTTP 回應標頭</code>，<br>果然，被寫在裡面，如下，</p><img src="/2023/10/23/why-multiple-empty-name-cookies-iis/03.png" class="" title="HTTP 回應標頭"><p>請同事將它移除之後就沒問題了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;最近同事詢問一個怪問題，透過 Browser 操作系統時，會產生出一堆空白名稱的 Cookie，如下，&lt;/p&gt;
&lt;img src=&quot;/202</summary>
      
    
    
    
    
    <category term="IIS" scheme="https://rainmakerho.github.io/tags/IIS/"/>
    
    <category term=".NET" scheme="https://rainmakerho.github.io/tags/NET/"/>
    
    <category term="Cookie" scheme="https://rainmakerho.github.io/tags/Cookie/"/>
    
    <category term="Empty Name" scheme="https://rainmakerho.github.io/tags/Empty-Name/"/>
    
  </entry>
  
  <entry>
    <title>MSDeploy.targets Web 部署工作失敗 基礎連接已關閉 無法從傳輸連接讀取資料 遠端主機已強制關閉一個現存的連線</title>
    <link href="https://rainmakerho.github.io/2023/10/19/msdeploy-an-existing-connection-was-forcibly-closed-by-the-remote-host-140-5/"/>
    <id>https://rainmakerho.github.io/2023/10/19/msdeploy-an-existing-connection-was-forcibly-closed-by-the-remote-host-140-5/</id>
    <published>2023-10-19T01:16:23.000Z</published>
    <updated>2023-10-19T02:02:55.270Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>最近朋友詢問一個從 <code>Visual Studio 2022</code> 透過 Web Deploy 發佈到 <code>Windows 2019</code> IIS 上的問題。<br>主要是因為他將 IIS Server 上的 <code>RC4</code> 及 <code>Triple DES</code> Cipher Disable 掉，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\RC4 128/128]</span><br><span class="line">&quot;Enabled=dword:00000000&quot;</span><br><span class="line"></span><br><span class="line">[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\Triple DES 168]</span><br><span class="line">&quot;Enabled=dword:00000000&quot;</span><br></pre></td></tr></table></figure><p>結果導致發佈發生錯誤，訊息如下，</p><blockquote><p>Microsoft.NET.Sdk.Publish.MSDeploy.targets(140,5): 錯誤 : Web 部署工作失敗。(無法完成對遠端代理程式 URL ‘<a href="https://win2019-test:8172/msdeploy.axd">https://win2019-test:8172/msdeploy.axd</a>?’ 的要求)<br>錯誤詳細資料:<br>無法完成對遠端代理程式 URL ‘<a href="https://win2019-test:8172/msdeploy.axd">https://win2019-test:8172/msdeploy.axd</a>?’ 的要求。<br>基礎連接已關閉: 傳送時發生未預期的錯誤。<br>無法從專輸連接讀取資料: 遠端主機已強制關閉一個現存的連線。。<br>遠端主機已強制關閉一個現存的連線。<br>發佈無法部署。</p></blockquote><p>從 <code>Wireshark</code> 發現，Client 發出 <code>Client Hello</code> 後，就被 Server <code>RST, ACK</code> 掉了。</p><img src="/2023/10/19/msdeploy-an-existing-connection-was-forcibly-closed-by-the-remote-host-140-5/01.png" class="" title="RST"><h3 id="研究與解法"><a href="#研究與解法" class="headerlink" title="研究與解法"></a>研究與解法</h3><p>從網路上有查到 <a href="https://medium.com/@eric.rodriguez/microsoft-web-deployment-an-existing-connection-was-forcibly-closed-by-the-remote-host-fe365980af77">Microsoft.Web.Deployment : An existing connection was forcibly closed by the remote host.</a> 似乎是一樣的錯誤，<br>但設定了 Client 與 Server 的機碼後，還是一樣的錯誤。<br>於是在 <code>PowerShell</code> 中透過 <code>curl</code> 來測試看看<br><code>curl https://win2019-test</code> 會發生 <code>基礎連接已關閉: 無法為SSL/TLS 安全通道建立信任關係</code><br><code>curl https://win2019的FQDN</code> 會正常給出頁面資料<br><code>curl https://win2019-test:8172</code> 會發生 <code>基礎連接已關閉: 傳送時發生未預期的錯誤</code> &#x2F; 客戶端與伺服器無法溝通，因為它們沒有公用的演算法 | The client and server cannot communicate, because they do not possess a common algorithm</p><p>猜想有可能是憑證的問題，與朋友討論是用 FQDN 的憑證或是 自簽憑證，<br>後來朋友將原本使用 自簽憑證 改成 FQDN 的憑證後，<br>就可以正常部署了。</p><img src="/2023/10/19/msdeploy-an-existing-connection-was-forcibly-closed-by-the-remote-host-140-5/02.png" class="" title="FQDN"><blockquote><p>猜想或許 Client 端給出的演算法不在 Server 端 自簽憑證所支援的演算法範圍中, 或許再建立一個新的自簽憑證也可以 Pass</p></blockquote><p>最後，感謝 聖德 一起研究</p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://medium.com/@eric.rodriguez/microsoft-web-deployment-an-existing-connection-was-forcibly-closed-by-the-remote-host-fe365980af77">Microsoft.Web.Deployment : An existing connection was forcibly closed by the remote host.</a><br><a href="https://devbricker.github.io/post/devtools/aspnetcorewebdeploy/">Visual Studio 2019 的 WebDeploy 到 IIS 發生憑證無效</a><br><a href="https://blog.darkthread.net/blog/underlying-conn-closed-error-again/">再遇 C# 與 PowerShell 「基礎連接已關閉」錯誤</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;最近朋友詢問一個從 &lt;code&gt;Visual Studio 2022&lt;/code&gt; 透過 Web Deploy 發佈到 &lt;code&gt;Wind</summary>
      
    
    
    
    
    <category term="TLS" scheme="https://rainmakerho.github.io/tags/TLS/"/>
    
    <category term="基礎連接已關閉" scheme="https://rainmakerho.github.io/tags/%E5%9F%BA%E7%A4%8E%E9%80%A3%E6%8E%A5%E5%B7%B2%E9%97%9C%E9%96%89/"/>
    
    <category term="MSDeploy" scheme="https://rainmakerho.github.io/tags/MSDeploy/"/>
    
    <category term="8172" scheme="https://rainmakerho.github.io/tags/8172/"/>
    
    <category term="無法從傳輸連接讀取資料" scheme="https://rainmakerho.github.io/tags/%E7%84%A1%E6%B3%95%E5%BE%9E%E5%82%B3%E8%BC%B8%E9%80%A3%E6%8E%A5%E8%AE%80%E5%8F%96%E8%B3%87%E6%96%99/"/>
    
    <category term="RC4" scheme="https://rainmakerho.github.io/tags/RC4/"/>
    
    <category term="Triple DES" scheme="https://rainmakerho.github.io/tags/Triple-DES/"/>
    
    <category term="Client Hello" scheme="https://rainmakerho.github.io/tags/Client-Hello/"/>
    
    <category term="RST, ACK" scheme="https://rainmakerho.github.io/tags/RST-ACK/"/>
    
  </entry>
  
  <entry>
    <title>為什麼在 Host 檔案中自定的 Host 在 IIS 的 Windows 整合驗證都無法通過?</title>
    <link href="https://rainmakerho.github.io/2023/10/12/iis-windows-authentication-custom-hostname/"/>
    <id>https://rainmakerho.github.io/2023/10/12/iis-windows-authentication-custom-hostname/</id>
    <published>2023-10-12T09:30:36.000Z</published>
    <updated>2023-10-13T05:52:19.412Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>最近在 Client 測試 IIS 的 Windows 驗證，<br>於是在 <code>Default.aspx</code> 只將 <code>Windows 驗證</code>啟用，</p><img src="/2023/10/12/iis-windows-authentication-custom-hostname/01.png" class="" title="Windows 驗證"><p>並在 <code>C:\Windows\System32\drivers\etc\hosts</code> 加入<br><code>127.0.0.1  rm.gss.com.tw</code> 的設定。</p><p><code>default.aspx</code> 的內容如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">Page_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> adUserId = Request.ServerVariables[<span class="string">&quot;LOGON_USER&quot;</span>]?.ToString();</span><br><span class="line">    Response.Write(<span class="string">$&quot;LOGON_USER:&#x27;<span class="subst">&#123;adUserId&#125;</span>&#x27;&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用 <code>localhost</code>, <code>127.0.0.1</code> 及 <code>rm.gss.com.tw</code> 為 Host 來測試。</p><h4 id="使用-localhost"><a href="#使用-localhost" class="headerlink" title="使用 localhost"></a>使用 localhost</h4><p>連到 <code>http://localhost/web1/default.aspx</code><br>會直接顯示這台電腦的登入者，如下，</p><img src="/2023/10/12/iis-windows-authentication-custom-hostname/02.png" class="" title="localhost"><h4 id="使用-127-0-0-1"><a href="#使用-127-0-0-1" class="headerlink" title="使用 127.0.0.1"></a>使用 127.0.0.1</h4><p>連到 <code>http://127.0.0.1/web1/default.aspx</code><br>會要使用者輸入這台電腦(本機)的登入者及密碼來登入，如下，</p><img src="/2023/10/12/iis-windows-authentication-custom-hostname/03.png" class="" title="127.0.0.1"><h4 id="使用-rm-gss-com-tw"><a href="#使用-rm-gss-com-tw" class="headerlink" title="使用 rm.gss.com.tw"></a>使用 rm.gss.com.tw</h4><p>連到 <code>http://rm.gss.com.tw/web1/default.aspx</code><br>會要使用者輸入這台電腦(本機)的登入者及密碼來登入，<br>但卻一直沒有辦法通過驗證，</p><img src="/2023/10/12/iis-windows-authentication-custom-hostname/04.png" class="" title="rm.gss.com.tw"><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>參考 <a href="https://stackoverflow.com/questions/7387156/unable-to-get-windows-authentication-to-work-through-local-iis/13017510">Unable to get windows authentication to work through local IIS</a> 這篇解法，<br>要設定 <code>DisableStrictNameChecking</code> 及 <code>BackConnectionHostNames</code> 2 個機碼。</p><p>依筆者的測試，只需將 <code>rm.gss.com.tw</code> 加入到 <code>BackConnectionHostNames</code> 中就可以了哦~</p><img src="/2023/10/12/iis-windows-authentication-custom-hostname/05.png" class="" title="BackConnectionHostNames"><ul><li>註: 感謝同事 Garry 江 的分享</li></ul><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://stackoverflow.com/questions/7387156/unable-to-get-windows-authentication-to-work-through-local-iis/13017510">Unable to get windows authentication to work through local IIS</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;最近在 Client 測試 IIS 的 Windows 驗證，&lt;br&gt;於是在 &lt;code&gt;Default.aspx&lt;/code&gt; 只將 &lt;c</summary>
      
    
    
    
    
    <category term="IIS" scheme="https://rainmakerho.github.io/tags/IIS/"/>
    
    <category term="Host" scheme="https://rainmakerho.github.io/tags/Host/"/>
    
    <category term="自定Host" scheme="https://rainmakerho.github.io/tags/%E8%87%AA%E5%AE%9AHost/"/>
    
    <category term="Windows 驗證" scheme="https://rainmakerho.github.io/tags/Windows-%E9%A9%97%E8%AD%89/"/>
    
    <category term="hosts" scheme="https://rainmakerho.github.io/tags/hosts/"/>
    
    <category term="localhost" scheme="https://rainmakerho.github.io/tags/localhost/"/>
    
    <category term="DisableStrictNameChecking" scheme="https://rainmakerho.github.io/tags/DisableStrictNameChecking/"/>
    
    <category term="BackConnectionHostNames" scheme="https://rainmakerho.github.io/tags/BackConnectionHostNames/"/>
    
  </entry>
  
  <entry>
    <title>別忽略 CS1988 非同步方法缺少 &#39;await&#39; 運算子 的警告</title>
    <link href="https://rainmakerho.github.io/2023/10/06/cs1998-missing-await/"/>
    <id>https://rainmakerho.github.io/2023/10/06/cs1998-missing-await/</id>
    <published>2023-10-06T09:01:58.000Z</published>
    <updated>2023-10-06T09:18:36.043Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>最近同事透過 K6 進行 WebAPI 壓測時，<br>發現當 Thread 數多時，就會出奇怪的錯誤，<br>例如 在 進入 Middlewares 中取好資料到 UserRols 中，<br>然後在 Controller 中判斷是否存在某個角色時 <code>UserRols.Any(ur =&gt; ur.Code == &quot;Admin&quot;)</code> ，<br>本應有資料的，卻變成沒有資料。</p><h3 id="研究"><a href="#研究" class="headerlink" title="研究"></a>研究</h3><p>原本懷疑是不是有 <code>static</code> 物件互相干擾，但沒找到。<br>現來發現有一段程式碼下面有蚯蚓符號的警告，<br>看了那個 Function 是 <code>async</code>，<br>但呼叫的地方卻沒有加上 <code>await</code> ，<br>於是將 <code>await</code> 加上去，再測試一次，就沒出現錯誤了。</p><p>有時使用 VS.NET 開發時，<br>都只專注在 <code>錯誤</code> 卻忽略了 <code>警告</code>，<br>尤其是 <code>CS1988</code> 少加上 <code>await</code> 的這個警告，<br>更有可能會造成系統在多人操作時，產生非預期的錯誤。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;最近同事透過 K6 進行 WebAPI 壓測時，&lt;br&gt;發現當 Thread 數多時，就會出奇怪的錯誤，&lt;br&gt;例如 在 進入 Middle</summary>
      
    
    
    
    
    <category term=".NET" scheme="https://rainmakerho.github.io/tags/NET/"/>
    
    <category term="CS1988" scheme="https://rainmakerho.github.io/tags/CS1988/"/>
    
    <category term="await" scheme="https://rainmakerho.github.io/tags/await/"/>
    
    <category term="async" scheme="https://rainmakerho.github.io/tags/async/"/>
    
  </entry>
  
  <entry>
    <title>AppScan Missing or insecure &quot;Script-Src&quot; or &quot;Default-src&quot; policy in &quot;Content-Security-Policy&quot; header</title>
    <link href="https://rainmakerho.github.io/2023/10/05/missing-or-insecure-content-security-policy-header-appscan/"/>
    <id>https://rainmakerho.github.io/2023/10/05/missing-or-insecure-content-security-policy-header-appscan/</id>
    <published>2023-10-05T07:32:05.000Z</published>
    <updated>2023-10-05T07:43:01.889Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>系統透過 AppScan 掃過後，其中有 <code>Missing or insecure &quot;Script-Src&quot; or &quot;Default-src&quot; policy in &quot;Content-Security-Policy&quot; header</code> 的 Issue。<br>但系統中的 <code>Content-Security-Policy</code> Header 都已設定 <code>self</code> 了，<br>怎麼還會有那個 Issue 呢?</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>系統的 <code>Content-Security-Policy</code> Header 值如下，<br><code>default-src &#39;self&#39;; script-src &#39;self&#39;; img-src &#39;self&#39;; style-src &#39;self&#39;;frame-src &#39;self&#39;; font-src &#39;self&#39;;</code></p><p>Report 中的建議值為 <code>none</code>，<br>這樣加上去不就全不能用了嗎??</p><p>後來看到 <a href="https://csplite.com/csp283/">Security: HCL &#x2F; IBM AppScan: Missing or insecure Content-Security-Policy header</a> ，<br>是先將預設成 <code>none</code>，再針對其他項目設定 <code>self</code>，<br>所以只要把原本的<code>default-src &#39;self&#39;;</code> 改成 <code>default-src &#39;none&#39;;</code> 就可以了。<br>最後的 CSP 值如下，<br><code>default-src &#39;none&#39;; script-src &#39;self&#39;; img-src &#39;self&#39;; style-src &#39;self&#39;;frame-src &#39;self&#39;; font-src &#39;self&#39;;</code></p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://csplite.com/csp283/">Security: HCL &#x2F; IBM AppScan: Missing or insecure Content-Security-Policy header</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;系統透過 AppScan 掃過後，其中有 &lt;code&gt;Missing or insecure &amp;quot;Script-Src&amp;quot; </summary>
      
    
    
    
    
    <category term="AppScan" scheme="https://rainmakerho.github.io/tags/AppScan/"/>
    
    <category term="Content-Security-Policy" scheme="https://rainmakerho.github.io/tags/Content-Security-Policy/"/>
    
    <category term="CSP" scheme="https://rainmakerho.github.io/tags/CSP/"/>
    
    <category term="none" scheme="https://rainmakerho.github.io/tags/none/"/>
    
    <category term="self" scheme="https://rainmakerho.github.io/tags/self/"/>
    
  </entry>
  
  <entry>
    <title>DB Query + File 操作，導致 Checkmarx 噴 Heuristic 2nd Order SQL Injection 問題?</title>
    <link href="https://rainmakerho.github.io/2023/09/27/checkmark-heuristic-2nd-order-sql-injection/"/>
    <id>https://rainmakerho.github.io/2023/09/27/checkmark-heuristic-2nd-order-sql-injection/</id>
    <published>2023-09-27T05:45:11.000Z</published>
    <updated>2023-09-27T07:35:25.965Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近遇到專案被 Checkmarx 掃出 <code>Heuristic_2nd_Order_SQL_Injection</code> 的低風險問題。<br>看了一下程式，它的邏輯是在 MVC 的 Controller 接收一個 No 字串參數，再透過該參數到 DB 中取回單號的年度，<br>再依年度組出檔案路徑，進行檔案的操作。<br>才一個 DB 的 Query ，怎麼會<strong>疑似</strong>有 <strong>2nd Order SQL Injection</strong> 問題呢?</p><h3 id="研究"><a href="#研究" class="headerlink" title="研究"></a>研究</h3><p>針對 SQL Injection 的防護，大多使用 Parameter 的方式，<br>而該 Query 也是使用 DbParameter 的方式，<br>為什麼 Checkmarx 會覺得有 Injection 的問題呢?<br>程式是使用 Dapper 的 SqlMapper 來 Query</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Controller</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> JsonResult <span class="title">Delete</span>(<span class="params"><span class="built_in">string</span> SRNO</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> Json(dac.DeletePlan(SRNO));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//DeletePlan</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> RtnResultModel <span class="title">DeletePlan</span>(<span class="params"><span class="built_in">string</span> SRNO</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">using</span> (TransactionScope scope = <span class="keyword">new</span> TransactionScope())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">using</span> (CommonDac dac = <span class="keyword">new</span> CommonDac(loggedUser))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">string</span> year = dac.GetPlanYear(SRNO);</span><br><span class="line">            <span class="comment">// file 操作 ... call fileaccess(year);</span></span><br><span class="line">        &#125;</span><br><span class="line">        scope.Complete();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> RtnResultModel(<span class="literal">true</span>, <span class="string">&quot;訊息...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//GetYear</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">GetPlanYear</span>(<span class="params"><span class="built_in">string</span> SRNO</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> conn =  ...;</span><br><span class="line">    strSql = <span class="string">@&quot;SELECT [dbo].[fn_GetPlanYear](@SRNO) &quot;</span>;</span><br><span class="line">    objParam = <span class="keyword">new</span></span><br><span class="line">    &#123;</span><br><span class="line">        SRNO = SRNO</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">var</span> strYear = conn.Query&lt;<span class="built_in">string</span>&gt;(conn,strSql, objParam).ToList().SingleOrDefault();</span><br><span class="line">    <span class="keyword">return</span> strYear;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>從 Checkmarx 的圖中，經過的 Path 只有一個 DB 的 Query，</p><img src="/2023/09/27/checkmark-heuristic-2nd-order-sql-injection/01.png" class="" title="checkmarx"><p>而且 SQL 的參數，也沒有使用 字串 串接的方式，<br>所以沒有 2nd Order SQL Injection 的問題。<br>有可能是 Checkmarx 不認得 <code>SqlMapper.Query</code> 的擴充 Method。<br>將 Dapper 改用 Ado.NET 來操作，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">GetPlanYear</span>(<span class="params"><span class="built_in">string</span> SRNO</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> conn =  ...;</span><br><span class="line">    strSql = <span class="string">@&quot;SELECT [dbo].[fn_GetPlanYear](@SRNO) &quot;</span>;</span><br><span class="line">    SqlCommand cmd = <span class="keyword">new</span> SqlCommand(strSql, conn);</span><br><span class="line">    cmd.Parameters.Add(<span class="string">&quot;@SRNO&quot;</span>, SqlDbType.VarChar);</span><br><span class="line">    cmd.Parameters[<span class="string">&quot;@SRNO&quot;</span>].Value = CryptSet.DecryptAES(SRNO);</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        conn.Open();</span><br><span class="line">        <span class="keyword">return</span> (<span class="built_in">string</span>)cmd.ExecuteScalar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">throw</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再掃一次 <code>Heuristic_2nd_Order_SQL_Injection</code> 就不會再出現。<br>如果客戶可以接受說明，應該可以不需要進行調整，<br>如果一定要調整的話，除了改用 Ado.NET 方式外，<br>也可以透過驗證資料型別的方式來解，<br>例如，判斷是否為 int 再將值傳出，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">GetPlanYear</span>(<span class="params"><span class="built_in">string</span> SRNO</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> conn =  ...;</span><br><span class="line">    strSql = <span class="string">@&quot;SELECT [dbo].[fn_GetPlanYear](@SRNO) &quot;</span>;</span><br><span class="line">    objParam = <span class="keyword">new</span></span><br><span class="line">    &#123;</span><br><span class="line">        SRNO = SRNO</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">var</span> strYear = conn.Query&lt;<span class="built_in">string</span>&gt;(conn,strSql, objParam).ToList().SingleOrDefault();</span><br><span class="line">    <span class="keyword">var</span> intYear = <span class="built_in">int</span>.Parse(strYear);</span><br><span class="line">    <span class="keyword">return</span> intYear.ToString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://infosecwriteups.com/the-wrath-of-second-order-sql-injection-c9338a51c6d">What is a Second-Order SQL Injection and how can you exploit it successfully?</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;最近遇到專案被 Checkmarx 掃出 &lt;code&gt;Heuristic_2nd_Order_SQL_Injection&lt;/code&gt; 的低</summary>
      
    
    
    
    
    <category term="Checkmarx" scheme="https://rainmakerho.github.io/tags/Checkmarx/"/>
    
    <category term="Heuristic_2nd_Order_SQL_Injection" scheme="https://rainmakerho.github.io/tags/Heuristic-2nd-Order-SQL-Injection/"/>
    
    <category term="SqlMapper" scheme="https://rainmakerho.github.io/tags/SqlMapper/"/>
    
    <category term="Path" scheme="https://rainmakerho.github.io/tags/Path/"/>
    
    <category term="Dapper" scheme="https://rainmakerho.github.io/tags/Dapper/"/>
    
  </entry>
  
  <entry>
    <title>SK-Semantic Kernel 動態新增 Function</title>
    <link href="https://rainmakerho.github.io/2023/09/21/sk-semantic-kernel-inline-function/"/>
    <id>https://rainmakerho.github.io/2023/09/21/sk-semantic-kernel-inline-function/</id>
    <published>2023-09-21T06:09:21.000Z</published>
    <updated>2023-09-21T06:45:54.714Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在<a href="https://rainmakerho.github.io/2023/09/20/sk-getting-started/">Semantic Kernel 呼叫說笑話 Skill</a>的<code>Skill</code>是透過<code>ImportSemanticSkillFromDirectory</code>匯入。<br>但如果需要可以動態建立 Function 要如何做呢?<br>Semantic Kernel 提供 <code>RegisterSemanticFunction</code> 及 <code>CreateSemanticFunction</code> 來動態建立 Function，<br>以下就來測試看看吧~</p><h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><p>先在 VSCode 中建立 <code>in-line-function.ipynb</code>，<br>以下以 <code>Summary</code> Function 來 Demo <code>RegisterSemanticFunction</code> 及 <code>CreateSemanticFunction</code> 的方式。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!import config/SettingsReader.cs</span></span><br><span class="line"><span class="meta">#r &quot;nuget: Microsoft.SemanticKernel, *-*&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Microsoft.SemanticKernel;</span><br><span class="line"><span class="keyword">using</span> Microsoft.SemanticKernel.SemanticFunctions;</span><br><span class="line"><span class="keyword">var</span> builder = <span class="keyword">new</span> KernelBuilder();</span><br><span class="line"><span class="keyword">var</span> config = SettingsReader.LoadFromFile(<span class="keyword">alias</span>:<span class="string">&quot;gpt&quot;</span>).FirstOrDefault();</span><br><span class="line">builder.WithAzureChatCompletionService(config.model, config.endpoint, config.apikey, serviceId:config.alais);</span><br><span class="line"><span class="keyword">var</span> kernel = builder.Build();</span><br></pre></td></tr></table></figure><p>以下透過 <code>RegisterSemanticFunction</code> 及 <code>CreateSemanticFunction</code> 來動態建立 <code>summaryFunction</code> 及 <code>summaryFunction2</code> 2 個 Function。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> skPrompt = <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">&#123;&#123;$input&#125;&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">請以10個詞以內，結總以上內容</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> promptConfig = <span class="keyword">new</span> PromptTemplateConfig</span><br><span class="line">&#123;</span><br><span class="line">    Completion =</span><br><span class="line">    &#123;</span><br><span class="line">        MaxTokens = <span class="number">1000</span>,</span><br><span class="line">        Temperature = <span class="number">0.2</span>,</span><br><span class="line">        TopP = <span class="number">0.5</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> promptTemplate = <span class="keyword">new</span> PromptTemplate(</span><br><span class="line">    skPrompt,</span><br><span class="line">    promptConfig,</span><br><span class="line">    kernel</span><br><span class="line">);</span><br><span class="line"><span class="keyword">var</span> functionConfig = <span class="keyword">new</span> SemanticFunctionConfig(promptConfig, promptTemplate);</span><br><span class="line"><span class="keyword">var</span> summaryFunction = kernel.RegisterSemanticFunction( <span class="string">&quot;Summary&quot;</span>,  functionConfig);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> summaryFunction2 = kernel.CreateSemanticFunction(skPrompt, promptConfig);</span><br></pre></td></tr></table></figure><p>最後一樣可以將內容傳進 Function 之中，讓 chatGPT 來產生結論，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> textToSummarize = <span class="string">@&quot;大家好，我是亂馬客 Rainmaker，目前任職於叡揚資訊，大家也都叫我 RM 。</span></span><br><span class="line"><span class="string">專注在微軟相關技術，例如 Azure, SQL Server, .NET, Blazor</span></span><br><span class="line"><span class="string">我很樂意與大家可以一起討論軟體的相關問題，</span></span><br><span class="line"><span class="string">請留言或是Email與我一起討論哦~</span></span><br><span class="line"><span class="string">&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> summary = <span class="keyword">await</span> summaryFunction.InvokeAsync(textToSummarize);</span><br><span class="line"><span class="keyword">var</span> summary2 = <span class="keyword">await</span> summaryFunction2.InvokeAsync(textToSummarize);</span><br><span class="line">Console.WriteLine(summary);</span><br><span class="line">Console.WriteLine(summary2);</span><br></pre></td></tr></table></figure><img src="/2023/09/21/sk-semantic-kernel-inline-function/01.png" class="" title="inline-function"><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://github.com/microsoft/semantic-kernel/blob/main/dotnet/notebooks/03-semantic-function-inline.ipynb">semantic-function-inline.ipynb</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;在&lt;a href=&quot;https://rainmakerho.github.io/2023/09/20/sk-getting-started/</summary>
      
    
    
    
    
    <category term="SK" scheme="https://rainmakerho.github.io/tags/SK/"/>
    
    <category term="Semantic Kernel" scheme="https://rainmakerho.github.io/tags/Semantic-Kernel/"/>
    
    <category term="inline" scheme="https://rainmakerho.github.io/tags/inline/"/>
    
    <category term="function" scheme="https://rainmakerho.github.io/tags/function/"/>
    
    <category term="WithAzureChatCompletionService" scheme="https://rainmakerho.github.io/tags/WithAzureChatCompletionService/"/>
    
    <category term="RegisterSemanticFunction" scheme="https://rainmakerho.github.io/tags/RegisterSemanticFunction/"/>
    
    <category term="CreateSemanticFunction" scheme="https://rainmakerho.github.io/tags/CreateSemanticFunction/"/>
    
  </entry>
  
  <entry>
    <title>SK-Semantic Kernel 呼叫說笑話 Skill</title>
    <link href="https://rainmakerho.github.io/2023/09/20/sk-getting-started/"/>
    <id>https://rainmakerho.github.io/2023/09/20/sk-getting-started/</id>
    <published>2023-09-20T05:17:43.000Z</published>
    <updated>2023-09-21T06:13:57.810Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在<a href="https://rainmakerho.github.io/2023/09/19/sk-vscode-settings/">Semantic Kernel VSCode 環境設定</a>已將 VSCode 環境設定好。<br>再來建立一個 說笑話的 Skill 來練習。</p><h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><p>建立 <code>skills\Joke</code> 目錄，新增 <code>config.json</code> 及 <code>skprompt.txt</code>，</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;schema&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Generate a funny joke&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;completion&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;completion&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;max_tokens&quot;</span><span class="punctuation">:</span> <span class="number">1000</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;temperature&quot;</span><span class="punctuation">:</span> <span class="number">0.9</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;top_p&quot;</span><span class="punctuation">:</span> <span class="number">0.0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;presence_penalty&quot;</span><span class="punctuation">:</span> <span class="number">0.0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;frequency_penalty&quot;</span><span class="punctuation">:</span> <span class="number">0.0</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;input&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;parameters&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;input&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Joke subject&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;defaultValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;style&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Give a hint about the desired joke style&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;defaultValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">準確寫出一個關於以下主題的笑話或幽默故事</span><br><span class="line"></span><br><span class="line">笑話必須是：</span><br><span class="line">- 工作場所/家庭安全</span><br><span class="line">沒有性別歧視、種族主義或其他偏見/偏執</span><br><span class="line"></span><br><span class="line">要有創意且有趣。</span><br><span class="line">合併樣式建議（如果提供）：&#123;&#123;$style&#125;&#125;</span><br><span class="line">+++++</span><br><span class="line"></span><br><span class="line">&#123;&#123;$input&#125;&#125;</span><br><span class="line">+++++</span><br></pre></td></tr></table></figure><p>再來就是建立 <code>00-getting-started-2.ipynb</code> 來一步步測試，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!import config/SettingsReader.cs</span></span><br><span class="line"><span class="comment">//使用最新的 preview 版本</span></span><br><span class="line"><span class="meta">#r &quot;nuget:Microsoft.SemanticKernel, *-*&quot;</span></span><br></pre></td></tr></table></figure><p>這裡使用版本號使用 <code>*-*&quot;</code> 表示取得 最新的 Preview 版本</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Microsoft.SemanticKernel;</span><br><span class="line"><span class="comment">//Create Kernel Builder</span></span><br><span class="line"><span class="keyword">var</span> builder = <span class="keyword">new</span> KernelBuilder();</span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> aiAlais = <span class="string">&quot;gpt&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> config = SettingsReader.LoadFromFile(<span class="keyword">alias</span>:<span class="string">&quot;gpt&quot;</span>).FirstOrDefault();</span><br><span class="line">builder.WithAzureChatCompletionService(config.model, config.endpoint, config.apikey);</span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> skillsFolder = <span class="string">&quot;skills&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> skillsDirectory = Path.Combine(Directory.GetCurrentDirectory(), skillsFolder);</span><br><span class="line"><span class="keyword">var</span> funSkillsFolder = <span class="string">&quot;FunSkill&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> funSkillFunctions = kernel.ImportSemanticSkillFromDirectory(skillsDirectory, funSkillsFolder);</span><br><span class="line"><span class="keyword">var</span> result = <span class="keyword">await</span> funSkillFunctions[<span class="string">&quot;Joke&quot;</span>].InvokeAsync(<span class="string">&quot;穿越到凡人修仙時代&quot;</span>);</span><br><span class="line">Console.WriteLine(result);</span><br></pre></td></tr></table></figure><img src="/2023/09/20/sk-getting-started/01.png" class="" title="joke-skill"><p>從上面可以發現，只要透過 <code>config.json</code> 及 <code>skprompt.txt</code> 就可以建立 Skill，<br>然後透過 SemanticKernel 將它 Import 進來，就可以使用它了。<br><code>skprompt.txt</code>中的<code>&#123;&#123;$input&#125;&#125;</code>會被取代成<code>穿越到凡人修仙時代</code></p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://github.com/microsoft/semantic-kernel/blob/main/dotnet/notebooks/00-getting-started.ipynb">00-getting-started.ipynb</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;在&lt;a href=&quot;https://rainmakerho.github.io/2023/09/19/sk-vscode-settings/</summary>
      
    
    
    
    
    <category term="SK" scheme="https://rainmakerho.github.io/tags/SK/"/>
    
    <category term="Semantic Kernel" scheme="https://rainmakerho.github.io/tags/Semantic-Kernel/"/>
    
    <category term="Skill" scheme="https://rainmakerho.github.io/tags/Skill/"/>
    
    <category term="Joke" scheme="https://rainmakerho.github.io/tags/Joke/"/>
    
    <category term="WithAzureChatCompletionService" scheme="https://rainmakerho.github.io/tags/WithAzureChatCompletionService/"/>
    
    <category term="ImportSemanticSkillFromDirectory" scheme="https://rainmakerho.github.io/tags/ImportSemanticSkillFromDirectory/"/>
    
  </entry>
  
  <entry>
    <title>SK-Semantic Kernel VSCode 環境設定</title>
    <link href="https://rainmakerho.github.io/2023/09/19/sk-vscode-settings/"/>
    <id>https://rainmakerho.github.io/2023/09/19/sk-vscode-settings/</id>
    <published>2023-09-19T09:51:43.000Z</published>
    <updated>2023-09-20T06:29:12.032Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>想要達到企業級的 AI 解決方案，往往需要多個步驟來完成。<br>例如我們要做一個客服的 Bot，可能會有以下幾個步驟，</p><p>1.將資文件資料分章節把資料轉成 Embedding 存到 DB</p><p>2.把使用者輸入的問題也轉成 Embedding</p><p>3.拿使用者輸入問題的 Embedding 與 DB 中的 Embedding 比較，取出相似度高的</p><p>4.取出使用者輸入問題的 NER ，判斷是否需要到 系統資料庫之中查詢，例如訂單號碼<br>…<br>這時可以透過<a href="https://github.com/microsoft/semantic-kernel/tree/main">Semantic Kernel</a>來將這些功能建立<a href="https://learn.microsoft.com/en-us/semantic-kernel/ai-orchestration/plugins/?tabs=Csharp">Skill&#x2F;plugin</a>，<br>並且可以透過 Planner 的方式來將這些 Task 整合起來。</p><h3 id="VSCode-環境設定"><a href="#VSCode-環境設定" class="headerlink" title="VSCode 環境設定"></a>VSCode 環境設定</h3><p>環境: VSCode, .NET</p><p>在 VSCode 做這測試時，通常會建立 <strong>ipynb</strong> 檔案來練習，<br>而我們是透過 .NET 來練習，<br>所以請在 VSCode 中安裝<a href="https://marketplace.visualstudio.com/items?itemName=ms-dotnettools.dotnet-interactive-vscode">Polyglot Notebooks</a>這個擴充。</p><p>因為在測試中，常常會使用到 OpenAI 的設定值，所以可以將存起來。<br>可依<a href="https://github.com/microsoft/semantic-kernel/blob/main/dotnet/notebooks/0-AI-settings.ipynb">0-AI-settings.ipynb</a>來測試透過 <code>Settings.cs</code> 來操作設定檔。</p><h3 id="讀取-Azure-OpenAI-設定"><a href="#讀取-Azure-OpenAI-設定" class="headerlink" title="讀取 Azure OpenAI 設定"></a>讀取 Azure OpenAI 設定</h3><p>筆者會使用 Azure OpenAI 的 <code>gpt-35-turbo</code> 及 <code>text-embedding-ada-002</code>，<br>所以仿 <a href="https://github.com/microsoft/semantic-kernel/blob/main/dotnet/notebooks/0-AI-settings.ipynb">0-AI-settings.ipynb</a> 的方式，建立 config 來記錄多項 OpenAI 的設定。<br>所以我在 config 目錄中建立 <code>aiSettings.json</code>，如下，</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;azure&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;部署名稱&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;endpoint&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://myopenai.openai.azure.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;apikey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;服務的apikey&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;org&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;alais&quot;</span><span class="punctuation">:</span> <span class="string">&quot;gpt&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;azure&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;部署名稱&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;endpoint&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://myopenai.openai.azure.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;apikey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;服務的apikey&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;org&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;alais&quot;</span><span class="punctuation">:</span> <span class="string">&quot;embedding&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p>再透過 <code>SettingsReader.cs</code> 來取得想要的設定，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Text.Json;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> Microsoft.DotNet.Interactive;</span><br><span class="line"><span class="keyword">using</span> InteractiveKernel = Microsoft.DotNet.Interactive.Kernel;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">SettingsReader</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">const</span> <span class="built_in">string</span> DefaultConfigFile = <span class="string">&quot;config/aiSettings.json&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">const</span> <span class="built_in">string</span> TypeKey = <span class="string">&quot;type&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">const</span> <span class="built_in">string</span> ModelKey = <span class="string">&quot;model&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">const</span> <span class="built_in">string</span> EndpointKey = <span class="string">&quot;endpoint&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">const</span> <span class="built_in">string</span> SecretKey = <span class="string">&quot;apikey&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">const</span> <span class="built_in">string</span> OrgKey = <span class="string">&quot;org&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">const</span> <span class="built_in">string</span> AlaisKey = <span class="string">&quot;alais&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">record</span> <span class="keyword">struct</span> <span class="title">Settings</span>(<span class="params"><span class="built_in">string</span> type, <span class="built_in">string</span> model, <span class="built_in">string</span> endpoint, <span class="built_in">string</span> apikey, <span class="built_in">string</span> org, <span class="built_in">string</span> alais</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> IEnumerable&lt;Settings&gt;</span></span><br><span class="line"><span class="function">        <span class="title">LoadFromFile</span>(<span class="params"><span class="built_in">string</span> configFile = DefaultConfigFile, <span class="built_in">string</span> <span class="keyword">alias</span> = <span class="string">&quot;&quot;</span></span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!File.Exists(configFile))</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Configuration not found: &quot;</span> + configFile);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;\nPlease run the Setup Notebook (0-AI-settings.ipynb) to configure your AI backend first.\n&quot;</span>);</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">&quot;Configuration not found, please setup the notebooks first using notebook 0-AI-settings.pynb&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> settings = JsonSerializer.Deserialize&lt;List&lt;Settings&gt;&gt;(File.ReadAllText(configFile));</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">string</span>.IsNullOrEmpty(<span class="keyword">alias</span>))</span><br><span class="line">                <span class="keyword">return</span> settings;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> settings.Where(config =&gt; config.alais == <span class="keyword">alias</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (Exception e)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Something went wrong: &quot;</span> + e.Message);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> List&lt;Settings&gt;();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在測試 OpenAI 的 ipynb 如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!import config/SettingsReader.cs</span></span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> settings = SettingsReader.LoadFromFile();</span><br><span class="line">settings</span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> gptConfig = SettingsReader.LoadFromFile(<span class="keyword">alias</span>:<span class="string">&quot;gpt&quot;</span>).FirstOrDefault();</span><br><span class="line">gptConfig</span><br></pre></td></tr></table></figure><img src="/2023/09/19/sk-vscode-settings/01.png" class="" title="ipynb"><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://github.com/microsoft/semantic-kernel/tree/main">Semantic Kernel Github</a><br><a href="https://github.com/kinfey/dotNETOAIBooks">Learn Azure OpenAI Service with .NET</a><br><a href="https://marketplace.visualstudio.com/items?itemName=ms-dotnettools.dotnet-interactive-vscode">Polyglot Notebooks</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;想要達到企業級的 AI 解決方案，往往需要多個步驟來完成。&lt;br&gt;例如我們要做一個客服的 Bot，可能會有以下幾個步驟，&lt;/p&gt;
&lt;p&gt;1.</summary>
      
    
    
    
    
    <category term="VSCode" scheme="https://rainmakerho.github.io/tags/VSCode/"/>
    
    <category term="SK" scheme="https://rainmakerho.github.io/tags/SK/"/>
    
    <category term="Semantic Kernel" scheme="https://rainmakerho.github.io/tags/Semantic-Kernel/"/>
    
  </entry>
  
  <entry>
    <title>Node 升到 v18 後，執行 Bot Framework Node 版 Bot 時，會出現 TypeError ... Readable</title>
    <link href="https://rainmakerho.github.io/2023/09/19/node-bot-framework-typeerror-cannot-set-property-closed-restify/"/>
    <id>https://rainmakerho.github.io/2023/09/19/node-bot-framework-typeerror-cannot-set-property-closed-restify/</id>
    <published>2023-09-19T08:20:06.000Z</published>
    <updated>2023-09-19T08:41:46.919Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>目前使用的 Node 版本為 <code>V18.17.1</code> ，透過 <code>yo botbuilder</code> 建立好 Bot 後。<br>執行 <code>npm start</code> 就會噴錯，如下，</p><blockquote><p>Request.prototype.closed &#x3D; function closed() {<br>TypeError: Cannot set property closed of #<Readable> which has only a getter<br>at patch (C:\projects\xbot\node_modules\restify\lib\request.js:848:30)</p></blockquote><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p><code>package.json</code> 中 <code>restify</code> 套件的版本是 <code>~8.5.1</code> ，<br>可以依 <a href="https://github.com/restify/node-restify/issues/1925">TypeError: Cannot set property closed of #<Readable> which has only a getter</a> 方式，先將 <code>restify</code>套件 移除，再安裝最新的 <code>restify</code>套件(<code>^11.1.0</code>)，如下，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm remove restify</span><br><span class="line">npm i restify</span><br></pre></td></tr></table></figure><p>或是將 package.json 中的 <code>restify</code>套件版本改成 <code>^11.1.0</code>，<br>再執行 <code>npm install</code></p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://github.com/restify/node-restify/issues/1925">TypeError: Cannot set property closed of #<Readable> which has only a getter</a><br><a href="https://learn.microsoft.com/en-us/azure/bot-service/bot-service-quickstart-create-bot?view=azure-bot-service-4.0&tabs=csharp,vs">Create a bot with the Bot Framework SDK</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;目前使用的 Node 版本為 &lt;code&gt;V18.17.1&lt;/code&gt; ，透過 &lt;code&gt;yo botbuilder&lt;/code&gt; 建立</summary>
      
    
    
    
    
    <category term="Node" scheme="https://rainmakerho.github.io/tags/Node/"/>
    
    <category term="restify" scheme="https://rainmakerho.github.io/tags/restify/"/>
    
    <category term="TypeError" scheme="https://rainmakerho.github.io/tags/TypeError/"/>
    
    <category term="Readable" scheme="https://rainmakerho.github.io/tags/Readable/"/>
    
    <category term="V18" scheme="https://rainmakerho.github.io/tags/V18/"/>
    
  </entry>
  
  <entry>
    <title>VSCode ipynb 檔中執行套件參加時，發生 cannot be added because version ... was added previously 錯誤</title>
    <link href="https://rainmakerho.github.io/2023/09/19/ipynb-package-cannot-be-added-version-was-added-previously/"/>
    <id>https://rainmakerho.github.io/2023/09/19/ipynb-package-cannot-be-added-version-was-added-previously/</id>
    <published>2023-09-19T03:47:38.000Z</published>
    <updated>2023-09-19T06:14:47.104Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>在 VSCode 的 ipynb 中，如果已執行過加入套件參考後，修改套件的版本號，再執行，就會發生 <strong>Error: &lt;你的套件&gt; version &lt;新版本號&gt; cannot be added because version &lt;已加入的版本號&gt; was added previously.</strong><br>這時要怎麼解決呢?</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>因為先前版本已被加入參考，所以要參考<strong>不同版本</strong>套件時，<br>請按下工具列中的<strong>Clear All Outputs</strong> 再按下，<strong>Restart</strong>來將已參考的套件清除掉。</p><img src="/2023/09/19/ipynb-package-cannot-be-added-version-was-added-previously/01.png" class="" title="Restart"><p>再重新執行一次就可以順利使用新版本的套件了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;在 VSCode 的 ipynb 中，如果已執行過加入套件參考後，修改套件的版本號，再執行，就會發生 &lt;strong&gt;Error: &amp;lt;</summary>
      
    
    
    
    
    <category term="ipynb" scheme="https://rainmakerho.github.io/tags/ipynb/"/>
    
    <category term="nuget" scheme="https://rainmakerho.github.io/tags/nuget/"/>
    
    <category term="package" scheme="https://rainmakerho.github.io/tags/package/"/>
    
    <category term="vscode" scheme="https://rainmakerho.github.io/tags/vscode/"/>
    
  </entry>
  
  <entry>
    <title>Jenkins, Build step &#39;PowerShell&#39; marked build as failure</title>
    <link href="https://rainmakerho.github.io/2023/08/30/jenkins-powershell-marked-build-as-failure/"/>
    <id>https://rainmakerho.github.io/2023/08/30/jenkins-powershell-marked-build-as-failure/</id>
    <published>2023-08-30T09:05:30.000Z</published>
    <updated>2023-08-30T09:46:56.956Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>最近透過 Jenkins 執行 Powershell Script 時，<br>明明沒有錯誤，但最後卻會說 <strong>Finished: FAILURE</strong></p><blockquote><p>Build step ‘PowerShell’ marked build as failure<br>Finished: FAILURE</p></blockquote><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>看<code>主控台輸出</code>的內容，完全沒有任何的錯誤。<br>只有以下的警告訊息，</p><blockquote><p>WARNING: 系統找不到指定的檔案。<br>logs<br>Scan WARNINGS: 1</p></blockquote><p>所以檢查一下，多給了那個 logs ，將它移除後，就正常了。</p><p>不過，另一個 Jenkins 專案也是有一樣的警告，但卻是成功狀態。<br>差別是在成功的那個專案，發出警告的 Powershell Script 後面還有其他的 Script。<br>判斷有可能是看最後執行的 Script ，有警告、錯誤都會算是<strong>FAILURE</strong>。</p><p>所以我在最後面多加上 <code>exit 0</code> 讓它成功執行，<br>就不會讓 Jenkins 判斷 PowerShell 錯誤了哦~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;最近透過 Jenkins 執行 Powershell Script 時，&lt;br&gt;明明沒有錯誤，但最後卻會說 &lt;strong&gt;Finished</summary>
      
    
    
    
    
    <category term="jenkins" scheme="https://rainmakerho.github.io/tags/jenkins/"/>
    
    <category term="powershell" scheme="https://rainmakerho.github.io/tags/powershell/"/>
    
    <category term="failure" scheme="https://rainmakerho.github.io/tags/failure/"/>
    
  </entry>
  
  <entry>
    <title>SyntaxError Unexpected token ?</title>
    <link href="https://rainmakerho.github.io/2023/08/30/typescript-syntaxerror-unexpected-token/"/>
    <id>https://rainmakerho.github.io/2023/08/30/typescript-syntaxerror-unexpected-token/</id>
    <published>2023-08-30T07:35:00.000Z</published>
    <updated>2023-08-30T07:43:02.206Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>在本機上建置沒問題後，將 Node.js 程式透過 Jenkins 建置，<br>結果在 <code>tsc</code> 時，卻出現 **SyntaxError: Unexpected token ?**的錯誤，</p><blockquote><p>node_modules\typescript\lib\tsc.js:93<br>for (let i &#x3D; startIndex ?? 0; i &lt; array.length; i++)<br>SyntaxError: Unexpected token ?<br>at Module._compile (internal&#x2F;modules&#x2F;cjs&#x2F;loader.js:723:23)</p></blockquote><h3 id="解決"><a href="#解決" class="headerlink" title="解決"></a>解決</h3><p>在 本機 上建置沒問題，怎麼透過 Jenkins Auto Build 卻出錯了呢?<br>於是先檢查一下，發現 Build Server 的 Node 版本是使用 <code>10.24.1</code>，<br>手動執行 <code>tsc</code> 果然出現一樣的錯誤。<br>使用 <code>nvm</code> 切到 <code>16.18.1</code> 執行 <code>npx tsc</code> 就沒有問題了。<br>所以在 Jenkins 的 Powershell Script 先加入切換到正確的 node 版本，如下，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nvm <span class="built_in">ls</span></span><br><span class="line">nvm use v16.18.1</span><br><span class="line">nvm <span class="built_in">ls</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;在本機上建置沒問題後，將 Node.js 程式透過 Jenkins 建置，&lt;br&gt;結果在 &lt;code&gt;tsc&lt;/code&gt; 時，卻出現 **</summary>
      
    
    
    
    
    <category term="typescript" scheme="https://rainmakerho.github.io/tags/typescript/"/>
    
    <category term="SyntaxError" scheme="https://rainmakerho.github.io/tags/SyntaxError/"/>
    
    <category term="Unexpected token" scheme="https://rainmakerho.github.io/tags/Unexpected-token/"/>
    
  </entry>
  
  <entry>
    <title>自造字(EUDC)無法在 Crystal Report Viewer 中呈現</title>
    <link href="https://rainmakerho.github.io/2023/08/23/crystal-viewer-eudc-font-missing/"/>
    <id>https://rainmakerho.github.io/2023/08/23/crystal-viewer-eudc-font-missing/</id>
    <published>2023-08-23T07:53:25.000Z</published>
    <updated>2023-08-23T08:04:28.733Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>最近系統透過 Chrome 開 Crystal Report 報表時，自造字會無法呈現，只會顯示一個空白框。</p><img src="/2023/08/23/crystal-viewer-eudc-font-missing/01.png" class="" title="空白框"><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>參考 <a href="https://rainmakerho.github.io/2022/10/28/ms-reporting-service-add-custom-font-woff-ttf/">為 SQL Server Reporting Services (SSRS) Preview 報表加上自造字(EUDC Font) Support</a> 為 Body 設定 <code>font-family: &quot;EUDC&quot;</code>，但自造字還是沒有顯示出來，如下，</p><img src="/2023/08/23/crystal-viewer-eudc-font-missing/02.png" class="" title="EUDC"><p>可以從上圖中發現，設定的 EUDC 字型沒有套用到，因為自造字有使用 class 套用，<br>所以優先使用那個 class 。<br>那怎麼辦呢? 加上 <code>!important</code> 來強制使用，如下，</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&quot;EUDC&quot;</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以，這樣自造字就顯示出來了。</p><img src="/2023/08/23/crystal-viewer-eudc-font-missing/03.png" class="" title="!important"><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://rainmakerho.github.io/2022/10/28/ms-reporting-service-add-custom-font-woff-ttf/">為 SQL Server Reporting Services (SSRS) Preview 報表加上自造字(EUDC Font) Support</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;最近系統透過 Chrome 開 Crystal Report 報表時，自造字會無法呈現，只會顯示一個空白框。&lt;/p&gt;
&lt;img src=&quot;/</summary>
      
    
    
    
    
    <category term="空白框" scheme="https://rainmakerho.github.io/tags/%E7%A9%BA%E7%99%BD%E6%A1%86/"/>
    
    <category term="EUDC" scheme="https://rainmakerho.github.io/tags/EUDC/"/>
    
    <category term="Crystal Report" scheme="https://rainmakerho.github.io/tags/Crystal-Report/"/>
    
    <category term="CrystalDecisions.Web" scheme="https://rainmakerho.github.io/tags/CrystalDecisions-Web/"/>
    
  </entry>
  
  <entry>
    <title>用了 DOMPurify.sanitize Checkmarx 還是噴 Client DOM XSS/Client DOM Stored XSS?</title>
    <link href="https://rainmakerho.github.io/2023/08/21/checkmark-client-dom-xss-stored-xss/"/>
    <id>https://rainmakerho.github.io/2023/08/21/checkmark-client-dom-xss-stored-xss/</id>
    <published>2023-08-21T09:06:01.000Z</published>
    <updated>2023-08-21T09:19:45.419Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>程式中用了 <code>DOMPurify.sanitize</code> 來處理 XSS ，結果 Checkmarx 還是會噴 <strong>Client DOM XSS</strong> 或是 <strong>Client DOM Stored XSS</strong> 的問題，怎麼辦?</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>請確認 Checkmarx 是否在 <strong>Checkmarx V9.4.5 HF16</strong>。</p><p>在 Checkmarx V9.4.5 HF16 後，原本使用<code>DOMPurify.sanitize</code>的程式碼，<br>會被掃出有 Client DOM Stored XSS or Client DOM XSS 的 Issue。例如，</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="title class_">DOMPurify</span>.<span class="title function_">sanitize</span>(<span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">search</span>);</span><br><span class="line"><span class="keyword">var</span> d = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">d.<span class="property">innerHTML</span> = x;</span><br><span class="line"><span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(d);</span><br></pre></td></tr></table></figure><p>那是因為 Checkmarx V9.4.5 HF16 有特別針對 <code>DOMPurify.sanitize</code> 來判斷，<br>如果使用 DOMPurify.sanitize ，程式碼中一定要有 <code>requireDOMpurify</code><br>不過，在一般直接引用 <code>dist/purify.min.js</code> ，並不會用到 require 去載 purify.js 。<br>如果是這種狀況，檢視程式碼，確定有引用 <code>DOMPurify</code>，並使用 <code>DOMPurify.sanitize</code> 消毒，則建議設定為 <strong>不可利用</strong></p><blockquote><p>如果客戶不接受說明，只能接受在 Checkmarx 報告中，沒有任何的 Issue 出現，怎麼辦?<br>那只好做個假的出來讓 Checkmarx 覺得它在，如下，</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//以下是讓  Checkmarx V9.4.5 HF16 針對 DOMPurify.sanitize 可以 Pass 的 JS Code</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">require</span>(<span class="params">val</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (val === <span class="string">&quot;dompurify&quot;</span>) <span class="keyword">return</span> <span class="variable language_">window</span>.<span class="property">DOMPurify</span>;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> createDOMPurify = <span class="built_in">require</span>(<span class="string">&quot;dompurify&quot;</span>);</span><br><span class="line"><span class="title function_">createDOMPurify</span>(<span class="variable language_">window</span>);</span><br></pre></td></tr></table></figure><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://rainmakerho.github.io/2021/11/18/Client-Heuristic-Poor-XSS-Validation/">Checkmarx Client_Heuristic_Poor_XSS_Validation</a><br><a href="https://github.com/rainmakerho/Vulnerability-Analysis/issues/3">Client_DOM_XSS&#x2F;Client DOM Stored XSS - Checkmarx V9.4.5 HF16</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;程式中用了 &lt;code&gt;DOMPurify.sanitize&lt;/code&gt; 來處理 XSS ，結果 Checkmarx 還是會噴 &lt;stro</summary>
      
    
    
    
    
    <category term="Checkmarx" scheme="https://rainmakerho.github.io/tags/Checkmarx/"/>
    
    <category term="Client DOM Stored XSS" scheme="https://rainmakerho.github.io/tags/Client-DOM-Stored-XSS/"/>
    
    <category term="Client DOM XSS" scheme="https://rainmakerho.github.io/tags/Client-DOM-XSS/"/>
    
  </entry>
  
</feed>
