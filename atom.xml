<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>亂馬客</title>
  <icon>https://www.gravatar.com/avatar/cd3aed042ccd7a5a5d9956b0bc07dc81</icon>
  <subtitle>Re:從零開始的軟體開發生活</subtitle>
  <link href="https://rainmakerho.github.io/atom.xml" rel="self"/>
  
  <link href="https://rainmakerho.github.io/"/>
  <updated>2023-09-19T03:57:04.648Z</updated>
  <id>https://rainmakerho.github.io/</id>
  
  <author>
    <name>亂馬客</name>
    <email>rainmaker_ho@gss.com.tw</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>VSCode ipynb 檔中執行套件參加時，發生 cannot be added because version ... was added previously 錯誤</title>
    <link href="https://rainmakerho.github.io/2023/09/19/ipynb-package-cannot-be-added-version-was-added-previously/"/>
    <id>https://rainmakerho.github.io/2023/09/19/ipynb-package-cannot-be-added-version-was-added-previously/</id>
    <published>2023-09-19T03:47:38.000Z</published>
    <updated>2023-09-19T03:57:04.648Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>在 VSCode 的 ipynb 中，如果已執行過加入套件參考後，修改套件的版本號，再執行，就會發生 <strong>Error: &lt;你的套件&gt; version &lt;新版本號&gt; cannot be added because version &lt;已加入的版本號&gt; was added previously.</strong><br>這時要怎麼解決呢?</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>因為先前版本已被加入參考，所以要參考<strong>不同版本</strong>套件時，<br>請按下工具列中的<strong>Restart</strong>來將已參考的套件清除掉。</p><img src="/2023/09/19/ipynb-package-cannot-be-added-version-was-added-previously/01.png" class="" title="Restart"><p>再重新執行一次就可以順利使用新版本的套件了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;在 VSCode 的 ipynb 中，如果已執行過加入套件參考後，修改套件的版本號，再執行，就會發生 &lt;strong&gt;Error: &amp;lt;</summary>
      
    
    
    
    
    <category term="ipynb" scheme="https://rainmakerho.github.io/tags/ipynb/"/>
    
    <category term="nuget" scheme="https://rainmakerho.github.io/tags/nuget/"/>
    
    <category term="package" scheme="https://rainmakerho.github.io/tags/package/"/>
    
    <category term="vscode" scheme="https://rainmakerho.github.io/tags/vscode/"/>
    
  </entry>
  
  <entry>
    <title>Jenkins, Build step &#39;PowerShell&#39; marked build as failure</title>
    <link href="https://rainmakerho.github.io/2023/08/30/jenkins-powershell-marked-build-as-failure/"/>
    <id>https://rainmakerho.github.io/2023/08/30/jenkins-powershell-marked-build-as-failure/</id>
    <published>2023-08-30T09:05:30.000Z</published>
    <updated>2023-08-30T09:46:56.956Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>最近透過 Jenkins 執行 Powershell Script 時，<br>明明沒有錯誤，但最後卻會說 <strong>Finished: FAILURE</strong></p><blockquote><p>Build step ‘PowerShell’ marked build as failure<br>Finished: FAILURE</p></blockquote><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>看<code>主控台輸出</code>的內容，完全沒有任何的錯誤。<br>只有以下的警告訊息，</p><blockquote><p>WARNING: 系統找不到指定的檔案。<br>logs<br>Scan WARNINGS: 1</p></blockquote><p>所以檢查一下，多給了那個 logs ，將它移除後，就正常了。</p><p>不過，另一個 Jenkins 專案也是有一樣的警告，但卻是成功狀態。<br>差別是在成功的那個專案，發出警告的 Powershell Script 後面還有其他的 Script。<br>判斷有可能是看最後執行的 Script ，有警告、錯誤都會算是<strong>FAILURE</strong>。</p><p>所以我在最後面多加上 <code>exit 0</code> 讓它成功執行，<br>就不會讓 Jenkins 判斷 PowerShell 錯誤了哦~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;最近透過 Jenkins 執行 Powershell Script 時，&lt;br&gt;明明沒有錯誤，但最後卻會說 &lt;strong&gt;Finished</summary>
      
    
    
    
    
    <category term="jenkins" scheme="https://rainmakerho.github.io/tags/jenkins/"/>
    
    <category term="powershell" scheme="https://rainmakerho.github.io/tags/powershell/"/>
    
    <category term="failure" scheme="https://rainmakerho.github.io/tags/failure/"/>
    
  </entry>
  
  <entry>
    <title>SyntaxError Unexpected token ?</title>
    <link href="https://rainmakerho.github.io/2023/08/30/typescript-syntaxerror-unexpected-token/"/>
    <id>https://rainmakerho.github.io/2023/08/30/typescript-syntaxerror-unexpected-token/</id>
    <published>2023-08-30T07:35:00.000Z</published>
    <updated>2023-08-30T07:43:02.206Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>在本機上建置沒問題後，將 Node.js 程式透過 Jenkins 建置，<br>結果在 <code>tsc</code> 時，卻出現 **SyntaxError: Unexpected token ?**的錯誤，</p><blockquote><p>node_modules\typescript\lib\tsc.js:93<br>for (let i &#x3D; startIndex ?? 0; i &lt; array.length; i++)<br>SyntaxError: Unexpected token ?<br>at Module._compile (internal&#x2F;modules&#x2F;cjs&#x2F;loader.js:723:23)</p></blockquote><h3 id="解決"><a href="#解決" class="headerlink" title="解決"></a>解決</h3><p>在 本機 上建置沒問題，怎麼透過 Jenkins Auto Build 卻出錯了呢?<br>於是先檢查一下，發現 Build Server 的 Node 版本是使用 <code>10.24.1</code>，<br>手動執行 <code>tsc</code> 果然出現一樣的錯誤。<br>使用 <code>nvm</code> 切到 <code>16.18.1</code> 執行 <code>npx tsc</code> 就沒有問題了。<br>所以在 Jenkins 的 Powershell Script 先加入切換到正確的 node 版本，如下，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nvm <span class="built_in">ls</span></span><br><span class="line">nvm use v16.18.1</span><br><span class="line">nvm <span class="built_in">ls</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;在本機上建置沒問題後，將 Node.js 程式透過 Jenkins 建置，&lt;br&gt;結果在 &lt;code&gt;tsc&lt;/code&gt; 時，卻出現 **</summary>
      
    
    
    
    
    <category term="typescript" scheme="https://rainmakerho.github.io/tags/typescript/"/>
    
    <category term="SyntaxError" scheme="https://rainmakerho.github.io/tags/SyntaxError/"/>
    
    <category term="Unexpected token" scheme="https://rainmakerho.github.io/tags/Unexpected-token/"/>
    
  </entry>
  
  <entry>
    <title>自造字(EUDC)無法在 Crystal Report Viewer 中呈現</title>
    <link href="https://rainmakerho.github.io/2023/08/23/crystal-viewer-eudc-font-missing/"/>
    <id>https://rainmakerho.github.io/2023/08/23/crystal-viewer-eudc-font-missing/</id>
    <published>2023-08-23T07:53:25.000Z</published>
    <updated>2023-08-23T08:04:28.733Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>最近系統透過 Chrome 開 Crystal Report 報表時，自造字會無法呈現，只會顯示一個空白框。</p><img src="/2023/08/23/crystal-viewer-eudc-font-missing/01.png" class="" title="空白框"><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>參考 <a href="https://rainmakerho.github.io/2022/10/28/ms-reporting-service-add-custom-font-woff-ttf/">為 SQL Server Reporting Services (SSRS) Preview 報表加上自造字(EUDC Font) Support</a> 為 Body 設定 <code>font-family: &quot;EUDC&quot;</code>，但自造字還是沒有顯示出來，如下，</p><img src="/2023/08/23/crystal-viewer-eudc-font-missing/02.png" class="" title="EUDC"><p>可以從上圖中發現，設定的 EUDC 字型沒有套用到，因為自造字有使用 class 套用，<br>所以優先使用那個 class 。<br>那怎麼辦呢? 加上 <code>!important</code> 來強制使用，如下，</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&quot;EUDC&quot;</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以，這樣自造字就顯示出來了。</p><img src="/2023/08/23/crystal-viewer-eudc-font-missing/03.png" class="" title="!important"><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://rainmakerho.github.io/2022/10/28/ms-reporting-service-add-custom-font-woff-ttf/">為 SQL Server Reporting Services (SSRS) Preview 報表加上自造字(EUDC Font) Support</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;最近系統透過 Chrome 開 Crystal Report 報表時，自造字會無法呈現，只會顯示一個空白框。&lt;/p&gt;
&lt;img src=&quot;/</summary>
      
    
    
    
    
    <category term="空白框" scheme="https://rainmakerho.github.io/tags/%E7%A9%BA%E7%99%BD%E6%A1%86/"/>
    
    <category term="EUDC" scheme="https://rainmakerho.github.io/tags/EUDC/"/>
    
    <category term="Crystal Report" scheme="https://rainmakerho.github.io/tags/Crystal-Report/"/>
    
    <category term="CrystalDecisions.Web" scheme="https://rainmakerho.github.io/tags/CrystalDecisions-Web/"/>
    
  </entry>
  
  <entry>
    <title>用了 DOMPurify.sanitize Checkmarx 還是噴 Client DOM XSS/Client DOM Stored XSS?</title>
    <link href="https://rainmakerho.github.io/2023/08/21/checkmark-client-dom-xss-stored-xss/"/>
    <id>https://rainmakerho.github.io/2023/08/21/checkmark-client-dom-xss-stored-xss/</id>
    <published>2023-08-21T09:06:01.000Z</published>
    <updated>2023-08-21T09:19:45.419Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>程式中用了 <code>DOMPurify.sanitize</code> 來處理 XSS ，結果 Checkmarx 還是會噴 <strong>Client DOM XSS</strong> 或是 <strong>Client DOM Stored XSS</strong> 的問題，怎麼辦?</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>請確認 Checkmarx 是否在 <strong>Checkmarx V9.4.5 HF16</strong>。</p><p>在 Checkmarx V9.4.5 HF16 後，原本使用<code>DOMPurify.sanitize</code>的程式碼，<br>會被掃出有 Client DOM Stored XSS or Client DOM XSS 的 Issue。例如，</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="title class_">DOMPurify</span>.<span class="title function_">sanitize</span>(<span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">search</span>);</span><br><span class="line"><span class="keyword">var</span> d = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">d.<span class="property">innerHTML</span> = x;</span><br><span class="line"><span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(d);</span><br></pre></td></tr></table></figure><p>那是因為 Checkmarx V9.4.5 HF16 有特別針對 <code>DOMPurify.sanitize</code> 來判斷，<br>如果使用 DOMPurify.sanitize ，程式碼中一定要有 <code>requireDOMpurify</code><br>不過，在一般直接引用 <code>dist/purify.min.js</code> ，並不會用到 require 去載 purify.js 。<br>如果是這種狀況，檢視程式碼，確定有引用 <code>DOMPurify</code>，並使用 <code>DOMPurify.sanitize</code> 消毒，則建議設定為 <strong>不可利用</strong></p><blockquote><p>如果客戶不接受說明，只能接受在 Checkmarx 報告中，沒有任何的 Issue 出現，怎麼辦?<br>那只好做個假的出來讓 Checkmarx 覺得它在，如下，</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//以下是讓  Checkmarx V9.4.5 HF16 針對 DOMPurify.sanitize 可以 Pass 的 JS Code</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">require</span>(<span class="params">val</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (val === <span class="string">&quot;dompurify&quot;</span>) <span class="keyword">return</span> <span class="variable language_">window</span>.<span class="property">DOMPurify</span>;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> createDOMPurify = <span class="built_in">require</span>(<span class="string">&quot;dompurify&quot;</span>);</span><br><span class="line"><span class="title function_">createDOMPurify</span>(<span class="variable language_">window</span>);</span><br></pre></td></tr></table></figure><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://rainmakerho.github.io/2021/11/18/Client-Heuristic-Poor-XSS-Validation/">Checkmarx Client_Heuristic_Poor_XSS_Validation</a><br><a href="https://github.com/rainmakerho/Vulnerability-Analysis/issues/3">Client_DOM_XSS&#x2F;Client DOM Stored XSS - Checkmarx V9.4.5 HF16</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;程式中用了 &lt;code&gt;DOMPurify.sanitize&lt;/code&gt; 來處理 XSS ，結果 Checkmarx 還是會噴 &lt;stro</summary>
      
    
    
    
    
    <category term="Checkmarx" scheme="https://rainmakerho.github.io/tags/Checkmarx/"/>
    
    <category term="Client DOM Stored XSS" scheme="https://rainmakerho.github.io/tags/Client-DOM-Stored-XSS/"/>
    
    <category term="Client DOM XSS" scheme="https://rainmakerho.github.io/tags/Client-DOM-XSS/"/>
    
  </entry>
  
  <entry>
    <title>在 Express 上使用 discrod.js 來建置 Discord 機器人(Discord Bot)</title>
    <link href="https://rainmakerho.github.io/2023/08/11/discord-bot-node-js/"/>
    <id>https://rainmakerho.github.io/2023/08/11/discord-bot-node-js/</id>
    <published>2023-08-11T06:21:16.000Z</published>
    <updated>2023-08-30T07:34:16.406Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>本文介紹在 Node Express 上透過 <a href="https://old.discordjs.dev/#/docs/discord.js/main/general/welcome">discord.js</a>，<br>來讓 <strong>Discord Bot</strong> 上線，<br>並處理 User 在 Channel 跟 Bot 對話，<br>或 User 直接跟 Bot 對話(非 Channel) 的訊息處理。<br>例如，Bot 發送訊息到 Channel 、發送訊息給 User 或是針對訊息回覆(reply)。</p><h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><h4 id="建立-Discord-Bot"><a href="#建立-Discord-Bot" class="headerlink" title="建立 Discord Bot"></a>建立 Discord Bot</h4><p><strong>1.建立 Application (Bot)</strong><br>到 <a href="https://discord.com/developers/applications">Discord Developer Portal - Applications</a> 建立 Application (就是 Bot)。</p><img src="/2023/08/11/discord-bot-node-js/01.png" class="" title="New Application"><p><strong>2.設定 Application 基本資料</strong><br>在「General Information」Tab 設定 App Icon, Name, Description 及 Tags …等資料</p><p><strong>3.設定 OAuth2 -&gt; URL Generator</strong><br>在「OAuth2 -&gt; URL Generator」設定將 Bot 加到 Discord 伺服器的權限 URL，<br>在「SCOPES」需要 <strong>bot</strong>，「BOT PERMISSIONS」需要<strong>Send Messages</strong>，<br>移到最下面，將「GENERATED URL」內容 <strong>Copy</strong> 下來，<br>在 Browser 上開啟新的 Tab ，並貼上剛才 Copy 的 URL，</p><img src="/2023/08/11/discord-bot-node-js/02.png" class="" title="GENERATED URL"><p>將 Bot 加到某伺服器之中(如果選不到伺服器，請先新增伺服器)。</p><img src="/2023/08/11/discord-bot-node-js/03.png" class="" title="Add Bot to Guild"><p>授與 Bot 權限</p><img src="/2023/08/11/discord-bot-node-js/04.png" class="" title="Grent Permissions"><p>最後成功將 Bot 加到 伺服器 之中，</p><img src="/2023/08/11/discord-bot-node-js/05.png" class="" title="Grent Permissions"><p>在 伺服器 中，會顯示 bot3 出現的訊息，但目前為 <strong>離線</strong> 狀態。</p><img src="/2023/08/11/discord-bot-node-js/06.png" class="" title="Bot Status"><p><strong>4.Copy Bot Token</strong><br>切回到 Bot 設定的頁面，切到 「Bot」 Tab，<br>按下 <strong>Reset Token</strong>，並將 <strong>Token</strong> Copy 下來，</p><img src="/2023/08/11/discord-bot-node-js/07.png" class="" title="Copy Token"><p><strong>5.設定 Privileged Gateway Intents</strong><br>因為要讀取使用者的訊息，所以需要啟用<strong>MESSAGE CONTENT INTENT</strong>，</p><img src="/2023/08/11/discord-bot-node-js/08.png" class="" title="Privileged Gateway Intents"><h4 id="建立-Node-程式來處理-Bot"><a href="#建立-Node-程式來處理-Bot" class="headerlink" title="建立 Node 程式來處理 Bot"></a>建立 Node 程式來處理 Bot</h4><p><strong>1.建立 Node 程式並加入套件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> bot3</span><br><span class="line"><span class="built_in">cd</span> bot3</span><br><span class="line">npm init -y</span><br><span class="line">npm install express dotenv discord.js</span><br></pre></td></tr></table></figure><p>在 <code>package.json</code>中加入 <code>&quot;type&quot;: &quot;module&quot;</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;name&quot;</span>: <span class="string">&quot;bot3&quot;</span>,</span><br><span class="line">  <span class="string">&quot;version&quot;</span>: <span class="string">&quot;1.0.0&quot;</span>,</span><br><span class="line">  <span class="string">&quot;description&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="string">&quot;main&quot;</span>: <span class="string">&quot;index.js&quot;</span>,</span><br><span class="line">  <span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;test&quot;</span>: <span class="string">&quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;keywords&quot;</span>: [],</span><br><span class="line">  <span class="string">&quot;author&quot;</span>: <span class="string">&quot;Rainmaker Ho&quot;</span>,</span><br><span class="line">  <span class="string">&quot;license&quot;</span>: <span class="string">&quot;ISC&quot;</span>,</span><br><span class="line">  <span class="string">&quot;dependencies&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;discord.js&quot;</span>: <span class="string">&quot;^14.12.1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;dotenv&quot;</span>: <span class="string">&quot;^16.3.1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;express&quot;</span>: <span class="string">&quot;^4.18.2&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;type&quot;</span>: <span class="string">&quot;module&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>註: discord.js v14 需要 Node 版本在 16.11.0 以上哦~</li></ul><p><strong>2.設定 Bot Token 到 .env 中</strong><br>加入 <code>.evn</code>檔案，並加入 Bot Token 設定，如下，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DISCORD_TOKEN=剛才Copy的Token</span><br></pre></td></tr></table></figure><p><strong>3.新增 app.js 來處理 User 與 Bot 的訊息溝通</strong><br><strong>3.1.建立 express 網站</strong><br>建立簡單的 Express 網站，並設定<code>全域的bot</code>做為存放 Discord 的變數</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Client</span>, <span class="title class_">Events</span>, <span class="title class_">GatewayIntentBits</span>, <span class="title class_">Partials</span> &#125; <span class="keyword">from</span> <span class="string">&quot;discord.js&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> express <span class="keyword">from</span> <span class="string">&quot;express&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> dotenv <span class="keyword">from</span> <span class="string">&quot;dotenv&quot;</span>;</span><br><span class="line">dotenv.<span class="title function_">config</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="keyword">const</span> port = <span class="number">3000</span>;</span><br><span class="line"><span class="keyword">let</span> bot = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&quot;/&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">send</span>(<span class="string">&quot;Hello Discord Bot, Use Discord.js&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(port, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`app listening on port <span class="subst">$&#123;port&#125;</span>`</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>執行<code>node app.js</code>，開啟 Browser，URL 輸入<code>http://localhost:3000/</code>,<br>可以看到 <code>Hello Discord Bot, Use Discord.js</code>，就表示 Express 運作沒問題。</p><p><strong>3.2.連線&#x2F;啟動 Discord Bot，並處理訊息</strong><br>建立 <code> StartDiscordBots</code> function ，建立 <code>Client</code>物件來處理 Discord Bot 的訊息事件，<br>並設定<code>/start</code>Route，執行<code>StartDiscordBots</code>，如下，</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Client</span>, <span class="title class_">Events</span>, <span class="title class_">GatewayIntentBits</span>, <span class="title class_">Partials</span> &#125; <span class="keyword">from</span> <span class="string">&quot;discord.js&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> express <span class="keyword">from</span> <span class="string">&quot;express&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> dotenv <span class="keyword">from</span> <span class="string">&quot;dotenv&quot;</span>;</span><br><span class="line">dotenv.<span class="title function_">config</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="keyword">const</span> port = <span class="number">3000</span>;</span><br><span class="line"><span class="keyword">let</span> bot = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&quot;/&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">send</span>(<span class="string">&quot;Hello Discord Bot, Use Discord.js&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/start&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Bot Start ....`</span>);</span><br><span class="line">  <span class="keyword">if</span> (!bot.<span class="property">client</span>) &#123;</span><br><span class="line">    <span class="title class_">StartDiscordBots</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  res.<span class="title function_">send</span>(<span class="string">&quot;已啟動 Bot&quot;</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Bot End ....`</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(port, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`app listening on port <span class="subst">$&#123;port&#125;</span>`</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">StartDiscordBots</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> client = <span class="keyword">new</span> <span class="title class_">Client</span>(&#123;</span><br><span class="line">    <span class="attr">intents</span>: [</span><br><span class="line">      <span class="title class_">GatewayIntentBits</span>.<span class="property">Guilds</span>,</span><br><span class="line">      <span class="title class_">GatewayIntentBits</span>.<span class="property">GuildMessages</span>,</span><br><span class="line">      <span class="title class_">GatewayIntentBits</span>.<span class="property">MessageContent</span>,</span><br><span class="line">      <span class="title class_">GatewayIntentBits</span>.<span class="property">DirectMessages</span>,</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">partials</span>: [<span class="title class_">Partials</span>.<span class="property">Channel</span>, <span class="title class_">Partials</span>.<span class="property">Message</span>],</span><br><span class="line">  &#125;);</span><br><span class="line">  bot = &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="string">&quot;Bot3&quot;</span>,</span><br><span class="line">    <span class="attr">token</span>: process.<span class="property">env</span>.<span class="property">DISCORD_TOKEN</span>,</span><br><span class="line">    <span class="attr">client</span>: client,</span><br><span class="line">  &#125;;</span><br><span class="line">  client.<span class="title function_">on</span>(<span class="title class_">Events</span>.<span class="property">ClientReady</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`<span class="subst">$&#123;bot.id&#125;</span>: Ready <span class="subst">$&#123;client.user.tag&#125;</span>!`</span>);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  client.<span class="title function_">on</span>(<span class="title class_">Events</span>.<span class="property">MessageCreate</span>, <span class="function">(<span class="params">msg</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//不處理 bot 發送的訊息</span></span><br><span class="line">    <span class="keyword">if</span> (msg.<span class="property">author</span>.<span class="property">bot</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">const</span> content = <span class="string">`input:<span class="subst">$&#123;msg.content&#125;</span>, msgId:<span class="subst">$&#123;msg.id&#125;</span>, channelId:<span class="subst">$&#123;msg.channelId&#125;</span>`</span>;</span><br><span class="line">    <span class="keyword">if</span> (msg.<span class="property">guild</span>) &#123;</span><br><span class="line">      <span class="comment">//channel 中</span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Channel中=&gt;&gt;&gt;&quot;</span>, msg);</span><br><span class="line">      <span class="comment">//reply</span></span><br><span class="line">      msg.<span class="title function_">reply</span>(<span class="string">`echo:<span class="subst">$&#123;content&#125;</span>`</span>);</span><br><span class="line">      <span class="comment">//send 2 channel</span></span><br><span class="line">      msg.<span class="property">channel</span>.<span class="title function_">send</span>(<span class="string">`echo:<span class="subst">$&#123;content&#125;</span>`</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">//user對bot</span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;DM中=&gt;&gt;&gt;&quot;</span>, msg);</span><br><span class="line">      <span class="comment">//reply</span></span><br><span class="line">      msg.<span class="title function_">reply</span>(<span class="string">`echo:<span class="subst">$&#123;content&#125;</span>`</span>);</span><br><span class="line">      <span class="comment">//send 2 user</span></span><br><span class="line">      <span class="keyword">const</span> userId = msg.<span class="property">author</span>.<span class="property">id</span>;</span><br><span class="line">      bot.<span class="property">client</span>.<span class="property">users</span>.<span class="property">cache</span>.<span class="title function_">get</span>(userId).<span class="title function_">send</span>(<span class="string">`echo:<span class="subst">$&#123;content&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  client.<span class="title function_">login</span>(bot.<span class="property">token</span>).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(</span><br><span class="line">      <span class="string">`Discord Bot Login User:<span class="subst">$&#123;client.user.id&#125;</span>:<span class="subst">$&#123;client.user.displayName&#125;</span>`</span></span><br><span class="line">    );</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>執行<code>node app.js</code>，開啟 Browser，URL 輸入<code>http://localhost:3000/start</code>,<br>可以看到 <code>已啟動 Bot</code>。<br>切到 Discord 頁面，可以發現這時，<code>Bot3</code>已經上線了哦~</p><img src="/2023/08/11/discord-bot-node-js/12.png" class="" title="OnLine"><p>在 Channel 對話中輸入 <code>Hello Bot3</code>，<br>則可以看到 Bot 會回 2 個訊息，<br>一個是針對原訊息回覆(Reply), 一個是在 Chanel 中發送訊息(Send)，</p><img src="/2023/08/11/discord-bot-node-js/09.png" class="" title="Events.MessageCreate"><p>直接跟 Bot3 對話，輸入 <code>Bot3 DM</code>後，<br>可以看到 Bot 也是會回 2 個訊息，<br>一個是針對原訊息回覆(Reply), 一個是送訊息給 User(Send)，</p><img src="/2023/08/11/discord-bot-node-js/10.png" class="" title="User Direct Message"><img src="/2023/08/11/discord-bot-node-js/11.png" class="" title="Bot DM"><p><strong>3.3.發送訊息到 Channel</strong><br>上述是針對 User 發的訊息處理，如果是要由 Bot 發送訊息給 Channel，<br>需要有<code>ChannelId</code>，<code>ChannelId</code>可以從 Discord 的 URL 中取出來，<br>例如，<code>https://discord.com/channels/guildId/channelId</code><br>所以在 app.js 加入<code>Send2Channel</code> function 來處理將訊息送到 Channel 之中。<br>設定 <code>/sendC</code> Route 取得 QueryString 後，呼叫 <code>Send2Channel</code>，如下，</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Client</span>, <span class="title class_">Events</span>, <span class="title class_">GatewayIntentBits</span>, <span class="title class_">Partials</span> &#125; <span class="keyword">from</span> <span class="string">&quot;discord.js&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> express <span class="keyword">from</span> <span class="string">&quot;express&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> dotenv <span class="keyword">from</span> <span class="string">&quot;dotenv&quot;</span>;</span><br><span class="line">dotenv.<span class="title function_">config</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="keyword">const</span> port = <span class="number">3000</span>;</span><br><span class="line"><span class="keyword">let</span> bot = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&quot;/&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">send</span>(<span class="string">&quot;Hello Discord Bot, Use Discord.js&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/start&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Bot Start ....`</span>);</span><br><span class="line">  <span class="keyword">if</span> (!bot.<span class="property">client</span>) &#123;</span><br><span class="line">    <span class="title class_">StartDiscordBots</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  res.<span class="title function_">send</span>(<span class="string">&quot;已啟動 Bot&quot;</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Bot End ....`</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/sendC&quot;</span>, <span class="keyword">async</span> (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> channelId = req.<span class="property">query</span>.<span class="property">cid</span>;</span><br><span class="line">  <span class="keyword">const</span> msg = <span class="string">&quot;Hello /SendC&quot;</span>;</span><br><span class="line">  <span class="keyword">await</span> <span class="title class_">Send2Channel</span>(channelId, msg);</span><br><span class="line">  res.<span class="title function_">send</span>(<span class="string">&quot;sendC ....&quot;</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;sendC&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(port, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`app listening on port <span class="subst">$&#123;port&#125;</span>`</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">StartDiscordBots</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> client = <span class="keyword">new</span> <span class="title class_">Client</span>(&#123;</span><br><span class="line">    <span class="attr">intents</span>: [</span><br><span class="line">      <span class="title class_">GatewayIntentBits</span>.<span class="property">Guilds</span>,</span><br><span class="line">      <span class="title class_">GatewayIntentBits</span>.<span class="property">GuildMessages</span>,</span><br><span class="line">      <span class="title class_">GatewayIntentBits</span>.<span class="property">MessageContent</span>,</span><br><span class="line">      <span class="title class_">GatewayIntentBits</span>.<span class="property">DirectMessages</span>,</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">partials</span>: [<span class="title class_">Partials</span>.<span class="property">Channel</span>, <span class="title class_">Partials</span>.<span class="property">Message</span>],</span><br><span class="line">  &#125;);</span><br><span class="line">  bot = &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="string">&quot;Bot3&quot;</span>,</span><br><span class="line">    <span class="attr">token</span>: process.<span class="property">env</span>.<span class="property">DISCORD_TOKEN</span>,</span><br><span class="line">    <span class="attr">client</span>: client,</span><br><span class="line">  &#125;;</span><br><span class="line">  client.<span class="title function_">on</span>(<span class="title class_">Events</span>.<span class="property">ClientReady</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`<span class="subst">$&#123;bot.id&#125;</span>: Ready <span class="subst">$&#123;client.user.tag&#125;</span>!`</span>);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  client.<span class="title function_">on</span>(<span class="title class_">Events</span>.<span class="property">MessageCreate</span>, <span class="function">(<span class="params">msg</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//不處理 bot 發送的訊息</span></span><br><span class="line">    <span class="keyword">if</span> (msg.<span class="property">author</span>.<span class="property">bot</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">const</span> content = <span class="string">`input:<span class="subst">$&#123;msg.content&#125;</span>, msgId:<span class="subst">$&#123;msg.id&#125;</span>, channelId:<span class="subst">$&#123;msg.channelId&#125;</span>`</span>;</span><br><span class="line">    <span class="keyword">if</span> (msg.<span class="property">guild</span>) &#123;</span><br><span class="line">      <span class="comment">//channel 中</span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Channel中=&gt;&gt;&gt;&quot;</span>, msg);</span><br><span class="line">      <span class="comment">//reply</span></span><br><span class="line">      msg.<span class="title function_">reply</span>(<span class="string">`echo:<span class="subst">$&#123;content&#125;</span>`</span>);</span><br><span class="line">      <span class="comment">//send 2 channel</span></span><br><span class="line">      msg.<span class="property">channel</span>.<span class="title function_">send</span>(<span class="string">`echo:<span class="subst">$&#123;content&#125;</span>`</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">//user對bot</span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;DM中=&gt;&gt;&gt;&quot;</span>, msg);</span><br><span class="line">      <span class="comment">//reply</span></span><br><span class="line">      msg.<span class="title function_">reply</span>(<span class="string">`echo:<span class="subst">$&#123;content&#125;</span>`</span>);</span><br><span class="line">      <span class="comment">//send 2 user</span></span><br><span class="line">      <span class="keyword">const</span> userId = msg.<span class="property">author</span>.<span class="property">id</span>;</span><br><span class="line">      bot.<span class="property">client</span>.<span class="property">users</span>.<span class="property">cache</span>.<span class="title function_">get</span>(userId).<span class="title function_">send</span>(<span class="string">`echo:<span class="subst">$&#123;content&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  client.<span class="title function_">login</span>(bot.<span class="property">token</span>).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(</span><br><span class="line">      <span class="string">`Discord Bot Login User:<span class="subst">$&#123;client.user.id&#125;</span>:<span class="subst">$&#123;client.user.displayName&#125;</span>`</span></span><br><span class="line">    );</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">Send2Channel</span> = <span class="keyword">async</span> (<span class="params">channelId, msg</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> client = bot.<span class="property">client</span>;</span><br><span class="line">  <span class="keyword">let</span> channel = client.<span class="property">channels</span>.<span class="property">cache</span>.<span class="title function_">get</span>(channelId);</span><br><span class="line">  <span class="keyword">if</span> (!channel) &#123;</span><br><span class="line">    channel = <span class="keyword">await</span> client.<span class="property">channels</span>.<span class="title function_">fetch</span>(channelId);</span><br><span class="line">  &#125;</span><br><span class="line">  channel.<span class="title function_">send</span>(<span class="string">`<span class="subst">$&#123;channelId&#125;</span>:<span class="subst">$&#123;msg&#125;</span>`</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>重新執行 app.js，開啟 Browser ，先連到 <code>http://localhost:3000/start</code>，<br>再將 URL 改成 <code>http://localhost:3000/sendC?cid=Discord中的ChannelId</code>，<br>就可以發現 Bot 發送 <code>Hello /SendC</code> 的訊息，</p><img src="/2023/08/11/discord-bot-node-js/13.png" class="" title="Send Channel"><p><strong>3.4.發送訊息給 User</strong><br>發送訊息給 User 需要 UserId ，可以從收到的 Message 來取得，<br>例如，<code>msg.author.id</code><br>所以在 app.js 加入<code>Send2User</code> function 來處理將訊息送給 User 之。<br>設定 <code>/sendU</code> Route 取得 QueryString 後，呼叫 <code>Send2User</code>，如下，</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Client</span>, <span class="title class_">Events</span>, <span class="title class_">GatewayIntentBits</span>, <span class="title class_">Partials</span> &#125; <span class="keyword">from</span> <span class="string">&quot;discord.js&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> express <span class="keyword">from</span> <span class="string">&quot;express&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> dotenv <span class="keyword">from</span> <span class="string">&quot;dotenv&quot;</span>;</span><br><span class="line">dotenv.<span class="title function_">config</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="keyword">const</span> port = <span class="number">3000</span>;</span><br><span class="line"><span class="keyword">let</span> bot = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&quot;/&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">send</span>(<span class="string">&quot;Hello Discord Bot, Use Discord.js&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/start&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Bot Start ....`</span>);</span><br><span class="line">  <span class="keyword">if</span> (!bot.<span class="property">client</span>) &#123;</span><br><span class="line">    <span class="title class_">StartDiscordBots</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  res.<span class="title function_">send</span>(<span class="string">&quot;已啟動 Bot&quot;</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Bot End ....`</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/sendC&quot;</span>, <span class="keyword">async</span> (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> channelId = req.<span class="property">query</span>.<span class="property">cid</span>;</span><br><span class="line">  <span class="keyword">const</span> msg = <span class="string">&quot;Hello /SendC&quot;</span>;</span><br><span class="line">  <span class="keyword">await</span> <span class="title class_">Send2Channel</span>(channelId, msg);</span><br><span class="line">  res.<span class="title function_">send</span>(<span class="string">&quot;sendC ....&quot;</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;sendC&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/sendU&quot;</span>, <span class="keyword">async</span> (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> userId = req.<span class="property">query</span>.<span class="property">uid</span>;</span><br><span class="line">  <span class="keyword">const</span> msg = <span class="string">&quot;Hello /sendU&quot;</span>;</span><br><span class="line">  <span class="keyword">await</span> <span class="title class_">Send2User</span>(userId, msg);</span><br><span class="line">  res.<span class="title function_">send</span>(<span class="string">&quot;sendU ....&quot;</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;sendU&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(port, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`app listening on port <span class="subst">$&#123;port&#125;</span>`</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">StartDiscordBots</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> client = <span class="keyword">new</span> <span class="title class_">Client</span>(&#123;</span><br><span class="line">    <span class="attr">intents</span>: [</span><br><span class="line">      <span class="title class_">GatewayIntentBits</span>.<span class="property">Guilds</span>,</span><br><span class="line">      <span class="title class_">GatewayIntentBits</span>.<span class="property">GuildMessages</span>,</span><br><span class="line">      <span class="title class_">GatewayIntentBits</span>.<span class="property">MessageContent</span>,</span><br><span class="line">      <span class="title class_">GatewayIntentBits</span>.<span class="property">DirectMessages</span>,</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">partials</span>: [<span class="title class_">Partials</span>.<span class="property">Channel</span>, <span class="title class_">Partials</span>.<span class="property">Message</span>],</span><br><span class="line">  &#125;);</span><br><span class="line">  bot = &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="string">&quot;Bot3&quot;</span>,</span><br><span class="line">    <span class="attr">token</span>: process.<span class="property">env</span>.<span class="property">DISCORD_TOKEN</span>,</span><br><span class="line">    <span class="attr">client</span>: client,</span><br><span class="line">  &#125;;</span><br><span class="line">  client.<span class="title function_">on</span>(<span class="title class_">Events</span>.<span class="property">ClientReady</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`<span class="subst">$&#123;bot.id&#125;</span>: Ready <span class="subst">$&#123;client.user.tag&#125;</span>!`</span>);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  client.<span class="title function_">on</span>(<span class="title class_">Events</span>.<span class="property">MessageCreate</span>, <span class="function">(<span class="params">msg</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//不處理 bot 發送的訊息</span></span><br><span class="line">    <span class="keyword">if</span> (msg.<span class="property">author</span>.<span class="property">bot</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">const</span> content = <span class="string">`input:<span class="subst">$&#123;msg.content&#125;</span>, msgId:<span class="subst">$&#123;msg.id&#125;</span>, channelId:<span class="subst">$&#123;msg.channelId&#125;</span>`</span>;</span><br><span class="line">    <span class="keyword">if</span> (msg.<span class="property">guild</span>) &#123;</span><br><span class="line">      <span class="comment">//channel 中</span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Channel中=&gt;&gt;&gt;&quot;</span>, msg);</span><br><span class="line">      <span class="comment">//reply</span></span><br><span class="line">      msg.<span class="title function_">reply</span>(<span class="string">`echo:<span class="subst">$&#123;content&#125;</span>`</span>);</span><br><span class="line">      <span class="comment">//send 2 channel</span></span><br><span class="line">      msg.<span class="property">channel</span>.<span class="title function_">send</span>(<span class="string">`echo:<span class="subst">$&#123;content&#125;</span>`</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">//user對bot</span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;DM中=&gt;&gt;&gt;&quot;</span>, msg);</span><br><span class="line">      <span class="comment">//reply</span></span><br><span class="line">      msg.<span class="title function_">reply</span>(<span class="string">`echo:<span class="subst">$&#123;content&#125;</span>`</span>);</span><br><span class="line">      <span class="comment">//send 2 user</span></span><br><span class="line">      <span class="keyword">const</span> userId = msg.<span class="property">author</span>.<span class="property">id</span>;</span><br><span class="line">      bot.<span class="property">client</span>.<span class="property">users</span>.<span class="property">cache</span>.<span class="title function_">get</span>(userId).<span class="title function_">send</span>(<span class="string">`echo:<span class="subst">$&#123;content&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  client.<span class="title function_">login</span>(bot.<span class="property">token</span>).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(</span><br><span class="line">      <span class="string">`Discord Bot Login User:<span class="subst">$&#123;client.user.id&#125;</span>:<span class="subst">$&#123;client.user.displayName&#125;</span>`</span></span><br><span class="line">    );</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">Send2Channel</span> = <span class="keyword">async</span> (<span class="params">channelId, msg</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> client = bot.<span class="property">client</span>;</span><br><span class="line">  <span class="keyword">let</span> channel = client.<span class="property">channels</span>.<span class="property">cache</span>.<span class="title function_">get</span>(channelId);</span><br><span class="line">  <span class="keyword">if</span> (!channel) &#123;</span><br><span class="line">    channel = <span class="keyword">await</span> client.<span class="property">channels</span>.<span class="title function_">fetch</span>(channelId);</span><br><span class="line">  &#125;</span><br><span class="line">  channel.<span class="title function_">send</span>(<span class="string">`<span class="subst">$&#123;channelId&#125;</span>:<span class="subst">$&#123;msg&#125;</span>`</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">Send2User</span> = <span class="keyword">async</span> (<span class="params">userId, msg</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> client = bot.<span class="property">client</span>;</span><br><span class="line">  <span class="keyword">let</span> clientUser = client.<span class="property">users</span>.<span class="property">cache</span>.<span class="title function_">get</span>(userId);</span><br><span class="line">  <span class="keyword">if</span> (!clientUser) &#123;</span><br><span class="line">    clientUser = <span class="keyword">await</span> client.<span class="property">users</span>.<span class="title function_">fetch</span>(userId);</span><br><span class="line">  &#125;</span><br><span class="line">  clientUser.<span class="title function_">send</span>(<span class="string">`<span class="subst">$&#123;userId&#125;</span>:<span class="subst">$&#123;msg&#125;</span>`</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>重新執行 app.js，開啟 Browser ，先連到 <code>http://localhost:3000/start</code>，<br>再將 URL 改成 <code>http://localhost:3000/sendU?uid=userId</code>，<br>就可以發現 Bot 發送 <code>Hello /sendU</code> 的訊息，</p><img src="/2023/08/11/discord-bot-node-js/14.png" class="" title="Send 2 User"><p><strong>3.5.回覆某訊息</strong><br>要針對某個訊息來「回覆」，需要那個訊息的<strong>Channeld</strong>及<strong>MessageId</strong>，<br>所以在<strong>Events.MessageCreate</strong>事件中，<br>就有將訊息的<strong>Channeld</strong>及<strong>MessageId</strong>一併顯示出來，<br>所以在 app.js 加入<code>Reply2Msg</code> function 來處理針對某訊息(<code>channelId</code>, <code>msgId</code>)回覆。<br>設定 <code>/reply</code> Route 取得 QueryString(cid, mid) 後，呼叫 <code>Reply2Msg</code>，如下，</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Client</span>, <span class="title class_">Events</span>, <span class="title class_">GatewayIntentBits</span>, <span class="title class_">Partials</span> &#125; <span class="keyword">from</span> <span class="string">&quot;discord.js&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> express <span class="keyword">from</span> <span class="string">&quot;express&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> dotenv <span class="keyword">from</span> <span class="string">&quot;dotenv&quot;</span>;</span><br><span class="line">dotenv.<span class="title function_">config</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="keyword">const</span> port = <span class="number">3000</span>;</span><br><span class="line"><span class="keyword">let</span> bot = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&quot;/&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">send</span>(<span class="string">&quot;Hello Discord Bot, Use Discord.js&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/start&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Bot Start ....`</span>);</span><br><span class="line">  <span class="keyword">if</span> (!bot.<span class="property">client</span>) &#123;</span><br><span class="line">    <span class="title class_">StartDiscordBots</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  res.<span class="title function_">send</span>(<span class="string">&quot;已啟動 Bot&quot;</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Bot End ....`</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/sendC&quot;</span>, <span class="keyword">async</span> (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> channelId = req.<span class="property">query</span>.<span class="property">cid</span>;</span><br><span class="line">  <span class="keyword">const</span> msg = <span class="string">&quot;Hello /SendC&quot;</span>;</span><br><span class="line">  <span class="keyword">await</span> <span class="title class_">Send2Channel</span>(channelId, msg);</span><br><span class="line">  res.<span class="title function_">send</span>(<span class="string">&quot;sendC ....&quot;</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;sendC&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/sendU&quot;</span>, <span class="keyword">async</span> (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> userId = req.<span class="property">query</span>.<span class="property">uid</span>;</span><br><span class="line">  <span class="keyword">const</span> msg = <span class="string">&quot;Hello /sendU&quot;</span>;</span><br><span class="line">  <span class="keyword">await</span> <span class="title class_">Send2User</span>(userId, msg);</span><br><span class="line">  res.<span class="title function_">send</span>(<span class="string">&quot;sendU ....&quot;</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;sendU&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/reply&quot;</span>, <span class="keyword">async</span> (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> channelId = req.<span class="property">query</span>.<span class="property">cid</span>;</span><br><span class="line">  <span class="keyword">const</span> msgId = req.<span class="property">query</span>.<span class="property">mid</span>;</span><br><span class="line">  <span class="keyword">const</span> msg = <span class="string">&quot;Hello /reply&quot;</span>;</span><br><span class="line">  <span class="keyword">await</span> <span class="title class_">Reply2Msg</span>(channelId, msgId, msg);</span><br><span class="line">  res.<span class="title function_">send</span>(<span class="string">&quot;reply ....&quot;</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;call Reply2Msg&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(port, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`app listening on port <span class="subst">$&#123;port&#125;</span>`</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">StartDiscordBots</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> client = <span class="keyword">new</span> <span class="title class_">Client</span>(&#123;</span><br><span class="line">    <span class="attr">intents</span>: [</span><br><span class="line">      <span class="title class_">GatewayIntentBits</span>.<span class="property">Guilds</span>,</span><br><span class="line">      <span class="title class_">GatewayIntentBits</span>.<span class="property">GuildMessages</span>,</span><br><span class="line">      <span class="title class_">GatewayIntentBits</span>.<span class="property">MessageContent</span>,</span><br><span class="line">      <span class="title class_">GatewayIntentBits</span>.<span class="property">DirectMessages</span>,</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">partials</span>: [<span class="title class_">Partials</span>.<span class="property">Channel</span>, <span class="title class_">Partials</span>.<span class="property">Message</span>],</span><br><span class="line">  &#125;);</span><br><span class="line">  bot = &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="string">&quot;Bot3&quot;</span>,</span><br><span class="line">    <span class="attr">token</span>: process.<span class="property">env</span>.<span class="property">DISCORD_TOKEN</span>,</span><br><span class="line">    <span class="attr">client</span>: client,</span><br><span class="line">  &#125;;</span><br><span class="line">  client.<span class="title function_">on</span>(<span class="title class_">Events</span>.<span class="property">ClientReady</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`<span class="subst">$&#123;bot.id&#125;</span>: Ready <span class="subst">$&#123;client.user.tag&#125;</span>!`</span>);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  client.<span class="title function_">on</span>(<span class="title class_">Events</span>.<span class="property">MessageCreate</span>, <span class="function">(<span class="params">msg</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//不處理 bot 發送的訊息</span></span><br><span class="line">    <span class="keyword">if</span> (msg.<span class="property">author</span>.<span class="property">bot</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">const</span> content = <span class="string">`input:<span class="subst">$&#123;msg.content&#125;</span>, msgId:<span class="subst">$&#123;msg.id&#125;</span>, channelId:<span class="subst">$&#123;msg.channelId&#125;</span>`</span>;</span><br><span class="line">    <span class="keyword">if</span> (msg.<span class="property">guild</span>) &#123;</span><br><span class="line">      <span class="comment">//channel 中</span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Channel中=&gt;&gt;&gt;&quot;</span>, msg);</span><br><span class="line">      <span class="comment">//reply</span></span><br><span class="line">      msg.<span class="title function_">reply</span>(<span class="string">`echo:<span class="subst">$&#123;content&#125;</span>`</span>);</span><br><span class="line">      <span class="comment">//send 2 channel</span></span><br><span class="line">      msg.<span class="property">channel</span>.<span class="title function_">send</span>(<span class="string">`echo:<span class="subst">$&#123;content&#125;</span>`</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">//user對bot</span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;DM中=&gt;&gt;&gt;&quot;</span>, msg);</span><br><span class="line">      <span class="comment">//reply</span></span><br><span class="line">      msg.<span class="title function_">reply</span>(<span class="string">`echo:<span class="subst">$&#123;content&#125;</span>`</span>);</span><br><span class="line">      <span class="comment">//send 2 user</span></span><br><span class="line">      <span class="keyword">const</span> userId = msg.<span class="property">author</span>.<span class="property">id</span>;</span><br><span class="line">      bot.<span class="property">client</span>.<span class="property">users</span>.<span class="property">cache</span>.<span class="title function_">get</span>(userId).<span class="title function_">send</span>(<span class="string">`echo:<span class="subst">$&#123;content&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  client.<span class="title function_">login</span>(bot.<span class="property">token</span>).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(</span><br><span class="line">      <span class="string">`Discord Bot Login User:<span class="subst">$&#123;client.user.id&#125;</span>:<span class="subst">$&#123;client.user.displayName&#125;</span>`</span></span><br><span class="line">    );</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">Send2Channel</span> = <span class="keyword">async</span> (<span class="params">channelId, msg</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> client = bot.<span class="property">client</span>;</span><br><span class="line">  <span class="keyword">let</span> channel = client.<span class="property">channels</span>.<span class="property">cache</span>.<span class="title function_">get</span>(channelId);</span><br><span class="line">  <span class="keyword">if</span> (!channel) &#123;</span><br><span class="line">    channel = <span class="keyword">await</span> client.<span class="property">channels</span>.<span class="title function_">fetch</span>(channelId);</span><br><span class="line">  &#125;</span><br><span class="line">  channel.<span class="title function_">send</span>(<span class="string">`<span class="subst">$&#123;channelId&#125;</span>:<span class="subst">$&#123;msg&#125;</span>`</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">Send2User</span> = <span class="keyword">async</span> (<span class="params">userId, msg</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> client = bot.<span class="property">client</span>;</span><br><span class="line">  <span class="keyword">let</span> clientUser = client.<span class="property">users</span>.<span class="property">cache</span>.<span class="title function_">get</span>(userId);</span><br><span class="line">  <span class="keyword">if</span> (!clientUser) &#123;</span><br><span class="line">    clientUser = <span class="keyword">await</span> client.<span class="property">users</span>.<span class="title function_">fetch</span>(userId);</span><br><span class="line">  &#125;</span><br><span class="line">  clientUser.<span class="title function_">send</span>(<span class="string">`<span class="subst">$&#123;userId&#125;</span>:<span class="subst">$&#123;msg&#125;</span>`</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">Reply2Msg</span> = <span class="keyword">async</span> (<span class="params">channelId, msgId, msg</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> client = bot.<span class="property">client</span>;</span><br><span class="line">  <span class="keyword">let</span> channel = client.<span class="property">channels</span>.<span class="property">cache</span>.<span class="title function_">get</span>(channelId);</span><br><span class="line">  <span class="keyword">if</span> (!channel) &#123;</span><br><span class="line">    channel = <span class="keyword">await</span> client.<span class="property">channels</span>.<span class="title function_">fetch</span>(channelId);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">let</span> message = channel.<span class="property">messages</span>.<span class="property">cache</span>.<span class="title function_">get</span>(msgId);</span><br><span class="line">  <span class="keyword">if</span> (!message) &#123;</span><br><span class="line">    message = <span class="keyword">await</span> channel.<span class="property">messages</span>.<span class="title function_">fetch</span>(msgId);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> content = <span class="string">`Reply2Msg:cId:<span class="subst">$&#123;channelId&#125;</span>, mId:<span class="subst">$&#123;msgId&#125;</span>, <span class="subst">$&#123;msg&#125;</span>`</span>;</span><br><span class="line">  message.<span class="title function_">reply</span>(content);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>重新執行 app.js，開啟 Browser ，先連到 <code>http://localhost:3000/start</code>，<br>再將 URL 改成 <code>http://localhost:3000/reply?mid=訊息中的msgId&amp;cid=訊息中的channelId</code>，<br>就可以發現 Bot 針對那個訊息發送 <code>Reply2Msg:...Hello /reply</code> 的訊息，</p><img src="/2023/08/11/discord-bot-node-js/15.png" class="" title="Reply Message"><ul><li>註: 上面使用 Discord.js 取物件時，大多會使用 <code>cache.get</code>，如果取不到，就用 <code>fetch</code></li></ul><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://discord.com/developers/applications">Discord Developer Portal - Applications</a><br><a href="https://old.discordjs.dev/#/docs/discord.js/main/general/welcome">discord.js</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;本文介紹在 Node Express 上透過 &lt;a href=&quot;https://old.discordjs.dev/#/docs/disco</summary>
      
    
    
    
    
    <category term="Bot" scheme="https://rainmakerho.github.io/tags/Bot/"/>
    
    <category term="Discord" scheme="https://rainmakerho.github.io/tags/Discord/"/>
    
    <category term="discord.js" scheme="https://rainmakerho.github.io/tags/discord-js/"/>
    
    <category term="Node" scheme="https://rainmakerho.github.io/tags/Node/"/>
    
    <category term="Express" scheme="https://rainmakerho.github.io/tags/Express/"/>
    
    <category term="Channel" scheme="https://rainmakerho.github.io/tags/Channel/"/>
    
    <category term="DirectMessage" scheme="https://rainmakerho.github.io/tags/DirectMessage/"/>
    
    <category term="Reply" scheme="https://rainmakerho.github.io/tags/Reply/"/>
    
    <category term="Discrod機器人" scheme="https://rainmakerho.github.io/tags/Discrod%E6%A9%9F%E5%99%A8%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>SQL Server Reporting Services(SSRS) ReportViewer 開啟報表 Hang 住問題</title>
    <link href="https://rainmakerho.github.io/2023/08/07/ssrs-ie-hang/"/>
    <id>https://rainmakerho.github.io/2023/08/07/ssrs-ie-hang/</id>
    <published>2023-08-07T02:02:54.000Z</published>
    <updated>2023-08-07T03:07:58.659Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>最近將 SQL Server 從 2008 升級到 2016 ，<br>透過 IE 開啟 Reporting Services(SSRS) 的報表時，<br>有時候會有卡住(Hang)的狀況。<br>正常的狀況下， 開啟(GET) <code>ReportViewer.aspx</code> 後，<br>會再透過 <code>ScriptManager</code>(POST) 將報表給 Load 出來，如下，</p><img src="/2023/08/07/ssrs-ie-hang/01.png" class="" title="normal"><p>有卡住(Hang)的狀況，就是沒有第二次的 <code>POST</code>，所以畫面上就只有 Report 工具列顯示出來。</p><h3 id="解決"><a href="#解決" class="headerlink" title="解決"></a>解決</h3><p>以下為 SSRS 報表在 IE 上 Hang 住的狀況，</p><img src="/2023/08/07/ssrs-ie-hang/02.png" class="" title="normal"><p>看起來網頁似乎沒有 Load 完，<br>但是按下停止 Load (X) 後，<br>報表卻顯示出來了。</p><p>在 <code>ReportViewer.aspx</code> 中覆寫 <code>__doPostBack(eventTarget, eventArgument)</code> 加入 <code>alert</code>，<br>Hang 住的狀況，<code>__doPostBack</code> 並不會被執行到。<br>一直在 IE 上測試，將 URL Copy 到 Chrome 測試看看，<br>結果測試了 30 幾遍，在 Chrome 上並不會有 Hang 住的狀況。</p><p>回到 IE 來看，<code>ReportViewer.aspx</code> 似乎有套用 <strong>相容性</strong>，<br>於是在 <code>ReportViewer.aspx</code> 原始碼中加入<strong>使用最新版本</strong> 的 Header，如下，</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>再執行多次，就不會有 Hang 住的狀況了~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;最近將 SQL Server 從 2008 升級到 2016 ，&lt;br&gt;透過 IE 開啟 Reporting Services(SSRS) </summary>
      
    
    
    
    
    <category term="IE" scheme="https://rainmakerho.github.io/tags/IE/"/>
    
    <category term="SSRS" scheme="https://rainmakerho.github.io/tags/SSRS/"/>
    
    <category term="ReportViewer" scheme="https://rainmakerho.github.io/tags/ReportViewer/"/>
    
    <category term="Hang" scheme="https://rainmakerho.github.io/tags/Hang/"/>
    
    <category term="SQL Server Reporting Services" scheme="https://rainmakerho.github.io/tags/SQL-Server-Reporting-Services/"/>
    
  </entry>
  
  <entry>
    <title>地政系統罕用字套用自造字(EUDC, 難字)時，會看不見(空字串)問題</title>
    <link href="https://rainmakerho.github.io/2023/08/04/eudc-html-empty-char/"/>
    <id>https://rainmakerho.github.io/2023/08/04/eudc-html-empty-char/</id>
    <published>2023-08-04T06:31:18.000Z</published>
    <updated>2023-08-04T07:54:51.774Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>我們有個系統，字型套用使用者自造字(EUDC)後，<br>當遇到地政系統轉過來的罕見字後，那個字就會看不見的問題，如下，</p><img src="/2023/08/04/eudc-html-empty-char/01.png" class="" title="EUDC"><p>如果不套用 <strong>EUDC</strong> 就會有一個白色方塊出現，如下，</p><img src="/2023/08/04/eudc-html-empty-char/02.png" class="" title="NON-EUDC"><h3 id="解決"><a href="#解決" class="headerlink" title="解決"></a>解決</h3><p>為什麼套上 EUDC 字型後，地政系統的罕用字會看不見呢?<br>我們可以將<strong>地政系統的罕用字</strong>貼到 Word 中，<br>選取它，再按下<code>Alt + X</code>，就可以發現它的內碼為 <strong>F6BC</strong></p><img src="/2023/08/04/eudc-html-empty-char/03.png" class="" title="F6BC"><p>透過 <a href="https://fontforge.org/en-US/">fontforge</a> 開啟 自造字型(<code>RM.TTE</code>) 及 微軟正黑體(<code>msjh.ttc</code>) 來比較一下，</p><img src="/2023/08/04/eudc-html-empty-char/04.png" class="" title="EUDC_VS_MSJH"><p>可以發現，<br>自造字型(<code>RM.TTE</code>) 的 <strong>F6BC</strong> 是一個空白的內容，<br>微軟正黑體(<code>msjh.ttc</code>) 的 <strong>F6BC</strong> 是 X 的內容。<br>也就是說，自造字型(<code>RM.TTE</code>) 是有使用 <strong>F6BC</strong> ，但沒有任何的內容。<br>微軟正黑體(<code>msjh.ttc</code>)則完全沒有使用到 <strong>F6BC</strong> 這個位子。</p><p>所以，如果想要套用 自造字型(<code>RM.TTE</code>) ，並想要讓那些 <strong>地政系統的罕用字</strong> 也要有一個白色的方塊，<br>則需要讓 自造字型(<code>RM.TTE</code>) 不要使用到那個位子，<br>但那個卻不是我們可以控制的，<br>所以只好從 <a href="https://fontforge.org/docs/scripting/scripting-alpha.html">FontForge-Scripting</a> 來想辬法。</p><p>先來復習一下，<br>要在網頁上顯示使用者自造字(EUDC)，<br>可以透過<a href="https://fontforge.org/en-US/">fontforge</a> 來將 TTE 產生出 TTF 及 WOFF 字型檔讓網頁使用。<br>例如，我的自造字檔名為 <code>RM.TTE</code> ，有安裝 <a href="https://fontforge.org/en-US/">fontforge</a> ，<br>就可以透過以下的 Script 存成 <code>tte2woff.pe</code> ，執行 <code>fontforge -script tte2woff.pe</code> 就可以產出 WOFF 及 TTF 字型檔，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Open EUDC TTE</span></span><br><span class="line">Open(<span class="string">&quot;RM.TTE&quot;</span>, <span class="number">4</span>)</span><br><span class="line"><span class="comment"># CHANGE TTFNAME 2 EUDC</span></span><br><span class="line">SetTTFName(<span class="number">0x409</span>,<span class="number">1</span>,<span class="string">&quot;EUDC&quot;</span>)</span><br><span class="line">SetTTFName(<span class="number">0x409</span>,<span class="number">2</span>,<span class="string">&quot;EUDC&quot;</span>)</span><br><span class="line">SetTTFName(<span class="number">0x409</span>,<span class="number">3</span>,<span class="string">&quot;EUDC&quot;</span>)</span><br><span class="line">SetTTFName(<span class="number">0x409</span>,<span class="number">4</span>,<span class="string">&quot;EUDC&quot;</span>)</span><br><span class="line">SetTTFName(<span class="number">0x404</span>,<span class="number">1</span>,<span class="string">&quot;EUDC&quot;</span>)</span><br><span class="line">SetTTFName(<span class="number">0x404</span>,<span class="number">2</span>,<span class="string">&quot;EUDC&quot;</span>)</span><br><span class="line">SetTTFName(<span class="number">0x409</span>,<span class="number">3</span>,<span class="string">&quot;&quot;</span>)</span><br><span class="line">SetTTFName(<span class="number">0x404</span>,<span class="number">4</span>,<span class="string">&quot;EUDC&quot;</span>)</span><br><span class="line">SetFontNames(<span class="string">&quot;EUDC&quot;</span>, <span class="string">&quot;EUDC&quot;</span>, <span class="string">&quot;EUDC&quot;</span>, <span class="string">&quot;Regular&quot;</span>, <span class="string">&quot;655&quot;</span>, <span class="string">&quot;1.0.0&quot;</span>)</span><br><span class="line">Generate(<span class="string">&quot;RM.ttf&quot;</span>)</span><br><span class="line">Generate(<span class="string">&quot;RM.woff&quot;</span>)</span><br><span class="line">Close()</span><br><span class="line"><span class="comment">#fontforge -script tte2woff.pe</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fontforge -script tte2woff.pe</span><br></pre></td></tr></table></figure><img src="/2023/08/04/eudc-html-empty-char/05.png" class="" title="tte2woff.pe"><ul><li>註: 如果執行發生錯誤，請確定產出的目錄是否沒權限</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="keyword">@font-face</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-family</span>: EUDC;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&quot;./fonts/RM.woff?v=1.0.0&quot;</span>);</span></span><br><span class="line"><span class="language-css">        <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&quot;./fonts/RM.woff?v=1.0.0&quot;</span>) <span class="built_in">format</span>(<span class="string">&quot;woff&quot;</span>), <span class="built_in">url</span>(<span class="string">&quot;./fonts/RM.ttf?v=1.0.0&quot;</span>)</span></span><br><span class="line"><span class="language-css">            <span class="built_in">format</span>(<span class="string">&quot;truetype&quot;</span>);</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: <span class="number">#333</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: <span class="number">#eeeeee</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-family</span>: <span class="string">&quot;Microsoft JhengHei&quot;</span>, <span class="string">&quot;EUDC&quot;</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-size</span>: <span class="number">13px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">line-height</span>: <span class="number">150%</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>ab<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>abc<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>這樣那些 使用者自造字(EUDC) 就可以在網頁上顯示，<br>但地政系統的罕用字卻會看不見。<br>所以上述的 Script 要加上判斷，<br>如果有佔到字的位子，但卻沒有字(判斷<code>GlyphInfo(&quot;LBearing&quot;)==0</code>)，就將它清除掉，如下，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Open EUDC TTE</span></span><br><span class="line">Open(<span class="string">&quot;RM.TTE&quot;</span>, <span class="number">4</span>)</span><br><span class="line"><span class="comment"># CHANGE TTFNAME 2 EUDC</span></span><br><span class="line">SetTTFName(<span class="number">0x409</span>,<span class="number">1</span>,<span class="string">&quot;EUDC&quot;</span>)</span><br><span class="line">SetTTFName(<span class="number">0x409</span>,<span class="number">2</span>,<span class="string">&quot;EUDC&quot;</span>)</span><br><span class="line">SetTTFName(<span class="number">0x409</span>,<span class="number">3</span>,<span class="string">&quot;EUDC&quot;</span>)</span><br><span class="line">SetTTFName(<span class="number">0x409</span>,<span class="number">4</span>,<span class="string">&quot;EUDC&quot;</span>)</span><br><span class="line">SetTTFName(<span class="number">0x404</span>,<span class="number">1</span>,<span class="string">&quot;EUDC&quot;</span>)</span><br><span class="line">SetTTFName(<span class="number">0x404</span>,<span class="number">2</span>,<span class="string">&quot;EUDC&quot;</span>)</span><br><span class="line">SetTTFName(<span class="number">0x409</span>,<span class="number">3</span>,<span class="string">&quot;&quot;</span>)</span><br><span class="line">SetTTFName(<span class="number">0x404</span>,<span class="number">4</span>,<span class="string">&quot;EUDC&quot;</span>)</span><br><span class="line">SetFontNames(<span class="string">&quot;EUDC&quot;</span>, <span class="string">&quot;EUDC&quot;</span>, <span class="string">&quot;EUDC&quot;</span>, <span class="string">&quot;Regular&quot;</span>, <span class="string">&quot;655&quot;</span>, <span class="string">&quot;1.0.0&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 將沒有造的字清除 RM</span></span><br><span class="line">i=<span class="number">0</span>;</span><br><span class="line">tot = CharCnt()</span><br><span class="line"><span class="comment">#Print(tot)</span></span><br><span class="line"><span class="keyword">while</span>(i&lt;tot)</span><br><span class="line">  <span class="keyword">if</span>(SelectIf(i) &amp;&amp;  WorthOutputting(i) &amp;&amp; GlyphInfo(<span class="string">&quot;LBearing&quot;</span>)==<span class="number">0</span>)</span><br><span class="line">    Clear()</span><br><span class="line">    <span class="comment">#Print(i);</span></span><br><span class="line">  endif</span><br><span class="line">  i = i+<span class="number">1</span></span><br><span class="line">endloop</span><br><span class="line"><span class="comment"># 將沒有造的字清除 RM</span></span><br><span class="line">Generate(<span class="string">&quot;RM.ttf&quot;</span>)</span><br><span class="line">Generate(<span class="string">&quot;RM.woff&quot;</span>)</span><br><span class="line">Close()</span><br><span class="line"><span class="comment">#fontforge -script tte2woff.pe</span></span><br></pre></td></tr></table></figure><p>再執行一次 <code>fontforge -script tte2woff.pe</code> 產出 WOFF 及 TTF 字型檔</p><img src="/2023/08/04/eudc-html-empty-char/06.png" class="" title="tte2woff V2"><p>執行網頁後，可以發現那些套用 EUDC 字型的 <strong>地政系統的罕用字</strong> 會顯示一個白色方塊，<br>而不會像之前那樣，完全看不見。</p><p>透過 <a href="https://fontforge.org/en-US/">fontforge</a> 來開啟 <code>RM.WOFF</code> ，<br>也可以發現 <strong>F6BC</strong> 等沒有建立字的位子，都是 X 了哦~</p><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="https://rarewords.land.moi.gov.tw/WebIntroduction/WebIntroduction">地政罕用字查詢系統</a><br><a href="https://rainmakerho.github.io/2022/10/28/ms-reporting-service-add-custom-font-woff-ttf/">為 SQL Server Reporting Services (SSRS) Preview 報表加上自造字(EUDC Font) Support</a><br><a href="https://rainmakerho.github.io/2020/11/06/create-custom-fonts-eudc/">Windows 透過「造字程式」來造字</a><br><a href="https://learn.microsoft.com/zh-tw/windows/win32/intl/character-sets-and-fonts">EUDC 字元集和字型</a><br><a href="https://fontforge.org/docs/scripting/scripting-alpha.html">FontForge-Scripting functions</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;我們有個系統，字型套用使用者自造字(EUDC)後，&lt;br&gt;當遇到地政系統轉過來的罕見字後，那個字就會看不見的問題，如下，&lt;/p&gt;
&lt;img </summary>
      
    
    
    
    
    <category term="EUDC" scheme="https://rainmakerho.github.io/tags/EUDC/"/>
    
    <category term="造字程式" scheme="https://rainmakerho.github.io/tags/%E9%80%A0%E5%AD%97%E7%A8%8B%E5%BC%8F/"/>
    
    <category term="難字" scheme="https://rainmakerho.github.io/tags/%E9%9B%A3%E5%AD%97/"/>
    
    <category term="TTE" scheme="https://rainmakerho.github.io/tags/TTE/"/>
    
    <category term="罕用字" scheme="https://rainmakerho.github.io/tags/%E7%BD%95%E7%94%A8%E5%AD%97/"/>
    
    <category term="fontforge" scheme="https://rainmakerho.github.io/tags/fontforge/"/>
    
    <category term="WOFF" scheme="https://rainmakerho.github.io/tags/WOFF/"/>
    
    <category term="White Box" scheme="https://rainmakerho.github.io/tags/White-Box/"/>
    
    <category term="GlyphInfo" scheme="https://rainmakerho.github.io/tags/GlyphInfo/"/>
    
  </entry>
  
  <entry>
    <title>透過 Azure Map API 來查詢地址的經緯度資料</title>
    <link href="https://rainmakerho.github.io/2023/07/27/azure-map-serch-address/"/>
    <id>https://rainmakerho.github.io/2023/07/27/azure-map-serch-address/</id>
    <published>2023-07-27T02:01:33.000Z</published>
    <updated>2023-08-01T00:47:17.814Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>取得一個地址要將它定位在地圖上，需要將該地址轉成<strong>經緯度</strong>，<br>而 Azure Map 的 Search API 就提供這樣子的功能，<br>也提供<strong>模糊查詢</strong>及<strong>批次查詢</strong>的方式，<br>以下就來測試看看，</p><h3 id="練習"><a href="#練習" class="headerlink" title="練習"></a>練習</h3><p>1.查詢 <code>112052 台北市北投區承德路六段120號</code> 的經緯度</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET https:<span class="comment">//atlas.microsoft.com/search/address/json?api-version=1.0&amp;query=112052 台北市北投區承德路六段120號&amp;limit=1&amp;subscription-key=&#123;subscription-key&#125;</span></span><br></pre></td></tr></table></figure><p>透過 Postman 可以發現查出來的 經緯度 為 (<code>25.10206, 121.51269</code>)，信心度 <code>0.701</code>，如下圖，</p><img src="/2023/07/27/azure-map-serch-address/01.png" class="" title="Search Address"><p>透過 Bing Map 查出來的 經緯度為 (<code>25.102058, 121.512687</code>)，如下圖，</p><img src="/2023/07/27/azure-map-serch-address/02.png" class="" title="Search Address By Bing"><p>Google Map 查出來的經緯度為 (<code>25.10363, 121.51488</code>)，如下圖，</p><img src="/2023/07/27/azure-map-serch-address/03.png" class="" title="Search Address By Google"><p>比較起來，還是 Google Map 比較精確一點，2 者定位有些差距。如下圖，</p><img src="/2023/07/27/azure-map-serch-address/04.png" class="" title="Search Compare api and google"><blockquote><p>Bing Map 的圖資似乎沒有更新那麼及時，像有些新開發的地區，就沒更新到</p></blockquote><p>透過 C# 程式碼如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;Point&gt; <span class="title">ParseAddressToPointAsync</span>(<span class="params"><span class="built_in">string</span> address</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> queryStr = address.RemoveSpecialChars();</span><br><span class="line">    <span class="keyword">var</span> _subscriptionKey = <span class="string">&quot;_subscriptionKey&quot;</span>;</span><br><span class="line">    <span class="keyword">using</span> <span class="keyword">var</span> httpClient = <span class="keyword">new</span> HttpClient();</span><br><span class="line">    <span class="keyword">var</span> requestUri =  <span class="string">$&quot;https://atlas.microsoft.com/search/address/json?api-version=1.0&amp;subscription-key=<span class="subst">&#123;_subscriptionKey&#125;</span>&amp;limit=1&quot;</span></span><br><span class="line">        + <span class="string">$&quot;&amp;countrySet=TW&amp;query=<span class="subst">&#123;HttpUtility.UrlEncode(queryStr)&#125;</span>&quot;</span>;</span><br><span class="line">    <span class="keyword">using</span> <span class="keyword">var</span> response = <span class="keyword">await</span> httpClient.GetAsync(requestUri );</span><br><span class="line">    response.EnsureSuccessStatusCode();</span><br><span class="line">    <span class="keyword">var</span> postResult = <span class="keyword">await</span> response.Content.ReadFromJsonAsync&lt;JsonObject&gt;();</span><br><span class="line">    <span class="keyword">var</span> result = <span class="keyword">new</span> Point</span><br><span class="line">    &#123;</span><br><span class="line">        Latitude = postResult[<span class="string">&quot;results&quot;</span>][<span class="number">0</span>][<span class="string">&quot;position&quot;</span>][<span class="string">&quot;lat&quot;</span>].GetValue&lt;<span class="built_in">double</span>&gt;(),</span><br><span class="line">        Longitude = postResult[<span class="string">&quot;results&quot;</span>][<span class="number">0</span>][<span class="string">&quot;position&quot;</span>][<span class="string">&quot;lon&quot;</span>].GetValue&lt;<span class="built_in">double</span>&gt;()</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Point</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> SplitChar = <span class="string">&quot; &quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">double</span> Latitude &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">double</span> Longitude &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="built_in">string</span> <span class="title">ToString</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">$&quot;<span class="subst">&#123;Longitude&#125;</span><span class="subst">&#123;SplitChar&#125;</span><span class="subst">&#123;Latitude&#125;</span>&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Point <span class="title">Parse</span>(<span class="params"><span class="built_in">string</span> <span class="keyword">value</span></span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> result = <span class="keyword">new</span> Point();</span><br><span class="line">        <span class="keyword">var</span> pointData = <span class="keyword">value</span>.Split(SplitChar);</span><br><span class="line">        <span class="keyword">if</span> (pointData.Length &gt; <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            result.Longitude = <span class="built_in">double</span>.Parse(pointData[<span class="number">0</span>]);</span><br><span class="line">            result.Latitude = <span class="built_in">double</span>.Parse(pointData[<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>註: 可以加上 countrySet 來限定 Search 的 國家</p></blockquote><p>2.查詢 <code>台北圓山飯店</code> 的經緯度</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET https:<span class="comment">//atlas.microsoft.com/search/address/json?api-version=1.0&amp;query=112052 台北市北投區承德路六段120號&amp;limit=1&amp;subscription-key=&#123;subscription-key&#125;</span></span><br></pre></td></tr></table></figure><p>透過 Postman 可以發現查出來的 經緯度 為 (<code>25.07739, 121.52593</code>)，信心度高達 <code>1</code>，如下圖，</p><img src="/2023/07/27/azure-map-serch-address/05.png" class="" title="Search Address 2"><p>Google Map 查出來的經緯度為 (<code>25.07896, 121.52651</code>)，如下圖，</p><img src="/2023/07/27/azure-map-serch-address/06.png" class="" title="Search Address By Google 2"><p>這次比較起來，都在飯店的範圍內。如下圖，</p><img src="/2023/07/27/azure-map-serch-address/07.png" class="" title="Search Compare api and google 2"><p>3.如果一次要查多個地址，則可以使用<strong>批次查詢</strong>，<br>例如，查詢 <code>112052 台北市北投區承德路六段120號</code>及 <code>台北圓山飯店</code> 的經緯度</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">POST https:<span class="comment">//atlas.microsoft.com/search/address/batch/sync/json?api-version=1.0&amp;subscription-key=&#123;subscription-key&#125;</span></span><br><span class="line"></span><br><span class="line">Body</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;batchItems&quot;</span>: [</span><br><span class="line">        &#123;<span class="string">&quot;query&quot;</span>: <span class="string">&quot;?query=112052 台北市北投區承德路六段120號&amp;limit=1&quot;</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;query&quot;</span>: <span class="string">&quot;?query=台北圓山飯店&amp;limit=1&quot;</span>&#125;,</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>112052 台北市北投區承德路六段120號</code> 的經緯度一樣為 (<code>25.10206, 121.51269</code>)，<br>但 <code>台北圓山飯店</code>查出來的經緯度為(<code>25.07739, 121.52593</code>) 跟 GET 有些許差異。</p><img src="/2023/07/27/azure-map-serch-address/08.png" class="" title="Search Batch Address"><p>如果想要透過 <strong>經緯度</strong> 查出 <strong>地址</strong> ，則可以透過 <a href="https://learn.microsoft.com/zh-tw/rest/api/maps/search/get-search-address-reverse?tabs=HTTP">Get Search Address Reverse</a> 來找出 地址哦~</p><ul><li>註 1: 除了門牌號碼外，有些有名的地方，例如 台中港 也是可以 Search 得到</li><li>註 2: 地址中，請勿包含其他不相關的資訊，以免 Search 不到</li></ul><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://learn.microsoft.com/zh-tw/rest/api/maps/search/get-search-address?tabs=HTTP">Get Search Address</a><br><a href="https://learn.microsoft.com/zh-tw/rest/api/maps/search/get-search-address-batch?tabs=HTTP">Get Search Address Batch</a><br><a href="https://learn.microsoft.com/zh-tw/rest/api/maps/search/get-search-address-reverse?tabs=HTTP">Get Search Address Reverse</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;取得一個地址要將它定位在地圖上，需要將該地址轉成&lt;strong&gt;經緯度&lt;/strong&gt;，&lt;br&gt;而 Azure Map 的 Search </summary>
      
    
    
    
    
    <category term="Search" scheme="https://rainmakerho.github.io/tags/Search/"/>
    
    <category term="Address" scheme="https://rainmakerho.github.io/tags/Address/"/>
    
    <category term="Latitude" scheme="https://rainmakerho.github.io/tags/Latitude/"/>
    
    <category term="Longitude" scheme="https://rainmakerho.github.io/tags/Longitude/"/>
    
    <category term="Azure Map" scheme="https://rainmakerho.github.io/tags/Azure-Map/"/>
    
  </entry>
  
  <entry>
    <title>Novacode 新增列字型無法改變問題</title>
    <link href="https://rainmakerho.github.io/2023/07/26/novacode-xceed-word-new-row-font/"/>
    <id>https://rainmakerho.github.io/2023/07/26/novacode-xceed-word-new-row-font/</id>
    <published>2023-07-26T03:50:22.000Z</published>
    <updated>2023-07-26T06:07:24.531Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>最近同事使用 Novacode 新增 Word 中 Table 的 Row 後，<br>原本<strong>標楷體</strong>的字型，卻變成了<strong>新細明體</strong>，<br>程式直接去改 Cell 的 Paragraphs 字型也不會變。</p><img src="/2023/07/26/novacode-xceed-word-new-row-font/01.png" class="" title="Word Table"><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>原本程式大約如下，</p><p>取出範本那列的資料內容之中，Paragraph 是有設定字型的，如下，</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">w:p</span> <span class="attr">w14:paraId</span>=<span class="string">&quot;26B70266&quot;</span> <span class="attr">w14:textId</span>=<span class="string">&quot;66CBD856&quot;</span> <span class="attr">w:rsidR</span>=<span class="string">&quot;00F008A1&quot;</span> <span class="attr">w:rsidRPr</span>=<span class="string">&quot;004D5C5C&quot;</span> <span class="attr">w:rsidRDefault</span>=<span class="string">&quot;001139E8&quot;</span> <span class="attr">xmlns:w14</span>=<span class="string">&quot;http://schemas.microsoft.com/office/word/2010/wordml&quot;</span> <span class="attr">xmlns:w</span>=<span class="string">&quot;http://schemas.openxmlformats.org/wordprocessingml/2006/main&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">w:pPr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">w:widowControl</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">w:suppressAutoHyphens</span> <span class="attr">w:val</span>=<span class="string">&quot;0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">w:spacing</span> <span class="attr">w:line</span>=<span class="string">&quot;240&quot;</span> <span class="attr">w:lineRule</span>=<span class="string">&quot;auto&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">w:jc</span> <span class="attr">w:val</span>=<span class="string">&quot;center&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">w:textAlignment</span> <span class="attr">w:val</span>=<span class="string">&quot;auto&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">w:rPr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">w:rFonts</span> <span class="attr">w:ascii</span>=<span class="string">&quot;標楷體&quot;</span> <span class="attr">w:eastAsia</span>=<span class="string">&quot;標楷體&quot;</span> <span class="attr">w:hAnsi</span>=<span class="string">&quot;標楷體&quot;</span> <span class="attr">w:cs</span>=<span class="string">&quot;新細明體&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">w:kern</span> <span class="attr">w:val</span>=<span class="string">&quot;0&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">w:sz</span> <span class="attr">w:val</span>=<span class="string">&quot;20&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">w:szCs</span> <span class="attr">w:val</span>=<span class="string">&quot;20&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">w:rPr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">w:ind</span> /&gt;</span><span class="tag">&lt;/<span class="name">w:pPr</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">w:r</span>&gt;</span><span class="tag">&lt;<span class="name">w:rPr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">w:rFonts</span> <span class="attr">w:ascii</span>=<span class="string">&quot;標楷體&quot;</span> <span class="attr">w:eastAsia</span>=<span class="string">&quot;標楷體&quot;</span> <span class="attr">w:hAnsi</span>=<span class="string">&quot;標楷體&quot;</span> <span class="attr">w:cs</span>=<span class="string">&quot;新細明體&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">w:kern</span> <span class="attr">w:val</span>=<span class="string">&quot;0&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">w:sz</span> <span class="attr">w:val</span>=<span class="string">&quot;20&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">w:szCs</span> <span class="attr">w:val</span>=<span class="string">&quot;20&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">w:rPr</span>&gt;</span><span class="tag">&lt;<span class="name">w:t</span>&gt;</span>1<span class="tag">&lt;/<span class="name">w:t</span>&gt;</span><span class="tag">&lt;/<span class="name">w:r</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">w:p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>但新增出來的卻是空空的，</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">w:p</span> <span class="attr">xmlns:w</span>=<span class="string">&quot;http://schemas.openxmlformats.org/wordprocessingml/2006/main&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">w:pPr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">w:ind</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">w:pPr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">w:p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>設定 cells 字型程式如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> newRow = table.InsertRow();</span><br><span class="line">newRow.Cells[<span class="number">0</span>].Paragraphs[<span class="number">0</span>].Font(<span class="string">&quot;標楷體&quot;</span>);</span><br></pre></td></tr></table></figure><p>加完之後，卻只有 Fonts ，但並沒有任何的字型，如下，</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">w:p</span> <span class="attr">xmlns:w</span>=<span class="string">&quot;http://schemas.openxmlformats.org/wordprocessingml/2006/main&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">w:pPr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">w:ind</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">w:pPr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">w:p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>依範例程式，在 Cell 中加入文字時，可以一併設定它的字型，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">newRow.Cells[<span class="number">1</span>].Paragraphs[<span class="number">0</span>].Append(<span class="string">&quot;要加入的字串&quot;</span>).Font(<span class="string">&quot;標楷體&quot;</span>).FontSize(<span class="number">10</span>);</span><br></pre></td></tr></table></figure><p>就可以設定 Cell 的字型，但卻是每個 Cell 都設定字型、大小等格式，<br>是否有什麼方式可以不用特別設定格式呢?</p><p>可以透過 <code>InsertRow(Row row, bool keepFormatting = false)</code> 的 Method。<br>所以第一列做為範本，在 for each 依資料新增列時，先加一筆資料，最後再將那個範本列移除，<br>程式碼類似，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//第2列為範本列，第一列為表頭</span></span><br><span class="line"><span class="keyword">var</span> templateRow = table.Rows[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">foreach</span> (DataRow dr <span class="keyword">in</span> dt.Rows)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">var</span> newRow = table.InsertRow(templateRow, <span class="literal">true</span>);</span><br><span class="line">  newRow.Cells[<span class="number">1</span>].Paragraphs[<span class="number">0</span>].Append(<span class="string">&quot;要加入的字串&quot;</span>);</span><br><span class="line">  <span class="comment">//...</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//最後移除範本列</span></span><br><span class="line">templateRow.Remove();</span><br></pre></td></tr></table></figure><p>透過以上的方式，每列的格式都一致了，</p><img src="/2023/07/26/novacode-xceed-word-new-row-font/02.png" class="" title="Word Table 2">]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;最近同事使用 Novacode 新增 Word 中 Table 的 Row 後，&lt;br&gt;原本&lt;strong&gt;標楷體&lt;/strong&gt;的字型，</summary>
      
    
    
    
    
    <category term="Word" scheme="https://rainmakerho.github.io/tags/Word/"/>
    
    <category term="Font" scheme="https://rainmakerho.github.io/tags/Font/"/>
    
    <category term="Novacode" scheme="https://rainmakerho.github.io/tags/Novacode/"/>
    
    <category term="Xceed" scheme="https://rainmakerho.github.io/tags/Xceed/"/>
    
    <category term="DocX" scheme="https://rainmakerho.github.io/tags/DocX/"/>
    
    <category term="Table" scheme="https://rainmakerho.github.io/tags/Table/"/>
    
    <category term="InsertRow" scheme="https://rainmakerho.github.io/tags/InsertRow/"/>
    
  </entry>
  
  <entry>
    <title>執行 node 時，發生 listen EACCES permission denied 0.0.0.0:3000 錯誤</title>
    <link href="https://rainmakerho.github.io/2023/07/13/node-js-listen-eacces-permission-denied-3000/"/>
    <id>https://rainmakerho.github.io/2023/07/13/node-js-listen-eacces-permission-denied-3000/</id>
    <published>2023-07-13T08:13:16.000Z</published>
    <updated>2023-07-13T08:41:26.430Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>有時在開啟 Node 執行起來時，會噴 <code>Error: listen EACCES: permission denied 0.0.0.0:3000</code> (3000 為專案使用的 Port) 的錯誤，如下，</p><blockquote><p>error Failed to start server<br>Error: listen EACCES: permission denied 0.0.0.0:3000<br>at Server.setupListenHandle [as _listen2] (node:net:1723:21)<br>at listenInCluster (node:net:1788:12)<br>at Server.listen (node:net:1876:7)<br>code: ‘EACCES’,<br>errno: -4092,</p></blockquote><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>有時可以換別的 Port Number ，但是有時一大堆的 Port 都不能使用，<br>要一個個換也蠻麻煩的。<br>要看 port 有沒有被佔住，可以執行 <code>netsh interface ipv4 show excludedportrange protocol=tcp</code> 來看一下，<br>看看要用的 port 有在那些 Range 之中。</p><img src="/2023/07/13/node-js-listen-eacces-permission-denied-3000/01.png" class="" title="excludedportrange"><p>解法可以將 <strong>winnat</strong> 服務重新啟動，<br>以<strong>系統管理者身份</strong>執行 命令視窗，執行 <code>net stop/start winnat</code> ，<br>應該就可以了，如下，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">net stop winnat</span><br><span class="line">net start winnat</span><br></pre></td></tr></table></figure><img src="/2023/07/13/node-js-listen-eacces-permission-denied-3000/02.png" class="" title="net stop"><ul><li>註: 除了 node js 專案外，只要是 port 沒發現被別的 process 佔住，就可以用這個方式來解看看哦~</li></ul><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://stackoverflow.com/questions/9164915/node-js-eacces-error-when-listening-on-most-ports">Node.js EACCES error when listening on most ports</a><br><a href="https://medium.com/@Bartleby/ports-are-not-available-listen-tcp-0-0-0-0-3000-165892441b9d">Ports are not available: listen tcp 0.0.0.0:3000: bind: An attempt was made to access a socket in a way forbidden by its access permissions.</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;有時在開啟 Node 執行起來時，會噴 &lt;code&gt;Error: listen EACCES: permission denied 0.0.</summary>
      
    
    
    
    
    <category term="node" scheme="https://rainmakerho.github.io/tags/node/"/>
    
    <category term="listen" scheme="https://rainmakerho.github.io/tags/listen/"/>
    
    <category term="EACCES" scheme="https://rainmakerho.github.io/tags/EACCES/"/>
    
    <category term="port" scheme="https://rainmakerho.github.io/tags/port/"/>
    
    <category term="permission denied" scheme="https://rainmakerho.github.io/tags/permission-denied/"/>
    
  </entry>
  
  <entry>
    <title>如何在 Teams Bot 中取得正確的 Group Id 及 Group Name</title>
    <link href="https://rainmakerho.github.io/2023/06/21/teams-bot-get-groupid/"/>
    <id>https://rainmakerho.github.io/2023/06/21/teams-bot-get-groupid/</id>
    <published>2023-06-21T03:08:59.000Z</published>
    <updated>2023-06-21T03:58:03.467Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在 Teams Bot 當使用者在 Group 中的 一般 或是其他的 Channel 跟 Bot 對話時，<br>Teams 傳給 Bot 內容中的 <strong>channelData</strong> 中，<br>會包含 tenantId(<code>tenant.id</code>) ，Group 一般 Channel 的 Id (<code>team.id</code>) 及 對話 Channel 的 Id(<code>channel.id</code>)，<br>那 Group Id 及 Group Name 要怎麼取得呢?</p><img src="/2023/06/21/teams-bot-get-groupid/01.png" class="" title="Group"><h3 id="解決"><a href="#解決" class="headerlink" title="解決"></a>解決</h3><p>使用者在 Group 中對話的內容如下，</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&lt;at&gt;rmdemobot&lt;/at&gt; Hello message \n&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;textFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;plain&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;attachments&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;contentType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text/html&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;content&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&lt;div&gt;&lt;div&gt;&lt;span itemscope=\&quot;\&quot; itemtype=\&quot;http://schema.skype.com/Mention\&quot; itemid=\&quot;0\&quot;&gt;rmdemobot&lt;/span&gt;&amp;nbsp;Hello message &lt;/div&gt;\n&lt;/div&gt;&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;message&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timestamp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2023-06-21T01:44:55.8630554Z&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;localTimestamp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2023-06-21T09:44:55.8630554+08:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1687311899999&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;channelId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;msteams&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;serviceUrl&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://smba.trafficmanager.net/apac/&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;from&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;29:1iHtS5d7QQQXfCCCyQKseX3wABCDEaleHmZhuOpzoarz-LffABCDbcm0txhXMKK6O5oQQzRuKmSxmgm8No8SP9A&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;亂馬客&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;aadObjectId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;23e66af0-3214-1234-1234-e3a6238d9999&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;conversation&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;isGroup&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;conversationType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;channel&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;tenantId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;d8183322-db35-6677-8866-bedc12345ee9&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;19:496c12345678904a5b46f495abcd471@thread.tacv2;messageid=1687311113113&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;recipient&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;28:cb80ce17-9918-3366-1234-11540e123fa1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;rmdemobot&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;entities&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;mentioned&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;28:cb80ce17-9918-3366-1234-11540e123fa1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;rmdemobot&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&lt;at&gt;rmdemobot&lt;/at&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;mention&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;channelData&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;teamsChannelId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;19:496c12345678904a5b46f495abcd471@thread.tacv2&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;teamsTeamId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;19:NyIXwHW0Wsa03IJPkvBuSiJX1kl5KK0Q1IyVD99abcQ1@thread.tacv2&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;channel&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;19:496c12345678904a5b46f495abcd471@thread.tacv2&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;team&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;19:NyIXwHW0Wsa03IJPkvBuSiJX1kl5KK0Q1IyVD99abcQ1@thread.tacv2&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;tenant&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;d8183322-db35-6677-8866-bedc12345ee9&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;locale&quot;</span><span class="punctuation">:</span> <span class="string">&quot;zh-TW&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;localTimezone&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Asia/Taipei&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>網路上大多是在 Teams App 的 Group <code>...</code> 上按右鍵，<br>按下 <strong>取得團隊的連結</strong> 中去 Parse Url 中的 groupId ，<br><code>https://teams.microsoft.com/l/team/19%NyIXwHW0Wsa03IJPkvBuSiJX1kl5KK0Q1IyVD99abcQ1%40thread.tacv2/conversations?groupId=1f99kk99-1234-4c99-8125-abc186ade451&amp;tenantId=d8183322-db35-6677-8866-bedc12345ee9</code><br>但在 Teams Bot 中，要怎麼取到那個 Group Id 及 Group Name 呢?</p><p>可以在 <code>installationUpdate</code> or <code>conversationUpdate</code> 事件中，<br>從 channelData 中的 <code>team</code> 來取得 Group 的資訊，<br>其中有 <code>aadGroupId</code> 、 <code>name</code> 及 Group 中一般 Channel 的 Id <code>id</code> 如下，</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;channelData&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;settings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;selectedChannel&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;19:NyIXwHW0Wsa03IJPkvBuSiJX1kl5KK0Q1IyVD99abcQ1@thread.tacv2&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;channel&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;19:NyIXwHW0Wsa03IJPkvBuSiJX1kl5KK0Q1IyVD99abcQ1@thread.tacv2&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;team&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;aadGroupId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1f99kk99-1234-4c99-8125-abc186ade451&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;myGroup&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;19:NyIXwHW0Wsa03IJPkvBuSiJX1kl5KK0Q1IyVD99abcQ1@thread.tacv2&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;tenant&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;d8183322-db35-6677-8866-bedc12345ee9&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;source&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;message&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>所以在 Bot 加到 Group 中，就先將這些資訊記錄下來，<br>從上面的 json 內容可以發現，使用 <code>channelData</code> 中的 <code>team.id</code> 就可以來對應哦~<br>所以，當使用者跟 Bot 對話時，就可以用 <code>channelData</code> 中的 <code>team.id</code> 來對應它，<br>取出 <code>team.aadGroupId</code> 取 <code>team.name</code> 哦~</p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://learn.microsoft.com/en-us/microsoftteams/platform/resources/bot-v3/bot-conversations/bots-conversations#teams-channel-data">Have a conversation with a Microsoft Teams bot</a><br><a href="https://learn.microsoft.com/en-us/microsoftteams/platform/bots/how-to/conversations/subscribe-to-conversation-events?tabs=dotnet#installation-update-event">Conversation events in your Teams bot</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;在 Teams Bot 當使用者在 Group 中的 一般 或是其他的 Channel 跟 Bot 對話時，&lt;br&gt;Teams 傳給 Bot</summary>
      
    
    
    
    
    <category term="teams" scheme="https://rainmakerho.github.io/tags/teams/"/>
    
    <category term="Bot" scheme="https://rainmakerho.github.io/tags/Bot/"/>
    
    <category term="GroupId" scheme="https://rainmakerho.github.io/tags/GroupId/"/>
    
    <category term="ChannelId" scheme="https://rainmakerho.github.io/tags/ChannelId/"/>
    
    <category term="Guid" scheme="https://rainmakerho.github.io/tags/Guid/"/>
    
  </entry>
  
  <entry>
    <title>討論 TSQL Query 低效問題</title>
    <link href="https://rainmakerho.github.io/2023/06/20/tsql-low-performing/"/>
    <id>https://rainmakerho.github.io/2023/06/20/tsql-low-performing/</id>
    <published>2023-06-20T01:22:25.000Z</published>
    <updated>2023-06-20T04:06:47.807Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>當系統在 Query 資料庫時，執行太久時，要如何處理呢?<br>我們可以建立 Checklist 的問題，來釐清問題所在。<br>例如以下 <strong>檢核表</strong> 的例子，</p><table><thead><tr><th>問題</th><th>使用者回覆</th><th>可能問題</th></tr></thead><tbody><tr><td>這個 Query 的目的是什麼?</td><td>將資料輸出到 Excel 後，依年度產生每個地區的銷售數量(包含 銷售人員)。例如，2019 年北美地區銷售訂單狀態為進行中的資料</td><td>Query 是否跟目的相符?</td></tr><tr><td>目前想要解決什麼問題</td><td>這個查詢太久了，是否可以讓它快一點?</td><td>查看 Query 篩選是否符合 SARG</td></tr><tr><td>Query 是否有取回正確的資料?</td><td>可能有吧~</td><td>Query 篩選條件可能有問題</td></tr><tr><td>Query 有取回多餘的資料嗎?</td><td>有。在 Excel 中，我要刪除許多欄位，並過濾掉許多資料</td><td>Query 篩選條件有問題，是否 Select 過多的欄位?</td></tr><tr><td>這個 Query 曾經快過嗎?</td><td>有的，在幾個月前，它跑的是快的</td><td>幾個月前是否更新程式導致變慢</td></tr></tbody></table><h3 id="找找-Query-問題點"><a href="#找找-Query-問題點" class="headerlink" title="找找 Query 問題點"></a>找找 Query 問題點</h3><p>Query 目的為 <strong>取得 2019 年北美地區銷售訂單狀態為進行中的資料</strong> 來檢視以下的 SQL 有那些要調整的地方，</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> Sales.SalesOrder so</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> Sales.SalesTerritory st <span class="keyword">ON</span> so.SalesTerritory <span class="operator">=</span> st.Id</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> Sales.SalesPerson sp <span class="keyword">ON</span> so.SalesPerson <span class="operator">=</span> sp.Id</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> Sales.SalesPersonLevel spl <span class="keyword">ON</span> spl.Id <span class="operator">=</span> sp.LevelId</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> Sales.SalesOrderStatus sos <span class="keyword">ON</span> sos.Id <span class="operator">=</span> so.SalesOrderStatus</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">CONVERT</span>(<span class="type">CHAR</span>(<span class="number">10</span>),so.SalesDate,<span class="number">121</span>) <span class="operator">&gt;=</span> <span class="string">&#x27;2019-01-01&#x27;</span></span><br><span class="line"><span class="keyword">AND</span> <span class="keyword">CONVERT</span>(<span class="type">CHAR</span>(<span class="number">10</span>),so.SalesDate,<span class="number">121</span>) <span class="operator">&lt;=</span> <span class="string">&#x27;2019-12-31&#x27;</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> so.SalesDate,</span><br><span class="line">so.SalesAmount <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><p>… 有找到那些問題呢???</p><p>1.<code>so.SalesDate</code> 是 DateTime 類別，所以不用再透過 <strong>CONVERT</strong> 來轉換 (SARG)，這樣會讓 <code>so.SalesDate</code> 無法用到 index</p><p>2.要加上 <code>北美地區銷售</code> 及 <code>訂單狀態為進行中</code> 的篩選條件</p><p>3.<code>Select * </code> 改成列出需要的欄位</p><p>4.使用者會將資料匯出 Excel 再後製，所以是否有必要排序?</p><p>所以調整過的 Query 可能會如下，</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> so.Col1, So.Col2, ...</span><br><span class="line"><span class="keyword">FROM</span> Sales.SalesOrder so</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> Sales.SalesTerritory st <span class="keyword">ON</span> so.SalesTerritory <span class="operator">=</span> st.Id</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> Sales.SalesPerson sp <span class="keyword">ON</span> so.SalesPerson <span class="operator">=</span> sp.Id</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> Sales.SalesPersonLevel spl <span class="keyword">ON</span> spl.Id <span class="operator">=</span> sp.LevelId</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> Sales.SalesOrderStatus sos <span class="keyword">ON</span> sos.Id <span class="operator">=</span> so.SalesOrderStatus</span><br><span class="line"><span class="keyword">WHERE</span> so.SalesDate <span class="operator">&gt;=</span> <span class="string">&#x27;2019/01/01&#x27;</span></span><br><span class="line"><span class="keyword">AND</span> so.SalesDate <span class="operator">&lt;=</span> <span class="string">&#x27;2019/12/31 23:59:59&#x27;</span></span><br><span class="line"><span class="keyword">AND</span> st.[<span class="keyword">Group</span>] <span class="operator">=</span> <span class="string">&#x27;North America&#x27;</span></span><br><span class="line"><span class="keyword">AND</span> sos.StatusName <span class="operator">=</span> <span class="string">&#x27;In Progress&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://learn.microsoft.com/zh-tw/troubleshoot/sql/database-engine/performance/troubleshoot-slow-running-queries">針對 SQL Server 上執行緩慢的查詢進行疑難排解</a><br><a href="https://www.sqlshack.com/how-to-use-sargable-expressions-in-t-sql-queries-performance-advantages-and-examples/">How to use sargable expressions in T-SQL queries; performance advantages and examples</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;當系統在 Query 資料庫時，執行太久時，要如何處理呢?&lt;br&gt;我們可以建立 Checklist 的問題，來釐清問題所在。&lt;br&gt;例如以下</summary>
      
    
    
    
    
    <category term="MSSQL" scheme="https://rainmakerho.github.io/tags/MSSQL/"/>
    
    <category term="TSQL" scheme="https://rainmakerho.github.io/tags/TSQL/"/>
    
    <category term="Performance" scheme="https://rainmakerho.github.io/tags/Performance/"/>
    
    <category term="SARG" scheme="https://rainmakerho.github.io/tags/SARG/"/>
    
  </entry>
  
  <entry>
    <title>如何永久停用 Teams 的 照相機</title>
    <link href="https://rainmakerho.github.io/2023/06/16/teams-permanent-disable-camera/"/>
    <id>https://rainmakerho.github.io/2023/06/16/teams-permanent-disable-camera/</id>
    <published>2023-06-16T02:19:32.000Z</published>
    <updated>2023-06-16T02:35:04.469Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>大家在使用 Teams 時，有時要開啟 麥克風 時，<strong>照相機</strong> 也會自動被開啟一下下，然後再自動停用掉。<br>有時一場會議中，<strong>照相機</strong> 會來來回回的開開關關的 …<br>如果說，大多不會開啟 <strong>照相機</strong> 的話，是否有什麼方式可以<strong>永久停用</strong> <strong>照相機</strong> 的方式嗎?</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>要 <strong>永久停用</strong> Teams 的 <strong>照相機</strong> 可以直接把 系統的 <strong>照相機</strong> 停用就可以了。<br>在檔案總管中的「本機」按右鍵，選「管理」，開啟「電腦管理」，<br>點選「裝置管理員」，在「相機」上按右鍵，選取「停用裝置」就可以了哦。</p><img src="/2023/06/16/teams-permanent-disable-camera/01.png" class="" title="disable-camera">]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;大家在使用 Teams 時，有時要開啟 麥克風 時，&lt;strong&gt;照相機&lt;/strong&gt; 也會自動被開啟一下下，然後再自動停用掉。&lt;br</summary>
      
    
    
    
    
    <category term="teams" scheme="https://rainmakerho.github.io/tags/teams/"/>
    
    <category term="disable" scheme="https://rainmakerho.github.io/tags/disable/"/>
    
    <category term="camera" scheme="https://rainmakerho.github.io/tags/camera/"/>
    
    <category term="permanent" scheme="https://rainmakerho.github.io/tags/permanent/"/>
    
  </entry>
  
  <entry>
    <title>JDBC 連 SQL Server 噴 &quot;驅動程式無法使用安全通訊端層 (SSL) 加密建立與 SQL Server 的安全連接&quot; 的錯誤</title>
    <link href="https://rainmakerho.github.io/2023/06/14/cas-jdbc-sqlserverexception-ssl-pkix/"/>
    <id>https://rainmakerho.github.io/2023/06/14/cas-jdbc-sqlserverexception-ssl-pkix/</id>
    <published>2023-06-14T07:02:02.000Z</published>
    <updated>2023-06-14T07:13:10.302Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>同事設定 CAS 連接 MS SQL Server 啟動後會噴以下的錯誤，<br><code>org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.microsoft.sqlserver.jdbc.SQLServerException: 驅動程式無法使用安全通訊端層 (SSL) 加密建立與 SQL Server 的安全連接。錯誤: &quot;PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target&quot;。 ClientConnectionId:7c5b19e7-9ebe-4175-83d8-b179b04fe16d / Failed to obtain JDBC Connection; nested exception is com.microsoft.sqlserver.jdbc.SQLServerException: 驅動程式無法使用安全通訊端層 (SSL) 加 密建立與 SQL Server 的安全連接。錯誤: &quot;PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target</code></p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>查看連線字串為 <code>jdbc:sqlserver://rmsql\sqlexpress;databaseName=cas;integratedSecurity=true</code><br>依<a href="https://learn.microsoft.com/zh-tw/sql/connect/jdbc/understanding-ssl-support?view=sql-server-ver16">JDBC 了解加密支援</a> 連線字串中沒設定 <code>encrypt</code> 就表示不啟用 encrypt，<br>那怎麼會走 SSL 呢?<br>詢問 Java 開發的同事 9G 及 Willy 大大，<br>他說加一下 <code>encrypt=false</code> 。<br>結果，加上去再跑，果然就過了，QQ。</p><p>所以，如果在本機測試，不想要走 SSL 的話，請記得要設定 <code>encrypt=false</code>，<br>才不會強迫走 TLS 哦~</p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://learn.microsoft.com/zh-tw/sql/connect/jdbc/building-the-connection-url?view=sql-server-ver16">JDBC 建置連線 URL</a><br><a href="https://learn.microsoft.com/zh-tw/sql/connect/jdbc/understanding-ssl-support?view=sql-server-ver16">JDBC 了解加密支援</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;同事設定 CAS 連接 MS SQL Server 啟動後會噴以下的錯誤，&lt;br&gt;&lt;code&gt;org.springframework.jdb</summary>
      
    
    
    
    
    <category term="TLS" scheme="https://rainmakerho.github.io/tags/TLS/"/>
    
    <category term="JDBC" scheme="https://rainmakerho.github.io/tags/JDBC/"/>
    
    <category term="SSL" scheme="https://rainmakerho.github.io/tags/SSL/"/>
    
    <category term="SQL Server" scheme="https://rainmakerho.github.io/tags/SQL-Server/"/>
    
    <category term="CAS" scheme="https://rainmakerho.github.io/tags/CAS/"/>
    
    <category term="encrypt" scheme="https://rainmakerho.github.io/tags/encrypt/"/>
    
  </entry>
  
  <entry>
    <title>在 Windows 中安裝 Apereo CAS 6.X</title>
    <link href="https://rainmakerho.github.io/2023/05/30/apereo-cas-install-windows/"/>
    <id>https://rainmakerho.github.io/2023/05/30/apereo-cas-install-windows/</id>
    <published>2023-05-30T06:13:49.000Z</published>
    <updated>2023-06-05T07:36:04.251Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>環境: cas-overlay-template 6.6</p><p>在網路上尋找將 Apereo CAS 安裝在 Windows 上的文章，</p><p>1.安裝 <a href="https://learn.microsoft.com/zh-tw/java/openjdk/download">OpenJDK</a></p><p>2.安裝 <a href="https://tomcat.apache.org/download-10.cgi">Tomcat 10</a></p><p>3.透過 <code>keytool</code> 來建立自簽憑證，來設定 Tomcat 啟用 TLS 走 8443 Port</p><p>4.建置 <a href="https://github.com/apereo/cas-overlay-template">cas-overlay-template</a></p><p>5.將 建置好的 war 檔(build\lib\cas.war)放到 Tomcat webapps 目錄中，Browser 到 <code>https://localhost:8443/cas</code> 就搞定了。</p><p>結果，我一跑，就噴 404，如下，</p><img src="/2023/05/30/apereo-cas-install-windows/01.png" class="" title="tomcat error"><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>詢問同事 Willy 大大，他測試 透過 <strong>gradlew</strong> <code>clean build</code>, <code>createKeystore</code> 再 <code>run</code> ，<br>Browser 到 <code>https://localhost:8443/cas</code> 就可以了… 傻眼 …<br>所以 …<br>前面的 Tomcat 不需要裝，也不需要把 war 放到 Tomcat 的 WebApps 目錄中 。<br>可以 Work 的 Step 如下，</p><p>1.下載 <a href="https://github.com/apereo/cas-overlay-template">cas-overlay-template</a>，或是開啟命令視窗執行 <code>git clone https://github.com/apereo/cas-overlay-template.git cas-server</code> 來下載。</p><p>2.開啟命令視窗，<code>cd cas-server</code>，切換到要使用的版本，可透過 <code>git checkout -b 6.6 origin/6.6</code> 來切換。</p><img src="/2023/05/30/apereo-cas-install-windows/02.png" class="" title="download cas-overlay"><p>3.在<a href="https://github.com/apereo/cas-overlay-template">cas-overlay-template</a>檔案的根目錄下，新增 <code>etc\cas</code> 目錄</p><img src="/2023/05/30/apereo-cas-install-windows/03.png" class="" title="crete etc folder"><p>4.在命令視窗中執行 <code>gradlew clean build</code></p><p>5.在命令視窗中執行 <code>gradlew createKeystore</code>，這個 task 會在<code>c:\etc\cas</code>目錄中，建立自簽憑證。</p><img src="/2023/05/30/apereo-cas-install-windows/04.png" class="" title="createKeystore"><p>6.在命令視窗中執行 <code>gradlew run</code></p><img src="/2023/05/30/apereo-cas-install-windows/05.png" class="" title="gradlew run"><p>7.開啟 Browser ，網址列輸入 <code>https://localhost:8443/cas/login</code> 就會出現 CAS 的登入畫面，使用 casuser&#x2F;Mellon 登入。</p><img src="/2023/05/30/apereo-cas-install-windows/06.png" class="" title="cas-login"><img src="/2023/05/30/apereo-cas-install-windows/07.png" class="" title="cas-login2"><p>以上是 單獨跑，那如果要放到 tomcat 中呢??</p><blockquote><p>目前 cas-overlay-template 6.6 ，要使用 <a href="https://tomcat.apache.org/download-90.cgi">Tomcat 9</a> 哦~<br>改用 <a href="https://tomcat.apache.org/download-90.cgi">Tomcat 9</a> ，把前面 Build 好的 war 放到 webapps 目錄就可以了 , QQ</p></blockquote><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://cloud.tencent.com/developer/article/2154554">Apereo CAS（一）在本地运行</a><br><a href="https://learn.microsoft.com/zh-tw/java/openjdk/download">下載 OpenJDK 的 Microsoft 組建</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;環境: cas-overlay-template 6.6&lt;/p&gt;
&lt;p&gt;在網路上尋找將 Apereo CAS 安裝在 Windows 上的文</summary>
      
    
    
    
    
    <category term="404" scheme="https://rainmakerho.github.io/tags/404/"/>
    
    <category term="Windows" scheme="https://rainmakerho.github.io/tags/Windows/"/>
    
    <category term="SSO" scheme="https://rainmakerho.github.io/tags/SSO/"/>
    
    <category term="CAS" scheme="https://rainmakerho.github.io/tags/CAS/"/>
    
    <category term="cas-overlay-template" scheme="https://rainmakerho.github.io/tags/cas-overlay-template/"/>
    
    <category term="Tomcat 10" scheme="https://rainmakerho.github.io/tags/Tomcat-10/"/>
    
  </entry>
  
  <entry>
    <title>Tomcat Https Protocol handler initialization failed</title>
    <link href="https://rainmakerho.github.io/2023/05/29/tomcat-no-sslhostconfig-element-was-found-with-the-hostname/"/>
    <id>https://rainmakerho.github.io/2023/05/29/tomcat-no-sslhostconfig-element-was-found-with-the-hostname/</id>
    <published>2023-05-29T05:14:13.000Z</published>
    <updated>2023-05-29T09:55:02.847Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>在調整 Tomcat 10 要啟用 TLS 時，有參考網路上的設定，<br>在建立好 keystore 後，就將設定直貼到 server.xml 之中，如下，</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">&quot;8443&quot;</span> <span class="attr">protocol</span>=<span class="string">&quot;org.apache.coyote.http11.Http11NioProtocol&quot;</span></span></span><br><span class="line"><span class="tag"> <span class="attr">maxThreads</span>=<span class="string">&quot;150&quot;</span> <span class="attr">SSLEnabled</span>=<span class="string">&quot;true&quot;</span> <span class="attr">keystoreFile</span>=<span class="string">&quot;conf/server.keystore&quot;</span> <span class="attr">keystorePass</span>=<span class="string">&quot;changeit&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>結果在啟動 tomcat 時，就噴 <strong>Protocol handler initialization failed</strong> 及 **Caused by: java.lang.IllegalArgumentException: No SSLHostConfig element was found with the hostName [<em>default</em>] to match the defaultSSLHostConfigName for the connector [https-openssl-nio-8443]**的錯誤，如下，</p><blockquote><p>org.apache.catalina.LifecycleException: Protocol handler initialization failed<br>at org.apache.catalina.connector.Connector.initInternal(Connector.java:1018)<br>at org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:136)<br>at org.apache.catalina.core.StandardService.initInternal(StandardService.java:549)<br>at org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:136)<br>at org.apache.catalina.core.StandardServer.initInternal(StandardServer.java:999)<br>at org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:136)<br>at org.apache.catalina.startup.Catalina.load(Catalina.java:747)<br>at org.apache.catalina.startup.Catalina.load(Catalina.java:769)<br>at java.base&#x2F;jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)<br>at java.base&#x2F;jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)<br>at java.base&#x2F;jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)<br>at java.base&#x2F;java.lang.reflect.Method.invoke(Method.java:566)<br>at org.apache.catalina.startup.Bootstrap.load(Bootstrap.java:307)<br>at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:477)<br>Caused by: java.lang.IllegalArgumentException: No SSLHostConfig element was found with the hostName [<em>default</em>] to match the &gt;defaultSSLHostConfigName for the connector [https-openssl-nio-8443]<br>at org.apache.tomcat.util.net.AbstractJsseEndpoint.initialiseSsl(AbstractJsseEndpoint.java:75)<br>at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:207)<br>at org.apache.tomcat.util.net.AbstractEndpoint.bindWithCleanup(AbstractEndpoint.java:1256)<br>at org.apache.tomcat.util.net.AbstractEndpoint.init(AbstractEndpoint.java:1269)<br>at org.apache.coyote.AbstractProtocol.init(AbstractProtocol.java:622)<br>at org.apache.coyote.http11.AbstractHttp11Protocol.init(AbstractHttp11Protocol.java:77)<br>at org.apache.catalina.connector.Connector.initInternal(Connector.java:1016)</p></blockquote><h3 id="解決"><a href="#解決" class="headerlink" title="解決"></a>解決</h3><p>查看 tomcat 預設的 設定值似乎跟貼上去的內容不同，<br>於是改用 tomcat 的內容來調整，</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">&quot;8443&quot;</span> <span class="attr">protocol</span>=<span class="string">&quot;org.apache.coyote.http11.Http11NioProtocol&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">maxThreads</span>=<span class="string">&quot;150&quot;</span> <span class="attr">SSLEnabled</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">maxParameterCount</span>=<span class="string">&quot;1000&quot;</span></span></span><br><span class="line"><span class="tag">               &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">UpgradeProtocol</span> <span class="attr">className</span>=<span class="string">&quot;org.apache.coyote.http2.Http2Protocol&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">SSLHostConfig</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Certificate</span> <span class="attr">certificateKeystoreFile</span>=<span class="string">&quot;conf/server.keystore&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">type</span>=<span class="string">&quot;RSA&quot;</span> <span class="attr">certificateKeystorePassword</span>=<span class="string">&quot;changeit&quot;</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">SSLHostConfig</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Connector</span>&gt;</span></span><br></pre></td></tr></table></figure><p>重新啟動 tomcat 就正常運作了，<br>開啟 Browser ，連到 <code>https://localhost:8443</code> 也可以正常看到 tomcat 首頁</p><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="https://tomcat.apache.org/tomcat-10.0-doc/ssl-howto.html#Configuration">Apache Tomcat 10 SSL&#x2F;TLS Configuration How-To</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;在調整 Tomcat 10 要啟用 TLS 時，有參考網路上的設定，&lt;br&gt;在建立好 keystore 後，就將設定直貼到 server.x</summary>
      
    
    
    
    
    <category term="TLS" scheme="https://rainmakerho.github.io/tags/TLS/"/>
    
    <category term="Tomcat" scheme="https://rainmakerho.github.io/tags/Tomcat/"/>
    
    <category term="SSLHostConfig" scheme="https://rainmakerho.github.io/tags/SSLHostConfig/"/>
    
    <category term="8443" scheme="https://rainmakerho.github.io/tags/8443/"/>
    
  </entry>
  
  <entry>
    <title>ABP 透過 Swagger UI 測試 API 時，會噴 400 的錯誤?</title>
    <link href="https://rainmakerho.github.io/2023/05/27/abp-swagger-400-error/"/>
    <id>https://rainmakerho.github.io/2023/05/27/abp-swagger-400-error/</id>
    <published>2023-05-27T06:37:17.000Z</published>
    <updated>2023-05-27T08:49:57.784Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>建立 ABP MVC Web 專案後，<br>執行 Web 專案時，會先到 Web 首頁，<br>輸入 <code>/swagger</code> 後，會顯示 <strong>Swagger UI</strong>。<br>在 Swagger UI 中，可以透過 <strong>Try it out</strong> 來直接測試 Web API。<br>當輸入資料，按下 <strong>Execute</strong> 後，結果卻是出現 <strong>400</strong> <code>Error: Bad Request</code><br>連 Method 的程式碼都沒有執行，如下圖，</p><img src="/2023/05/27/abp-swagger-400-error/01.png" class="" title="Error: Bad Request"><h3 id="解決"><a href="#解決" class="headerlink" title="解決"></a>解決</h3><p>查看一下 Console 輸出有出現 <code>The required antiforgery header value &quot;RequestVerificationToken&quot; is not present.</code> 的警告，<br>然後最後就給 400。</p><img src="/2023/05/27/abp-swagger-400-error/02.png" class="" title="required antiforgery header value"><p>因為它需要有 <strong>antiforgery</strong> header，<br>開啟<strong>開發者工具</strong>，<br>在 <strong>Cookies</strong> 中有一個 <code>.AspNetCore.Antiforgery.oSFhvIVq2CY</code> 的 Cookie，如下，</p><img src="/2023/05/27/abp-swagger-400-error/03.png" class="" title=".AspNetCore.Antiforgery"><p>它應該是先前在 UI 中產生的 Cookie ，<br>所以當直接在 URL 中直接輸入 <code>/swagger</code> 時，<br>Cookie 並不會被清除，所以在 API 執行時，<br>會進行 Antiforgery 的檢查，於是就噴 <strong>400</strong> 的錯了。</p><p>將該 Cookie 清除，再執行一次，就正常了。</p><img src="/2023/05/27/abp-swagger-400-error/04.png" class="" title="OK"><p>下次如果透過 Swagger 執行 API，連程式都沒進去就噴<strong>400</strong>時，<br>請檢查一下 Log 及 Cookie 是否是因為 <strong>Antiforgery</strong> 的原因哦~~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;建立 ABP MVC Web 專案後，&lt;br&gt;執行 Web 專案時，會先到 Web 首頁，&lt;br&gt;輸入 &lt;code&gt;/swagger&lt;/co</summary>
      
    
    
    
    
    <category term="ABP" scheme="https://rainmakerho.github.io/tags/ABP/"/>
    
    <category term="Swagger" scheme="https://rainmakerho.github.io/tags/Swagger/"/>
    
    <category term="Swagger UI" scheme="https://rainmakerho.github.io/tags/Swagger-UI/"/>
    
    <category term="400" scheme="https://rainmakerho.github.io/tags/400/"/>
    
    <category term="Bad Request" scheme="https://rainmakerho.github.io/tags/Bad-Request/"/>
    
    <category term="Antiforgery" scheme="https://rainmakerho.github.io/tags/Antiforgery/"/>
    
  </entry>
  
  <entry>
    <title>Visual Studio 透過 IIS Express ，https 在 Browser 發生 你的連線不是私人連線(ERR_CERT_AUTHORITY_INVALID) 的警告</title>
    <link href="https://rainmakerho.github.io/2023/05/20/visual-studio-iisexpress-ssl-cert-authority/"/>
    <id>https://rainmakerho.github.io/2023/05/20/visual-studio-iisexpress-ssl-cert-authority/</id>
    <published>2023-05-20T02:01:34.000Z</published>
    <updated>2023-05-20T02:21:11.455Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>執行 Web 專案時，選擇以「IIS Express」方式啟動專案，<br>會先顯示要我們 <strong>信任</strong> SSL 憑證，但按下「是」後，卻又無法將它新增到<strong>根憑證存放區</strong>。<br>在 Browser 中則顯示 <strong>你的連線不是私人連線(NET::ERR_CERT_AUTHORITY_INVALID)</strong> 的警告。</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>透過 Browser 查看憑證可以發現，該 <strong>憑證</strong> 與 <strong>受信任的根憑證授權單位</strong> 中 <code>憑證</code> 區的 <strong>localhost</strong> 憑證並不相同，如下，</p><img src="/2023/05/20/visual-studio-iisexpress-ssl-cert-authority/01.png" class="" title="受信任的根憑證授權單位-憑證"><p>反而與 <strong>個人</strong> 中 <code>憑證</code> 區裡面的 <strong>localhost</strong> 是相同的，如下，</p><img src="/2023/05/20/visual-studio-iisexpress-ssl-cert-authority/02.png" class="" title="個人-憑證"><p>所以可以參考 <a href="https://rainmakerho.github.io/2022/03/22/visual-studio-adding-certificate-to-trusted-root-failed/">Microsoft Visual Studio 無法將憑證新增至受信任的根憑證存放區 - 無法信任憑證</a> ，<br>將在 <strong>個人</strong> 中 <code>憑證</code> 區裡面的 <strong>localhost</strong> 憑證匯出後，<br>再匯入到 <strong>受信任的根憑證授權單位</strong> 中 <code>憑證</code> 區之中，<br>再重啟動 Visual Studio 執行專案就可以了哦!</p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://rainmakerho.github.io/2022/03/22/visual-studio-adding-certificate-to-trusted-root-failed/">Microsoft Visual Studio 無法將憑證新增至受信任的根憑證存放區 - 無法信任憑證</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;執行 Web 專案時，選擇以「IIS Express」方式啟動專案，&lt;br&gt;會先顯示要我們 &lt;strong&gt;信任&lt;/strong&gt; SSL </summary>
      
    
    
    
    
    <category term="Visual Studio" scheme="https://rainmakerho.github.io/tags/Visual-Studio/"/>
    
    <category term="無法將憑證新增至受信任的根憑證存放區" scheme="https://rainmakerho.github.io/tags/%E7%84%A1%E6%B3%95%E5%B0%87%E6%86%91%E8%AD%89%E6%96%B0%E5%A2%9E%E8%87%B3%E5%8F%97%E4%BF%A1%E4%BB%BB%E7%9A%84%E6%A0%B9%E6%86%91%E8%AD%89%E5%AD%98%E6%94%BE%E5%8D%80/"/>
    
    <category term="IIS Express" scheme="https://rainmakerho.github.io/tags/IIS-Express/"/>
    
    <category term="NET::ERR_CERT_AUTHORITY_INVALID" scheme="https://rainmakerho.github.io/tags/NET-ERR-CERT-AUTHORITY-INVALID/"/>
    
    <category term="你的連線不是私人連線" scheme="https://rainmakerho.github.io/tags/%E4%BD%A0%E7%9A%84%E9%80%A3%E7%B7%9A%E4%B8%8D%E6%98%AF%E7%A7%81%E4%BA%BA%E9%80%A3%E7%B7%9A/"/>
    
  </entry>
  
  <entry>
    <title>透過 Exchange Web Service (EWS) 來取得人員與會議室空閒的時段</title>
    <link href="https://rainmakerho.github.io/2023/05/18/ews-get-free-busy-suggestions-info/"/>
    <id>https://rainmakerho.github.io/2023/05/18/ews-get-free-busy-suggestions-info/</id>
    <published>2023-05-18T08:00:11.000Z</published>
    <updated>2023-05-18T09:24:09.790Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>要 Book 一堆人及會議室時，是一件很累人的事情。<br>平常 Book 的方式就是，將與會人員及會議室加在一起，<br>然後努力地看那個時間點是大家有空閒的時間，<br>那個會議室在那個區段也是空閒的，如下，</p><img src="/2023/05/18/ews-get-free-busy-suggestions-info/01.png" class="" title="Book Appointment"><p>那是不是有什麼方式可以節省肉搜的時間呢?<br>使用 Exchange Web Service (EWS) 提供的 <a href="https://learn.microsoft.com/en-us/exchange/client-developer/web-service-reference/getuseravailability-operation">GetUserAvailability</a> 就可以達到這個需求哦~</p><h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><p>Q.要如何知道 2023&#x2F;05&#x2F;19 這天，chris, ericlin 及 janet 有那些會議呢?<br>Q.在 2023&#x2F;05&#x2F;19 這天， chris, ericlin 及 janet 要開會 1.5 小時，他們有那些時段可以選呢?<br>Q.在 2023&#x2F;05&#x2F;19 這天， 要 Book chris, ericlin 及 janet 及 會議室 1.5 小時，他們有那些時段可以選呢?</p><p>以下就下述的問題透過 EWS 取出需要的資訊，</p><p>1.專案請加入 <code>Microsoft.Exchange.WebServices</code> Nuget 套件及 <code>System.DirectoryServices</code> 參考。</p><p>2.接下來 EWS 的 Web Service URL 及設定連線人員帳&#x2F;密，呼叫 <code>GetAvailability</code> 來取得資訊，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Microsoft.Exchange.WebServices.Data;</span><br><span class="line"><span class="keyword">using</span> System.Collections.ObjectModel;</span><br><span class="line"><span class="keyword">using</span> System.DirectoryServices;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> adhost = <span class="string">&quot;LDAP://你的 dns server&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> adUser = <span class="string">&quot;要查的User&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> adUserPwd = <span class="string">&quot;password&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> domainName = <span class="string">&quot;你的exchangeDomain&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> dateFormat = <span class="string">&quot;yyyy/MM/dd&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> timeFormat = <span class="string">&quot;HH:mm:ss&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> service = <span class="keyword">new</span> ExchangeService();</span><br><span class="line">service.Credentials = <span class="keyword">new</span> WebCredentials(adUser, adUserPwd);</span><br><span class="line"><span class="comment">//service.TraceEnabled = true;</span></span><br><span class="line"><span class="comment">//service.TraceFlags = TraceFlags.All;</span></span><br><span class="line"><span class="keyword">var</span> serverUrl = <span class="string">@&quot;https://你的exchangeFQDN//EWS/Exchange.asmx&quot;</span>;</span><br><span class="line">service.Url = <span class="keyword">new</span> Uri(serverUrl);</span><br><span class="line">DateTime <span class="keyword">from</span> = <span class="keyword">new</span> DateTime(<span class="number">2023</span>, <span class="number">5</span>, <span class="number">19</span>);</span><br><span class="line">DateTime to = <span class="keyword">new</span> DateTime(<span class="number">2023</span>, <span class="number">5</span>, <span class="number">19</span>, <span class="number">23</span>, <span class="number">59</span>, <span class="number">59</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//取得這群人有空的時間</span></span><br><span class="line"><span class="keyword">var</span> users = <span class="keyword">new</span> List&lt;AttendeeInfo&gt;();</span><br><span class="line">users.Add(<span class="keyword">new</span> AttendeeInfo(<span class="string">$&quot;chris@<span class="subst">&#123;domainName&#125;</span>&quot;</span>));</span><br><span class="line">users.Add(<span class="keyword">new</span> AttendeeInfo(<span class="string">$&quot;ericlin@<span class="subst">&#123;domainName&#125;</span>&quot;</span>));</span><br><span class="line">users.Add(<span class="keyword">new</span> AttendeeInfo(<span class="string">$&quot;janet@<span class="subst">&#123;domainName&#125;</span>&quot;</span>));</span><br><span class="line"><span class="comment">//1.5小時</span></span><br><span class="line"><span class="keyword">var</span> meetingHours = <span class="number">1.5</span>;</span><br><span class="line"><span class="comment">//取得這些人會議時間跟建議的空閒時間</span></span><br><span class="line"><span class="keyword">var</span> freeBusyResults = GetAvailability(service, users, meetingHours, <span class="keyword">from</span>, to</span><br><span class="line">    , AvailabilityData.FreeBusyAndSuggestions);</span><br><span class="line"></span><br><span class="line"><span class="comment">//Q.要如何知道 2023/05/19 這天，chris, ericlin 及 janet 有那些會議資訊呢?</span></span><br><span class="line"><span class="comment">//那些人有會議時間 (AvailabilityData.FreeBusy or AvailabilityData.FreeBusyAndSuggestions) 才會有資料</span></span><br><span class="line">Console.WriteLine(<span class="string">&quot;Q.要如何知道 2023/05/19 這天，chris, ericlin 及 janet 有那些會議呢?&quot;</span>);</span><br><span class="line"><span class="built_in">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> availability <span class="keyword">in</span> freeBusyResults.AttendeesAvailability)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(availability.CalendarEvents.Count &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;使用者:&#123;0&#125;:\n&quot;</span>, users[i].SmtpAddress);</span><br><span class="line">        <span class="keyword">foreach</span> (CalendarEvent calEvent <span class="keyword">in</span> availability.CalendarEvents)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;\t&#123;0&#125;~&#123;1&#125;(&#123;2&#125;) \n&quot;</span></span><br><span class="line">                , calEvent.StartTime.ToString(<span class="string">$&quot;<span class="subst">&#123;dateFormat&#125;</span> <span class="subst">&#123;timeFormat&#125;</span>&quot;</span>)</span><br><span class="line">                , calEvent.EndTime.ToString(<span class="string">$&quot;<span class="subst">&#123;dateFormat&#125;</span> <span class="subst">&#123;timeFormat&#125;</span>&quot;</span>)</span><br><span class="line">                , calEvent.Details?.Subject);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//註: calEvent.Details 如果為 null ，表示該使用者沒有給別人看 行事曆的權限</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Q.在 2023/05/19 這天， chris, ericlin 及 janet 要開會 1.5 小時，他們有那些時段可以選呢?</span></span><br><span class="line"><span class="comment">//建議的空閒時間 (AvailabilityData.Suggestions or AvailabilityData.FreeBusyAndSuggestions) 才會有資料</span></span><br><span class="line">Console.WriteLine(<span class="string">&quot;Q.在 2023/05/19 這天， chris, ericlin 及 janet 要開會 1.5 小時，他們有那些時段可以選呢?&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span> (Suggestion suggestion <span class="keyword">in</span> freeBusyResults.Suggestions)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(<span class="string">$&quot;Suggested date: <span class="subst">&#123;suggestion.Date&#125;</span>，會議期間 <span class="subst">&#123;meetingHours&#125;</span>\n&quot;</span>, suggestion.Date.ToString(dateFormat));</span><br><span class="line">    Console.WriteLine(<span class="string">&quot;Suggested meeting times:\n&quot;</span>);</span><br><span class="line">    <span class="keyword">foreach</span> (TimeSuggestion timeSuggestion <span class="keyword">in</span> suggestion.TimeSuggestions)</span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;\t&#123;0&#125; - &#123;1&#125;\n&quot;</span>,</span><br><span class="line">            timeSuggestion.MeetingTime.ToString(timeFormat),</span><br><span class="line">            timeSuggestion.MeetingTime.Add(TimeSpan.FromHours(meetingHours)).ToString(timeFormat));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Q.在 2023/05/19 這天， 要 Book chris, ericlin 及 janet 及 會議室 1.5 小時，他們有那些時段可以選呢?</span></span><br><span class="line">Console.WriteLine(<span class="string">&quot;====== 取出所有會議室的 Email ==========&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> root = <span class="keyword">new</span> DirectoryEntry(adhost, adUser, adUserPwd);</span><br><span class="line"><span class="comment">//找出 Exchange 中所有的會議室</span></span><br><span class="line"><span class="built_in">string</span> filter = <span class="string">&quot;(&amp;(objectClass=*)(msExchRecipientDisplayType=7))&quot;</span>;</span><br><span class="line">DirectorySearcher search = <span class="keyword">new</span> DirectorySearcher(filter);</span><br><span class="line">search.SearchRoot = root;</span><br><span class="line">List&lt;AttendeeInfo&gt; rooms = <span class="keyword">new</span> List&lt;AttendeeInfo&gt;();</span><br><span class="line"><span class="keyword">foreach</span> (SearchResult result <span class="keyword">in</span> search.FindAll())</span><br><span class="line">&#123;</span><br><span class="line">    ResultPropertyCollection r = result.Properties;</span><br><span class="line">    DirectoryEntry entry = result.GetDirectoryEntry();</span><br><span class="line">    <span class="keyword">var</span> pns = entry.Properties.PropertyNames;</span><br><span class="line">    <span class="keyword">var</span> roomMailAddr = entry.Properties[<span class="string">&quot;mail&quot;</span>].Value.ToString().Trim();</span><br><span class="line">    <span class="keyword">var</span> roomName = entry.Properties[<span class="string">&quot;name&quot;</span>].Value.ToString().Trim();</span><br><span class="line">    <span class="comment">//容納人數</span></span><br><span class="line">    <span class="keyword">var</span> capacity = Convert.ToInt32(entry.Properties[<span class="string">&quot;msExchResourceCapacity&quot;</span>].Value);</span><br><span class="line">    <span class="keyword">if</span>(capacity &lt;= <span class="number">5</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//只需5人以下的會議室</span></span><br><span class="line">        rooms.Add(<span class="keyword">new</span> AttendeeInfo(roomMailAddr));</span><br><span class="line">    &#125;</span><br><span class="line">    Console.WriteLine(<span class="string">$&quot;<span class="subst">&#123;roomName&#125;</span>:<span class="subst">&#123;roomMailAddr&#125;</span>/容納人數:<span class="subst">&#123;capacity&#125;</span>&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Console.WriteLine(<span class="string">&quot;Q.在 2023/05/19 這天， 要 Book chris, ericlin 及 janet 及 會議室 1.5 小時，他們有那些時段可以選呢?&quot;</span>);</span><br><span class="line"><span class="comment">//取得使用者們跟各個會議室的空間時間，</span></span><br><span class="line"><span class="keyword">foreach</span> (AttendeeInfo room <span class="keyword">in</span> rooms)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(<span class="string">$&quot;會議室:<span class="subst">&#123;room.SmtpAddress&#125;</span> ======&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> roomUsers = users.Concat(<span class="keyword">new</span>[] &#123;room &#125;).ToList();</span><br><span class="line">    <span class="comment">//只取建議空間時間，所以最後一個參數用 AvailabilityData.Suggestions</span></span><br><span class="line">    <span class="keyword">var</span> roomSuggestions = GetAvailability(service, roomUsers, meetingHours, <span class="keyword">from</span>, to</span><br><span class="line">        , AvailabilityData.Suggestions);</span><br><span class="line">    <span class="keyword">foreach</span> (Suggestion roomSuggestion <span class="keyword">in</span> roomSuggestions.Suggestions)</span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;date: <span class="subst">&#123;roomSuggestion.Date&#125;</span>，會議期間 <span class="subst">&#123;meetingHours&#125;</span>\n&quot;</span>, roomSuggestion.Date.ToString(dateFormat));</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Suggested meeting times:\n&quot;</span>);</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">var</span> timeSuggestion <span class="keyword">in</span> roomSuggestion.TimeSuggestions)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;\t&#123;0&#125; - &#123;1&#125;\n&quot;</span>,</span><br><span class="line">                timeSuggestion.MeetingTime.ToString(<span class="string">$&quot;<span class="subst">&#123;dateFormat&#125;</span> <span class="subst">&#123;timeFormat&#125;</span>&quot;</span>),</span><br><span class="line">                timeSuggestion.MeetingTime.Add(TimeSpan.FromHours(meetingHours)).ToString(<span class="string">$&quot;<span class="subst">&#123;dateFormat&#125;</span> <span class="subst">&#123;timeFormat&#125;</span>&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    Console.WriteLine(<span class="string">$&quot;會議室:<span class="subst">&#123;room.SmtpAddress&#125;</span>======&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">Console.ReadKey();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> GetUserAvailabilityResults <span class="title">GetAvailability</span>(<span class="params">ExchangeService service,</span></span></span><br><span class="line"><span class="params"><span class="function">   List&lt;AttendeeInfo&gt; users, <span class="built_in">double</span> meetingHours</span></span></span><br><span class="line"><span class="params"><span class="function">   , DateTime <span class="keyword">from</span>, DateTime to</span></span></span><br><span class="line"><span class="params"><span class="function">   , AvailabilityData availabilityData</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> meetingDuration = TimeSpan.FromHours(meetingHours).TotalMinutes;</span><br><span class="line">    <span class="comment">//最小單位是 30 分</span></span><br><span class="line">    <span class="keyword">if</span> (meetingDuration &lt; <span class="number">30</span>)</span><br><span class="line">        meetingDuration = <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> dur = to.Subtract(<span class="keyword">from</span>);</span><br><span class="line">    <span class="keyword">var</span> toOriginal = to;</span><br><span class="line">    <span class="comment">//最小是一天</span></span><br><span class="line">    <span class="keyword">if</span> (dur.TotalHours &lt; <span class="number">24</span>)</span><br><span class="line">        to = <span class="keyword">from</span>.AddDays(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> suggestionDuration = <span class="keyword">new</span> TimeWindow(<span class="keyword">from</span>, to);</span><br><span class="line">    <span class="keyword">var</span> options = <span class="keyword">new</span> AvailabilityOptions();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//0~48 預設是 10 ，可自行調整</span></span><br><span class="line">    options.MaximumSuggestionsPerDay = <span class="number">10</span>;</span><br><span class="line">    options.MeetingDuration = Convert.ToInt32(meetingDuration);</span><br><span class="line">    options.RequestedFreeBusyView = FreeBusyViewType.Detailed;</span><br><span class="line">    <span class="keyword">var</span> freeBusyResults = service.GetUserAvailability(users</span><br><span class="line">        , suggestionDuration</span><br><span class="line">        , availabilityData</span><br><span class="line">        , options);</span><br><span class="line">    <span class="keyword">return</span> freeBusyResults;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>註: 因為我會議室沒有放到 RoomList 之中，所以透過 AD 來 Search 出來</li></ul><p>執行結果如下，</p><img src="/2023/05/18/ews-get-free-busy-suggestions-info/02.png" class="" title="Users Busy"><p>可以發現在 5&#x2F;19 ，只有 chis 及 janet 有會議</p><img src="/2023/05/18/ews-get-free-busy-suggestions-info/03.png" class="" title="Users Suggestions"><p>可以發現，這 3 人最合適的時間為 <code>2023/05/19 16:30:00 - 2023/05/19 18:00:00</code></p><img src="/2023/05/18/ews-get-free-busy-suggestions-info/04.png" class="" title="Room List"><p>列出所有的會議室及容納人數</p><img src="/2023/05/18/ews-get-free-busy-suggestions-info/05.png" class="" title="Users and Room Suggestions"><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://learn.microsoft.com/en-us/exchange/client-developer/exchange-web-services/how-to-get-free-busy-information-by-using-ews-in-exchange">Get free&#x2F;busy information by using EWS in Exchange</a><br><a href="https://www.c-sharpcorner.com/uploadfile/67a186/exchange-development-finding-rooms-and-busyfree-status-with-suggestions-for-meeting/">Exchange Development: Finding Rooms and Busy&#x2F;Free status with Suggestions for Meeting</a><br><a href="https://learn.microsoft.com/en-us/exchange/client-developer/web-service-reference/getuseravailability-operation">GetUserAvailability</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;要 Book 一堆人及會議室時，是一件很累人的事情。&lt;br&gt;平常 Book 的方式就是，將與會人員及會議室加在一起，&lt;br&gt;然後努力地看那個</summary>
      
    
    
    
    
    <category term="C#" scheme="https://rainmakerho.github.io/tags/C/"/>
    
    <category term="EWS" scheme="https://rainmakerho.github.io/tags/EWS/"/>
    
    <category term="Exchange" scheme="https://rainmakerho.github.io/tags/Exchange/"/>
    
    <category term="Exchange Web Service" scheme="https://rainmakerho.github.io/tags/Exchange-Web-Service/"/>
    
    <category term="FreeBusyAndSuggestions" scheme="https://rainmakerho.github.io/tags/FreeBusyAndSuggestions/"/>
    
    <category term="GetUserAvailability" scheme="https://rainmakerho.github.io/tags/GetUserAvailability/"/>
    
  </entry>
  
</feed>
