<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>亂馬客</title>
  <icon>https://www.gravatar.com/avatar/cd3aed042ccd7a5a5d9956b0bc07dc81</icon>
  <subtitle>Re:從零開始的軟體開發生活</subtitle>
  <link href="https://rainmakerho.github.io/atom.xml" rel="self"/>
  
  <link href="https://rainmakerho.github.io/"/>
  <updated>2023-05-02T00:54:40.925Z</updated>
  <id>https://rainmakerho.github.io/</id>
  
  <author>
    <name>亂馬客</name>
    <email>rainmaker_ho@gss.com.tw</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ABP 動態變更連線字串的方式</title>
    <link href="https://rainmakerho.github.io/2023/05/01/abp-dynamic-connection-strings/"/>
    <id>https://rainmakerho.github.io/2023/05/01/abp-dynamic-connection-strings/</id>
    <published>2023-05-01T09:28:57.000Z</published>
    <updated>2023-05-02T00:54:40.925Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在 ABP 專案中，預設的 <code>你的APDbContext</code> Class 會設定 <code>ConnectionStringName</code> 屬性<br>，預設值為 <code>Default</code>，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">ReplaceDbContext(typeof(IIdentityDbContext))</span>]</span><br><span class="line">[<span class="meta">ReplaceDbContext(typeof(ITenantManagementDbContext))</span>]</span><br><span class="line">[<span class="meta">ConnectionStringName(<span class="string">&quot;Default&quot;</span>)</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ProductManagementDbContext</span> :</span><br><span class="line">    <span class="title">AbpDbContext</span>&lt;<span class="title">ProductManagementDbContext</span>&gt;,</span><br><span class="line">    <span class="title">IIdentityDbContext</span>,</span><br><span class="line">    <span class="title">ITenantManagementDbContext</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 <strong>appsettings.json</strong> 中的 <code>ConnectionStrings</code> 中，<br>也會預設有 <strong>Default</strong> 的連線字串設定，如下，</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;App&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;SelfUrl&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://localhost:44382&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;ConnectionStrings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;Default&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Server=(LocalDb)\\MSSQLLocalDB;Database=ProductManagement;Trusted_Connection=True;Application Name=Default&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>那有什麼方式可以在程式執行時，<br>動態設定 DB 的連線字串呢?</p><h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><p>動態設定 DB 的連線字串依 <a href="https://docs.abp.io/en/abp/latest/Connection-Strings">ABP Connection Strings</a> 有 2 種方式，</p><h4 id="1-Abp-Module-的-ConfigureServices-中設定"><a href="#1-Abp-Module-的-ConfigureServices-中設定" class="headerlink" title="1.Abp Module 的 ConfigureServices 中設定"></a>1.Abp Module 的 ConfigureServices 中設定</h4><p>在 Module 的 <code>ConfigureServices</code> Method 中改變連線字串，<br>例如在 Web 專案的 Module 中，改變 <strong>Default</strong> 的連線字串(服務啟動時)，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Configure&lt;AbpDbConnectionOptions&gt;(options =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    options.ConnectionStrings.Default = <span class="string">@&quot;Server=(LocalDb)\MSSQLLocalDB;Database=ProductManagement;Trusted_Connection=True;Application Name=options&quot;</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="2-實作-IConnectionStringResolver-來更換-連線字串"><a href="#2-實作-IConnectionStringResolver-來更換-連線字串" class="headerlink" title="2.實作 IConnectionStringResolver 來更換 連線字串"></a>2.實作 IConnectionStringResolver 來更換 連線字串</h4><p>更換預設的 <code>IConnectionStringResolver</code> 後，<br>每次需要連線字串時，都會呼叫它的 <code>ResolveAsync</code> 來取得<strong>連線字串</strong>，<br>所以要依某些處理邏輯再給連線字串時，可以在這裡處理它。<br>依 <a href="https://github.com/aspnetboilerplate/aspnetboilerplate/issues/5052">How to dynamic modify the DbContext’s ConnectionString in AppService?</a> 的範例回傳一個連線字串，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">Dependency(ReplaceServices = true)</span>]</span><br><span class="line">[<span class="meta">ExposeServices(typeof(IConnectionStringResolver))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">CustomConnectionStringResolver</span> : <span class="title">IConnectionStringResolver</span>, <span class="title">ITransientDependency</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> IConfiguration _configuration;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CustomConnectionStringResolver</span>(<span class="params">IConfiguration configuration</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        _configuration = configuration;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="built_in">string</span> <span class="title">Resolve</span>(<span class="params"><span class="built_in">string</span> connectionStringName = <span class="literal">null</span></span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ResolveAsync(connectionStringName).Result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> Task&lt;<span class="built_in">string</span>&gt; <span class="title">ResolveAsync</span>(<span class="params"><span class="built_in">string</span> connectionStringName = <span class="literal">null</span></span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> defaultConnection = <span class="string">@&quot;Server=(LocalDb)\MSSQLLocalDB;Database=ProductManagement;Trusted_Connection=True;Application Name=Resolver&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> Task.FromResult(defaultConnection);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://docs.abp.io/en/abp/latest/Connection-Strings">ABP Connection Strings</a><br><a href="https://github.com/abpframework/abp/issues/12449">ABP How to change connection string at runtime</a><br><a href="https://github.com/aspnetboilerplate/aspnetboilerplate/issues/5052">How to dynamic modify the DbContext’s ConnectionString in AppService?</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;在 ABP 專案中，預設的 &lt;code&gt;你的APDbContext&lt;/code&gt; Class 會設定 &lt;code&gt;ConnectionStr</summary>
      
    
    
    
    
    <category term="ABP" scheme="https://rainmakerho.github.io/tags/ABP/"/>
    
    <category term="Connection Strings" scheme="https://rainmakerho.github.io/tags/Connection-Strings/"/>
    
    <category term="AbpDbConnectionOptions" scheme="https://rainmakerho.github.io/tags/AbpDbConnectionOptions/"/>
    
    <category term="ConnectionStringName" scheme="https://rainmakerho.github.io/tags/ConnectionStringName/"/>
    
    <category term="ReplaceDbContext" scheme="https://rainmakerho.github.io/tags/ReplaceDbContext/"/>
    
  </entry>
  
  <entry>
    <title>ABP 為什麼 ApplicationService 自動產生的 API Route Path 不如預期?</title>
    <link href="https://rainmakerho.github.io/2023/04/28/abp-route-path/"/>
    <id>https://rainmakerho.github.io/2023/04/28/abp-route-path/</id>
    <published>2023-04-28T01:00:15.000Z</published>
    <updated>2023-04-28T03:18:04.735Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近同事在使用 ABP 時，查看 ABP 自動產生的 Web API Route 覺得怪怪的!<br>他的 ApplicationService 名稱為 <code>OrganizationalUnitAppService</code>，<br>其中有一個 Method 為 <code>IEnumerable&lt;OrganizationalUnitDto&gt; GetAllOrganizationalUnits(string companyId)</code>，<br>結果出來的 Web API Route Path 為，<br><code>/api/app/organizational-unit/organizational-units/&#123;companyId&#125;</code>，<br>名稱中間怎麼用 <strong>-</strong> 串起來，而且 <strong>GetAll</strong> 怎麼不見了?</p><h3 id="研究"><a href="#研究" class="headerlink" title="研究"></a>研究</h3><p>依<a href="https://github.com/abpframework/abp/blob/dev/docs/en/Migration-Guides/Abp-4_0.md#auto-api-controller-route-changes">ABP Framework 3.3 to 4.0 Migration Guide</a>，<br>ABP 4 以後的 auto API controller routes 改使用 <code>kebab-case</code>，<br>如果要用 ABP 4 之前的方式 <code>CamelCase</code> ，則要設定 <code>AbpConventionalControllerOptions</code>，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Configure&lt;AbpConventionalControllerOptions&gt;(options =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    options.UseV3UrlStyle = <span class="literal">true</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>那 API controller routes 就會變成，<br><code>/api/app/organizationalUnit/organizationalUnits/&#123;companyId&#125;</code></p><p>預設的 RootPath 是 <code>app</code>，如果有多個組件要改名稱的話，則可以設定 <code>ConventionalControllerSetting</code> 的 <code>RootPath</code>，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Configure&lt;AbpAspNetCoreMvcOptions&gt;(options =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    options.ConventionalControllers</span><br><span class="line">        .Create(<span class="keyword">typeof</span>(我的ApplicationServiceModule).Assembly</span><br><span class="line">            , setting =&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                setting.RootPath = <span class="string">&quot;NornsOGService&quot;</span>;</span><br><span class="line">            &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>那 API controller routes 就會變成，<br><code>/api/NornsOGService/organizationalUnit/organizationalUnits/&#123;companyId&#125;</code></p><p>那 <code>GetAll</code> 怎麼會不見呢?<br>在 <a href="https://docs.abp.io/en/abp/latest/API/Auto-API-Controllers#auto-api-controllers">Auto API Controllers</a> 中有說明，</p><blockquote><p>Removing HTTP method prefix. ‘GetList’, ‘GetAll’, ‘Get’, ‘Put’, ‘Update’, ‘Delete’, ‘Remove’, ‘Create’, ‘Add’, ‘Insert’, ‘Post’ and ‘Patch’ prefixes are removed based on the selected HTTP method. So, ‘GetPhones’ becomes ‘Phones’ since ‘Get’ prefix is a duplicate for a GET request.</p></blockquote><p>所以 <code>GetAll</code> 被自動移除掉了，<br>查看 <a href="https://github.com/abpframework/abp/blob/dev/framework/src/Volo.Abp.AspNetCore.Mvc/Volo/Abp/AspNetCore/Mvc/Conventions/ConventionalRouteBuilder.cs">Abp ConventionalRouteBuilder.cs</a> 裡面的 <code>NormalizeUrlActionName</code>，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">virtual</span> <span class="built_in">string</span> <span class="title">NormalizeUrlActionName</span>(<span class="params"><span class="built_in">string</span> rootPath, <span class="built_in">string</span> controllerName, ActionModel action,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="built_in">string</span> httpMethod, [CanBeNull] ConventionalControllerSetting configuration</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//這裡會依 ActionName 來判斷 HttpVerb 並將 Prefix 及 Async 移除</span></span><br><span class="line">    <span class="keyword">var</span> actionNameInUrl = HttpMethodHelper</span><br><span class="line">        .RemoveHttpMethodPrefix(action.ActionName, httpMethod)</span><br><span class="line">        .RemovePostFix(<span class="string">&quot;Async&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (configuration?.UrlActionNameNormalizer == <span class="literal">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> actionNameInUrl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> configuration.UrlActionNameNormalizer(</span><br><span class="line">        <span class="keyword">new</span> UrlActionNameNormalizerContext(</span><br><span class="line">            rootPath,</span><br><span class="line">            controllerName,</span><br><span class="line">            action,</span><br><span class="line">            actionNameInUrl,</span><br><span class="line">            httpMethod</span><br><span class="line">        )</span><br><span class="line">    );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那如果想要讓它長回來呢(不建議)? 則可以設定 <code>UrlActionNameNormalizer</code> 的內容，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Configure&lt;AbpAspNetCoreMvcOptions&gt;(options =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    options.ConventionalControllers</span><br><span class="line">        .Create(<span class="keyword">typeof</span>(我的ApplicationServiceModule).Assembly</span><br><span class="line">            , setting =&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//設定 RootPath</span></span><br><span class="line">                setting.RootPath = <span class="string">&quot;NornsOGService&quot;</span>;</span><br><span class="line">                <span class="comment">//不將 預設的 Prefix 移除</span></span><br><span class="line">                setting.UrlActionNameNormalizer = context =&gt;</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">return</span> context.Action.ActionName?.RemovePostFix(<span class="string">&quot;Async&quot;</span>);</span><br><span class="line">                &#125;;</span><br><span class="line">            &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>那 API controller routes 就會變成，<br><code>api/NornsOGService/organizationalUnit/getAllOrganizationalUnits/&#123;companyId&#125;</code></p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://docs.abp.io/en/abp/latest/API/Auto-API-Controllers#auto-api-controllers">Auto API Controllers</a><br><a href="https://github.com/abpframework/abp/blob/dev/framework/src/Volo.Abp.Http/Volo/Abp/Http/HttpMethodHelper.cs">Abp HttpMethodHelper.cs</a><br><a href="https://github.com/abpframework/abp/blob/dev/modules/blogging/src/Volo.Blogging.HttpApi/Volo/Blogging/BlogsController.cs#L14">Abp BlogsController.cs</a><br><a href="https://github.com/abpframework/abp/issues/5325">Create auto controller routes in kebap-case</a><br><a href="https://github.com/abpframework/abp/blob/dev/docs/en/Migration-Guides/Abp-4_0.md#auto-api-controller-route-changes">ABP Framework 3.3 to 4.0 Migration Guide</a><br><a href="https://www.cnblogs.com/zhiyong-ITNote/p/11991995.html">abp 集成 asp.net core</a><br><a href="https://github.com/abpframework/abp/blob/dev/framework/src/Volo.Abp.AspNetCore.Mvc/Volo/Abp/AspNetCore/Mvc/Conventions/ConventionalRouteBuilder.cs">Abp ConventionalRouteBuilder.cs</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;最近同事在使用 ABP 時，查看 ABP 自動產生的 Web API Route 覺得怪怪的!&lt;br&gt;他的 ApplicationServi</summary>
      
    
    
    
    
    <category term="ABP" scheme="https://rainmakerho.github.io/tags/ABP/"/>
    
    <category term="API" scheme="https://rainmakerho.github.io/tags/API/"/>
    
    <category term="Route" scheme="https://rainmakerho.github.io/tags/Route/"/>
    
    <category term="normalized" scheme="https://rainmakerho.github.io/tags/normalized/"/>
    
    <category term="ConventionalControllerSetting" scheme="https://rainmakerho.github.io/tags/ConventionalControllerSetting/"/>
    
    <category term="AbpConventionalControllerOptions" scheme="https://rainmakerho.github.io/tags/AbpConventionalControllerOptions/"/>
    
    <category term="ConventionalPrefixes" scheme="https://rainmakerho.github.io/tags/ConventionalPrefixes/"/>
    
  </entry>
  
  <entry>
    <title>ABP 如何設定 DataSeeder 執行 SeedAsync 要跑那些 DataSeedContributor Class 的 SeedAsync?</title>
    <link href="https://rainmakerho.github.io/2023/04/24/abp-dataseeder-dataseedcontributor-seedasync/"/>
    <id>https://rainmakerho.github.io/2023/04/24/abp-dataseeder-dataseedcontributor-seedasync/</id>
    <published>2023-04-24T13:02:15.000Z</published>
    <updated>2023-04-24T13:37:58.326Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>從 <a href="https://rainmakerho.github.io/2023/03/08/abp-dataseedcontributor-duplicate/">ABP 系統建立的 DataSeedContributor 會跑 2 次 SeedAsync，導致發生 DB duplicate key 的錯誤?</a> 及 <a href="https://rainmakerho.github.io/2023/04/10/abp-testing-seed-data-config/">ABP 測試遇到 SeedTestData 及 讀取 appsettings 問題</a> 可以知道，執行 <a href="https://github.com/abpframework/abp/blob/dev/framework/src/Volo.Abp.Data/Volo/Abp/Data/DataSeeder.cs#L52">DataSeeder 的 SeedAsync Method</a> 會去執行所有 DataSeedContributor Class 的 SeedAsync Method。<br>那除了在執行 SeedAsync Method 的 Class ()中去設定 <strong>AbpDataSeedOptions</strong> 外，<br>是否有固定的地方去設定呢?</p><h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><p>針對以上的問題，從 <a href="https://github.com/abpframework/abp/issues/16353">Is it possible to only execute DataSeedContributor’s SeedAsync in the test project?</a> 知道，<br>可以在 Moudle 類別中的 <code>ConfigureServices</code> Method 設定 <strong>AbpDataSeedOptions</strong> 即可。</p><p>所以 <a href="https://rainmakerho.github.io/2023/04/10/abp-testing-seed-data-config/">ABP 測試遇到 SeedTestData 及 讀取 appsettings 問題</a> 這個問題，<br>請改在 <code>TestBaseModule</code> 類別 中的 <code>ConfigureServices</code> 來設定，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">ConfigureServices</span>(<span class="params">ServiceConfigurationContext context</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 原本的程式碼 ...</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 加入以下設定，只保留測試的 DataSeedContributor</span></span><br><span class="line">    <span class="comment">// 將Domain 專案的那些 `DataSeedContributor` 類別移除</span></span><br><span class="line">    <span class="comment">// 因為 測試的 DataSeedContributor 類別名稱都會包含 Test ，所以用 Test 判斷</span></span><br><span class="line">    context.Services.Configure&lt;AbpDataSeedOptions&gt;(options =&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        options.Contributors.RemoveAll(c =&gt; !c.Name.Contains(<span class="string">&quot;Test&quot;</span>));</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>註: 就不用在 <code>SeedTestData</code> Method 中，設定 <strong>AbpDataSeedOptions</strong></li></ul><p><a href="https://rainmakerho.github.io/2023/03/08/abp-dataseedcontributor-duplicate/">ABP 系統建立的 DataSeedContributor 會跑 2 次 SeedAsync，導致發生 DB duplicate key 的錯誤?</a> 這個問題，<br>原本是在 <code>DbMigrationService</code> 類別中的 <code>MigrateAsync</code> Method 中將重覆的 <code>DataSeedContributor</code> 移除，<br>請改在 <code>DbMigratorModule</code> 類別 中的 <code>ConfigureServices</code> 來設定，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> 你的<span class="title">DbMigratorModule</span> : <span class="title">AbpModule</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">ConfigureServices</span>(<span class="params">ServiceConfigurationContext context</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 其他的程式碼 ....</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 加入設定刪除重覆的 DataSeedContributor</span></span><br><span class="line">        Configure&lt;AbpDataSeedOptions&gt;(options =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> duplicateContributors = options.Contributors</span><br><span class="line">            .GroupBy(c =&gt; c.Name)</span><br><span class="line">            .Where(grp =&gt; grp.Count() &gt; <span class="number">1</span>)</span><br><span class="line">            .Select(grp =&gt; grp.Key);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> voloDuplicateContributors = options.Contributors</span><br><span class="line">                .Where(c =&gt; duplicateContributors.Contains(c.Name)</span><br><span class="line">                &amp;&amp; c.FullName.StartsWith(<span class="string">&quot;Volo.&quot;</span>))</span><br><span class="line">                .Select(c =&gt; c).ToList();</span><br><span class="line"></span><br><span class="line">            options.Contributors.RemoveAll(voloDuplicateContributors);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://github.com/abpframework/abp/issues/16353">Is it possible to only execute DataSeedContributor’s SeedAsync in the test project?</a><br><a href="https://rainmakerho.github.io/2023/04/10/abp-testing-seed-data-config/">ABP 測試遇到 SeedTestData 及 讀取 appsettings 問題</a><br><a href="https://rainmakerho.github.io/2023/03/08/abp-dataseedcontributor-duplicate/">ABP 系統建立的 DataSeedContributor 會跑 2 次 SeedAsync，導致發生 DB duplicate key 的錯誤?</a><br><a href="https://github.com/abpframework/abp/blob/dev/framework/src/Volo.Abp.Data/Volo/Abp/Data/DataSeeder.cs#L52">DataSeeder 的 SeedAsync Method</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;從 &lt;a href=&quot;https://rainmakerho.github.io/2023/03/08/abp-dataseedcontri</summary>
      
    
    
    
    
    <category term="ABP" scheme="https://rainmakerho.github.io/tags/ABP/"/>
    
    <category term="DataSeedContributor" scheme="https://rainmakerho.github.io/tags/DataSeedContributor/"/>
    
    <category term="DataSeeder" scheme="https://rainmakerho.github.io/tags/DataSeeder/"/>
    
    <category term="SeedAsync" scheme="https://rainmakerho.github.io/tags/SeedAsync/"/>
    
    <category term="AbpDataSeedOptions" scheme="https://rainmakerho.github.io/tags/AbpDataSeedOptions/"/>
    
    <category term="MigrateAsync" scheme="https://rainmakerho.github.io/tags/MigrateAsync/"/>
    
  </entry>
  
  <entry>
    <title>在 Word 中點已在預設Browser登入過系統的網址(hyperlink)，會變成開啟系統的登入頁面</title>
    <link href="https://rainmakerho.github.io/2023/04/18/office-click-link-redirect-login-page/"/>
    <id>https://rainmakerho.github.io/2023/04/18/office-click-link-redirect-login-page/</id>
    <published>2023-04-18T08:37:01.000Z</published>
    <updated>2023-04-18T09:58:15.943Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>同事詢問一個很怪的問題，<br>當使用者開啟預設的 Browser 登入 Web AP 後，<br>再開啟 Word ，點選裡面 Web AP 的 Link，<br>結果 Browser 開啟的 Url 卻是該 AP 的 登入頁面，<br>而不是 使用者 按下的那個 Link 的 URL。<br>一樣的行為，點 PDF 的 Link 卻乖乖的開啟使用者點的 URL，<br>到底怎麼一回事呢?</p><h3 id="研究與解決"><a href="#研究與解決" class="headerlink" title="研究與解決"></a>研究與解決</h3><p>請同事使用 <a href="https://www.telerik.com/fiddler">Fiddler</a> 錄一下整個的過程，<br>從原本的 Chrome 登入後，再開啟 Word 並點選 Web AP 的 Link 後，<br>在 Chrome 變成是 開啟 Web AP 的登入頁面。</p><img src="/2023/04/18/office-click-link-redirect-login-page/01.png" class="" title="wordOpen"><p>從上圖可以發現，<br>當使用者在 Word 中按下 Link 時，<br>Word 會先做一次的 HEAD Request(dataSourcesSetting) ，然後被 Redirect 到 登入頁面(login)，<br>然後又會做一次的 GET Request(dataSourcesSetting) ，然後被 Redirect 到 登入頁面(login)。<br>所以最後 Word 給 Chrome 的 URL 就是那個 回傳 Status Code 為 200 的 登入頁面(login)。</p><p>依上述的狀況，在網路上有找到 <a href="https://superuser.com/questions/1022721/ms-word-validating-links-after-click">MS Word validating links after click</a> 這篇，<br>他的狀況也是一樣，從 Word 中點了 Link 後，總是被導到 登入頁面。<br>原因是因為 Office 會執行 <a href="https://stackoverflow.com/questions/8073908/what-are-microsoft-office-protocol-discovery-and-officeliveconnector-and-why">Microsoft Office Protocol Discovery</a>，</p><h4 id="解法-1-改使用者機碼"><a href="#解法-1-改使用者機碼" class="headerlink" title="解法 1: 改使用者機碼"></a>解法 1: 改使用者機碼</h4><p>所以暫時解的方式就是設定機碼，將 Office 的 <code>ForceShellExecute</code> () 設定成 <strong>1</strong>，如下圖，</p><img src="/2023/04/18/office-click-link-redirect-login-page/02.png" class="" title="ForceShellExecute"><p>改完機碼重開機後再來測試，可以發現，<br>在 Word 中並不會去多做 GET 的行為，如下圖，</p><img src="/2023/04/18/office-click-link-redirect-login-page/03.png" class="" title="After ForceShellExecute"><p>所以在 Chrome 中可以正常的操作系統，而不會到 登入頁(login)</p><h4 id="解法-2-調整-Web-系統"><a href="#解法-2-調整-Web-系統" class="headerlink" title="解法 2: 調整 Web 系統"></a>解法 2: 調整 Web 系統</h4><p>如果要改的使用者很多，另一個方式就是判斷 Request 中的 <strong>User-Agent</strong> ，<br>如果有 <code>ms-office</code><br>或是判斷 Request Header 中是否有什麼特別的 內容，<br>，然後直接回傳 Status Code 為 <code>200</code>的空內容。</p><p>以下的 User-Agent 就是使用者在 Word 中按下 Link 時，Fiddler 錄到的 User-Agent 的內容，</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">User-Agent: Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 10.0; Win64; x64;</span><br><span class="line">Trident/7.0; .NET4.0C; .NET4.0E; Tablet PC 2.0; .NET CLR 2.0.50727; .NET CLR</span><br><span class="line">3.0.30729; .NET CLR 3.5.30729; NMTE; wbx 1.0.0; wbxapp 1.0.0; cwms 1.0.0;</span><br><span class="line">ms-office)</span><br></pre></td></tr></table></figure><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://superuser.com/questions/1022721/ms-word-validating-links-after-click">MS Word validating links after click</a><br><a href="https://learn.microsoft.com/en-us/openspecs/sharepoint_protocols/ms-ofba/868d129f-f1b5-46bc-9385-4af58610dbbe">Office Protocol Discovery Requests</a><br><a href="https://stackoverflow.com/questions/8073908/what-are-microsoft-office-protocol-discovery-and-officeliveconnector-and-why">What are “Microsoft Office Protocol Discovery” and “OfficeLiveConnector” and why do they access invalid URLs?</a><br><a href="https://learn.microsoft.com/zh-tw/office/troubleshoot/office-suite-issues/click-hyperlink-to-sso-website">系統會將您重新導向至登入頁面或錯誤頁面，或者當您按一下 Office 檔中 SSO 網站的超連結時，系統會提示您輸入驗證資訊</a><br><a href="https://learn.microsoft.com/zh-tw/office/troubleshoot/office-suite-issues/cannot-locate-server-when-click-hyperlink?source=recommendations">選取 Office 中的超連結時出現錯誤訊息：「無法找到網際網路伺服器或 proxy 伺服器」</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;同事詢問一個很怪的問題，&lt;br&gt;當使用者開啟預設的 Browser 登入 Web AP 後，&lt;br&gt;再開啟 Word ，點選裡面 Web A</summary>
      
    
    
    
    
    <category term="Excel" scheme="https://rainmakerho.github.io/tags/Excel/"/>
    
    <category term="Word" scheme="https://rainmakerho.github.io/tags/Word/"/>
    
    <category term="Office" scheme="https://rainmakerho.github.io/tags/Office/"/>
    
    <category term="SSO" scheme="https://rainmakerho.github.io/tags/SSO/"/>
    
    <category term="Login" scheme="https://rainmakerho.github.io/tags/Login/"/>
    
    <category term="Hyperlink" scheme="https://rainmakerho.github.io/tags/Hyperlink/"/>
    
    <category term="302" scheme="https://rainmakerho.github.io/tags/302/"/>
    
    <category term="Microsoft Office Protocol Discovery" scheme="https://rainmakerho.github.io/tags/Microsoft-Office-Protocol-Discovery/"/>
    
  </entry>
  
  <entry>
    <title>ABP ASP.NET Core MVC Bundling &amp; Minification</title>
    <link href="https://rainmakerho.github.io/2023/04/15/abp-bundle-minify/"/>
    <id>https://rainmakerho.github.io/2023/04/15/abp-bundle-minify/</id>
    <published>2023-04-15T04:04:21.000Z</published>
    <updated>2023-04-15T04:39:41.931Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>以下介紹 ABP ASP.NET Core MVC Bundling &amp; Minification 相關內容，</p><h4 id="使用-Javascript-套件"><a href="#使用-Javascript-套件" class="headerlink" title="使用 Javascript 套件"></a>使用 Javascript 套件</h4><p>在 ABP MVC 專案中的 package.json 預設只會有一個 <code>@abp/aspnetcore.mvc.ui ...</code>，<br>如果要使用其他 Javascript 套件，可以透過 <strong>npm</strong> 來安裝，<br>安裝完成後，有以下幾項 Copy 到 Web 專案的方式，</p><p>1.手動將需要的檔案從 node_module 目錄中 Copy 到 Web 專案的 wwwroot\libs 目錄中</p><p>2.在 <code>abp.resourcemapping.js</code> 中設定 mappings 後，再透過 <code>abp install-libs</code>，如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">aliases</span>: &#123;&#125;,</span><br><span class="line">  <span class="attr">mappings</span>: &#123;</span><br><span class="line">    <span class="string">&quot;@node_modules/vue/dist/vue.min.js&quot;</span>: <span class="string">&quot;@libs/vue/&quot;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>3.需要的明件有在 <a href="https://github.com/abpframework/abp/tree/dev/npm/packs">@ABP NPM Packages</a> 之中，則透過 <code>npm install @abp/JS套件</code>，這樣就不用特別在<code>abp.resourcemapping.js</code> 中設定 mappings</p><h4 id="Page-引用-scripts-及-style-files"><a href="#Page-引用-scripts-及-style-files" class="headerlink" title="Page 引用 scripts 及 style files"></a>Page 引用 scripts 及 style files</h4><p>在 Page 中引用 JS 可以使用 <code>abp-script</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">@section scripts &#123;</span><br><span class="line"><span class="tag">&lt;<span class="name">abp-script</span> <span class="attr">src</span>=<span class="string">&quot;/libs/vue/vue.min.js&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">abp-script</span> <span class="attr">src</span>=<span class="string">&quot;/Pages/myPage.cshtml.js&quot;</span> /&gt;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 Page 中引用 css 可以使用 <code>abp-style</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@section styles &#123;</span><br><span class="line"><span class="tag">&lt;<span class="name">abp-style</span> <span class="attr">src</span>=<span class="string">&quot;/Pages/myPage.cshtml.css&quot;</span> /&gt;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用 <code>abp-script</code> or <code>abp-style</code> ，ABP 會做以下 3 件事，</p><ol><li>在 Production 環境時，會做檔案最小化</li><li>在 QueryString 中加入版本號，例如 ?_v&#x3D;版本號</li><li>相同的檔案只會被引用一次</li></ol><h4 id="Page-打包-scripts-及-style-files"><a href="#Page-打包-scripts-及-style-files" class="headerlink" title="Page 打包 scripts 及 style files"></a>Page 打包 scripts 及 style files</h4><p>要在 Page 中打包多個 JS or CSS 可以使用 <code>abp-script-bundle</code>，例如，</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@section scripts &#123;</span><br><span class="line"><span class="tag">&lt;<span class="name">abp-script-bundle</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">abp-script</span> <span class="attr">src</span>=<span class="string">&quot;/libs/vue/vue.min.js&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">abp-script</span> <span class="attr">src</span>=<span class="string">&quot;/Pages/myPage.cshtml.js&quot;</span> /&gt;</span></span><br><span class="line">  @if (System.Globalization.CultureInfo .CurrentUICulture.Name == &quot;en&quot;) &#123;</span><br><span class="line">  <span class="tag">&lt;<span class="name">abp-script</span> <span class="attr">src</span>=<span class="string">&quot;/validator.en.js&quot;</span> /&gt;</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">abp-script-bundle</span>&gt;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="設定全域-Bundles"><a href="#設定全域-Bundles" class="headerlink" title="設定全域 Bundles"></a>設定全域 Bundles</h4><p>如果要把 js or css 加到 全域 Bundles 裡，<br>可以在 Web 專案 WebModule 的 ConfigureBundles Method 設定 AbpBundlingOptions，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Configure&lt;AbpBundlingOptions&gt;(options =&gt;</span><br><span class="line">&#123;</span><br><span class="line">options.ScriptBundles.Configure(</span><br><span class="line">BasicThemeBundles.Styles.Global,</span><br><span class="line">bundle =&gt;</span><br><span class="line">&#123;</span><br><span class="line">bundle.AddFiles(<span class="string">&quot;/libs/myglobal.js&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">);</span><br><span class="line">options.StyleBundles.Configure(</span><br><span class="line">BasicThemeBundles.Styles.Global,</span><br><span class="line">bundle =&gt;</span><br><span class="line">&#123;</span><br><span class="line">            bundle.AddFiles(<span class="string">&quot;/global-styles.css&quot;</span>);</span><br><span class="line">bundle.AddFiles(<span class="string">&quot;/libs/myglobal.css&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>註: BasicThemeBundles.Styles.Global 表示 Web 是使用 BasicTheme</li></ul><p>BasicThemeBundles.Styles.Global 是 bundle 的名稱，<br>所以 Production 時， Render 會是 <code>Basic.Global ...</code></p><h4 id="建立給多個-Page-使用的-Bundles"><a href="#建立給多個-Page-使用的-Bundles" class="headerlink" title="建立給多個 Page 使用的 Bundles"></a>建立給多個 Page 使用的 Bundles</h4><p>如果是要給某些 Page 使用的 Bundles，則可以使用 <code>ScriptBundles.Add</code>，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Configure&lt;AbpBundlingOptions&gt;(options =&gt;</span><br><span class="line">&#123;</span><br><span class="line">options.ScriptBundles.Add(</span><br><span class="line"><span class="string">&quot;RMScripts&quot;</span>,</span><br><span class="line">bundle =&gt;</span><br><span class="line">&#123;</span><br><span class="line">bundle.AddFiles(<span class="string">&quot;/libs/rm.js&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>然後在使用 Page 的 @section scripts 使用 <code>abp-script-bundle</code> 並設定 <code>name</code>，如下，</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">abp-script-bundle</span> <span class="attr">name</span>=<span class="string">&quot;RMScripts&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>預設為 production 時才會進行 bundled and minified，<br>如果要調整可以設定 <code>AbpBundlingOptions</code> 的 Mode 屬性，<br>Mode 屬性有以下幾個選項，</p><ol><li>Auto: 預設值，production 時才會進行 bundled and minified</li><li>Bundle: 只 bundle 不做 minify</li><li>BundleAndMinify: 進行 bundled and minified</li><li>None: 什麼都不做</li></ol><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://docs.abp.io/en/abp/latest/UI/AspNetCore/Bundling-Minification">ASP.NET Core MVC Bundling &amp; Minification</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;以下介紹 ABP ASP.NET Core MVC Bundling &amp;amp; Minification 相關內容，&lt;/p&gt;
&lt;h4 id</summary>
      
    
    
    
    
    <category term="ABP" scheme="https://rainmakerho.github.io/tags/ABP/"/>
    
    <category term="bundled" scheme="https://rainmakerho.github.io/tags/bundled/"/>
    
    <category term="minified" scheme="https://rainmakerho.github.io/tags/minified/"/>
    
  </entry>
  
  <entry>
    <title>ABP DTOs (Data Transfer Objects)</title>
    <link href="https://rainmakerho.github.io/2023/04/15/abp-dto/"/>
    <id>https://rainmakerho.github.io/2023/04/15/abp-dto/</id>
    <published>2023-04-15T03:37:06.000Z</published>
    <updated>2023-04-15T04:02:39.650Z</updated>
    
    <content type="html"><![CDATA[<h3 id="DTO"><a href="#DTO" class="headerlink" title="DTO"></a>DTO</h3><p>在 Domain 及 Application 層是使用 Entity,<br>而 Application 層 Presentation 層溝通則會使用 DTO ，<br>跟 presentation 層溝通則會使用 DTO ，<br>所以 DTO 通常有以下幾項特性，</p><ol><li>不應該包含 商業邏輯的驗證</li><li>要可以被序列化</li><li>通常是沒有參數的建構子</li><li>所有的屬性都是 Public 可存取的</li><li>不應該繼承自 Entity 或是有 Entity 類型的屬性</li></ol><h4 id="驗證"><a href="#驗證" class="headerlink" title="驗證"></a>驗證</h4><p>DTO 的驗證可以透過 data annotation attributes ，<br>或是 實作 IValidatableObject 來做進階的驗證</p><p>與 Entity 的轉換則會透過 <a href="https://automapper.org/">AutoMapper</a> 來幫忙。<br>當將 input DTO 透過 Mapper 轉成 Entity 時要注意以下幾點，</p><ol><li>Entity 是否有需要參數的 Constructor ，導致 Mapper 失敗</li><li>Entity 是否有私有的屬性需要透過公用的 Method 呼叫，才能適用 Entity 的商業羅輯，直接設定屬性可能會違反商業羅輯</li><li>要小心的驗證跟處理使用者輸入的物件</li></ol><h4 id="input-DTO"><a href="#input-DTO" class="headerlink" title="input DTO"></a>input DTO</h4><p>使用 input DTO 時，請注意以下幾點</p><ol><li>不要新增沒有使用到的屬性</li><li>不要重用 DTO 物件(繼承也是一樣)</li></ol><p>在許多的情境中，程式碼的<strong>重覆</strong> 會比 程式碼<strong>耦合</strong>更好</p><p>例如，都用 EventDto 是不好的</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">IEventAppService</span> : <span class="title">IApplicationService</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="function">Task&lt;EventDto&gt; <span class="title">GetAsync</span>(<span class="params">Guid id</span>)</span>;</span><br><span class="line"><span class="function">Task <span class="title">CreateAsync</span>(<span class="params">EventDto input</span>)</span>;</span><br><span class="line"><span class="function">Task <span class="title">UpdateEventTimeAsync</span>(<span class="params">EventDto input</span>)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以下每個 Method 的參數都使用不同的 Dto</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">IEventAppService</span> : <span class="title">IApplicationService</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="function">Task&lt;EventDto&gt; <span class="title">GetAsync</span>(<span class="params">Guid id</span>)</span>;</span><br><span class="line"><span class="function">Task <span class="title">CreateAsync</span>(<span class="params">EventCreationDto input</span>)</span>;</span><br><span class="line"><span class="function">Task <span class="title">UpdateEventTimeAsync</span>(<span class="params">EventTimeUpdateDto input</span>)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="output-DTO"><a href="#output-DTO" class="headerlink" title="output DTO"></a>output DTO</h4><p>output DTO 跟 input DTO 不同，<strong>重用</strong>的問題不適用在 output DTO<br>通常 output DTO 會傳出比 client 端需要的更多屬性，<br>這個的好處是當 client 需要額外屬性時，不需要改 output DTO</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">IEventAppService</span> : <span class="title">IApplicationService</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="function">Task&lt;EventDto&gt; <span class="title">CreateAsync</span>(<span class="params">CreateEventDto input</span>)</span>;</span><br><span class="line"><span class="function">Task&lt;EventDto&gt; <span class="title">GetAsync</span>(<span class="params">Guid id</span>)</span>;</span><br><span class="line">Task&lt;List&lt;EventDto&gt;&gt; GetListAsync(PagedResultRequestDto</span><br><span class="line">input);</span><br><span class="line"><span class="function">Task&lt;EventDto&gt; <span class="title">AddSessionAsync</span>(<span class="params">Guid id,</span></span></span><br><span class="line"><span class="params"><span class="function">AddSessionDto input</span>)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>註: 當有效能考量時，可依不同的情境用不同的 output DTO</li></ul><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://docs.abp.io/en/abp/latest/Data-Transfer-Objects">ABP Data Transfer Objects</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;DTO&quot;&gt;&lt;a href=&quot;#DTO&quot; class=&quot;headerlink&quot; title=&quot;DTO&quot;&gt;&lt;/a&gt;DTO&lt;/h3&gt;&lt;p&gt;在 Domain 及 Application 層是使用 Entity,&lt;br&gt;而 Application 層 Presentatio</summary>
      
    
    
    
    
    <category term="DTO" scheme="https://rainmakerho.github.io/tags/DTO/"/>
    
    <category term="ABP" scheme="https://rainmakerho.github.io/tags/ABP/"/>
    
  </entry>
  
  <entry>
    <title>使用 Cache 加快 Power BI embedded 報表的速度</title>
    <link href="https://rainmakerho.github.io/2023/04/13/power-bi-embed-speed-up/"/>
    <id>https://rainmakerho.github.io/2023/04/13/power-bi-embed-speed-up/</id>
    <published>2023-04-13T02:42:50.000Z</published>
    <updated>2023-04-13T03:32:38.386Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近跟同事討論 Power BI embedded 報表的速度問題，<br>就下載 Microsoft 的 <a href="https://github.com/rainmakerho/PowerBI-Developer-Samples/tree/master/.NET%20Framework/Embed%20for%20your%20customers">AppOwnsData 範例</a>來測試，<br>發現在 Server 要取得 <code>ReportEmbedConfig</code>(包含 ReportId, ReportName, ReportUrl 及 EmbedToken) 大約需要花 1 秒左右，<br>在 View 接到 <code>ReportEmbedConfig</code> 來呈現，大約也差不多 1 秒左右，<br>總共大約近 2 秒的時間，那是否有什麼方式來加快報表的呈現速度嗎?</p><img src="/2023/04/13/power-bi-embed-speed-up/01.png" class="" title="network"><h3 id="研究"><a href="#研究" class="headerlink" title="研究"></a>研究</h3><p>在 Debug 程式的過程中發現，在 Controller 呼叫 <code>EmbedService</code> 的 <code>GetEmbedParams</code> Method ，<br>會再呼叫 <code>GetEmbedToken</code> 來取得 <strong>embedToken</strong> 。<br>而 <code>GetEmbedToken</code> Method 中會建立 <strong>PowerBIClient</strong> ，<br>所以會再透過 <code>AadService</code> 來取得 AccessToken 。</p><p>在 <code>EmbedService</code> 的 <code>GetEmbedParams</code> Method 本來就有建立 <strong>PowerBIClient</strong> ，<br>所以 <code>GetEmbedToken</code> Method 則可以直接使用它，<br>所以調整 <code>GetEmbedToken</code> Method 如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> Get Embed token for single report, multiple datasets, and an optional target workspace</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>Embed token<span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;remarks&gt;</span>This function is not supported for RDL Report<span class="doctag">&lt;/remakrs&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> Task&lt;EmbedToken&gt; <span class="title">GetEmbedToken</span>(<span class="params">Guid reportId, IList&lt;Guid&gt; datasetIds, [Optional] Guid targetWorkspaceId</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">using</span> (<span class="keyword">var</span> pbiClient = <span class="keyword">await</span> GetPowerBiClient())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> GetEmbedToken(pbiClient, reportId, datasetIds, targetWorkspaceId);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> EmbedToken <span class="title">GetEmbedToken</span>(<span class="params">PowerBIClient pbiClient, Guid reportId, IList&lt;Guid&gt; datasetIds, [Optional] Guid targetWorkspaceId</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Create a request for getting Embed token</span></span><br><span class="line">    <span class="comment">// This method works only with new Power BI V2 workspace experience</span></span><br><span class="line">    <span class="keyword">var</span> tokenRequest = <span class="keyword">new</span> GenerateTokenRequestV2(</span><br><span class="line"></span><br><span class="line">    reports: <span class="keyword">new</span> List&lt;GenerateTokenRequestV2Report&gt;() &#123; <span class="keyword">new</span> GenerateTokenRequestV2Report(reportId) &#125;,</span><br><span class="line"></span><br><span class="line">    datasets: datasetIds.Select(datasetId =&gt; <span class="keyword">new</span> GenerateTokenRequestV2Dataset(datasetId.ToString())).ToList(),</span><br><span class="line"></span><br><span class="line">    targetWorkspaces: targetWorkspaceId != Guid.Empty ? <span class="keyword">new</span> List&lt;GenerateTokenRequestV2TargetWorkspace&gt;() &#123; <span class="keyword">new</span> GenerateTokenRequestV2TargetWorkspace(targetWorkspaceId) &#125; : <span class="literal">null</span></span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Generate Embed token</span></span><br><span class="line">    <span class="keyword">var</span> embedToken = pbiClient.EmbedToken.GenerateToken(tokenRequest);</span><br><span class="line">    <span class="keyword">return</span> embedToken;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>而 <code>EmbedService</code> 的 <code>GetEmbedParams</code> Method 則 Call <code>GetEmbedToken</code> 並多傳入 <code>PowerBIClient</code> 物件，<br><a href="https://github.com/rainmakerho/PowerBI-Developer-Samples/blob/master/.NET%20Framework/Embed%20for%20your%20customers/AppOwnsData/Services/EmbedService.cs#L71"><code>embedToken = GetEmbedToken(pbiClient, reportId, datasetIds, workspaceId);</code></a></p><p>重跑程式後發現，沒有省太多時間，如下，</p><img src="/2023/04/13/power-bi-embed-speed-up/02.png" class="" title="network2"><p>假設報表參數是一致的，而 <code>ReportEmbedConfig</code> 中，只有 <code>EmbedToken</code> 會變動。<br>但 <strong>EmbedToken</strong> 期限會有一個小時，所以如果 <strong>EmbedToken</strong> 沒過期，<br>那就可以沿用原本的 <code>ReportEmbedConfig</code>。<br>再來就是將取得的 <code>ReportEmbedConfig</code> 存到 <a href="https://learn.microsoft.com/en-us/previous-versions/aspnet/ms178594(v=vs.100)">ApplicationState</a> 之中，<br>原本是每次都取 <code>ReportEmbedConfig</code> 給 View 處理，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;ActionResult&gt; <span class="title">EmbedReport</span>(<span class="params"><span class="built_in">string</span> reportId</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (!m_errorMessage.IsNullOrWhiteSpace())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> View(<span class="string">&quot;Error&quot;</span>, BuildErrorModel(m_errorMessage));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">string</span>.IsNullOrWhiteSpace(reportId))</span><br><span class="line">        &#123;</span><br><span class="line">            reportId = ConfigValidatorService.ReportId.ToString();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//每次都取 Embed Config</span></span><br><span class="line">        <span class="keyword">var</span> newRptEmbedConfig = <span class="keyword">await</span> EmbedService.GetEmbedParams(ConfigValidatorService.WorkspaceId, Guid.Parse(reportId));</span><br><span class="line">        <span class="keyword">return</span> View(newRptEmbedConfig);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (HttpOperationException exc)</span><br><span class="line">    &#123;</span><br><span class="line">        m_errorMessage = <span class="built_in">string</span>.Format(<span class="string">&quot;Status: &#123;0&#125; (&#123;1&#125;)\r\nResponse: &#123;2&#125;\r\nRequestId: &#123;3&#125;&quot;</span>, exc.Response.StatusCode, (<span class="built_in">int</span>)exc.Response.StatusCode, exc.Response.Content, exc.Response.Headers[<span class="string">&quot;RequestId&quot;</span>].FirstOrDefault());</span><br><span class="line">        <span class="keyword">return</span> View(<span class="string">&quot;Error&quot;</span>, BuildErrorModel(m_errorMessage));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> View(<span class="string">&quot;Error&quot;</span>, BuildErrorModel(ex.Message));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以下是增加各報表 Cache 的機制，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;ActionResult&gt; <span class="title">EmbedReport</span>(<span class="params"><span class="built_in">string</span> reportId</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (!m_errorMessage.IsNullOrWhiteSpace())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> View(<span class="string">&quot;Error&quot;</span>, BuildErrorModel(m_errorMessage));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">string</span>.IsNullOrWhiteSpace(reportId))</span><br><span class="line">        &#123;</span><br><span class="line">            reportId = ConfigValidatorService.ReportId.ToString();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//有過期才取</span></span><br><span class="line">        <span class="keyword">var</span> rptEmbedConfigsName = <span class="string">&quot;RptEmbedConfigs&quot;</span>;</span><br><span class="line">        <span class="keyword">var</span> rptEmbedConfigs = HttpContext.Application[rptEmbedConfigsName] <span class="keyword">as</span> ConcurrentDictionary&lt;<span class="built_in">string</span>, ReportEmbedConfig&gt;;</span><br><span class="line">        <span class="keyword">if</span> (rptEmbedConfigs == <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">int</span> initialCapacity = <span class="number">101</span>;</span><br><span class="line">            <span class="built_in">int</span> numProcs = Environment.ProcessorCount;</span><br><span class="line">            <span class="built_in">int</span> concurrencyLevel = numProcs * <span class="number">2</span>;</span><br><span class="line">            rptEmbedConfigs = <span class="keyword">new</span> ConcurrentDictionary&lt;<span class="built_in">string</span>, ReportEmbedConfig&gt;(concurrencyLevel, initialCapacity);</span><br><span class="line">            HttpContext.Application.Lock();</span><br><span class="line">            HttpContext.Application[rptEmbedConfigsName] = rptEmbedConfigs;</span><br><span class="line">            HttpContext.Application.UnLock();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ReportEmbedConfig rptEmbedConfig = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (rptEmbedConfigs.TryGetValue(reportId, <span class="keyword">out</span> rptEmbedConfig))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (rptEmbedConfig.EmbedToken.Expiration &gt; DateTime.UtcNow.AddMinutes(<span class="number">5</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> View(rptEmbedConfig);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> newRptEmbedConfig = <span class="keyword">await</span> EmbedService.GetEmbedParams(ConfigValidatorService.WorkspaceId, Guid.Parse(reportId));</span><br><span class="line">        rptEmbedConfigs.TryAdd(reportId, newRptEmbedConfig);</span><br><span class="line">        <span class="keyword">return</span> View(newRptEmbedConfig);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (HttpOperationException exc)</span><br><span class="line">    &#123;</span><br><span class="line">        m_errorMessage = <span class="built_in">string</span>.Format(<span class="string">&quot;Status: &#123;0&#125; (&#123;1&#125;)\r\nResponse: &#123;2&#125;\r\nRequestId: &#123;3&#125;&quot;</span>, exc.Response.StatusCode, (<span class="built_in">int</span>)exc.Response.StatusCode, exc.Response.Content, exc.Response.Headers[<span class="string">&quot;RequestId&quot;</span>].FirstOrDefault());</span><br><span class="line">        <span class="keyword">return</span> View(<span class="string">&quot;Error&quot;</span>, BuildErrorModel(m_errorMessage));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> View(<span class="string">&quot;Error&quot;</span>, BuildErrorModel(ex.Message));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>執行測試後發現，在 Controller 取得 <code>ReportEmbedConfig</code> 及在 View 呈現報表的速度都有明顯的加快。</p><img src="/2023/04/13/power-bi-embed-speed-up/03.png" class="" title="Cache Report EmbedConfig"><p>調整後的程式碼請參考:<a href="https://github.com/rainmakerho/PowerBI-Developer-Samples/blob/master/.NET%20Framework/Embed%20for%20your%20customers/AppOwnsData/Controllers/HomeController.cs#L61">AppOwnsData-HomeConttoller-EmbedReport</a></p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://github.com/rainmakerho/PowerBI-Developer-Samples">PowerBI-Developer-Samples</a><br><a href="https://learn.microsoft.com/zh-tw/power-bi/developer/embedded/embed-sample-for-customers?tabs=net-core">使用 適用于客戶應用程式的範例內嵌 來內嵌 Power BI</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;最近跟同事討論 Power BI embedded 報表的速度問題，&lt;br&gt;就下載 Microsoft 的 &lt;a href=&quot;https:/</summary>
      
    
    
    
    
    <category term="Power BI embedded" scheme="https://rainmakerho.github.io/tags/Power-BI-embedded/"/>
    
    <category term=".NET Framework" scheme="https://rainmakerho.github.io/tags/NET-Framework/"/>
    
    <category term="AppOwnsData" scheme="https://rainmakerho.github.io/tags/AppOwnsData/"/>
    
    <category term="ReportEmbedConfig" scheme="https://rainmakerho.github.io/tags/ReportEmbedConfig/"/>
    
    <category term="EmbedToken" scheme="https://rainmakerho.github.io/tags/EmbedToken/"/>
    
  </entry>
  
  <entry>
    <title>JS Call API 出現 Refused to connect ... violates the following Content Security Policy directive default-src self 的錯誤</title>
    <link href="https://rainmakerho.github.io/2023/04/12/violates-the-following-content-security-policy-directive-default-src/"/>
    <id>https://rainmakerho.github.io/2023/04/12/violates-the-following-content-security-policy-directive-default-src/</id>
    <published>2023-04-12T09:30:53.000Z</published>
    <updated>2023-04-13T01:11:23.043Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>同事詢問有 2 個 Web AP(前台 <code>localhost:44306</code>，後台 <code>localhost:59149</code>)，<br>結果前台的 JS 呼叫後台的 api 時，會發生 <code>Refused to connect to &#39;https://localhost:59149/api..&#39; because it violates the following Content Security Policy directive: &quot;default-src &#39;self&#39;&quot;. Note the &#39;connect-src&#39; was not explicity set, so &#39;default-src&#39; is used as a fallback.</code> 的錯誤，如下，</p><img src="/2023/04/12/violates-the-following-content-security-policy-directive-default-src/01.png" class="" title="violates CSP"><h3 id="除錯"><a href="#除錯" class="headerlink" title="除錯"></a>除錯</h3><p>前台 JS(<code>localhost:44306</code>) 透過 CORS 呼叫 後台目標服務(<code>localhost:59149</code>)時，<br>後台目標服務(<code>localhost:59149</code>) Response 出來的 Header 需要有<br><code>Access-Control-Allow-Origin:js url</code> 來允許 JS 呼叫。</p><p>如果要設定 CSP 的 <code>default-src</code> or <code>connect-src</code> ，則要設定 <code>connect-src</code> 加入 前台(<code>localhost:44306</code>) ，如下，</p><p><code>Content-Security-Policy:&quot;connect-src &#39;self&#39; &#39;https://localhost:44306&#39;;&quot;</code></p><p>如果沒有設定的話，那 js 的 fetch 就會被 browser 擋住。</p><p>於是 檢查 被呼叫端(<code>localhost:59149</code>)的確有 response 那 2 個 headers (如上圖)，<br>但是在 Browser 開發工具中的 主控台(Console) 卻一直噴 <code>default-src &#39;self&#39;</code> 的錯誤。</p><p>檢查 後台(<code>localhost:59149</code>) 的程式碼，<br>也沒有找到任何設定 <code>default-src &#39;self&#39;</code> 的地方。<br>如果用簡單的測試程式來測試，卻又是正常的。</p><p>後台(<code>localhost:59149</code>) 程式碼沒有問題?<br>那是否出在 測試電腦的 Browser 問題，<br>於是改用 無痕、改用 Edge 都是一樣的錯誤訊息。</p><p>於是跟同事拿了 2 個 Web AP(前台 <code>localhost:44306</code>，後台 <code>localhost:59149</code>) 的程式碼來本機測試看看，<br>檢查 後台(<code>localhost:59149</code>) 程式碼的確沒有任何問題，<br>倒是在檢查 前台(<code>localhost:44306</code>) 程式碼時，發現在 Middleware 有設定 CSP 的程式碼，<br>裡面有設定 <code>default-src &#39;self&#39;</code> ，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">app.UseSetHeaders(<span class="keyword">new</span> Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">string</span>&gt; &#123;</span><br><span class="line">      &#123;<span class="string">&quot;X-FRAME-OPTIONS&quot;</span>,<span class="string">&quot;SAMEORIGIN&quot;</span>&#125;,</span><br><span class="line">      &#123;<span class="string">&quot;Content-Security-Policy&quot;</span>,<span class="string">&quot;default-src &#x27;self&#x27;;style-src &#x27;self&#x27;;style-src-elem &#x27;unsafe-inline&#x27; &#x27;self&#x27;; script-src &#x27;unsafe-eval&#x27; &#x27;unsafe-inline&#x27; &#x27;self&#x27;;font-src &#x27;self&#x27; data:;&quot;</span> &#125;</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><p>謎題解開了，原來設定 <code>default-src &#39;self&#39;</code> 的地方是在 前台(<code>localhost:44306</code>)，<br>因為有設定 <code>default-src &#39;self&#39;</code> ，但卻沒有設定 <code>connect-src</code> ，<br>所以才導致 前台 JS(<code>localhost:44306</code>) 透過 CORS 呼叫時，<br>就被自已給限制住了。</p><p>將前台(<code>localhost:44306</code>) 的 <code>default-src &#39;self&#39;</code> 設定值拿掉，<br>前台 JS(<code>localhost:44306</code>) 透過 CORS 呼叫 後台目標服務(<code>localhost:59149</code>) 就正常了哦~</p><p>原來除了檢查 後台外，也要注意 前台有沒有設定 CSP ，QQ</p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/connect-src">CSP: connect-src</a><br><a href="https://stackoverflow.com/questions/63859663/refused-to-connect-to-x-because-it-violates-the-following-content-security-polic">Refused to connect to x because it violates the following Content Security Policy directive (connect-src)</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;同事詢問有 2 個 Web AP(前台 &lt;code&gt;localhost:44306&lt;/code&gt;，後台 &lt;code&gt;localhost:59</summary>
      
    
    
    
    
    <category term="CSP" scheme="https://rainmakerho.github.io/tags/CSP/"/>
    
    <category term="CORS" scheme="https://rainmakerho.github.io/tags/CORS/"/>
    
    <category term="default-src" scheme="https://rainmakerho.github.io/tags/default-src/"/>
    
    <category term="connect-src" scheme="https://rainmakerho.github.io/tags/connect-src/"/>
    
    <category term="violates" scheme="https://rainmakerho.github.io/tags/violates/"/>
    
    <category term="Access-Control-Allow-Origin" scheme="https://rainmakerho.github.io/tags/Access-Control-Allow-Origin/"/>
    
  </entry>
  
  <entry>
    <title>ABP Web 整合測試結果回傳 302 or 404 錯誤</title>
    <link href="https://rainmakerho.github.io/2023/04/12/abp-web-testing-error/"/>
    <id>https://rainmakerho.github.io/2023/04/12/abp-web-testing-error/</id>
    <published>2023-04-12T02:56:39.000Z</published>
    <updated>2023-04-12T06:02:59.541Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近將 ABP Framework 方案修改好程式後，執行 Web 整合測試時，<br>只是簡單的測試 Web Root 頁面是否運作正常，<br>居然測試不過，而且會回 302 or 404 的錯誤。<br><code>HTTP/1.1 GET http://localhost/ - - - 404</code></p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>猜想有可能是 Config 的問題，但是不知到底是那一個，<br>結果看到 <a href="https://learn.microsoft.com/en-us/aspnet/core/test/integration-tests">Integration tests in ASP.NET Core</a> 這篇在建立 HostBuilder 時，有多設定 <code>Environment</code> 為 <strong>Development</strong>。<br>所以多加上設定為 <strong>Development</strong> 居然就沒問題了。<br>花了好多時間，但還是找不到為什麼原本的 Abp 專案不用特別設定 <strong>Development</strong> 也沒有問題，<br>之後有找到問題點再來補充說明。<br>所以目前的 Workaround 做法就是 設定 <code>Environment</code> 為 <strong>Development</strong>。</p><p>WebTestBase.cs 中的 <code>CreateHostBuilder</code> Method 原本如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> IHostBuilder <span class="title">CreateHostBuilder</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">base</span></span><br><span class="line">        .CreateHostBuilder()</span><br><span class="line">        .UseContentRoot(WebContentDirectoryFinder.CalculateContentRootFolder());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>加上設定 <code>Environment</code> 為 <strong>Development</strong> (<code>.UseEnvironment(&quot;Development&quot;)</code>)。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> IHostBuilder <span class="title">CreateHostBuilder</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">base</span></span><br><span class="line">        .CreateHostBuilder()</span><br><span class="line">        .UseContentRoot(WebContentDirectoryFinder.CalculateContentRootFolder())</span><br><span class="line">        .UseEnvironment(<span class="string">&quot;Development&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>這樣子就沒問題了。</p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://learn.microsoft.com/en-us/aspnet/core/test/integration-tests">Integration tests in ASP.NET Core</a><br><a href="https://holsson.wordpress.com/2018/06/25/integration-testing-asp-net-core-2-1/">Integration Testing ASP.NET Core 2.x</a><br><a href="https://docs.abp.io/en/abp/latest/UI/AspNetCore/Testing">ASP.NET Core MVC &#x2F; Razor Pages: Testing</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;最近將 ABP Framework 方案修改好程式後，執行 Web 整合測試時，&lt;br&gt;只是簡單的測試 Web Root 頁面是否運作正常，</summary>
      
    
    
    
    
    <category term="ABP" scheme="https://rainmakerho.github.io/tags/ABP/"/>
    
    <category term="Web.Tests" scheme="https://rainmakerho.github.io/tags/Web-Tests/"/>
    
    <category term="WebTestBase" scheme="https://rainmakerho.github.io/tags/WebTestBase/"/>
    
    <category term="CreateHostBuilder" scheme="https://rainmakerho.github.io/tags/CreateHostBuilder/"/>
    
    <category term="Development" scheme="https://rainmakerho.github.io/tags/Development/"/>
    
  </entry>
  
  <entry>
    <title>ABP 測試遇到 SeedTestData 及 讀取 appsettings 問題</title>
    <link href="https://rainmakerho.github.io/2023/04/10/abp-testing-seed-data-config/"/>
    <id>https://rainmakerho.github.io/2023/04/10/abp-testing-seed-data-config/</id>
    <published>2023-04-10T00:41:42.000Z</published>
    <updated>2023-04-10T01:22:00.803Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在跑 ABP 的測試專案時，卻發現居然會跑到 Domain 專案的那些 <code>DataSeedContributor</code> 類別的 <code>SeedAsync</code> Method?<br>另外，有些 AppService 需要 <code>appsettings</code> 設定值，在 ABP 測試專案中要如何處理呢?</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><h4 id="跑測試專案時，會跑到-Domain-專案的那些-DataSeedContributor-類別的-SeedAsync-Method"><a href="#跑測試專案時，會跑到-Domain-專案的那些-DataSeedContributor-類別的-SeedAsync-Method" class="headerlink" title="跑測試專案時，會跑到 Domain 專案的那些 DataSeedContributor 類別的 SeedAsync Method"></a>跑測試專案時，會跑到 Domain 專案的那些 <code>DataSeedContributor</code> 類別的 <code>SeedAsync</code> Method</h4><p>ABP 的 <code>TestBase</code> 專案中 <code>TestBaseModule</code> 類別中的 <code>OnApplicationInitialization</code> Method ，會執行 <code>SeedTestData(context);</code>。<br>而 <code>SeedTestData(context);</code> 會呼叫 <code>DataSeeder</code> 的 <code>SeedAsync</code> Method。<br>在 <a href="https://rainmakerho.github.io/2023/03/08/abp-dataseedcontributor-duplicate/">ABP 系統建立的 DataSeedContributor 會跑 2 次 SeedAsync，導致發生 DB duplicate key 的錯誤?</a> 可以知道，<br><code>DataSeeder</code> 的 <code>SeedAsync</code> Method 會取得 組件中所有的 <code>DataSeedContributor</code> 類別，<br>並呼叫它們的 <code>SeedAsync</code> Method。<br>所以這也就導致在執行測試專案時，會一起跑 Domain 專案的那些 <code>DataSeedContributor</code> 類別的 <code>SeedAsync</code> Method。<br>那怎麼辦呢?<br>跟 <a href="https://rainmakerho.github.io/2023/03/08/abp-dataseedcontributor-duplicate/">ABP 系統建立的 DataSeedContributor 會跑 2 次 SeedAsync，導致發生 DB duplicate key 的錯誤?</a> 類似，<br>將 <code>AbpDataSeedOptions</code> 的 <code>Contributors</code> 移除 Domain 專案的那些 <code>DataSeedContributor</code> 類別就可以了。</p><p>所以修改 <code>TestBaseModule</code> 類別中 <code>SeedTestData</code> Method，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">SeedTestData</span>(<span class="params">ApplicationInitializationContext context</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    AsyncHelper.RunSync(<span class="keyword">async</span> () =&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">using</span> (<span class="keyword">var</span> scope = context.ServiceProvider.CreateScope())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//原本的程式碼</span></span><br><span class="line">            <span class="comment">//await scope.ServiceProvider</span></span><br><span class="line">            <span class="comment">//    .GetRequiredService&lt;IDataSeeder&gt;()</span></span><br><span class="line">            <span class="comment">//    .SeedAsync();</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 修改後的程式碼</span></span><br><span class="line">            <span class="comment">// 取得 AbpDataSeedOptions</span></span><br><span class="line">            <span class="keyword">var</span> dataSeeder = scope.ServiceProvider</span><br><span class="line">                .GetRequiredService&lt;IDataSeeder&gt;();</span><br><span class="line">            <span class="keyword">var</span> options = scope.ServiceProvider</span><br><span class="line">                .GetRequiredService&lt;IOptions&lt;AbpDataSeedOptions&gt;&gt;()</span><br><span class="line">                .Value;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 先將Domain 專案的那些 `DataSeedContributor` 類別移除</span></span><br><span class="line">            <span class="comment">// 因為 測試的 DataSeedContributor 類別名稱都會包含 Test ，所以用 Test 判斷</span></span><br><span class="line">            options.Contributors.RemoveAll(c =&gt; !c.Name.Contains(<span class="string">&quot;Test&quot;</span>));</span><br><span class="line">            <span class="comment">// 這裡只剩下 測試的 DataSeedContributor 類別</span></span><br><span class="line">            <span class="keyword">await</span> dataSeeder.SeedAsync();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="需要-appsettings-設定值"><a href="#需要-appsettings-設定值" class="headerlink" title="需要 appsettings 設定值"></a>需要 <code>appsettings</code> 設定值</h4><p>測試中，有些類別需要 <code>appsettings</code> 設定值怎麼辦呢?<br>可以參考 <a href="https://dotblogs.com.tw/jakeuj/2022/09/22/abp-test-appsettings">ABP.IO WEB 應用程式框架 UnitTest 讀取 appsettings.json</a> ，<br>在 <code>TestBase</code> 專案中加入 <code>appsettings.test.json</code> 並設定 <strong>複製到輸出目錄</strong> 為 <code>有更新時才複製</code>。<br><code>appsettings.test.json</code> 的內容則是那些類別所需要的一些設定值。</p><p>然後在 <code>TestBaseModule</code> 類別的 <code>ConfigureServices</code> Method 中，<br>讀取 <code>appsettings.test.json</code> ，並設定為 Singleton Service，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">ConfigureServices</span>(<span class="params">ServiceConfigurationContext context</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//讀取 appsettings.test.json 設定為 Singleton Service</span></span><br><span class="line">    IConfiguration configuration = <span class="keyword">new</span> ConfigurationBuilder()</span><br><span class="line">        .SetBasePath(Directory.GetCurrentDirectory())</span><br><span class="line">        .AddJsonFile(<span class="string">&quot;appsettings.test.json&quot;</span>, optional: <span class="literal">false</span>)</span><br><span class="line">        .Build();</span><br><span class="line">    context.Services.AddSingleton(configuration);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 其他的程式碼 ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="參考資訊"><a href="#參考資訊" class="headerlink" title="參考資訊"></a>參考資訊</h3><p><a href="https://weblog.west-wind.com/posts/2018/Feb/18/Accessing-Configuration-in-NET-Core-Test-Projects">Accessing Configuration in .NET Core Test Projects</a><br><a href="https://dotblogs.com.tw/jakeuj/2022/09/22/abp-test-appsettings">ABP.IO WEB 應用程式框架 UnitTest 讀取 appsettings.json</a><br><a href="https://rainmakerho.github.io/2023/03/08/abp-dataseedcontributor-duplicate/">ABP 系統建立的 DataSeedContributor 會跑 2 次 SeedAsync，導致發生 DB duplicate key 的錯誤?</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;在跑 ABP 的測試專案時，卻發現居然會跑到 Domain 專案的那些 &lt;code&gt;DataSeedContributor&lt;/code&gt; 類</summary>
      
    
    
    
    
    <category term="ABP" scheme="https://rainmakerho.github.io/tags/ABP/"/>
    
    <category term="TestBase" scheme="https://rainmakerho.github.io/tags/TestBase/"/>
    
    <category term="TestBaseModule" scheme="https://rainmakerho.github.io/tags/TestBaseModule/"/>
    
    <category term="SeedTestData" scheme="https://rainmakerho.github.io/tags/SeedTestData/"/>
    
    <category term="appsettings" scheme="https://rainmakerho.github.io/tags/appsettings/"/>
    
    <category term="IConfiguration" scheme="https://rainmakerho.github.io/tags/IConfiguration/"/>
    
    <category term="AbpDataSeedOptions" scheme="https://rainmakerho.github.io/tags/AbpDataSeedOptions/"/>
    
  </entry>
  
  <entry>
    <title>為什麼我的 PDF 檔案取出 Byte Array 另存後，再開出來卻變成白白的?</title>
    <link href="https://rainmakerho.github.io/2023/03/31/save-pdf-blank/"/>
    <id>https://rainmakerho.github.io/2023/03/31/save-pdf-blank/</id>
    <published>2023-03-31T05:27:01.000Z</published>
    <updated>2023-03-31T05:53:46.244Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近同事詢問，它把好的 PDF 檔案呼叫 Web Service 另存新檔後，<br>那個 PDF 就壞了，透過 Browser 開起來都是白的，<br>用 Adobe PDF Reader 來開啟會出現 「檔案已損壞且無法修復」 的訊息。<br>想到之前 <a href="https://rainmakerho.github.io/2023/03/15/crystal-report-export-pdf-blank/">為什麼 Crystal Report 匯出成 PDF 內容都是白的?</a> 的問題，<br>該不會又是編碼的問題吧?</p><h3 id="找問題"><a href="#找問題" class="headerlink" title="找問題"></a>找問題</h3><p>首先一樣先透過 Notpad++ 來比較一下好&#x2F;壞的檔案編碼是否不同，<br>結果都是 ANSI 。<br>再來就是比較一下<strong>內容</strong>，<br>可以發現在資料區塊有些內容不相同，</p><img src="/2023/03/31/save-pdf-blank/01.png" class="" title="compare-pdf"><p>有可能是資料編碼跟 ASCII 編碼不同所造成的。</p><p>Web Service 的程式碼如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">WebMethod</span>]</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">FileUpload</span>(<span class="params"><span class="built_in">byte</span>[] fileBytes, <span class="built_in">string</span> fileName</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">using</span> (MemoryStream ms = <span class="keyword">new</span> MemoryStream(fileBytes))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">using</span> (FileStream fileStream = <span class="keyword">new</span> FileStream(fileName, FileMode.Create))</span><br><span class="line">&#123;</span><br><span class="line">ms.WriteTo(fileStream);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> fileName;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看起來是直接將 Byte Array 的資料存起來，<br>完全不會動到編碼，所以應該不是它的問題。</p><p>讀取 PDF 檔案的 Byte Array 程式如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> pdfPath = <span class="string">@&quot;C:\temp\pdf\suc.pdf&quot;</span>;</span><br><span class="line"><span class="built_in">string</span> data = <span class="built_in">string</span>.Empty;</span><br><span class="line"><span class="keyword">using</span> (<span class="keyword">var</span> fs = <span class="keyword">new</span> FileStream(pdfPath, FileMode.Open))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">using</span> (<span class="keyword">var</span> sr = <span class="keyword">new</span> StreamReader(fs, Encoding.Default))</span><br><span class="line">&#123;</span><br><span class="line">data = sr.ReadToEnd();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> fileBytes = Encoding.Default.GetBytes(data);</span><br><span class="line"><span class="comment">// ... call web service</span></span><br></pre></td></tr></table></figure><p>哦~ 這裡有編碼(<code>Encoding.Default</code>)<br>以繁體中文的作業系統，<strong>Encoding.Default</strong> ，應該為 <strong>Big5</strong><br>而 PDF 檔的編碼大多是 <strong>Encoding.ASCII</strong>。<br>所以這裡應該要改成 <strong>Encoding.ASCII</strong>。</p><p>所以這裡改成了 <strong>ASCII</strong> 就可以了。<br>但是，比較好的方式是不要特別去設定讀取的編碼，<br>直接使用 <strong><a href="https://learn.microsoft.com/zh-tw/dotnet/api/system.io.file.readallbytes?view=net-7.0">File.ReadAllBytes</a></strong> 就可以了，<br>程式碼也比較簡潔，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> pdfPath = <span class="string">@&quot;C:\temp\pdf\suc.pdf&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> fileBytes = File.ReadAllBytes(pdfPath);</span><br></pre></td></tr></table></figure><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://rainmakerho.github.io/2023/03/15/crystal-report-export-pdf-blank/">為什麼 Crystal Report 匯出成 PDF 內容都是白的?</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;最近同事詢問，它把好的 PDF 檔案呼叫 Web Service 另存新檔後，&lt;br&gt;那個 PDF 就壞了，透過 Browser 開起來都是</summary>
      
    
    
    
    
    <category term="pdf" scheme="https://rainmakerho.github.io/tags/pdf/"/>
    
    <category term="blank" scheme="https://rainmakerho.github.io/tags/blank/"/>
    
    <category term="檔案已損壞且無法修復" scheme="https://rainmakerho.github.io/tags/%E6%AA%94%E6%A1%88%E5%B7%B2%E6%90%8D%E5%A3%9E%E4%B8%94%E7%84%A1%E6%B3%95%E4%BF%AE%E5%BE%A9/"/>
    
    <category term="Encoding.Default" scheme="https://rainmakerho.github.io/tags/Encoding-Default/"/>
    
  </entry>
  
  <entry>
    <title>透過比較編碼的 Byte 數，取得 BIG5/UTF8/UTF8 BOM 檔案正確的內容</title>
    <link href="https://rainmakerho.github.io/2023/03/23/file-big5-utf8-get-correct/"/>
    <id>https://rainmakerho.github.io/2023/03/23/file-big5-utf8-get-correct/</id>
    <published>2023-03-23T05:37:56.000Z</published>
    <updated>2023-03-23T06:01:26.265Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在 <a href="https://dotblogs.com.tw/rainmaker/2013/05/20/104547">透過 StreamReader.CurrentEncoding 判斷檔案的編碼</a>這篇是透過 <code>StreamReader.CurrentEncoding</code> 來取得檔案的編碼。<br>另外 同事 提供也可透過透過各編碼來取得 Byte 數，來比較出是否為該編碼，<br>以下來看看範例，</p><h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><p>在 c:\temp 目錄下分別建立 BIG5, UTF8 及 UTF8 BOM 的檔案，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//var filePath = @&quot;c:\temp\utf8.txt&quot;;</span></span><br><span class="line"><span class="keyword">var</span> filePath = <span class="string">@&quot;c:\temp\utf8BOM.txt&quot;</span>;</span><br><span class="line"><span class="comment">//var filePath = @&quot;c:\temp\big5.txt&quot;;</span></span><br><span class="line"><span class="keyword">var</span> fileBytes = System.IO.File.ReadAllBytes(filePath);</span><br><span class="line"><span class="comment">//判斷是否為 Big5 編碼</span></span><br><span class="line"><span class="keyword">var</span> big5 = Encoding.GetEncoding(<span class="number">950</span>);</span><br><span class="line"><span class="keyword">var</span> utf8 = Encoding.UTF8;</span><br><span class="line"><span class="keyword">var</span> big5String = big5.GetString(fileBytes);</span><br><span class="line"><span class="keyword">var</span> isBig5 = fileBytes.Length == big5.GetByteCount(big5String);</span><br><span class="line"><span class="comment">//取出正確的內容</span></span><br><span class="line"><span class="keyword">var</span> fileContent = isBig5 ?</span><br><span class="line">big5String :</span><br><span class="line">utf8.GetString(fileBytes);</span><br><span class="line">Console.WriteLine(fileContent);</span><br></pre></td></tr></table></figure><ul><li>註: 同事的系統主要處理的 File 只有 BIG5, UTF8 及 UTF8 BOM</li><li>註: 如果檔案不大，就可以使用上述的方式來取得正確的檔案編碼或是內容</li></ul><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://dotblogs.com.tw/rainmaker/2013/05/20/104547">透過 StreamReader.CurrentEncoding 判斷檔案的編碼</a><br><a href="https://blog.darkthread.net/blog/detect-big5-encoding/">CODE-偵測檔案是否為 BIG5 編碼</a><br><a href="https://github.com/rainmakerho/Vulnerability-Analysis/issues/7">Stored_Path_Traversal - Checkmarx V 9.4.5.1009</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;在 &lt;a href=&quot;https://dotblogs.com.tw/rainmaker/2013/05/20/104547&quot;&gt;透過 Str</summary>
      
    
    
    
    
    <category term="FILE" scheme="https://rainmakerho.github.io/tags/FILE/"/>
    
    <category term="BIG5" scheme="https://rainmakerho.github.io/tags/BIG5/"/>
    
    <category term="UTF8" scheme="https://rainmakerho.github.io/tags/UTF8/"/>
    
    <category term="UTF8 BOM" scheme="https://rainmakerho.github.io/tags/UTF8-BOM/"/>
    
    <category term="Encoding" scheme="https://rainmakerho.github.io/tags/Encoding/"/>
    
    <category term="GetEncoding(950)" scheme="https://rainmakerho.github.io/tags/GetEncoding-950/"/>
    
  </entry>
  
  <entry>
    <title>EF Core Owned Entity Types</title>
    <link href="https://rainmakerho.github.io/2023/03/23/ef-owned-entity-types/"/>
    <id>https://rainmakerho.github.io/2023/03/23/ef-owned-entity-types/</id>
    <published>2023-03-23T03:33:32.000Z</published>
    <updated>2023-03-23T05:06:08.752Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>像<strong>地址</strong>的物件，在 EF Core 中有那些的設定方式呢?<br>預設會是在原有的 Table 中增加欄位。<br>也可以指定欄位名稱，<br>或是讓它存到別的資料表。</p><h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><p>新增 <strong>Address</strong> 物件(它沒有 Id 哦~)</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Address</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Street &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> City &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Country &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>設定 <strong>Customer</strong> 有 2 個 Address 的屬性(ShipToAddress, BillToAddress)</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Customer</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">string</span> _validUsername;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Customer</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Orders = <span class="keyword">new</span> HashSet&lt;Order&gt;();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> Id &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Required, MaxLength(50)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> FirstName &#123; <span class="keyword">get</span>;<span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Required, MaxLength(50)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> LastName &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//public string Username &#123; get; set; &#125;</span></span><br><span class="line">    [<span class="meta">Required, MaxLength(50)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Username</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">get</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> _validUsername;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> FullName =&gt; FirstName+ <span class="string">&quot; &quot;</span> + LastName;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//[NotMapped]</span></span><br><span class="line">    <span class="comment">//public byte[] Checksum &#123; get; set; &#125;</span></span><br><span class="line">    <span class="keyword">public</span> ICollection&lt;Order&gt; Orders &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SetUsername</span>(<span class="params"><span class="built_in">string</span> username</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> specialCharacters = <span class="string">&quot;.*(?=.*[@#$%^&amp;+=()&#123;&#125;&lt;&gt;!~_*?]).*$&quot;</span>;</span><br><span class="line">        <span class="built_in">bool</span> usernameConatinsSpecialCharacters</span><br><span class="line">            = username.Any(x =&gt; specialCharacters.Contains(x));</span><br><span class="line">        <span class="keyword">if</span>(usernameConatinsSpecialCharacters)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ArgumentException(<span class="string">&quot;Special characters are not allowed in username&quot;</span>, username);</span><br><span class="line">        &#125;</span><br><span class="line">        _validUsername = username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">object</span>&gt; _data = <span class="keyword">new</span> Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">object</span>&gt;();</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">object</span> <span class="keyword">this</span>[<span class="built_in">string</span> key]</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">get</span> =&gt; _data[key];</span><br><span class="line">        <span class="keyword">set</span> =&gt; _data[key]= <span class="keyword">value</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Address ShipToAddress &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> Address BillToAddress &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 DbContext 類別中 OnModelCreating Method 設定 <strong>OwnsOne</strong>，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> 你的<span class="title">Context</span>: <span class="title">DbContext</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// ... other codes ...</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">virtual</span> DbSet&lt;Customer&gt; Customers &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; = <span class="literal">null</span>!;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnModelCreating</span>(<span class="params">ModelBuilder modelBuilder</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        modelBuilder.Entity&lt;Customer&gt;(entity =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            entity.HasKey(e=&gt;e.Id);</span><br><span class="line">            <span class="comment">//entity.Property&lt;DateTime&gt;(&quot;LastUpdated&quot;).HasDefaultValue(new DateTime(2020, 4, 9));</span></span><br><span class="line">            <span class="comment">// codes ...</span></span><br><span class="line">            entity.OwnsOne(e =&gt; e.ShipToAddress)</span><br><span class="line">                .Property(e =&gt; e.Street)</span><br><span class="line">                .IsRequired();</span><br><span class="line"></span><br><span class="line">            entity.OwnsOne(e =&gt; e.BillToAddress)</span><br><span class="line">                .Property(e =&gt; e.Street)</span><br><span class="line">                .IsRequired();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更新到 DB 後，就會新增 6 個欄位，如下，</p><img src="/2023/03/23/ef-owned-entity-types/01.png" class="" title="Default"><p>接再來，將 <strong>ShipToAddress</strong> 中 <strong>Street</strong> 的欄位名稱改成 <strong>ShiptoStreet</strong>，<br>將 <strong>BillToAddress</strong> 屬性資料改存到 <strong>BillToAddresses</strong> 資料表。<br>在 DbContext 類別中 OnModelCreating Method 調整，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> 你的<span class="title">Context</span>: <span class="title">DbContext</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// ... other codes ...</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">virtual</span> DbSet&lt;Customer&gt; Customers &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; = <span class="literal">null</span>!;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnModelCreating</span>(<span class="params">ModelBuilder modelBuilder</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        modelBuilder.Entity&lt;Customer&gt;(entity =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            entity.HasKey(e=&gt;e.Id);</span><br><span class="line">            <span class="comment">//entity.Property&lt;DateTime&gt;(&quot;LastUpdated&quot;).HasDefaultValue(new DateTime(2020, 4, 9));</span></span><br><span class="line">            <span class="comment">// codes ...</span></span><br><span class="line">            entity.OwnsOne(e =&gt; e.ShipToAddress)</span><br><span class="line">                .Property(e =&gt; e.Street)</span><br><span class="line">                .IsRequired()</span><br><span class="line">                .HasColumnName(<span class="string">&quot;ShipToAddress&quot;</span>);</span><br><span class="line"></span><br><span class="line">            entity.OwnsOne(e =&gt; e.BillToAddress)</span><br><span class="line">                .ToTable(<span class="string">&quot;BillToAddresses&quot;</span>)</span><br><span class="line">                .Property(e =&gt; e.Street)</span><br><span class="line">                .IsRequired();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>透過 <code>update-database</code> 後，<br>DB 中 <strong>Customers</strong>資料表中欄位名稱從 <strong>ShipToAddress_Street</strong> 已經改成 <strong>ShiptoStreet</strong>，<br>也新增了 <strong>BillToAddress</strong> 。</p><img src="/2023/03/23/ef-owned-entity-types/02.png" class="" title="BillToAddress"><h3 id="參考資訊"><a href="#參考資訊" class="headerlink" title="參考資訊"></a>參考資訊</h3><p><a href="https://learn.microsoft.com/zh-tw/ef/core/modeling/owned-entities">擁有的實體類型</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;像&lt;strong&gt;地址&lt;/strong&gt;的物件，在 EF Core 中有那些的設定方式呢?&lt;br&gt;預設會是在原有的 Table 中增加欄位。</summary>
      
    
    
    
    
    <category term="EF" scheme="https://rainmakerho.github.io/tags/EF/"/>
    
    <category term="Owned Entity Types" scheme="https://rainmakerho.github.io/tags/Owned-Entity-Types/"/>
    
    <category term="OwnsOne" scheme="https://rainmakerho.github.io/tags/OwnsOne/"/>
    
    <category term="ValueObject" scheme="https://rainmakerho.github.io/tags/ValueObject/"/>
    
  </entry>
  
  <entry>
    <title>EF Core Indexer properties and Property bag entity types</title>
    <link href="https://rainmakerho.github.io/2023/03/20/ef-indexer-properties/"/>
    <id>https://rainmakerho.github.io/2023/03/20/ef-indexer-properties/</id>
    <published>2023-03-20T08:34:17.000Z</published>
    <updated>2023-03-23T09:41:45.426Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>假設 Entity Class 要提供 Dictionary 的屬性，<br>可以使用 <strong>Indexer Properties</strong>，例如，<br><code>customer[&quot;CustomerType&quot;]</code>。<br>如果不想在原有的 Table 中新增欄位，<br>則可以使用 <strong>property bag entity types</strong>，例如，<br><code>customerExt[&quot;CustomerType&quot;]</code><br>以下我們來看一下做法。</p><h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><h4 id="Indexer-Properties"><a href="#Indexer-Properties" class="headerlink" title="Indexer Properties"></a>Indexer Properties</h4><p><code>customer[&quot;CustomerType&quot;]</code></p><p>1.在 Customer Class 中加入 <code>Dictionary</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Customer</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> Id &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> FirstName &#123; <span class="keyword">get</span>;<span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> LastName &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> FullName =&gt; FirstName+ <span class="string">&quot; &quot;</span> + LastName;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//Indexer Properties</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">object</span>&gt; _data = <span class="keyword">new</span> Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">object</span>&gt;();</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">object</span> <span class="keyword">this</span>[<span class="built_in">string</span> key]</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">get</span> =&gt; _data[key];</span><br><span class="line">        <span class="keyword">set</span> =&gt; _data[key]= <span class="keyword">value</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.在 DbContext 類別中 OnModelCreating Method 設定 IndexerProperty，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> 你的<span class="title">Context</span>: <span class="title">DbContext</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// ... other codes ...</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">virtual</span> DbSet&lt;Customer&gt; Customers &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; = <span class="literal">null</span>!;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnModelCreating</span>(<span class="params">ModelBuilder modelBuilder</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        modelBuilder.Entity&lt;Customer&gt;(entity =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            entity.HasKey(e=&gt;e.Id);</span><br><span class="line">            <span class="comment">//entity.Property&lt;DateTime&gt;(&quot;LastUpdated&quot;).HasDefaultValue(new DateTime(2020, 4, 9));</span></span><br><span class="line">            entity.IndexerProperty&lt;DateTime&gt;(<span class="string">&quot;LastUpdated&quot;</span>)</span><br><span class="line">                .HasDefaultValue(DateTime.UtcNow);</span><br><span class="line">            entity.IndexerProperty&lt;<span class="built_in">string</span>&gt;(<span class="string">&quot;CustomerType&quot;</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以當 <code>update-database</code> 後，Customers 會增加 2 個欄位(LastUpdated 及 CustomerType)</p><img src="/2023/03/20/ef-indexer-properties/01.png" class="" title="Indexer"><p>3.存&#x2F;取值的方式如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> _dbContext = <span class="keyword">new</span> 你的Context();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> customer = _dbContext</span><br><span class="line">    .Customers</span><br><span class="line">    .AsNoTracking()</span><br><span class="line">    .First();</span><br><span class="line"></span><br><span class="line"><span class="comment">//取值</span></span><br><span class="line"><span class="keyword">var</span> customerType = customer[<span class="string">&quot;CustomerType&quot;</span>];</span><br><span class="line"><span class="keyword">var</span> lastUpdated = customer[<span class="string">&quot;LastUpdated&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//要改值</span></span><br><span class="line">_dbContext.Attach(customer);</span><br><span class="line">customer[<span class="string">&quot;CustomerType&quot;</span>] = <span class="string">&quot;VIP&quot;</span>;</span><br><span class="line">customer[<span class="string">&quot;LastUpdated&quot;</span>] = <span class="keyword">new</span> DateTime(<span class="number">2020</span>, <span class="number">4</span>, <span class="number">9</span>);</span><br><span class="line"><span class="comment">//屬性不在會被忽略掉，不會有錯誤</span></span><br><span class="line">customer[<span class="string">&quot;沒欄位&quot;</span>] = <span class="string">&quot;ABC&quot;</span>;</span><br><span class="line">_dbContext.SaveChanges();</span><br></pre></td></tr></table></figure><h4 id="Property-bag-entity-types"><a href="#Property-bag-entity-types" class="headerlink" title="Property bag entity types"></a>Property bag entity types</h4><p>存到另一個　 Class ，例如，<br><code>customerExt[&quot;CustomerType&quot;]</code></p><p>1.建立 <code>DbSet&lt;Dictionary&lt;string, object&gt;&gt;</code> 及設定 <code>SharedTypeEntity</code><br>例如建立 Customers 及 Orders 的擴充 Table(CustomerExts, OrderExts)</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> 你的<span class="title">Context</span>: <span class="title">DbContext</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// ... other codes ...</span></span><br><span class="line">    <span class="keyword">public</span> DbSet&lt;Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">object</span>&gt;&gt; CustomerExts =&gt; Set&lt;Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">object</span>&gt;&gt;(<span class="string">&quot;CustomerExts&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> DbSet&lt;Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">object</span>&gt;&gt; OrderExts =&gt; Set&lt;Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">object</span>&gt;&gt;(<span class="string">&quot;OrderExts&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnModelCreating</span>(<span class="params">ModelBuilder modelBuilder</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        modelBuilder.SharedTypeEntity&lt;Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">object</span>&gt;&gt;(</span><br><span class="line">            <span class="string">&quot;CustomerExts&quot;</span>, c =&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                c.Property&lt;<span class="built_in">int</span>&gt;(<span class="string">&quot;Id&quot;</span>);</span><br><span class="line">                c.Property&lt;<span class="built_in">int</span>&gt;(<span class="string">&quot;CustomerId&quot;</span>);</span><br><span class="line">                c.Property&lt;<span class="built_in">string</span>&gt;(<span class="string">&quot;CustomerType&quot;</span>);</span><br><span class="line">                c.Property&lt;DateTime&gt;(<span class="string">&quot;LastUpdated&quot;</span>);</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">        modelBuilder.SharedTypeEntity&lt;Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">object</span>&gt;&gt;(</span><br><span class="line">            <span class="string">&quot;OrderExts&quot;</span>, c =&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                c.Property&lt;<span class="built_in">int</span>&gt;(<span class="string">&quot;Id&quot;</span>);</span><br><span class="line">                c.Property&lt;<span class="built_in">int</span>&gt;(<span class="string">&quot;OrderId&quot;</span>);</span><br><span class="line">                c.Property&lt;<span class="built_in">string</span>&gt;(<span class="string">&quot;OrderType&quot;</span>);</span><br><span class="line">                c.Property&lt;DateTime&gt;(<span class="string">&quot;LastUpdated&quot;</span>);</span><br><span class="line">            &#125;);</span><br><span class="line">        <span class="comment">// ... other codes ...</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.存取方式如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> _dbContext = <span class="keyword">new</span> 你的Context();</span><br><span class="line"><span class="comment">//新增</span></span><br><span class="line"><span class="keyword">var</span> newCustomerExt = <span class="keyword">new</span> Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">object</span>&gt;</span><br><span class="line">&#123;</span><br><span class="line">    &#123;<span class="string">&quot;CustomerId&quot;</span>, <span class="number">3</span> &#125;,</span><br><span class="line">    &#123;<span class="string">&quot;CustomerType&quot;</span>, <span class="string">&quot;Invalid&quot;</span> &#125;,</span><br><span class="line">    &#123;<span class="string">&quot;LastUpdated&quot;</span>, <span class="keyword">new</span> DateTime(<span class="number">2020</span>, <span class="number">9</span>, <span class="number">25</span>) &#125;</span><br><span class="line">&#125;;</span><br><span class="line">_dbContext.CustomerExts.Add(newCustomerExt);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> newOrderExt = <span class="keyword">new</span> Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">object</span>&gt;</span><br><span class="line">&#123;</span><br><span class="line">    &#123;<span class="string">&quot;OrderId&quot;</span>, <span class="number">1</span> &#125;,</span><br><span class="line">    &#123;<span class="string">&quot;OrderType&quot;</span>, <span class="string">&quot;NeedConfirm&quot;</span> &#125;,</span><br><span class="line">    &#123;<span class="string">&quot;LastUpdated&quot;</span>, <span class="keyword">new</span> DateTime(<span class="number">2020</span>, <span class="number">9</span>, <span class="number">25</span>) &#125;</span><br><span class="line">&#125;;</span><br><span class="line">_dbContext.OrderExts.Add(newOrderExt);</span><br><span class="line">_dbContext.SaveChanges();</span><br><span class="line"></span><br><span class="line"><span class="comment">//更新</span></span><br><span class="line"><span class="keyword">var</span> customerExt = _dbContext.CustomerExts.First();</span><br><span class="line">customerExt[<span class="string">&quot;CustomerType&quot;</span>] = <span class="string">&quot;VIP&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> orderExt = _dbContext.OrderExts.First();</span><br><span class="line">orderExt[<span class="string">&quot;OrderType&quot;</span>] = <span class="string">&quot;Confirmed&quot;</span>;</span><br><span class="line"></span><br><span class="line">_dbContext.SaveChanges();</span><br></pre></td></tr></table></figure><p>DB 就會建立 CustomerExts 及 OrderExts 資料表，</p><img src="/2023/03/20/ef-indexer-properties/02.png" class="" title="CustomerExts"><img src="/2023/03/20/ef-indexer-properties/03.png" class="" title="OrderExts"><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://learn.microsoft.com/zh-tw/ef/core/modeling/shadow-properties">陰影和索引子屬性</a><br><a href="https://learn.microsoft.com/en-us/dotnet/csharp/programming-guide/indexers/">Indexers</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;假設 Entity Class 要提供 Dictionary 的屬性，&lt;br&gt;可以使用 &lt;strong&gt;Indexer Properties</summary>
      
    
    
    
    
    <category term="EF" scheme="https://rainmakerho.github.io/tags/EF/"/>
    
    <category term="Indexer" scheme="https://rainmakerho.github.io/tags/Indexer/"/>
    
    <category term="property bag entity types" scheme="https://rainmakerho.github.io/tags/property-bag-entity-types/"/>
    
    <category term="Dictionary" scheme="https://rainmakerho.github.io/tags/Dictionary/"/>
    
    <category term="SharedTypeEntity" scheme="https://rainmakerho.github.io/tags/SharedTypeEntity/"/>
    
  </entry>
  
  <entry>
    <title>EF Core Shadow Properties</title>
    <link href="https://rainmakerho.github.io/2023/03/20/ef-shadow-properties/"/>
    <id>https://rainmakerho.github.io/2023/03/20/ef-shadow-properties/</id>
    <published>2023-03-20T07:15:31.000Z</published>
    <updated>2023-03-20T09:03:41.860Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>使用 EF Core 想要 DB Table 中有欄位，但不想出現在 Class 中的屬性要怎麼做呢?<br>例如，要在一個 Customers Table 中新增一個 LastUpdated 的欄位，但不想在 Customer Class 屬性中對應。<br>這時可以設定為 陰影屬性</p><h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><p>Customer 欄位中並沒有 <code>LastUpdated</code> 這個屬性</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Customer</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> Id &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> FirstName &#123; <span class="keyword">get</span>;<span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> LastName &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> FullName =&gt; FirstName+ <span class="string">&quot; &quot;</span> + LastName;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 DbContext 類別中 OnModelCreating Method 設定 Property，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> 你的<span class="title">Context</span>: <span class="title">DbContext</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// ... other codes ...</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">virtual</span> DbSet&lt;Customer&gt; Customers &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; = <span class="literal">null</span>!;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnModelCreating</span>(<span class="params">ModelBuilder modelBuilder</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        modelBuilder.Entity&lt;Customer&gt;(entity =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            entity.HasKey(e=&gt;e.Id);</span><br><span class="line">            entity.Property&lt;DateTime&gt;(<span class="string">&quot;LastUpdated&quot;</span>).HasDefaultValue(<span class="keyword">new</span> DateTime(<span class="number">2020</span>, <span class="number">4</span>, <span class="number">9</span>));</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>當更新到 DB 後，Customers 會有一個 <strong>LastUpdated</strong> 欄位</p><p>要取得它的值，需要透過 EF Property 來取得，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> _dbContext = <span class="keyword">new</span> 你的Context();</span><br><span class="line"></span><br><span class="line"><span class="comment">//方法1</span></span><br><span class="line"><span class="keyword">var</span> customer = _dbContext</span><br><span class="line">    .Customers</span><br><span class="line">    .AsTracking()</span><br><span class="line">    .First();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> lastUpdated = _dbContext.Entry(customer).Property&lt;DateTime&gt;(<span class="string">&quot;LastUpdated&quot;</span>).CurrentValue;</span><br><span class="line"></span><br><span class="line"><span class="comment">//方法2</span></span><br><span class="line"><span class="keyword">var</span> lastUpdated2 = _dbContext</span><br><span class="line">    .Customers</span><br><span class="line">    .AsNoTracking()</span><br><span class="line">    .Select(c =&gt; EF.Property&lt;DateTime&gt;(c, <span class="string">&quot;LastUpdated&quot;</span>))</span><br><span class="line">    .First();</span><br><span class="line"></span><br><span class="line"><span class="comment">//方法3</span></span><br><span class="line"><span class="keyword">var</span> lastUpdated2 = _dbContext</span><br><span class="line">    .Customers</span><br><span class="line">    .Select(c =&gt; EF.Property&lt;DateTime&gt;(c, <span class="string">&quot;LastUpdated&quot;</span>))</span><br><span class="line">    .First();</span><br></pre></td></tr></table></figure><p>更新欄位值則是設定 CurrentValue</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> _dbContext = <span class="keyword">new</span> 你的Context();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> customer = _dbContext</span><br><span class="line">    .Customers</span><br><span class="line">    .AsTracking()</span><br><span class="line">    .First();</span><br><span class="line"></span><br><span class="line">_dbContext.Entry(customer).Property&lt;DateTime&gt;(<span class="string">&quot;LastUpdated&quot;</span>).CurrentValue = DateTime.Now;</span><br><span class="line"></span><br><span class="line">_dbContext.SaveChanges();</span><br></pre></td></tr></table></figure><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://learn.microsoft.com/zh-tw/ef/core/modeling/shadow-properties">陰影和索引子屬性</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;使用 EF Core 想要 DB Table 中有欄位，但不想出現在 Class 中的屬性要怎麼做呢?&lt;br&gt;例如，要在一個 Custome</summary>
      
    
    
    
    
    <category term="EF" scheme="https://rainmakerho.github.io/tags/EF/"/>
    
    <category term="Shadow" scheme="https://rainmakerho.github.io/tags/Shadow/"/>
    
  </entry>
  
  <entry>
    <title>ASPOSE Word 另存成 PDF 只有自造字(EUDC)有顯示，其他字變成了黑點</title>
    <link href="https://rainmakerho.github.io/2023/03/17/aspose-word-pdf-miss-system-fonts/"/>
    <id>https://rainmakerho.github.io/2023/03/17/aspose-word-pdf-miss-system-fonts/</id>
    <published>2023-03-17T06:28:25.000Z</published>
    <updated>2023-03-17T06:56:41.634Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>同事反應參考 <a href="https://dotblogs.com.tw/rainmaker/2016/03/10/164258">透過 Aspose.Words 將 Word 轉出 PDF 時，自造字(EUDC) 可以顯示出來</a> 這篇的做法轉出 PDF 內容，自造字(EUDC)有顯示出來，但其他字卻變成了<strong>黑點</strong>。</p><img src="/2023/03/17/aspose-word-pdf-miss-system-fonts/01.png" class="" title="eudc-pdf"><h3 id="除錯"><a href="#除錯" class="headerlink" title="除錯"></a>除錯</h3><p>1.設定 EUDC 檔案與系統字型連結<br>當拿到字造字型檔(TTE)放到電腦後，要設定機碼讓它連結到系統字型，<br>機碼目錄為 <code>電腦\HKEY_CURRENT_USER\EUDC\950</code>，<br>機碼<code>SystemDefaultEUDCFont</code>，值為<code>EUDC檔案目錄</code>，如下，</p><img src="/2023/03/17/aspose-word-pdf-miss-system-fonts/02.png" class="" title="eudc-regedit"><p>2.重開機<br>重開機後，可直接開啟 Word 檔，另存成 PDF 檔案來驗證 一般字及自造字 是否完整呈現</p><p>3.透過 Aspose.Words 來另存 PDF 檔<br>安裝 Aspose.Words Nuget 套件</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Aspose.Words.Document doc = <span class="keyword">new</span> Aspose.Words.Document(<span class="string">@&quot;c:\eudc\t1.doc&quot;</span>);</span><br><span class="line">FontSettings.DefaultInstance.SetFontsSources(<span class="keyword">new</span> FontSourceBase[]</span><br><span class="line">    &#123; <span class="keyword">new</span> SystemFontSource(), <span class="keyword">new</span> FileFontSource(<span class="string">@&quot;c:\eudc\RM.TTE&quot;</span>) &#125;);</span><br><span class="line">doc.Save(<span class="string">@&quot;c:\eudc\t3.pdf&quot;</span>);</span><br></pre></td></tr></table></figure><p>查看 t3.pdf 一般字及自造字 都是有呈現的。</p><p>詢問同事後，同事給了 VB.NET 的程式碼，如下，</p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Dim</span> doc = <span class="built_in">New</span> Aspose.Words.Document(<span class="string">&quot;c:\eudc\t1.doc&quot;</span>)</span><br><span class="line"><span class="keyword">Dim</span> eudcFontSource = <span class="built_in">New</span> FileFontSource(<span class="string">&quot;c:\eudc\RM.TTE&quot;</span>)</span><br><span class="line">FontSettings.DefaultInstance.SetFontsSources(&#123;eudcFontSource&#125;)</span><br><span class="line">doc.Save(<span class="string">&quot;c:\eudc\t5.pdf&quot;</span>)</span><br></pre></td></tr></table></figure><p>看了一下，原來是少了給 <strong>SystemFontSource</strong> ，補足 <strong>SystemFontSource</strong> 就沒問題了</p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Dim</span> doc = <span class="built_in">New</span> Aspose.Words.Document(<span class="string">&quot;c:\eudc\t1.doc&quot;</span>)</span><br><span class="line"><span class="keyword">Dim</span> sysFontSource = <span class="built_in">New</span> SystemFontSource()</span><br><span class="line"><span class="keyword">Dim</span> eudcFontSource = <span class="built_in">New</span> FileFontSource(<span class="string">&quot;c:\eudc\RM.TTE&quot;</span>)</span><br><span class="line">FontSettings.DefaultInstance.SetFontsSources(&#123;sysFontSource, eudcFontSource&#125;)</span><br><span class="line">doc.Save(<span class="string">&quot;c:\eudc\t5.pdf&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://dotblogs.com.tw/rainmaker/2016/03/10/164258">透過 Aspose.Words 將 Word 轉出 PDF 時，自造字(EUDC) 可以顯示出來</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;同事反應參考 &lt;a href=&quot;https://dotblogs.com.tw/rainmaker/2016/03/10/164258&quot;&gt;透</summary>
      
    
    
    
    
    <category term="PDF" scheme="https://rainmakerho.github.io/tags/PDF/"/>
    
    <category term="Aspose" scheme="https://rainmakerho.github.io/tags/Aspose/"/>
    
    <category term="Word" scheme="https://rainmakerho.github.io/tags/Word/"/>
    
    <category term="EUDC" scheme="https://rainmakerho.github.io/tags/EUDC/"/>
    
    <category term="SystemFontSource" scheme="https://rainmakerho.github.io/tags/SystemFontSource/"/>
    
    <category term="SetFontsSources" scheme="https://rainmakerho.github.io/tags/SetFontsSources/"/>
    
    <category term="FileFontSource" scheme="https://rainmakerho.github.io/tags/FileFontSource/"/>
    
    <category term="TTE" scheme="https://rainmakerho.github.io/tags/TTE/"/>
    
  </entry>
  
  <entry>
    <title>為什麼 Crystal Report 匯出成 PDF 內容都是白的?</title>
    <link href="https://rainmakerho.github.io/2023/03/15/crystal-report-export-pdf-blank/"/>
    <id>https://rainmakerho.github.io/2023/03/15/crystal-report-export-pdf-blank/</id>
    <published>2023-03-15T08:12:37.000Z</published>
    <updated>2023-03-17T06:27:45.679Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>最近同事詢問一個 Crystal Report 匯出成 PDF 檔案時，在 Browser 中呈現會全都是空白的內容。<br>透過 Adobe Reader 開啟卻會出現「<strong>開啟此文件時出錯。 檔案已損壞且無法修復。</strong>」的錯誤。</p><h3 id="除錯"><a href="#除錯" class="headerlink" title="除錯"></a>除錯</h3><p>程式碼很簡單，就是利用 ReportDocument 將報表檔 Load 進來，並設定資料庫連線及報表參數後，<br>呼叫 ExportToHttpResponse 匯出 PDF</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ... ReportDocument 將報表檔 Load 進來，並設定資料庫連線及報表參數 ...</span></span><br><span class="line"><span class="keyword">this</span>.Response.ContentType = <span class="string">&quot;application/pdf&quot;</span>;</span><br><span class="line">rptDoc.ExportToHttpResponse(ExportFormatType.PortableDocFormat, <span class="literal">true</span>, <span class="keyword">this</span>.Response, <span class="literal">true</span>, <span class="string">&quot;報表名稱&quot;</span>);</span><br><span class="line"><span class="keyword">this</span>.Response.Flush()</span><br><span class="line"><span class="keyword">this</span>.Response.End();</span><br></pre></td></tr></table></figure><p><strong>檔案已損壞且無法修復</strong> 有可能是檔案內容有可能被更改，所以導致不符合 PDF 的規範。<br>透過 Notepad++ 開起來比較，正常的 PDF 檔案它的編碼是「ANSI」，<br>損壞的 PDF 檔案它的編碼卻是「UTF8」。</p><p>1.如果調整程式，透過 ExportToDisk 存檔在 Server 上，產出的 PDF 檔案是 OK 的。</p><p>2.不透過 ReportDocument ，直接 Response.WriteFile(正常的 PDF 檔)，結果 PDF 編碼又變成 UTF8 ，Chrome 來看也都是空空的。</p><p>3.在 PostBack 的事件中，Response.WriteFile(正常的 PDF 檔)，結果 PDF 編碼是 ANSI ，檔案就正常了。</p><p>4.行為 GET ，從 Server 端到 Client 之中，應該有什麼程序在處理， 導致<strong>破壞</strong>了原本正常的 PDF 內容。</p><p>5.這種程序在 IIS 上有可能是 ISAPI 篩選器，ASP.NET 中有可能是 HttpModule or HttpHandler，ASP.NET Core 就是 Middleware</p><p>6.檢查 IIS 上並無 ISAPI 篩選器</p><p>7.檢查 web.config 中並沒有設定特別的 HttpModule 或是 HttpHandler 8.檢查 global.asax &#x3D;&gt; 結果在 Application_BeginRequest 中，有設定 <a href="https://learn.microsoft.com/en-us/dotnet/api/system.web.httpresponse.filter?view=netframework-4.8">HttpResponse.Filter</a></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">Application_BeginRequest</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (Request.HttpMethod == <span class="string">&quot;GET&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (Request.AppRelativeCurrentExecutionFilePath.EndsWith(<span class="string">&quot;.aspx&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            Response.Filter = <span class="keyword">new</span> ScriptDeferFilter(Response);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那個 <a href="https://weblogs.asp.net/omarzabir/fast-page-loading-by-moving-asp-net-ajax-scripts-after-visible-content">ScriptDeferFilter</a> 是將頁面中的 script tag 移到最後，並會以 UTF8 輸出，所以就導致匯出 PDF 發生錯誤</p><p>所以調整程式在匯出 Report PDF 那程式程不要使用 Filter 即可。</p><blockquote><p>原來是 Filter 惹的禍，QQ</p></blockquote><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://learn.microsoft.com/en-us/dotnet/api/system.web.httpresponse.filter?view=netframework-4.8">HttpResponse.Filter</a><br><a href="https://www.c-sharpcorner.com/article/tip-how-to-export-a-crystal-report-to-a-pdf-file-programmat/">How to Export a Crystal Report to a PDF file Programmatically in ASP.NET?</a><br><a href="https://rainmakerho.github.io/2022/11/15/Path-GetTempFileName-IOException-The-file-exists/">C# System.IO.Path.GetTempFileName 會產生 IOException 檔案存在(The file exists)的錯誤</a><br><a href="https://weblogs.asp.net/omarzabir/fast-page-loading-by-moving-asp-net-ajax-scripts-after-visible-content">Fast page loading by moving ASP.NET AJAX scripts after visible content</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;最近同事詢問一個 Crystal Report 匯出成 PDF 檔案時，在 Browser 中呈現會全都是空白的內容。&lt;br&gt;透過 Adob</summary>
      
    
    
    
    
    <category term="ExportToHttpResponse" scheme="https://rainmakerho.github.io/tags/ExportToHttpResponse/"/>
    
    <category term="Crystal Report" scheme="https://rainmakerho.github.io/tags/Crystal-Report/"/>
    
    <category term="Response.Filter" scheme="https://rainmakerho.github.io/tags/Response-Filter/"/>
    
    <category term="Blank" scheme="https://rainmakerho.github.io/tags/Blank/"/>
    
  </entry>
  
  <entry>
    <title>ABP Domain Events</title>
    <link href="https://rainmakerho.github.io/2023/03/14/abp-domain-events/"/>
    <id>https://rainmakerho.github.io/2023/03/14/abp-domain-events/</id>
    <published>2023-03-14T03:47:00.000Z</published>
    <updated>2023-03-14T05:20:47.216Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>以下介紹一下 ABP 提供的 Publish Event 的方式(local event 及 distributed event)，</p><h4 id="local-event-bus"><a href="#local-event-bus" class="headerlink" title="local event bus"></a>local event bus</h4><p>在 Aggreate Root Entity 使用 <code>AddLocalEvent(event物件);</code>來加入要被 Publish 的 Event ，<br>透過 <code>ILocalEventHandler&lt;event物件&gt;</code> 來訂閱要 Handle 的 Event，例如，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SetTime</span>(<span class="params">DateTime startTime, DateTime endTime</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (startTime &gt; endTime)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(EventHubErrorCodes</span><br><span class="line">.EndTimeCantBeEarlierThanStartTime);</span><br><span class="line">&#125;</span><br><span class="line">StartTime = startTime;</span><br><span class="line">EndTime = endTime;</span><br><span class="line"><span class="keyword">if</span> (!IsDraft)</span><br><span class="line">&#123;</span><br><span class="line">AddLocalEvent(<span class="keyword">new</span> EventTimeChangedEventData(<span class="keyword">this</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">EventTimeChangedEventData</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span> Event Event &#123;<span class="keyword">get</span>;&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">EventTimeChangedEventData</span>(<span class="params">Event @<span class="keyword">event</span></span>)</span></span><br><span class="line">&#123;</span><br><span class="line">Event = @event;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">UserEmailingHandler</span> :</span><br><span class="line"><span class="title">ILocalEventHandler</span>&lt;<span class="title">EventTimeChangedEventData</span>&gt;,</span><br><span class="line"><span class="title">ITransientDependency</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">HandleEventAsync</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">EventTimeChangedEventData eventData</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">var</span> @event = eventData.Event;</span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> Send email to the registered users!</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Handler 如果發生錯誤沒有 Handle 的話，會讓 DB 交易 Rollback</li></ul><p>在 AppService 也可以使用 eventbus，注入 <code>ILocalEventBus</code>，再透過 <code>PublishAsync</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">EventAppService</span> : <span class="title">EventHubAppService</span>,</span><br><span class="line"><span class="title">IEventAppService</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> IRepository&lt;Event, Guid&gt;</span><br><span class="line">_eventRepository;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> ILocalEventBus _localEventBus;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">EventAppService</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">IRepository&lt;Event, Guid&gt; eventRepository,</span></span></span><br><span class="line"><span class="params"><span class="function">ILocalEventBus localEventBus</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">_eventRepository = eventRepository;</span><br><span class="line">_localEventBus = localEventBus;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">SetTimeAsync</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">Guid eventId, DateTime startTime, DateTime endTime</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">var</span> @event = <span class="keyword">await</span> _eventRepository.GetAsync(eventId);</span><br><span class="line">@event.SetTime(startTime, endTime);</span><br><span class="line"><span class="keyword">await</span> _eventRepository.UpdateAsync(@event);</span><br><span class="line"><span class="keyword">await</span> _localEventBus.PublishAsync(</span><br><span class="line"><span class="keyword">new</span> EventTimeChangedEventData(@event));</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最好是在 Domain Services or Entity 中 Publish 會來的比較合適<br>因為在 AppService 可能會忘了 Publish</p><p>Local events 很適合用來實作一些 side-effects，<br>例如，某些狀態改變時，要做某些 Action<br>像上述範例是使用 Email 通知</p><ul><li>不應該將 商業邏輯流程 交給 事件處理，以防整個過程難以掌控</li><li>Domain Event(包含簡單資訊，Id, CustomId, ClientId)</li><li>Intergation Event (包含詳細資訊，Id, CustomId, CustomName, ClientId, ClientName…)</li></ul><h4 id="distributed-event-bus"><a href="#distributed-event-bus" class="headerlink" title="distributed event bus"></a>distributed event bus</h4><p>透過 message broker service, 像是 RabbitMQ or Kafka<br>在 Aggreate Root Entity 使用 <code>AddDistributedEvent(ETO物件);</code>來加入要被 Publish 的 Event ，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SetTime</span>(<span class="params">DateTime startTime, DateTime endTime</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (startTime &gt; endTime)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(EventHubErrorCodes</span><br><span class="line">.EndTimeCantBeEarlierThanStartTime);</span><br><span class="line">&#125;</span><br><span class="line">StartTime = startTime;</span><br><span class="line">EndTime = endTime;</span><br><span class="line"><span class="keyword">if</span> (!IsDraft)</span><br><span class="line">&#123;</span><br><span class="line">AddDistributedEvent(<span class="keyword">new</span> EventTimeChangedEto&#123;</span><br><span class="line">EventId = Id, Title = Title,</span><br><span class="line">StartTime = StartTime, EndTime = EndTime</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>跟 local event bus 不同的是，這裡傳遞的是類似 DTO 的 ETO(Event Transfer Object)</li></ul><p>其他地方使用則注入 <code>IDistributeEventBus</code> ，然後使用 <code>PublishAsync</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">await</span> _distributedEventBus.PublishAsync(ew EventTimeChangedEto&#123;</span><br><span class="line">EventId = Id, Title = Title,</span><br><span class="line">StartTime = StartTime, EndTime = EndTime</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">UserEmailingHandler</span> :</span><br><span class="line"><span class="title">IDistributedEventHandler</span>&lt;<span class="title">EventTimeChangedEventEto</span>&gt;,</span><br><span class="line"><span class="title">ITransientDependency</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">HandleEventAsync</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">EventTimeChangedEventData eventData</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">var</span> @event = eventData.Event;</span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> Send email to the registered users!</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>An aggregate should preserve its validity and consistency by implementing business rules.<br>The domain layer is used to implement the core, application-independent domain logic of the solution.</p></blockquote><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://docs.abp.io/en/abp/latest/Event-Bus">ABP Event Bus</a><br><a href="https://eopinion.com/should-you-publish-domain-events-or-integration-events/">Should you publish Domain Events or Integration Events?</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;以下介紹一下 ABP 提供的 Publish Event 的方式(local event 及 distributed event)，&lt;/p&gt;</summary>
      
    
    
    
    
    <category term="ABP" scheme="https://rainmakerho.github.io/tags/ABP/"/>
    
    <category term="Domain Events" scheme="https://rainmakerho.github.io/tags/Domain-Events/"/>
    
    <category term="AddLocalEvent" scheme="https://rainmakerho.github.io/tags/AddLocalEvent/"/>
    
    <category term="ILocalEventHandler" scheme="https://rainmakerho.github.io/tags/ILocalEventHandler/"/>
    
    <category term="AddDistributedEvent" scheme="https://rainmakerho.github.io/tags/AddDistributedEvent/"/>
    
  </entry>
  
  <entry>
    <title>Entity Framework Core 產生 Migration DB Script</title>
    <link href="https://rainmakerho.github.io/2023/03/09/ef-generate-migration-scripts/"/>
    <id>https://rainmakerho.github.io/2023/03/09/ef-generate-migration-scripts/</id>
    <published>2023-03-09T06:20:45.000Z</published>
    <updated>2023-03-09T06:59:54.299Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在 Visual Studio 透過 <code>Add-Migration</code> 後，<br>可以透過 <code>Update-Database</code> 將這些 更新到 DB 之中。<br>那如果想要產生 SQL Script ，再拿 SQL Script 手動更新到 DB 之中呢?</p><h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><p>這時可以參考 <a href="https://learn.microsoft.com/zh-tw/ef/core/managing-schemas/migrations/applying?tabs=vs">EF Applying Migrations</a>，<br>在 Visual Studio 透過 <code>Script-Migration</code> 來產生 SQL Script，<br>例如要產生最近一次的 SQL Script ，<br>在 Visual Studio 的 <strong>套件管理器主控台</strong> ，預設專案選擇 <strong>EntityFrameworkCore</strong> 那個專案，<br>輸入 <code>Script-Migration 前次Migration 這次Migration</code>，</p><img src="/2023/03/09/ef-generate-migration-scripts/01.png" class="" title="Script-Migration"><p>如果要在 .NET CLI 中執行，則開啟命令視窗，並在 <strong>EntityFrameworkCore</strong> 那個專案的目錄下，<br>執行 <code>dotnet ef migrations script</code> <strong>-o</strong> 是指定輸出的檔名，如下，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet ef migrations script 20220425092213_add_LicenseAssembly_Deletion_Columns 20230303063806_Upgraded_To_Abp_5 -o abp5.sql</span><br></pre></td></tr></table></figure><img src="/2023/03/09/ef-generate-migration-scripts/02.png" class="" title="dotnet ef"><p>這樣就可以將這些 SQL Script 手動更新到不同的 DB 之中。</p><ul><li>註: 如果在 Visual Studio 的 <strong>套件管理器主控台</strong> 執行時，出現 <strong>Build failed.</strong> ，那應該是因為整個方案無法建置成功，請將方案建置成功後，再執行命令。</li></ul><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://learn.microsoft.com/zh-tw/ef/core/managing-schemas/migrations/applying?tabs=vs">EF Applying Migrations</a><br><a href="https://www.koskila.net/how-to-resolve-persistent-build-started-build-failed-when-trying-to-run-entity-framework-core-commands/">How to resolve persistent “Build started… Build failed.” when trying to run Entity Framework Core commands?</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;在 Visual Studio 透過 &lt;code&gt;Add-Migration&lt;/code&gt; 後，&lt;br&gt;可以透過 &lt;code&gt;Update-</summary>
      
    
    
    
    
    <category term="SQL" scheme="https://rainmakerho.github.io/tags/SQL/"/>
    
    <category term="EF Core" scheme="https://rainmakerho.github.io/tags/EF-Core/"/>
    
  </entry>
  
  <entry>
    <title>ABP 系統建立的 DataSeedContributor 會跑 2 次 SeedAsync，導致發生 DB duplicate key 的錯誤?</title>
    <link href="https://rainmakerho.github.io/2023/03/08/abp-dataseedcontributor-duplicate/"/>
    <id>https://rainmakerho.github.io/2023/03/08/abp-dataseedcontributor-duplicate/</id>
    <published>2023-03-08T06:24:09.000Z</published>
    <updated>2023-03-09T06:18:46.776Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>將 ABP v4.x 版本的方案升級到 ABP v5.x 後，<br>再執行 DbMigrator 專案後，居然發生 <strong>EntityFrameworkCore.DbUpdateException</strong> 的錯誤 (Cannot insert duplicate key row)</p><blockquote><p>SqlException: Cannot insert duplicate key row in object ‘dbo.AbpPermissionGrants’ with unique index ‘IX_AbpPermissionGrants_TenantId_Name_ProviderName_ProviderKey’. The duplicate key value is (51d8723e-1858-cf8a-1a64-3a09b866138a, AbpIdentity.Roles.Update, R, admin).<br>The statement has been terminated.</p></blockquote><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>因為 ABP v5.x 的 Migration 中，會針對 <strong>AbpPermissionGrants</strong> 這個資料表，<br>以 <code>&quot;TenantId&quot;, &quot;Name&quot;, &quot;ProviderName&quot;, &quot;ProviderKey&quot;</code> 這 4 個欄位建立 唯一值索引。<br>查詢更新前資料庫的 <strong>AbpPermissionGrants</strong> 資料，很多資料都是有重覆，</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> TenantId, ProviderKey, Name, <span class="built_in">Count</span>(<span class="operator">*</span>) <span class="keyword">from</span> [dbo].[AbpPermissionGrants]</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> TenantId, ProviderKey, Name, ProviderName</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="operator">&gt;</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><p>所以當升級後，自然就炸了。<br>回來頭來查看一下 DbMigrator 做那些事來追看看。<br>在 <code>DbMigratorHostedService.cs</code> 中的 <code>StartAsync</code> 就是呼叫這個系統 <code>DbMigrationService</code> 的 <code>MigrateAsync</code> Method。<br>而在 <code>MigrateAsync</code> Method 裡會進行 <code>MigrateDatabaseSchema</code>(資料庫升級) 及 <code>SeedDataAsync</code>(資料升級)，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">async</span> Task <span class="title">MigrateDatabaseSchemaAsync</span>(<span class="params">Tenant tenant = <span class="literal">null</span></span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> migrator <span class="keyword">in</span> _dbSchemaMigrators)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">await</span> migrator.MigrateAsync();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">async</span> Task <span class="title">SeedDataAsync</span>(<span class="params">Tenant tenant = <span class="literal">null</span></span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">await</span> _dataSeeder.SeedAsync(<span class="keyword">new</span> DataSeedContext(tenant?.Id)</span><br><span class="line">.WithProperty(IdentityDataSeedContributor.AdminEmailPropertyName, _configuration[<span class="string">&quot;SeedData:AdminEmail&quot;</span>])</span><br><span class="line">.WithProperty(IdentityDataSeedContributor.AdminPasswordPropertyName, <span class="built_in">string</span>.Empty)</span><br><span class="line">);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 Debug 的過程中，發現專案中有 5 個 DataSeedContributor，但只有 2 個自已寫的 DataSeedContributor 會執行 2 次。<br>查看一下 <code>Volo.Abp.Data</code> 中 <code>DataSeeder</code> 的 <code>SeedAsync</code> Method，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">DataSeeder</span> : <span class="title">IDataSeeder</span>, <span class="title">ITransientDependency</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">protected</span> IServiceScopeFactory ServiceScopeFactory &#123; <span class="keyword">get</span>; &#125;</span><br><span class="line">    <span class="keyword">protected</span> AbpDataSeedOptions Options &#123; <span class="keyword">get</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DataSeeder</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">        IOptions&lt;AbpDataSeedOptions&gt; options,</span></span></span><br><span class="line"><span class="params"><span class="function">        IServiceScopeFactory serviceScopeFactory</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        ServiceScopeFactory = serviceScopeFactory;</span><br><span class="line">        Options = options.Value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">UnitOfWork</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">async</span> Task <span class="title">SeedAsync</span>(<span class="params">DataSeedContext context</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">using</span> (<span class="keyword">var</span> scope = ServiceScopeFactory.CreateScope())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="keyword">var</span> contributorType <span class="keyword">in</span> Options.Contributors)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">var</span> contributor = (IDataSeedContributor)scope</span><br><span class="line">                    .ServiceProvider</span><br><span class="line">                    .GetRequiredService(contributorType);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">await</span> contributor.SeedAsync(context);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看起來是呼叫 <code>AbpDataSeedOptions.Contributors</code> 中 <code>Contributor</code> 的 <code>SeedAsync</code> Method。<br>於是在這個系統 <code>DbMigrationService</code> 類別中 注入 <code>IOptions&lt;AbpDataSeedOptions&gt; options</code> ，<br>然後查看 <code>AbpDataSeedOptions.Contributors</code> 裡面有那些 <code>Contributor</code>，<br>結果發現，有 2 個 <strong>Name</strong> 重覆的 <strong>Contributor</strong>，<br>而這 2 個重覆的 <strong>Contributor</strong> ，正是被重覆執行的 <strong>Contributor</strong>，如下，</p><img src="/2023/03/08/abp-dataseedcontributor-duplicate/01.png" class="" title="AbpDataSeedOptions.Contributors"><p>被重覆 Run 到的 <strong>Contributor</strong> ，分別是 <code>IdentityDataSeedContributor</code> 及 <code>PermissionDataSeedContributor</code>，<br>而它們都分別繼承自 Volo.Abp 對應的 <code>IdentityDataSeedContributor</code> 及 <code>PermissionDataSeedContributor</code>，<br>而透過 <code>ServiceProvider.GetRequiredService</code> 給 <code>Volo.Abp.Identity.IdentityDataSeedContributor</code> 取回來的服務則是我們系統的 <code>LicenseManagement.Identity.IdentityDataSeedContributor</code>，<br>而當 <code>ServiceProvider.GetRequiredService</code> 給 <code>LicenseManagement.Identity.IdentityDataSeedContributor</code> 取回來的服務也是我們系統的 <code>LicenseManagement.Identity.IdentityDataSeedContributor</code>，</p><img src="/2023/03/08/abp-dataseedcontributor-duplicate/02.png" class="" title="ServiceProvider.GetRequiredService"><p>所以這 2 個繼承自 Volo.Abp 的 <code>IdentityDataSeedContributor</code> 及 <code>PermissionDataSeedContributor</code>，<br>就執行了 2 次 <strong>SeedAsync</strong> Method。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">Dependency(ReplaceServices = true)</span>]</span><br><span class="line">[<span class="meta">ExposeServices(typeof(Volo.Abp.PermissionManagement.PermissionDataSeedContributor), typeof(PermissionDataSeedContributor))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PermissionDataSeedContributor</span> : <span class="title">Volo.Abp.PermissionManagement.PermissionDataSeedContributor</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">// Codes ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[<span class="meta">Dependency(ReplaceServices = true)</span>]</span><br><span class="line">[<span class="meta">ExposeServices(typeof(IIdentityDataSeeder), typeof(IdentityDataSeeder), typeof(IdentityUserDataSeeder))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">IdentityUserDataSeeder</span> : <span class="title">IdentityDataSeeder</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//Codes...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>知道發生的原因，因為 AbpDataSeedOptions.Contributors 多了重覆的項目，<br>最快的方式就是將重覆的 DataSeedContributor 從 AbpDataSeedOptions.Contributors 中將它們移除，<br>在這個系統 <code>DbMigrationService</code> 類別 <code>MigrateAsync</code> Method 中，<br>在一開始就將重覆中的 Volo DataSeedContributor 移除，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">LicenseManagementDbMigrationService</span> : <span class="title">ITransientDependency</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span> ILogger&lt;LicenseManagementDbMigrationService&gt; Logger &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> IDataSeeder _dataSeeder;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> IEnumerable&lt;ILicenseManagementDbSchemaMigrator&gt; _dbSchemaMigrators;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> ITenantRepository _tenantRepository;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> ICurrentTenant _currentTenant;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> IConfiguration _configuration;</span><br><span class="line"><span class="keyword">protected</span> AbpDataSeedOptions Options &#123; <span class="keyword">get</span>; &#125;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> IServiceScopeFactory _serviceScopeFactory;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">LicenseManagementDbMigrationService</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">IOptions&lt;AbpDataSeedOptions&gt; options,</span></span></span><br><span class="line"><span class="params"><span class="function">IDataSeeder dataSeeder,</span></span></span><br><span class="line"><span class="params"><span class="function">IEnumerable&lt;ILicenseManagementDbSchemaMigrator&gt; dbSchemaMigrators,</span></span></span><br><span class="line"><span class="params"><span class="function">ITenantRepository tenantRepository,</span></span></span><br><span class="line"><span class="params"><span class="function">ICurrentTenant currentTenant,</span></span></span><br><span class="line"><span class="params"><span class="function">IConfiguration configuration</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">_dataSeeder = dataSeeder;</span><br><span class="line">_dbSchemaMigrators = dbSchemaMigrators;</span><br><span class="line">_tenantRepository = tenantRepository;</span><br><span class="line">_currentTenant = currentTenant;</span><br><span class="line">_configuration = configuration;</span><br><span class="line">Options = options.Value;</span><br><span class="line">Logger = NullLogger&lt;LicenseManagementDbMigrationService&gt;.Instance;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">MigrateAsync</span>()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//找到有重覆的 Contributors</span></span><br><span class="line"><span class="keyword">var</span> duplicateContributors = Options.Contributors</span><br><span class="line">.GroupBy(c=&gt;c.Name)</span><br><span class="line">.Where(grp =&gt; grp.Count() &gt; <span class="number">1</span>)</span><br><span class="line">.Select(grp =&gt; grp.Key);</span><br><span class="line"><span class="comment">//重覆中為 Volo 的 Contributors</span></span><br><span class="line"><span class="keyword">var</span> voloDuplicateContributors = Options.Contributors</span><br><span class="line">.Where(c =&gt; duplicateContributors.Contains(c.Name) &amp;&amp; c.FullName.StartsWith(<span class="string">&quot;Volo.&quot;</span>))</span><br><span class="line">.Select(c =&gt; c).ToList();</span><br><span class="line"><span class="comment">//將 重覆中為 Volo 的 Contributors 從 Options.Contributors 中移除</span></span><br><span class="line">Options.Contributors.RemoveAll(voloDuplicateContributors);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//開始系統的 Migration &amp; DataSeed ...</span></span><br><span class="line"><span class="keyword">var</span> initialMigrationAdded = AddInitialMigrationIfNotExist();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (initialMigrationAdded)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Logger.LogInformation(<span class="string">&quot;Started database migrations...&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">await</span> MigrateDatabaseSchemaAsync();</span><br><span class="line"><span class="keyword">await</span> SeedDataAsync();</span><br><span class="line">    <span class="comment">// Other Codes ...</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Other Codes ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再執行 DbMigrator 就不會發生重覆執行的狀況的。<br>而為什麼 AbpDataSeedOptions.Contributors 會有那些 DataSeedContributor ?<br>可以查看 <code>AbpDataModule</code> 的 <code>AutoAddDataSeedContributors</code> Method，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">AutoAddDataSeedContributors</span>(<span class="params">IServiceCollection services</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">var</span> contributors = <span class="keyword">new</span> List&lt;Type&gt;();</span><br><span class="line"></span><br><span class="line">services.OnRegistred(context =&gt;</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span>(IDataSeedContributor).IsAssignableFrom(context.ImplementationType))</span><br><span class="line">&#123;</span><br><span class="line">contributors.Add(context.ImplementationType);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">services.Configure&lt;AbpDataSeedOptions&gt;(options =&gt;</span><br><span class="line">&#123;</span><br><span class="line">options.Contributors.AddIfNotContains(contributors);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://stackoverflow.com/questions/57552207/seeding-initial-user-on-identity-module-without-double-seeding">Seeding initial user on Identity module without double-seeding</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;將 ABP v4.x 版本的方案升級到 ABP v5.x 後，&lt;br&gt;再執行 DbMigrator 專案後，居然發生 &lt;strong&gt;Ent</summary>
      
    
    
    
    
    <category term="ABP" scheme="https://rainmakerho.github.io/tags/ABP/"/>
    
    <category term="DataSeedContributor" scheme="https://rainmakerho.github.io/tags/DataSeedContributor/"/>
    
    <category term="DataSeeder" scheme="https://rainmakerho.github.io/tags/DataSeeder/"/>
    
    <category term="duplicate key" scheme="https://rainmakerho.github.io/tags/duplicate-key/"/>
    
    <category term="AbpPermissionGrants" scheme="https://rainmakerho.github.io/tags/AbpPermissionGrants/"/>
    
    <category term="IX_AbpPermissionGrants_TenantId_Name_ProviderName_ProviderKey" scheme="https://rainmakerho.github.io/tags/IX-AbpPermissionGrants-TenantId-Name-ProviderName-ProviderKey/"/>
    
    <category term="SeedAsync" scheme="https://rainmakerho.github.io/tags/SeedAsync/"/>
    
  </entry>
  
</feed>
