<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>亂馬客 - Re:從零開始的軟體開發生活</title>
  <icon>https://www.gravatar.com/avatar/cd3aed042ccd7a5a5d9956b0bc07dc81</icon>
  <subtitle>Re:從零開始的軟體開發生活</subtitle>
  <link href="https://rainmakerho.github.io/atom.xml" rel="self"/>
  
  <link href="https://rainmakerho.github.io/"/>
  <updated>2023-03-09T01:29:49.028Z</updated>
  <id>https://rainmakerho.github.io/</id>
  
  <author>
    <name>亂馬客</name>
    <email>rainmaker_ho@gss.com.tw</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ABP 自建的 DataSeeder 會跑 2 次，導致發生 DB duplicate key 的錯誤?</title>
    <link href="https://rainmakerho.github.io/2023/03/08/abp-dataseedcontributor-duplicate/"/>
    <id>https://rainmakerho.github.io/2023/03/08/abp-dataseedcontributor-duplicate/</id>
    <published>2023-03-08T06:24:09.000Z</published>
    <updated>2023-03-09T01:29:49.028Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>將 ABP v4.x 版本的方案升級到 ABP v5.x 後，<br>再執行 DbMigrator 專案後，居然發生 <strong>EntityFrameworkCore.DbUpdateException</strong> 的錯誤 (Cannot insert duplicate key row)</p><blockquote><p>SqlException: Cannot insert duplicate key row in object ‘dbo.AbpPermissionGrants’ with unique index ‘IX_AbpPermissionGrants_TenantId_Name_ProviderName_ProviderKey’. The duplicate key value is (51d8723e-1858-cf8a-1a64-3a09b866138a, AbpIdentity.Roles.Update, R, admin).<br>The statement has been terminated.</p></blockquote><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>因為 ABP v5.x 的 Migration 中，會針對 <strong>AbpPermissionGrants</strong> 這個資料表，<br>以 <code>&quot;TenantId&quot;, &quot;Name&quot;, &quot;ProviderName&quot;, &quot;ProviderKey&quot;</code> 這 4 個欄位建立 唯一值索引。<br>查詢更新前資料庫的 <strong>AbpPermissionGrants</strong> 資料，很多資料都是有重覆，</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> TenantId, ProviderKey, Name, <span class="built_in">Count</span>(<span class="operator">*</span>) <span class="keyword">from</span> [dbo].[AbpPermissionGrants]</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> TenantId, ProviderKey, Name, ProviderName</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="operator">&gt;</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><p>所以當升級後，自然就炸了。<br>回來頭來查看一下 DbMigrator 做那些事來追看看。<br>在 <code>DbMigratorHostedService.cs</code> 中的 <code>StartAsync</code> 就是呼叫這個系統 <code>DbMigrationService</code> 的 <code>MigrateAsync</code> Method。<br>而在 <code>MigrateAsync</code> Method 裡會進行 <code>MigrateDatabaseSchema</code>(資料庫升級) 及 <code>SeedDataAsync</code>(資料升級)，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">async</span> Task <span class="title">MigrateDatabaseSchemaAsync</span>(<span class="params">Tenant tenant = <span class="literal">null</span></span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> migrator <span class="keyword">in</span> _dbSchemaMigrators)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">await</span> migrator.MigrateAsync();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">async</span> Task <span class="title">SeedDataAsync</span>(<span class="params">Tenant tenant = <span class="literal">null</span></span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">await</span> _dataSeeder.SeedAsync(<span class="keyword">new</span> DataSeedContext(tenant?.Id)</span><br><span class="line">.WithProperty(IdentityDataSeedContributor.AdminEmailPropertyName, _configuration[<span class="string">&quot;SeedData:AdminEmail&quot;</span>])</span><br><span class="line">.WithProperty(IdentityDataSeedContributor.AdminPasswordPropertyName, <span class="built_in">string</span>.Empty)</span><br><span class="line">);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 Debug 的過程中，發現專案中有 5 個 DataSeedContributor，但只有 2 個自已寫的 DataSeedContributor 會執行 2 次。<br>查看一下 <code>Volo.Abp.Data</code> 中 <code>DataSeeder</code> 的 <code>SeedAsync</code> Method，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">DataSeeder</span> : <span class="title">IDataSeeder</span>, <span class="title">ITransientDependency</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">protected</span> IServiceScopeFactory ServiceScopeFactory &#123; <span class="keyword">get</span>; &#125;</span><br><span class="line">    <span class="keyword">protected</span> AbpDataSeedOptions Options &#123; <span class="keyword">get</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DataSeeder</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">        IOptions&lt;AbpDataSeedOptions&gt; options,</span></span></span><br><span class="line"><span class="params"><span class="function">        IServiceScopeFactory serviceScopeFactory</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        ServiceScopeFactory = serviceScopeFactory;</span><br><span class="line">        Options = options.Value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">UnitOfWork</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">async</span> Task <span class="title">SeedAsync</span>(<span class="params">DataSeedContext context</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">using</span> (<span class="keyword">var</span> scope = ServiceScopeFactory.CreateScope())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="keyword">var</span> contributorType <span class="keyword">in</span> Options.Contributors)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">var</span> contributor = (IDataSeedContributor)scope</span><br><span class="line">                    .ServiceProvider</span><br><span class="line">                    .GetRequiredService(contributorType);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">await</span> contributor.SeedAsync(context);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看起來是呼叫 <code>AbpDataSeedOptions.Contributors</code> 中 <code>Contributor</code> 的 <code>SeedAsync</code> Method。<br>於是在這個系統 <code>DbMigrationService</code> 類別中 注入 <code>IOptions&lt;AbpDataSeedOptions&gt; options</code> ，<br>然後查看 <code>AbpDataSeedOptions.Contributors</code> 裡面有那些 <code>Contributor</code>，<br>結果發現，有 2 個 <strong>Name</strong> 重覆的 <strong>Contributor</strong>，<br>而這 2 個重覆的 <strong>Contributor</strong> ，正是被重覆執行的 <strong>Contributor</strong>，如下，</p><img src="/2023/03/08/abp-dataseedcontributor-duplicate/01.png" class="" title="AbpDataSeedOptions.Contributors"><p>被重覆 Run 到的 <strong>Contributor</strong> ，分別是 <code>IdentityDataSeedContributor</code> 及 <code>PermissionDataSeedContributor</code>，<br>而它們都分別繼承自 Volo.Abp 對應的 <code>IdentityDataSeedContributor</code> 及 <code>PermissionDataSeedContributor</code>，<br>而透過 <code>ServiceProvider.GetRequiredService</code> 給 <code>Volo.Abp.Identity.IdentityDataSeedContributor</code> 取回來的服務則是我們系統的 <code>LicenseManagement.Identity.IdentityDataSeedContributor</code>，<br>而當 <code>ServiceProvider.GetRequiredService</code> 給 <code>LicenseManagement.Identity.IdentityDataSeedContributor</code> 取回來的服務也是我們系統的 <code>LicenseManagement.Identity.IdentityDataSeedContributor</code>，</p><img src="/2023/03/08/abp-dataseedcontributor-duplicate/02.png" class="" title="ServiceProvider.GetRequiredService"><p>所以這 2 個繼承自 Volo.Abp 的 <code>IdentityDataSeedContributor</code> 及 <code>PermissionDataSeedContributor</code>，<br>就執行了 2 次 <strong>SeedAsync</strong> Method。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">Dependency(ReplaceServices = true)</span>]</span><br><span class="line">[<span class="meta">ExposeServices(typeof(Volo.Abp.PermissionManagement.PermissionDataSeedContributor), typeof(PermissionDataSeedContributor))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PermissionDataSeedContributor</span> : <span class="title">Volo.Abp.PermissionManagement.PermissionDataSeedContributor</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">// Codes ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[<span class="meta">Dependency(ReplaceServices = true)</span>]</span><br><span class="line">[<span class="meta">ExposeServices(typeof(IIdentityDataSeeder), typeof(IdentityDataSeeder), typeof(IdentityUserDataSeeder))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">IdentityUserDataSeeder</span> : <span class="title">IdentityDataSeeder</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//Codes...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>知道發生的原因，因為 AbpDataSeedOptions.Contributors 多了重覆的項目，<br>最快的方式就是將重覆的 DataSeedContributor 從 AbpDataSeedOptions.Contributors 中將它們移除，<br>在這個系統 <code>DbMigrationService</code> 類別 <code>MigrateAsync</code> Method 中，<br>在一開始就將重覆中的 Volo DataSeedContributor 移除，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">LicenseManagementDbMigrationService</span> : <span class="title">ITransientDependency</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span> ILogger&lt;LicenseManagementDbMigrationService&gt; Logger &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> IDataSeeder _dataSeeder;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> IEnumerable&lt;ILicenseManagementDbSchemaMigrator&gt; _dbSchemaMigrators;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> ITenantRepository _tenantRepository;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> ICurrentTenant _currentTenant;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> IConfiguration _configuration;</span><br><span class="line"><span class="keyword">protected</span> AbpDataSeedOptions Options &#123; <span class="keyword">get</span>; &#125;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> IServiceScopeFactory _serviceScopeFactory;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">LicenseManagementDbMigrationService</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">IOptions&lt;AbpDataSeedOptions&gt; options,</span></span></span><br><span class="line"><span class="params"><span class="function">IDataSeeder dataSeeder,</span></span></span><br><span class="line"><span class="params"><span class="function">IEnumerable&lt;ILicenseManagementDbSchemaMigrator&gt; dbSchemaMigrators,</span></span></span><br><span class="line"><span class="params"><span class="function">ITenantRepository tenantRepository,</span></span></span><br><span class="line"><span class="params"><span class="function">ICurrentTenant currentTenant,</span></span></span><br><span class="line"><span class="params"><span class="function">IConfiguration configuration</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">_dataSeeder = dataSeeder;</span><br><span class="line">_dbSchemaMigrators = dbSchemaMigrators;</span><br><span class="line">_tenantRepository = tenantRepository;</span><br><span class="line">_currentTenant = currentTenant;</span><br><span class="line">_configuration = configuration;</span><br><span class="line">Options = options.Value;</span><br><span class="line">Logger = NullLogger&lt;LicenseManagementDbMigrationService&gt;.Instance;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">MigrateAsync</span>()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//找到有重覆的 Contributors</span></span><br><span class="line"><span class="keyword">var</span> duplicateContributors = Options.Contributors</span><br><span class="line">.GroupBy(c=&gt;c.Name)</span><br><span class="line">.Where(grp =&gt; grp.Count() &gt; <span class="number">1</span>)</span><br><span class="line">.Select(grp =&gt; grp.Key);</span><br><span class="line"><span class="comment">//重覆中為 Volo 的 Contributors</span></span><br><span class="line"><span class="keyword">var</span> voloDuplicateContributors = Options.Contributors</span><br><span class="line">.Where(c =&gt; duplicateContributors.Contains(c.Name) &amp;&amp; c.FullName.StartsWith(<span class="string">&quot;Volo.&quot;</span>))</span><br><span class="line">.Select(c =&gt; c).ToList();</span><br><span class="line"><span class="comment">//將 重覆中為 Volo 的 Contributors 從 Options.Contributors 中移除</span></span><br><span class="line">Options.Contributors.RemoveAll(voloDuplicateContributors);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//開始系統的 Migration &amp; DataSeed ...</span></span><br><span class="line"><span class="keyword">var</span> initialMigrationAdded = AddInitialMigrationIfNotExist();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (initialMigrationAdded)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Logger.LogInformation(<span class="string">&quot;Started database migrations...&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">await</span> MigrateDatabaseSchemaAsync();</span><br><span class="line"><span class="keyword">await</span> SeedDataAsync();</span><br><span class="line">    <span class="comment">// Other Codes ...</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Other Codes ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再執行 DbMigrator 就不會發生重覆執行的狀況的。</p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://stackoverflow.com/questions/57552207/seeding-initial-user-on-identity-module-without-double-seeding">Seeding initial user on Identity module without double-seeding</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;將 ABP v4.x 版本的方案升級到 ABP v5.x 後，&lt;br&gt;再執行 DbMigrator 專案後，居然發生 &lt;strong&gt;Ent</summary>
      
    
    
    
    
    <category term="ABP" scheme="https://rainmakerho.github.io/tags/ABP/"/>
    
    <category term="DataSeedContributor" scheme="https://rainmakerho.github.io/tags/DataSeedContributor/"/>
    
    <category term="DataSeeder" scheme="https://rainmakerho.github.io/tags/DataSeeder/"/>
    
    <category term="duplicate key" scheme="https://rainmakerho.github.io/tags/duplicate-key/"/>
    
    <category term="AbpPermissionGrants" scheme="https://rainmakerho.github.io/tags/AbpPermissionGrants/"/>
    
    <category term="IX_AbpPermissionGrants_TenantId_Name_ProviderName_ProviderKey" scheme="https://rainmakerho.github.io/tags/IX-AbpPermissionGrants-TenantId-Name-ProviderName-ProviderKey/"/>
    
  </entry>
  
  <entry>
    <title>Sys.Application.notifyScriptLoaded Cannot read properties of null (reading &#39;_notified&#39;) Error in Chrome</title>
    <link href="https://rainmakerho.github.io/2023/03/07/cannot-read-property-notified-of-null/"/>
    <id>https://rainmakerho.github.io/2023/03/07/cannot-read-property-notified-of-null/</id>
    <published>2023-03-07T01:09:53.000Z</published>
    <updated>2023-03-08T02:31:24.858Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近遇到 ASP.NET Ajax 的 web Form 系統使用 Chrome 時會出現以下的錯誤訊息，<br><code>遺漏對 Sys.Application.notifyScriptLoaded() 的呼叫</code><br><code>Cannot read property &#39;_notified&#39; of null</code></p><img src="/2023/03/07/cannot-read-property-notified-of-null/01.png" class="" title="error"><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>一開始看到 <strong>無法存取的路徑。</strong></p><blockquote><p>ScriptResource.axd… Uncaught Sys.ScriptLoadFailedException: Sys.ScriptLoadFailedException: 無法載入指令碼 ‘http:&#x2F;&#x2F;…&#x2F;ScriptResource.axd?’。請檢查:<br>無法存取的路徑。<br>指令碼錯誤。(IE) 在進階設定下啟用 [每次出現 script 錯誤時皆顯示通知]。<br>遺漏對 Sys.Application.notifyScriptLoaded() 的呼叫。<br>at Function.Error$create [as create]<br>  at Function.Sys$_ScriptLoader$_errorScriptLoadFailed<br>  at Sys$WebForms$PageRequestManager.Sys$WebForms$PageRequestManager$_scriptIncludesLoadComplete<br>at Sys$WebForms$PageRequestManager.Sys$WebForms$PageRequestManager$_scriptIncludesLoadFailed</p></blockquote><p>以為是 js 檔案最後沒有加入 <code>if(typeof(Sys)!==&#39;undefined&#39;)Sys.Application.notifyScriptLoaded();</code></p><p>但查看了一下程式，最後面是有加入 <code>if(typeof(Sys)!==&#39;undefined&#39;)Sys.Application.notifyScriptLoaded();</code> 這段程式碼。</p><p>而最下面還有段錯誤是 <code>Uncaught TypeError: Cannot read property of null (reading &#39;_notified&#39;)</code> ，<br>查看 <a href="https://www.blakepell.com/blog/2012-10-22-cannot-read-property-notified-of-null-with-asp-net-ajax-with-webkit-based-browsers">Cannot read property ‘_notified’ of null with ASP.NET Ajax with WebKit based browsers</a> ，<br>是因為 <strong>Sys.Browser.name</strong> 的值設定不對，所導致的錯誤。</p><p>在 Chrome 上測試 <strong>navigator.userAgent</strong> 的值為 <code>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36</code>，<strong>Sys.Browser.name</strong> 的值為 <code>Safari</code>，<br><strong>Sys.Browser.name</strong> 的值應該要為 <code>WebKit</code> Ajax 運作才會正常。<br>所以加入以下的 JS 來判斷 <strong>navigator.userAgent</strong> ，將 <strong>Sys.Browser.name</strong> 改成正確的 <strong>WebKit</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Sys</span>.<span class="property">Browser</span>.<span class="property">WebKit</span> = &#123;&#125;;</span><br><span class="line"><span class="keyword">if</span> (navigator.<span class="property">userAgent</span>.<span class="title function_">indexOf</span>(<span class="string">&quot;WebKit/&quot;</span>) &gt; -<span class="number">1</span>) &#123;</span><br><span class="line">  <span class="title class_">Sys</span>.<span class="property">Browser</span>.<span class="property">agent</span> = <span class="title class_">Sys</span>.<span class="property">Browser</span>.<span class="property">WebKit</span>;</span><br><span class="line">  <span class="title class_">Sys</span>.<span class="property">Browser</span>.<span class="property">version</span> = <span class="built_in">parseFloat</span>(</span><br><span class="line">    navigator.<span class="property">userAgent</span>.<span class="title function_">match</span>(<span class="regexp">/WebKit\/(\d+(\.\d+)?)/</span>)[<span class="number">1</span>]</span><br><span class="line">  );</span><br><span class="line">  <span class="title class_">Sys</span>.<span class="property">Browser</span>.<span class="property">name</span> = <span class="string">&quot;WebKit&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://www.blakepell.com/blog/2012-10-22-cannot-read-property-notified-of-null-with-asp-net-ajax-with-webkit-based-browsers">Cannot read property ‘_notified’ of null with ASP.NET Ajax with WebKit based browsers</a><br><a href="https://social.msdn.microsoft.com/Forums/en-US/a0594a1b-464a-4837-a08d-ccc403e76306/error-in-microsoftajaxjs-cannot-read-property-notified-of-null?forum=aspdotnetajax">error in MicrosoftAjax.js: Cannot read property ‘_notified’ of null</a><br><a href="https://www.c-sharpcorner.com/blogs/resolve-error-cannot-read-property-notified-of-null1">Resolve Error - cannot Read Property ‘_notified’ of Null</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;最近遇到 ASP.NET Ajax 的 web Form 系統使用 Chrome 時會出現以下的錯誤訊息，&lt;br&gt;&lt;code&gt;遺漏對 Sys</summary>
      
    
    
    
    
    <category term="Chrome" scheme="https://rainmakerho.github.io/tags/Chrome/"/>
    
    <category term="ASP.NET" scheme="https://rainmakerho.github.io/tags/ASP-NET/"/>
    
    <category term="Ajax" scheme="https://rainmakerho.github.io/tags/Ajax/"/>
    
    <category term="遺漏對 Sys.Application.notifyScriptLoaded() 的呼叫" scheme="https://rainmakerho.github.io/tags/%E9%81%BA%E6%BC%8F%E5%B0%8D-Sys-Application-notifyScriptLoaded-%E7%9A%84%E5%91%BC%E5%8F%AB/"/>
    
    <category term="Sys.Browser.name" scheme="https://rainmakerho.github.io/tags/Sys-Browser-name/"/>
    
    <category term="Cannot read properties of null (reading &#39;_notified&#39;)" scheme="https://rainmakerho.github.io/tags/Cannot-read-properties-of-null-reading-notified/"/>
    
  </entry>
  
  <entry>
    <title>ABP Domain Services, Repositories</title>
    <link href="https://rainmakerho.github.io/2023/03/06/abp-domain-service-repository/"/>
    <id>https://rainmakerho.github.io/2023/03/06/abp-domain-service-repository/</id>
    <published>2023-03-06T01:04:15.000Z</published>
    <updated>2023-03-06T01:45:24.239Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>以下記錄 ABP 在 Domain Servcice 及 Repository 方面的設計，<br>為何需要 Domain Service?<br>設計 Repository 有什麼要注意的地方?</p><h3 id="Implementing-domain-services"><a href="#Implementing-domain-services" class="headerlink" title="Implementing domain services"></a>Implementing domain services</h3><p>有時為了維持 Domain 物件的正確性，需要針對 Property 值做驗證，<br>但如果需要外部服務(例如 DB Repository …)來驗證，<br>那就需要將 外部服務 當作參數傳進來使用。<br>但這樣就會讓 Domain 物件相依外部服務，<br>也會變的複雜及難以測試。<br>而且也違反單一責任原則(single responsibility principle)。</p><p>所以比較好的方式是將那些需要外部服務的商業邏輯驗證程式放到 Domain Services 之中。<br>而原本的 Domain private 屬性驗證函式就改成 internal<br>，讓同一專案的 Domain Service 可以呼叫，但別專案一樣不能呼叫。<br>例如原本在 Event 物件中檢查 Capacity 的值是否合理的 <a href="https://github.com/abpframework/eventhub/blob/main/src/EventHub.Domain/Events/EventManager.cs#L67">SetCapacityAsync Method</a> 就會移到 <a href="https://github.com/abpframework/eventhub/blob/main/src/EventHub.Domain/Events/EventManager.cs">EventManager Class</a> 之中。</p><p>如果 Domain 的屬性不需要商業邏輯的檢查則不需要特別建立一個 Method 來接受參數並進行驗證。<br>如果在進行 商業邏輯規則驗證 需要外部服務，才需要建立 Domain Service 來進行接受外部服務。</p><h3 id="Implementing-repositories"><a href="#Implementing-repositories" class="headerlink" title="Implementing repositories"></a>Implementing repositories</h3><p>1.在 Domain Layer</p><p>2.只為 Aggreat Root Entity 建立，不為 sub-collection entities 建立，因為 sub-collection entities 的存取要透過 aggreat root entity</p><p>3.使用 domain object ，不是 DTOs</p><p>4.Repository interface 要獨上於 database provider，這樣才可以抽換不同的 provider 5.不要將<strong>商業邏輯</strong>實作在 Repository</p><p>在 Repository Method 實作中，會先取得 IQueryable 再透過它去 Filter，例如，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;List&lt;Event&gt;&gt; GetSpokenEventsAsync(Guid userId)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">var</span> queryable = <span class="keyword">await</span> _eventRepository.GetQueryableAsync();</span><br><span class="line"><span class="keyword">var</span> query = queryable.Where(x=&gt;x.Tracks.</span><br><span class="line">.Any(track=&gt;track.Sessions</span><br><span class="line">.Any(session=&gt;session.Speakers</span><br><span class="line">.Any(speaker =&gt; speaker.UserId == userId))));</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">await</span> AsyncExecuter.ToListAsync(query);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>這樣子的好處是這段程式碼可以被共用 …</p><p>但如果又有別的需求，那就要建立一堆這種 GetList 的 Method !!!</p><p>ABP 的 Respository 提供 GetListAsync ，輸入 predicate 參數(<code>Func&lt;Entity, bool&gt;</code>)即可。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;List&lt;Event&gt;&gt; GetSpokenEventsAsync(Guid userId)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">var</span> startTime = Clock.Now;</span><br><span class="line"><span class="keyword">var</span> endTime = Clock.Now.AddDays(<span class="number">30</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">await</span> _eventRepository.GetListAsync(x =&gt;</span><br><span class="line">x.Tracks</span><br><span class="line">.Any(track =&gt; track.Sessions</span><br><span class="line">.Any(session =&gt; session.Speakers</span><br><span class="line">.Any(speaker =&gt; speaker.UserId == userId)))</span><br><span class="line">&amp;&amp; x.StartTime &gt; startTime &amp;&amp; x.StartTime &lt;=</span><br><span class="line">endTime</span><br><span class="line">);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>這樣這段程式碼就會回到 Application Layer 造成複雜的程式碼，<br>那怎麼辦??<br>可以將 predicate 建立成 ABP Specification 物件</p><h3 id="Building-specifications"><a href="#Building-specifications" class="headerlink" title="Building specifications"></a>Building specifications</h3><p>ABP Specification 物件可以讓我們重用、結合並且可測試的，<br>例如以下建立一個 篩選出 Online Event 的 Specification 物件</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">OnlineEventSpecification</span>:</span><br><span class="line"><span class="title">Specification</span>&lt;<span class="title">Event</span>&gt;</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">override</span> Expression&lt;Func&lt;Event, <span class="built_in">bool</span>&gt;&gt;</span><br><span class="line">ToExpression()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> x=&gt;x.IsOnline == <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以要取得線上的 Event 就可以使用以下方式，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> events = _eventRepository</span><br><span class="line">                .GetListAsync(<span class="keyword">new</span> OnlineEventSpecification());</span><br></pre></td></tr></table></figure><p>測試則可以使用 specification 的 IsSatisfiedBy</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Event evnt = GetEvent();</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">new</span> OnlineEventSpecification().IsSafisfiedBy(<span class="keyword">event</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//..</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>前面取得 Speaker 可以將 Filter 抽到 Specification</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SpeakerSpecification</span>: <span class="title">Specification</span>&lt;<span class="title">Event</span>&gt;</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span> Guid UserId &#123;<span class="keyword">get</span>;&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">SpecakerSpecification</span>(<span class="params">Guid userId</span>)</span>&#123;</span><br><span class="line">UserId = userId;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">override</span> Expression&lt;Func&lt;Event, <span class="built_in">bool</span>&gt;&gt;</span><br><span class="line">ToExpression()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> x=&gt;x.Trackers</span><br><span class="line">.Any(t=&gt;t.Sessions</span><br><span class="line">.Any(s=&gt;s.Speakers</span><br><span class="line">.Any(sp=&gt;sp.UserId == UserId)));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以 Applicatoin Code 就會變得簡潔，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;List&lt;Event&gt;&gt; GetSpokenEventsAsync(Guid userId)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">await</span> _eventRepository.GetListAsync(</span><br><span class="line"><span class="keyword">new</span> SpeakerSpecification(userId));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以透過 使用 And, Or, AndNot 將 Specification 一起使用</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> events = _eventRepository.GetListAsync(</span><br><span class="line"><span class="keyword">new</span> SpeakerSpecification(userId)</span><br><span class="line">.And(<span class="keyword">new</span> DateRangeSpecification(Clock.Now,</span><br><span class="line">Colock.Now.AddDays(<span class="number">30</span>)))</span><br><span class="line">.AndNot(<span class="keyword">new</span> OnlineEventSpecification())</span><br><span class="line">.ToExpression()</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://docs.abp.io/en/abp/latest/Domain-Services">Domain Services</a><br><a href="https://docs.abp.io/en/abp/latest/Repositories">Repositories</a><br><a href="https://docs.abp.io/en/abp/latest/Specifications">Specifications</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;以下記錄 ABP 在 Domain Servcice 及 Repository 方面的設計，&lt;br&gt;為何需要 Domain Service?</summary>
      
    
    
    
    
    <category term="ABP" scheme="https://rainmakerho.github.io/tags/ABP/"/>
    
    <category term="Domain service" scheme="https://rainmakerho.github.io/tags/Domain-service/"/>
    
    <category term="Repository" scheme="https://rainmakerho.github.io/tags/Repository/"/>
    
    <category term="Specification" scheme="https://rainmakerho.github.io/tags/Specification/"/>
    
  </entry>
  
  <entry>
    <title>ABP Framework 從 v4.x 升級到 v5.x</title>
    <link href="https://rainmakerho.github.io/2023/03/03/abp-update-v5/"/>
    <id>https://rainmakerho.github.io/2023/03/03/abp-update-v5/</id>
    <published>2023-03-03T12:00:19.000Z</published>
    <updated>2023-03-04T12:14:21.596Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>有個系統是使用 ABP Framework v4.4.2 (.NET 5)開發的，<br>所以要將它升級到 .NET 6 。<br>但因為 ABP v6 有一個大的調整，就是將原本使用的 IdentityServer 改用 OpenIddict 。<br>所以這次的升級，就從 v4.4.2 升級到 v5.3.5</p><h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><p>1.升級 ABP 版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">abp update --v 5.3.5</span><br></pre></td></tr></table></figure><img src="/2023/03/03/abp-update-v5/01.png" class="" title="abpUpdate"><p>2.安裝 libs<br>因為我使用的是 Razor Page ，所以參考<a href="https://docs.abp.io/en/abp/latest/Migration-Guides/Abp-5-0-MVC">ABP MVC &#x2F; Razor Pages UI v4.x to v5.0 Migration Guide</a> 安裝 libs</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">abp install-libs</span><br></pre></td></tr></table></figure><img src="/2023/03/03/abp-update-v5/02.png" class="" title="installLibs"><p>3.將專案中.NET 版本從 net5.0 改成 net6.0<br>使用 Visual Studio 開啟方案，會有一堆錯誤，<br>主要是說專案不能使用 .net5.0，如下，</p><img src="/2023/03/03/abp-update-v5/03.png" class="" title="net5 error"><p>所以需要將方案中的 <strong>.net5.0</strong> 改成 <strong>.net6.0</strong></p><img src="/2023/03/03/abp-update-v5/04.png" class="" title="search net5"><p>找到後，就將它們改成 <strong>.net6.0</strong></p><p>4.修改 IdentityServer 原本使用 <strong>GetByNameAsync</strong> 改成 <strong>FindByNameAsync</strong></p><img src="/2023/03/03/abp-update-v5/05.png" class="" title="GetByNameAsync"><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//var apiScope = await _apiScopeRepository.GetByNameAsync(name);</span></span><br><span class="line"><span class="keyword">var</span> apiScope = <span class="keyword">await</span> _apiScopeRepository.FindByNameAsync(name);</span><br></pre></td></tr></table></figure><p>5.加入未引用的 namespace<br>像 <strong>IProfileAppService</strong> 就要加入 <code>using Volo.Abp.Account;</code><br>像 cshtml 中的 <code>check-box-hidden-input-render-mode=&quot;None&quot;</code> 要加上 <code>CheckBoxHiddenInputRenderMode.</code> ，變成 <code>check-box-hidden-input-render-mode=&quot;CheckBoxHiddenInputRenderMode.None&quot;</code></p><p>6.調整專案中其他套件使用的版本<br>例如 <code>Microsoft.Extensions.FileProviders.Embedded</code> 及 <code>Microsoft.EntityFrameworkCore.Tools</code> 從 <code>5.0.*</code> 改成 <code>6.0.*</code></p><p>7.建立 DB Migration<br>在 <strong>套件管理器主控台</strong> ，預設專案選擇 <strong>EntityFrameworkCore</strong><br>輸入 <code>Add-Migration &quot;Upgraded_To_Abp_5&quot;</code> 來建立 Database Migration 內容</p><p>註: 請確定<strong>EntityFrameworkCore</strong>專案參考的 <code>Microsoft.EntityFrameworkCore.Tools</code> 版本從 從 <code>5.0.*</code> 改成 <code>6.0.*</code></p><p>8.更新資料庫<br>請先將原有的 DB 備份，再到 <strong>套件管理器主控台</strong> 執行 <code>Update-Database</code></p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://docs.abp.io/en/abp/latest/Migration-Guides/Abp-5_0">ABP Framework v4.x to v5.0 Migration Guide</a><br><a href="https://docs.abp.io/en/abp/latest/Migration-Guides/Abp-4_2#irepository-getqueryableasync">ABP version 4.2 Migration Guide</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;有個系統是使用 ABP Framework v4.4.2 (.NET 5)開發的，&lt;br&gt;所以要將它升級到 .NET 6 。&lt;br&gt;但因為 </summary>
      
    
    
    
    
    <category term="Migration" scheme="https://rainmakerho.github.io/tags/Migration/"/>
    
    <category term="ABP Framework" scheme="https://rainmakerho.github.io/tags/ABP-Framework/"/>
    
    <category term="Upgrade" scheme="https://rainmakerho.github.io/tags/Upgrade/"/>
    
    <category term="v4" scheme="https://rainmakerho.github.io/tags/v4/"/>
    
    <category term="v5" scheme="https://rainmakerho.github.io/tags/v5/"/>
    
  </entry>
  
  <entry>
    <title>「屬性」為 private set 的測試問題</title>
    <link href="https://rainmakerho.github.io/2023/03/03/private-set-in-testing/"/>
    <id>https://rainmakerho.github.io/2023/03/03/private-set-in-testing/</id>
    <published>2023-03-03T00:49:35.000Z</published>
    <updated>2023-03-04T12:31:01.412Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近同事談到因為 Domain 物件的屬性設定為 <strong>private set</strong> ，<br>所以在測試專案中的測試程式要設定該屬性值時，<br>要透過 <strong>Reflection</strong> 方式來設定值。<br>不知大家是否也有類似的問題呢?<br>private set 的屬性，private 的 method …</p><h3 id="討論"><a href="#討論" class="headerlink" title="討論"></a>討論</h3><p>屬性會設定成 <strong>private set</strong> 表示只能在 Class 中設定值，<br>會這樣設計的原因是不想給外部的 class 來直接設定它。<br>所以這樣子的屬性值，通常在 constructor 時給值，<br>或是透過其他的 Public Method 來設定它的值，<br>以保證整個 Class 的商業邏輯屬性值是合法的。<br>所以在測試程式時，通常可以透過建立物件時來設定它的值，<br>或是透過它的 Public Method 來設定。<br>參考 abp 範例中的 <a href="https://github.com/abpframework/eventhub/blob/main/src/EventHub.Domain/Events/Event.cs">Event Class</a></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Event</span> : <span class="title">FullAuditedAggregateRoot</span>&lt;<span class="title">Guid</span>&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> Guid OrganizationId &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> UrlCode &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Url &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Title &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> DateTime StartTime &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> DateTime EndTime &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Description &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">bool</span> IsOnline &#123; <span class="keyword">get</span>; <span class="keyword">internal</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> OnlineLink &#123; <span class="keyword">get</span>; <span class="keyword">internal</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Guid? CountryId &#123; <span class="keyword">get</span>; <span class="keyword">internal</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> CountryName &#123; <span class="keyword">get</span>; <span class="keyword">internal</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> City &#123; <span class="keyword">get</span>; <span class="keyword">internal</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Language &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span>? Capacity &#123; <span class="keyword">get</span>; <span class="keyword">internal</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">bool</span> IsRemindingEmailSent &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">bool</span> IsEmailSentToMembers &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> TimingChangeCount  &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">bool</span> IsTimingChangeEmailSent &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">bool</span> IsDraft &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ICollection&lt;Track&gt; Tracks &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Event</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">internal</span> <span class="title">Event</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">        Guid id,</span></span></span><br><span class="line"><span class="params"><span class="function">        Guid organizationId,</span></span></span><br><span class="line"><span class="params"><span class="function">        <span class="built_in">string</span> urlCode,</span></span></span><br><span class="line"><span class="params"><span class="function">        <span class="built_in">string</span> title,</span></span></span><br><span class="line"><span class="params"><span class="function">        DateTime startTime,</span></span></span><br><span class="line"><span class="params"><span class="function">        DateTime endTime,</span></span></span><br><span class="line"><span class="params"><span class="function">        <span class="built_in">string</span> description</span>)</span></span><br><span class="line"><span class="function">    : <span class="title">base</span>(<span class="params">id</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        OrganizationId = organizationId;</span><br><span class="line">        UrlCode = Check.NotNullOrWhiteSpace(urlCode, <span class="keyword">nameof</span>(urlCode), EventConsts.UrlCodeLength, EventConsts.UrlCodeLength);</span><br><span class="line"></span><br><span class="line">        SetTitle(title);</span><br><span class="line">        SetDescription(description);</span><br><span class="line">        SetTimeInternal(startTime, endTime);</span><br><span class="line"></span><br><span class="line">        Publish(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">        Tracks = <span class="keyword">new</span> Collection&lt;Track&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Event <span class="title">SetTitle</span>(<span class="params"><span class="built_in">string</span> title</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Title = Check.NotNullOrWhiteSpace(title, <span class="keyword">nameof</span>(title), EventConsts.MaxTitleLength, EventConsts.MinTitleLength);</span><br><span class="line">        Url = EventUrlHelper.ConvertTitleToUrlPart(Title) + <span class="string">&quot;-&quot;</span> + UrlCode;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Event <span class="title">SetDescription</span>(<span class="params"><span class="built_in">string</span> description</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Description = Check.NotNullOrWhiteSpace(description, <span class="keyword">nameof</span>(description), EventConsts.MaxDescriptionLength, EventConsts.MinDescriptionLength);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Event <span class="title">SetTime</span>(<span class="params">DateTime startTime, DateTime endTime</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (startTime == StartTime &amp;&amp; endTime == EndTime)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!IsDraft)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (TimingChangeCount &gt;= EventConsts.MaxTimingChangeCountForUser)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(EventHubErrorCodes.CantChangeEventTiming)</span><br><span class="line">                    .WithData(<span class="string">&quot;MaxTimingChangeLimit&quot;</span>, EventConsts.MaxTimingChangeCountForUser);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        SetTimeInternal(startTime, endTime);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!IsDraft)</span><br><span class="line">        &#123;</span><br><span class="line">            TimingChangeCount++;</span><br><span class="line">            IsTimingChangeEmailSent = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Event <span class="title">SetTimeInternal</span>(<span class="params">DateTime startTime, DateTime endTime</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (startTime &gt; endTime)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(EventHubErrorCodes.EndTimeCantBeEarlierThanStartTime);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        StartTime = startTime;</span><br><span class="line">        EndTime = endTime;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">internal</span> Event <span class="title">AddTrack</span>(<span class="params">Guid trackId, <span class="built_in">string</span> name</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (Tracks.Any(x =&gt; x.Name == name))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(EventHubErrorCodes.TrackNameAlreadyExist)</span><br><span class="line">                .WithData(<span class="string">&quot;Name&quot;</span>, name);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Tracks.Add(<span class="keyword">new</span> Track(trackId, <span class="keyword">this</span>.Id, name));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Event <span class="title">UpdateTrack</span>(<span class="params">Guid trackId, <span class="built_in">string</span> name</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (Tracks.Any(x =&gt; x.Name == name))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(EventHubErrorCodes.TrackNameAlreadyExist)</span><br><span class="line">                .WithData(<span class="string">&quot;Name&quot;</span>, name);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> track = Tracks.SingleOrDefault(x =&gt; x.Id == trackId);</span><br><span class="line">        <span class="keyword">if</span> (track <span class="keyword">is</span> <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(EventHubErrorCodes.TrackNotFound);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        track.SetName(name);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Event <span class="title">RemoveTrack</span>(<span class="params">Guid trackId</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> track = Tracks.SingleOrDefault(x =&gt; x.Id == trackId);</span><br><span class="line">        <span class="keyword">if</span> (track <span class="keyword">is</span> <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(EventHubErrorCodes.TrackNotFound);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Tracks.Remove(track);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Event <span class="title">AddSession</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">        Guid trackId,</span></span></span><br><span class="line"><span class="params"><span class="function">        Guid sessionId,</span></span></span><br><span class="line"><span class="params"><span class="function">        <span class="built_in">string</span> title,</span></span></span><br><span class="line"><span class="params"><span class="function">        <span class="built_in">string</span> description,</span></span></span><br><span class="line"><span class="params"><span class="function">        DateTime startTime,</span></span></span><br><span class="line"><span class="params"><span class="function">        DateTime endTime,</span></span></span><br><span class="line"><span class="params"><span class="function">        <span class="built_in">string</span> language,</span></span></span><br><span class="line"><span class="params"><span class="function">        ICollection&lt;Guid&gt; speakerUserIds</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        CheckIfValidSessionTime(startTime, endTime);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> track = GetTrack(trackId);</span><br><span class="line">        track.AddSession(sessionId, title, description,startTime, endTime, language, speakerUserIds);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Event <span class="title">UpdateSession</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">        Guid trackId,</span></span></span><br><span class="line"><span class="params"><span class="function">        Guid sessionId,</span></span></span><br><span class="line"><span class="params"><span class="function">        <span class="built_in">string</span> title,</span></span></span><br><span class="line"><span class="params"><span class="function">        <span class="built_in">string</span> description,</span></span></span><br><span class="line"><span class="params"><span class="function">        DateTime startTime,</span></span></span><br><span class="line"><span class="params"><span class="function">        DateTime endTime,</span></span></span><br><span class="line"><span class="params"><span class="function">        <span class="built_in">string</span> language,</span></span></span><br><span class="line"><span class="params"><span class="function">        ICollection&lt;Guid&gt; speakerUserIds</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        CheckIfValidSessionTime(startTime, endTime);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> track = GetTrack(trackId);</span><br><span class="line">        track.UpdateSession(sessionId, title, description, startTime, endTime, language, speakerUserIds);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Event <span class="title">RemoveSession</span>(<span class="params">Guid trackId, Guid sessionId</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> track = Tracks.SingleOrDefault(x =&gt; x.Id == trackId);</span><br><span class="line">        <span class="keyword">if</span> (track <span class="keyword">is</span> <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(EventHubErrorCodes.TrackNotFound);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        track.RemoveSession(sessionId);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Event <span class="title">Publish</span>(<span class="params"><span class="built_in">bool</span> isPublish = <span class="literal">true</span></span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        IsDraft = !isPublish;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">bool</span> <span class="title">IsLive</span>(<span class="params">DateTime now</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> now.IsBetween(StartTime, EndTime);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Track <span class="title">GetTrack</span>(<span class="params">Guid trackId</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> Tracks.FirstOrDefault(t =&gt; t.Id == trackId) ??</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> EntityNotFoundException(<span class="keyword">typeof</span>(Track), trackId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">CheckIfValidSessionTime</span>(<span class="params">DateTime startTime, DateTime endTime</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (startTime &lt; <span class="keyword">this</span>.StartTime || <span class="keyword">this</span>.EndTime &lt; endTime)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(EventHubErrorCodes.SessionTimeShouldBeInTheEventTime);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>像上述的 <code>Description</code> 屬性，<br>可透過 Constructor 來設定值，或是透過 public 的 <code>SetDescription</code> Method 來設定。<br>那這樣來看，不需要在測試程式中需要使用 Reflection 的方式來設定物件的屬性值。<br>所以要好好地檢視一下物件的設計，是否真的需要使用 <strong>private set</strong> ，<br>還是使用 <strong>internal set</strong> 就可以達到我們的目的呢?<br>例如透過同一個專案中的 Manager 來操作它們(請參考<a href="https://github.com/abpframework/eventhub/blob/main/src/EventHub.Domain/Events/EventManager.cs">EventManager Class</a>)<br>而那些 <strong>private</strong> Method ，是否也可以用 <strong>internal</strong> 呢?<br>還是其實應該會有一個 public method 可以來做這些事呢?</p><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="https://learn.microsoft.com/zh-tw/dotnet/csharp/programming-guide/classes-and-structs/access-modifiers">存取修飾詞</a><br><a href="https://github.com/abpframework/eventhub">abpframework&#x2F;eventhub</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;最近同事談到因為 Domain 物件的屬性設定為 &lt;strong&gt;private set&lt;/strong&gt; ，&lt;br&gt;所以在測試專案中的測試</summary>
      
    
    
    
    
    <category term="C#" scheme="https://rainmakerho.github.io/tags/C/"/>
    
    <category term="Property" scheme="https://rainmakerho.github.io/tags/Property/"/>
    
    <category term="屬性" scheme="https://rainmakerho.github.io/tags/%E5%B1%AC%E6%80%A7/"/>
    
    <category term="private set" scheme="https://rainmakerho.github.io/tags/private-set/"/>
    
    <category term="testing" scheme="https://rainmakerho.github.io/tags/testing/"/>
    
    <category term="private" scheme="https://rainmakerho.github.io/tags/private/"/>
    
    <category term="internal" scheme="https://rainmakerho.github.io/tags/internal/"/>
    
  </entry>
  
  <entry>
    <title>C# 簡單的 Retry Method - Partial, Curry</title>
    <link href="https://rainmakerho.github.io/2023/02/22/fp-retry/"/>
    <id>https://rainmakerho.github.io/2023/02/22/fp-retry/</id>
    <published>2023-02-22T07:30:28.000Z</published>
    <updated>2023-02-22T08:41:49.139Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>當我們要為某段程式碼設定執行錯誤時，讓它 Retry 可以很簡單的建立一個 Retry 的擴充方法來達到，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">class</span> <span class="title">HOFs</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> TResult <span class="title">WithRetry</span>&lt;<span class="title">TResult</span>&gt;(<span class="params"><span class="keyword">this</span> Func&lt;TResult&gt; func, <span class="built_in">int</span> maxRetries</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> result = <span class="literal">default</span>(TResult);</span><br><span class="line">        <span class="built_in">int</span> retryCount = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">bool</span> successful = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                result = func();</span><br><span class="line">                successful = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> (Exception e)</span><br><span class="line">            &#123;</span><br><span class="line">                retryCount++;</span><br><span class="line">                Console.WriteLine(<span class="string">$&quot;發生錯誤，重試<span class="subst">&#123;retryCount&#125;</span>&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">while</span> (retryCount &lt; maxRetries &amp;&amp; !successful);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例如取得網頁內容的 Function 後面再加上 WithRetry(次數)，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Func&lt;<span class="built_in">string</span>&gt; download = () =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> url = <span class="string">&quot;https://www.gss.com.tw&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> client = <span class="keyword">new</span> WebClient();</span><br><span class="line">    <span class="keyword">return</span> client.DownloadString(url);</span><br><span class="line">&#125;;</span><br><span class="line">Console.WriteLine(<span class="string">$&quot;web download:<span class="subst">&#123;download()&#125;</span>&quot;</span>);</span><br><span class="line">Console.WriteLine(<span class="string">$&quot;web download WithRetry:<span class="subst">&#123;download.WithRetry(<span class="number">3</span>)&#125;</span>&quot;</span>);</span><br></pre></td></tr></table></figure><p>那如果 url 要在呼叫時再給呢? 要怎麼辦呢?</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>因為要多一個參數，所以 <code>download</code> 由 <code>Func&lt;string&gt;</code> 要改成 <code>Func&lt;string, string&gt;</code>，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> url = <span class="string">&quot;https://www.gss.com.tw&quot;</span>;</span><br><span class="line">Func&lt;<span class="built_in">string</span>, <span class="built_in">string</span>&gt; download = (url) =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> client = <span class="keyword">new</span> WebClient();</span><br><span class="line">    <span class="keyword">return</span> client.DownloadString(url);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>但因為 <code>WithRetry</code> 接受的是 <code>Func&lt;string&gt;</code>，<br>所以我們有 2 個方式，</p><h5 id="1-Partial-將輸入參數轉由-Partial-接收，傳出-WithRetry-需要的-Func-lt-string-gt"><a href="#1-Partial-將輸入參數轉由-Partial-接收，傳出-WithRetry-需要的-Func-lt-string-gt" class="headerlink" title="1.Partial : 將輸入參數轉由 Partial 接收，傳出 WithRetry 需要的 Func&lt;string&gt;"></a>1.Partial : 將輸入參數轉由 <code>Partial</code> 接收，傳出 <code>WithRetry</code> 需要的 <code>Func&lt;string&gt;</code></h5><p>以我們的例子，接收的是 <code>Func&lt;string, string&gt;</code> 透過 <code>Partial</code> 執行後回傳 <code>Func&lt;string&gt;</code>，<br>參數則由 Partial 的 TParam1 傳給 download，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="title">Func</span>&lt;<span class="title">TResult</span>&gt; <span class="title">Partial</span>&lt;<span class="title">TParam1</span>, <span class="title">TResult</span>&gt;(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">        <span class="keyword">this</span> Func&lt;TParam1, TResult&gt; func, TParam1 parameter1</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> ()=&gt;func(parameter1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以程式可以改成以下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> url = <span class="string">&quot;https://www.gss.com.tw&quot;</span>;</span><br><span class="line">Func&lt;<span class="built_in">string</span>, <span class="built_in">string</span>&gt; download = (url) =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> client = <span class="keyword">new</span> WebClient();</span><br><span class="line">    <span class="keyword">return</span> client.DownloadString(url);</span><br><span class="line">&#125;;</span><br><span class="line">Console.WriteLine(<span class="string">$&quot;web download:<span class="subst">&#123;download(url)&#125;</span>&quot;</span>);</span><br><span class="line">Console.WriteLine(<span class="string">$&quot;web download WithRetry:<span class="subst">&#123;download.Partial(url).WithRetry(<span class="number">3</span>)&#125;</span>&quot;</span>);</span><br></pre></td></tr></table></figure><h5 id="2-Curry-將分解輸入參數，回傳輸入參數及-WithRetry-需要的-Func-lt-string-gt"><a href="#2-Curry-將分解輸入參數，回傳輸入參數及-WithRetry-需要的-Func-lt-string-gt" class="headerlink" title="2.Curry : 將分解輸入參數，回傳輸入參數及 WithRetry 需要的 Func&lt;string&gt;"></a>2.Curry : 將分解輸入參數，回傳輸入參數及 <code>WithRetry</code> 需要的 <code>Func&lt;string&gt;</code></h5><p>download 是 <code>Func&lt;string, string&gt;</code> ，所以傳回 <code>Func&lt;string, Func&lt;string&gt;&gt;</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="title">Func</span>&lt;<span class="title">TParam1</span>, <span class="title">Func</span>&lt;<span class="title">TResult</span>&gt;&gt; <span class="title">Curry</span>&lt;<span class="title">TParam1</span>, <span class="title">TResult</span>&gt;(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="keyword">this</span> Func&lt;TParam1, TResult&gt; func</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> parameter1 =&gt;()=&gt;func(parameter1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以程式可以改成以下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> url = <span class="string">&quot;https://www.gss.com.tw&quot;</span>;</span><br><span class="line">Func&lt;<span class="built_in">string</span>, <span class="built_in">string</span>&gt; download = (url) =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> client = <span class="keyword">new</span> WebClient();</span><br><span class="line">    <span class="keyword">return</span> client.DownloadString(url);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> downloadCurry = download.Curry();</span><br><span class="line">Console.WriteLine(<span class="string">$&quot;web download:<span class="subst">&#123;download(url)&#125;</span>&quot;</span>);</span><br><span class="line">Console.WriteLine(<span class="string">$&quot;web download WithRetry:<span class="subst">&#123;downloadCurry(url).WithRetry(<span class="number">3</span>)&#125;</span>&quot;</span>);</span><br></pre></td></tr></table></figure><p>以上透過 WithRetry 來測試裡面 Method 參數改變時，<br>要如何透過 <code>Partail</code> or <code>Curry</code> 來傳回 <code>WithRetry</code> 所需要的 Func，<br>讓我們更了解 <code>Func</code> 的用法。</p><p>如果要快速使用 Retry 可直接使用 <a href="https://github.com/App-vNext/Polly">Polly</a></p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://learn.microsoft.com/en-us/dotnet/architecture/microservices/implement-resilient-applications/implement-http-call-retries-exponential-backoff-polly">Implement HTTP call retries with exponential backoff with IHttpClientFactory and Polly policies</a><br><a href="https://github.com/App-vNext/Polly">Polly</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;當我們要為某段程式碼設定執行錯誤時，讓它 Retry 可以很簡單的建立一個 Retry 的擴充方法來達到，如下，&lt;/p&gt;
&lt;figure c</summary>
      
    
    
    
    
    <category term="c#" scheme="https://rainmakerho.github.io/tags/c/"/>
    
    <category term="functional programming" scheme="https://rainmakerho.github.io/tags/functional-programming/"/>
    
    <category term="retry" scheme="https://rainmakerho.github.io/tags/retry/"/>
    
    <category term="Partial" scheme="https://rainmakerho.github.io/tags/Partial/"/>
    
    <category term="Curry" scheme="https://rainmakerho.github.io/tags/Curry/"/>
    
  </entry>
  
  <entry>
    <title>Checkmarx Unsafe_Reflection</title>
    <link href="https://rainmakerho.github.io/2023/02/17/checkmarx-unsafe-reflection/"/>
    <id>https://rainmakerho.github.io/2023/02/17/checkmarx-unsafe-reflection/</id>
    <published>2023-02-17T03:01:44.000Z</published>
    <updated>2023-02-17T03:22:14.163Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近系統被 Checkmarx V9.4.5 掃出有 Unsafe_Reflection 的問題，<br>程式碼中有透過傳入的 Type Name 及 參數值來動態建立物件執行該 Method 。<br>問題的<strong>來源</strong>是 Controller Action Method 的<strong>參數</strong>，<br>問題的<strong>目的地</strong>則是 <strong>Invoke Method</strong> 。</p><h3 id="解決"><a href="#解決" class="headerlink" title="解決"></a>解決</h3><p>查看 Checkmarx 中的 Search Rule 如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">CxList inputs = Find_Inputs();</span><br><span class="line">CxList objectCreates = Find_ObjectCreations();</span><br><span class="line">CxList comCreations = objectCreates.FindByTypes(<span class="keyword">new</span> String[]</span><br><span class="line"></span><br><span class="line">&#123; <span class="string">&quot;CodeSnippetExpression&quot;</span>, <span class="string">&quot;CodeEntryPointMethod&quot;</span>, <span class="string">&quot;CodeTypeReference&quot;</span>, <span class="string">&quot;CodeTypeReference&quot;</span>, <span class="string">&quot;CodeObjectCreateExpression&quot;</span>, <span class="string">&quot;CodeMethodInvokeExpression&quot;</span>, <span class="string">&quot;CodeTypeReferenceExpression&quot;</span>, <span class="string">&quot;CodeMethodReturnStatement&quot;</span>, <span class="string">&quot;CodeMemberMethod&quot;</span>&#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">CxList unknownList = Find_UnknownReference();</span><br><span class="line">unknownList.Add(Find_Param());</span><br><span class="line">unknownList.Add(Find_TypeRef());</span><br><span class="line"></span><br><span class="line">CxList methodExpr = Find_Methods();</span><br><span class="line">CxList ifs = Find_Ifs();</span><br><span class="line"></span><br><span class="line">CxList auxInput = inputs.Clone();</span><br><span class="line">auxInput.Add(unknownList.FindAllReferences(auxInput.GetAssignee()));</span><br><span class="line">CxList typeofExpress = Find_TypeOfExpr();</span><br><span class="line">typeofExpress.Add(methodExpr.FindByMemberAccesses(<span class="keyword">new</span> <span class="built_in">string</span>[]</span><br><span class="line"></span><br><span class="line">&#123;<span class="string">&quot;Type.Get*&quot;</span>, <span class="string">&quot;Assembly.GetType&quot;</span>, <span class="string">&quot;*Info.Get*&quot;</span>, <span class="string">&quot;Assembly.Load*&quot;</span>, <span class="string">&quot;Assembly.ReflectionOnly*&quot;</span>&#125;</span><br><span class="line">));</span><br><span class="line"></span><br><span class="line">CxList containsMethods = methodExpr.FindByMemberAccess(<span class="string">&quot;*.Contains&quot;</span>).GetByAncs(ifs);</span><br><span class="line">CxList influenceIfparams = auxInput.GetParameters(containsMethods.FindByParameters(auxInput), <span class="number">0</span>);</span><br><span class="line">CxList allReferencesOfifParams = auxInput.FindAllReferences(influenceIfparams);</span><br><span class="line"></span><br><span class="line">CxList notInfluencedChecks = typeofExpress - typeofExpress.FindByParameters(allReferencesOfifParams);</span><br><span class="line">notInfluencedChecks.Add(All.FindAllReferences(notInfluencedChecks.GetAssignee()));</span><br><span class="line"></span><br><span class="line">CxList notInfluencedComCreations = comCreations - comCreations.FindByParameters(allReferencesOfifParams);</span><br><span class="line">CxList objsC = notInfluencedComCreations.FindByParameters(All.GetParameters(notInfluencedComCreations) * auxInput);</span><br><span class="line"></span><br><span class="line">result = inputs.DataInfluencingOn(notInfluencedChecks.GetMembersOfTarget().FindByShortName(<span class="string">&quot;Invoke*&quot;</span>));</span><br><span class="line">result.Add(inputs.DataInfluencingOn(objsC));</span><br></pre></td></tr></table></figure><p>似乎是透過 Method 的參數找相關的 method 是否有 Invoke ，<br>並且沒透過 <strong>if + 白名單 + Contains</strong> 去排除，<br>所以程式碼中包含 invoke 就被認為是有問題。</p><p>Checkmarx 建議的解法如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> IActionResult <span class="title">MethodInvoker</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> cls = Request.Query[<span class="string">&quot;class&quot;</span>];</span><br><span class="line">    <span class="keyword">var</span> method = Request.Query[<span class="string">&quot;method&quot;</span>];</span><br><span class="line">    <span class="keyword">var</span> val = Request.Query[<span class="string">&quot;val&quot;</span>];</span><br><span class="line">    <span class="keyword">if</span> (allowedClassesList.Contains(cls) &amp;&amp; allowedMethodsList.Contains(method) &#123;</span><br><span class="line">        ViewBag.Result = Type.GetType(cls).GetMethod(method).Invoke(<span class="literal">null</span>, val);</span><br><span class="line">        <span class="keyword">return</span> View();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">//Handle Exception</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>原始程式碼類似如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="built_in">dynamic</span> <span class="title">CreateReport</span>(<span class="params"><span class="built_in">string</span> ReportName, <span class="built_in">string</span> ReportPrintDate, <span class="built_in">string</span> condition</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// ... codes ...</span></span><br><span class="line"><span class="built_in">string</span> reportDll = WebConfigurationManager.AppSettings[<span class="string">&quot;ReportDll&quot;</span>];</span><br><span class="line"><span class="keyword">var</span> types = Assembly.Load(reportDll).GetTypes().Where(t =&gt; t.Name == ReportName);</span><br><span class="line"><span class="keyword">if</span> (types.Count() == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">&quot;無此報表程式&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">Type type = Assembly.Load(reportDll).GetTypes().Where(t =&gt; t.Name == ReportName).FirstOrDefault();</span><br><span class="line"></span><br><span class="line"><span class="built_in">dynamic</span> report = Activator.CreateInstance(type);</span><br><span class="line"><span class="keyword">var</span> queryMethod = type.GetMethod(<span class="string">&quot;Query&quot;</span>);</span><br><span class="line">List&lt;<span class="built_in">object</span>&gt; para = <span class="keyword">new</span> List&lt;<span class="built_in">object</span>&gt;();</span><br><span class="line">para.Add(condition);</span><br><span class="line"><span class="comment">//  Unsafe_Reflection</span></span><br><span class="line">queryMethod.Invoke(report, para.ToArray());</span><br><span class="line"><span class="keyword">return</span> report;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>雖然上述程式碼中有透過 LINQ 的 Where 判斷，但沒有 <strong>if + 白名單 + Contains</strong> 所以還是被 Checkmarx 認為有問題。<br>所以調整程式碼，讓它符合 <strong>if + 白名單 + Contains</strong> 就可以通過了，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="built_in">dynamic</span> <span class="title">CreateReport</span>(<span class="params"><span class="built_in">string</span> ReportName, <span class="built_in">string</span> ReportPrintDate, <span class="built_in">string</span> condition</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// ... codes ...</span></span><br><span class="line"><span class="built_in">string</span> reportDll = WebConfigurationManager.AppSettings[<span class="string">&quot;ReportDll&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> types = Assembly.Load(reportDll).GetTypes().Where(t =&gt; t.Name == ReportName);</span><br><span class="line"><span class="keyword">if</span> (types.Count() == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">&quot;無此報表程式&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">var</span> typeNames = Assembly.Load(reportDll).GetTypes().Select(t=&gt;t.Name);</span><br><span class="line">    <span class="comment">//要 invoke 的 method 要被包在 if + 白名單 + Contains 之中</span></span><br><span class="line">    <span class="keyword">if</span>(typeNames.Contains(ReportName))</span><br><span class="line">    &#123;</span><br><span class="line">        Type type = Assembly.Load(reportDll).GetTypes().Where(t =&gt; t.Name == ReportName).FirstOrDefault();</span><br><span class="line">        <span class="built_in">dynamic</span> report = Activator.CreateInstance(type);</span><br><span class="line">        <span class="keyword">var</span> queryMethod = type.GetMethod(<span class="string">&quot;Query&quot;</span>);</span><br><span class="line">        List&lt;<span class="built_in">object</span>&gt; para = <span class="keyword">new</span> List&lt;<span class="built_in">object</span>&gt;();</span><br><span class="line">        para.Add(condition);</span><br><span class="line">        <span class="comment">//  Unsafe_Reflection</span></span><br><span class="line">        queryMethod.Invoke(report, para.ToArray());</span><br><span class="line">        <span class="keyword">return</span> report;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;<span class="keyword">return</span> <span class="literal">null</span>;&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;最近系統被 Checkmarx V9.4.5 掃出有 Unsafe_Reflection 的問題，&lt;br&gt;程式碼中有透過傳入的 Type N</summary>
      
    
    
    
    
    <category term="Checkmarx" scheme="https://rainmakerho.github.io/tags/Checkmarx/"/>
    
    <category term="Unsafe_Reflection" scheme="https://rainmakerho.github.io/tags/Unsafe-Reflection/"/>
    
    <category term="V9.4.5" scheme="https://rainmakerho.github.io/tags/V9-4-5/"/>
    
    <category term="CWE-470" scheme="https://rainmakerho.github.io/tags/CWE-470/"/>
    
  </entry>
  
  <entry>
    <title>如何在 TypeScript 中動態設定物件的屬性 (How to Set Dynamic Property Keys with TypeScript)</title>
    <link href="https://rainmakerho.github.io/2023/02/06/dynamic-set-property-with-ts/"/>
    <id>https://rainmakerho.github.io/2023/02/06/dynamic-set-property-with-ts/</id>
    <published>2023-02-06T03:01:35.000Z</published>
    <updated>2023-02-06T04:03:31.003Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在 JS ES6 中要動態設定物件的屬性，可以透過 Bracket notation 的方式來設定(<code>myobj[key] = &quot;google&quot;;</code>)，<br>但如果在 TypeScript 的物件這樣寫就會出現 <code>TS7053: Element implicitly has an &#39;any&#39; type because expression of type &#39;string&#39; can&#39;t be used to index type</code> 的編譯錯誤，如下，</p><img src="/2023/02/06/dynamic-set-property-with-ts/01.png" class="" title="TS7053"><h3 id="問題與解法"><a href="#問題與解法" class="headerlink" title="問題與解法"></a>問題與解法</h3><p>一開始的問題是看到 <a href="https://handsonreact.com/docs/labs/ts/CreatingDataStructures">React-TypeScript Lab5-Data</a> 中，<br><code>Project</code>物件的<code>constructor</code>會接受一個 any 物件，再判斷該物件是否有對應的屬性值來設定 <code>Project</code>物件，</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">Project</span> &#123;</span><br><span class="line">  <span class="attr">id</span>: <span class="built_in">number</span> | <span class="literal">undefined</span>;</span><br><span class="line">  <span class="attr">name</span>: <span class="built_in">string</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attr">description</span>: <span class="built_in">string</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attr">imageUrl</span>: <span class="built_in">string</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attr">contractTypeId</span>: <span class="built_in">number</span> | <span class="literal">undefined</span>;</span><br><span class="line">  <span class="attr">contractSignedOn</span>: <span class="title class_">Date</span> = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">  <span class="attr">budget</span>: <span class="built_in">number</span> = <span class="number">0</span>;</span><br><span class="line">  <span class="attr">isActive</span>: <span class="built_in">boolean</span> = <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">get</span> <span class="title function_">isNew</span>(): <span class="built_in">boolean</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">id</span> === <span class="literal">undefined</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">initializer?: <span class="built_in">any</span></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!initializer) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span> (initializer.<span class="property">id</span>) <span class="variable language_">this</span>.<span class="property">id</span> = initializer.<span class="property">id</span>;</span><br><span class="line">    <span class="keyword">if</span> (initializer.<span class="property">name</span>) <span class="variable language_">this</span>.<span class="property">name</span> = initializer.<span class="property">name</span>;</span><br><span class="line">    <span class="keyword">if</span> (initializer.<span class="property">description</span>) <span class="variable language_">this</span>.<span class="property">description</span> = initializer.<span class="property">description</span>;</span><br><span class="line">    <span class="keyword">if</span> (initializer.<span class="property">imageUrl</span>) <span class="variable language_">this</span>.<span class="property">imageUrl</span> = initializer.<span class="property">imageUrl</span>;</span><br><span class="line">    <span class="keyword">if</span> (initializer.<span class="property">contractTypeId</span>)</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">contractTypeId</span> = initializer.<span class="property">contractTypeId</span>;</span><br><span class="line">    <span class="keyword">if</span> (initializer.<span class="property">contractSignedOn</span>)</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">contractSignedOn</span> = <span class="keyword">new</span> <span class="title class_">Date</span>(initializer.<span class="property">contractSignedOn</span>);</span><br><span class="line">    <span class="keyword">if</span> (initializer.<span class="property">budget</span>) <span class="variable language_">this</span>.<span class="property">budget</span> = initializer.<span class="property">budget</span>;</span><br><span class="line">    <span class="keyword">if</span> (initializer.<span class="property">isActive</span>) <span class="variable language_">this</span>.<span class="property">isActive</span> = initializer.<span class="property">isActive</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>new Project 的程式碼如下，</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Project</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./Project&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="variable constant_">MOCK_PROJECTS</span> = [</span><br><span class="line">  <span class="keyword">new</span> <span class="title class_">Project</span>(&#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;Johnson - Kutch&quot;</span>,</span><br><span class="line">    <span class="attr">description</span>:</span><br><span class="line">      <span class="string">&quot;Fully-configurable intermediate framework. Ullam occaecati libero laudantium nihil voluptas omnis.&quot;</span>,</span><br><span class="line">    <span class="attr">imageUrl</span>: <span class="string">&quot;/assets/placeimg_500_300_arch4.jpg&quot;</span>,</span><br><span class="line">    <span class="attr">contractTypeId</span>: <span class="number">3</span>,</span><br><span class="line">    <span class="attr">contractSignedOn</span>: <span class="string">&quot;2013-08-04T22:39:41.473Z&quot;</span>,</span><br><span class="line">    <span class="attr">budget</span>: <span class="number">54637</span>,</span><br><span class="line">    <span class="attr">isActive</span>: <span class="literal">false</span>,</span><br><span class="line">  &#125;),</span><br><span class="line">];</span><br></pre></td></tr></table></figure><p>只是看到一堆的 <code>if (initializer.屬性) this.屬性 = initializer.屬性;</code>，<br>覺得應該是可以動態來設定將這些值。<br>所以就將程式改用 <code>this[v] = initializer[v]</code> 的方式，<br>結果立馬就出現 <code>TS7053: Element implicitly has an &#39;any&#39; type because expression of type &#39;string&#39; can&#39;t be used to index type</code> 的錯誤。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">Project</span> &#123;</span><br><span class="line">  <span class="attr">id</span>: <span class="built_in">number</span> | <span class="literal">undefined</span>;</span><br><span class="line">  <span class="attr">name</span>: <span class="built_in">string</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attr">description</span>: <span class="built_in">string</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attr">imageUrl</span>: <span class="built_in">string</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attr">contractTypeId</span>: <span class="built_in">number</span> | <span class="literal">undefined</span>;</span><br><span class="line">  <span class="attr">contractSignedOn</span>: <span class="title class_">Date</span> = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">  <span class="attr">budget</span>: <span class="built_in">number</span> = <span class="number">0</span>;</span><br><span class="line">  <span class="attr">isActive</span>: <span class="built_in">boolean</span> = <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">get</span> <span class="title function_">isNew</span>(): <span class="built_in">boolean</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">id</span> === <span class="literal">undefined</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">initializer?: <span class="built_in">any</span></span>) &#123;</span><br><span class="line">    <span class="comment">//debug only</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;before assign:&quot;</span>, <span class="variable language_">this</span>);</span><br><span class="line">    <span class="keyword">if</span> (!initializer) <span class="keyword">return</span>;</span><br><span class="line">    <span class="title class_">Object</span>.<span class="title function_">keys</span>(<span class="variable language_">this</span>).<span class="title function_">forEach</span>(<span class="function">(<span class="params">v</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (initializer[v]) <span class="variable language_">this</span>[v] = initializer[v];</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// if(initializer.id) this.id = initializer.id;</span></span><br><span class="line">    <span class="comment">// if(initializer.name) this.name = initializer.name;</span></span><br><span class="line">    <span class="comment">// if(initializer.description) this.description = initializer.description;</span></span><br><span class="line">    <span class="comment">// if(initializer.imageUrl) this.imageUrl = initializer.imageUrl;</span></span><br><span class="line">    <span class="comment">// if(initializer.contractTypeId) this.contractTypeId = initializer.contractTypeId;</span></span><br><span class="line">    <span class="comment">// if(initializer.contractSignedOn) this.contractSignedOn = new Date(initializer.contractSignedOn);</span></span><br><span class="line">    <span class="comment">// if(initializer.budget) this.budget = initializer.budget;</span></span><br><span class="line">    <span class="comment">// if(initializer.isActive) this.isActive = initializer.isActive;</span></span><br><span class="line">    <span class="comment">//debug only</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那要怎麼辦呢?<br>可以參考 <a href="https://stackoverflow.com/questions/34727936/typescript-bracket-notation-property-access">Typescript: bracket notation property access</a> 的方式，<br>在 <code>Project</code>物件中加入 <code>[key: string]: any;</code> 來讓 TypeScript 物件 Support bracket-notation 的方式，如下，</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">Project</span> &#123;</span><br><span class="line">  <span class="comment">//Support bracket-notation</span></span><br><span class="line">  [<span class="attr">key</span>: <span class="built_in">string</span>]: <span class="built_in">any</span>;</span><br><span class="line">  <span class="attr">id</span>: <span class="built_in">number</span> | <span class="literal">undefined</span>;</span><br><span class="line">  <span class="attr">name</span>: <span class="built_in">string</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attr">description</span>: <span class="built_in">string</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attr">imageUrl</span>: <span class="built_in">string</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attr">contractTypeId</span>: <span class="built_in">number</span> | <span class="literal">undefined</span>;</span><br><span class="line">  <span class="attr">contractSignedOn</span>: <span class="title class_">Date</span> = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">  <span class="attr">budget</span>: <span class="built_in">number</span> = <span class="number">0</span>;</span><br><span class="line">  <span class="attr">isActive</span>: <span class="built_in">boolean</span> = <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">get</span> <span class="title function_">isNew</span>(): <span class="built_in">boolean</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">id</span> === <span class="literal">undefined</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">initializer?: <span class="built_in">any</span></span>) &#123;</span><br><span class="line">    <span class="comment">//debug only</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;before assign:&quot;</span>, <span class="variable language_">this</span>);</span><br><span class="line">    <span class="keyword">if</span> (!initializer) <span class="keyword">return</span>;</span><br><span class="line">    <span class="title class_">Object</span>.<span class="title function_">keys</span>(<span class="variable language_">this</span>).<span class="title function_">forEach</span>(<span class="function">(<span class="params">v</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (initializer[v]) <span class="variable language_">this</span>[v] = initializer[v];</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">//debug only</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>這樣就可以透過動態的方式設定屬性值，但是其中日期型態的<code>contractSignedOn</code>卻被改成了字串型態，如下，</p><img src="/2023/02/06/dynamic-set-property-with-ts/02.png" class="" title="contractSignedOn"><p>所以我們可以再補上針對不是字串型態的屬性來設定，如下，</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">Project</span> &#123;</span><br><span class="line">  <span class="comment">//Support bracket-notation</span></span><br><span class="line">  [<span class="attr">key</span>: <span class="built_in">string</span>]: <span class="built_in">any</span>;</span><br><span class="line">  <span class="attr">id</span>: <span class="built_in">number</span> | <span class="literal">undefined</span>;</span><br><span class="line">  <span class="attr">name</span>: <span class="built_in">string</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attr">description</span>: <span class="built_in">string</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attr">imageUrl</span>: <span class="built_in">string</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attr">contractTypeId</span>: <span class="built_in">number</span> | <span class="literal">undefined</span>;</span><br><span class="line">  <span class="attr">contractSignedOn</span>: <span class="title class_">Date</span> = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">  <span class="attr">budget</span>: <span class="built_in">number</span> = <span class="number">0</span>;</span><br><span class="line">  <span class="attr">isActive</span>: <span class="built_in">boolean</span> = <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">get</span> <span class="title function_">isNew</span>(): <span class="built_in">boolean</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">id</span> === <span class="literal">undefined</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">initializer?: <span class="built_in">any</span></span>) &#123;</span><br><span class="line">    <span class="comment">//debug only</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;before assign:&quot;</span>, <span class="variable language_">this</span>);</span><br><span class="line">    <span class="keyword">if</span> (!initializer) <span class="keyword">return</span>;</span><br><span class="line">    <span class="title class_">Object</span>.<span class="title function_">keys</span>(<span class="variable language_">this</span>).<span class="title function_">forEach</span>(<span class="function">(<span class="params">v</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (initializer[v]) <span class="variable language_">this</span>[v] = initializer[v];</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">//針對非字串欄位來設定</span></span><br><span class="line">    <span class="keyword">if</span> (initializer.<span class="property">contractSignedOn</span>)</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">contractSignedOn</span> = <span class="keyword">new</span> <span class="title class_">Date</span>(initializer.<span class="property">contractSignedOn</span>);</span><br><span class="line">    <span class="comment">//debug only</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果不想覆蓋掉非字串型態的屬性，可以建立一個不自動指定的屬性陣列，不在該陣列中的屬性才自動 Assign，如下，</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">Project</span> &#123;</span><br><span class="line">  <span class="comment">//Support bracket-notation</span></span><br><span class="line">  [<span class="attr">key</span>: <span class="built_in">string</span>]: <span class="built_in">any</span>;</span><br><span class="line">  <span class="attr">id</span>: <span class="built_in">number</span> | <span class="literal">undefined</span>;</span><br><span class="line">  <span class="attr">name</span>: <span class="built_in">string</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attr">description</span>: <span class="built_in">string</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attr">imageUrl</span>: <span class="built_in">string</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attr">contractTypeId</span>: <span class="built_in">number</span> | <span class="literal">undefined</span>;</span><br><span class="line">  <span class="attr">contractSignedOn</span>: <span class="title class_">Date</span> = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">  <span class="attr">budget</span>: <span class="built_in">number</span> = <span class="number">0</span>;</span><br><span class="line">  <span class="attr">isActive</span>: <span class="built_in">boolean</span> = <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">get</span> <span class="title function_">isNew</span>(): <span class="built_in">boolean</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">id</span> === <span class="literal">undefined</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">initializer?: <span class="built_in">any</span></span>) &#123;</span><br><span class="line">    <span class="comment">//debug only</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;before assign:&quot;</span>, <span class="variable language_">this</span>);</span><br><span class="line">    <span class="keyword">if</span> (!initializer) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">const</span> manualProps = [<span class="string">&quot;contractSignedOn&quot;</span>];</span><br><span class="line">    <span class="title class_">Object</span>.<span class="title function_">keys</span>(<span class="variable language_">this</span>)</span><br><span class="line">      .<span class="title function_">filter</span>(<span class="function">(<span class="params">v</span>) =&gt;</span> manualProps.<span class="title function_">includes</span>(v) === <span class="literal">false</span> &amp;&amp; initializer[v])</span><br><span class="line">      .<span class="title function_">forEach</span>(<span class="function">(<span class="params">v</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">this</span>[v] = initializer[v];</span><br><span class="line">      &#125;);</span><br><span class="line">    <span class="comment">//針對非字串欄位來設定</span></span><br><span class="line">    <span class="keyword">if</span> (initializer.<span class="property">contractSignedOn</span>)</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">contractSignedOn</span> = <span class="keyword">new</span> <span class="title class_">Date</span>(initializer.<span class="property">contractSignedOn</span>);</span><br><span class="line">    <span class="comment">//debug only</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://www.samanthaming.com/tidbits/37-dynamic-property-name-with-es6/">How to Set Dynamic Property Keys with ES6</a><br><a href="https://stackoverflow.com/questions/34727936/typescript-bracket-notation-property-access">Typescript: bracket notation property access</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;在 JS ES6 中要動態設定物件的屬性，可以透過 Bracket notation 的方式來設定(&lt;code&gt;myobj[key] = &amp;</summary>
      
    
    
    
    
    <category term="TypeScript" scheme="https://rainmakerho.github.io/tags/TypeScript/"/>
    
    <category term="dynamic" scheme="https://rainmakerho.github.io/tags/dynamic/"/>
    
    <category term="property" scheme="https://rainmakerho.github.io/tags/property/"/>
    
    <category term="bracket-notation" scheme="https://rainmakerho.github.io/tags/bracket-notation/"/>
    
  </entry>
  
  <entry>
    <title>TCP 3-Way Handshake</title>
    <link href="https://rainmakerho.github.io/2023/02/03/tcp-3-way-handshakes/"/>
    <id>https://rainmakerho.github.io/2023/02/03/tcp-3-way-handshakes/</id>
    <published>2023-02-03T03:53:45.000Z</published>
    <updated>2023-02-03T05:52:19.823Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>常常聽到 TCP Three-Way Handshake，它們是如何運作的呢?<br>開始之前，先看了解一下， TCP 使用到的 Header Flags</p><ul><li>SYN: Synchronize(Include a seq #)</li><li>ACK: Acknowledgement (確認收到訊息)</li><li>FIN: Finish</li><li>PSH: Push (送訊息)</li><li>URG: Urgent(馬上送訊息)</li><li>RST: Reset (重設連線)</li></ul><h3 id="Three-Way-Handshake"><a href="#Three-Way-Handshake" class="headerlink" title="Three-Way Handshake"></a>Three-Way Handshake</h3><p>Client 要開始跟 Server 對話時，</p><table><thead><tr><th>Client</th><th align="center">Action</th><th align="right">Server</th></tr></thead><tbody><tr><td>Client A</td><td align="center">- <strong>SYN</strong>: Sequence #101 -&gt;</td><td align="right">Server B</td></tr><tr><td>Client A</td><td align="center">&lt;- **SYN&#x2F;ACK** - <br/> &lt;- (Your) Sequence #102 (你的下次 Seq 是 102) - <br/> &lt;- (My) Sequence #508 -</td><td align="right">Server B</td></tr><tr><td>Client A</td><td align="center">- <strong>ACK</strong> -&gt; <br/> - (Your) Sequence #509 (你的下次 Seq 是 509) -&gt; <br/> - (My) Sequence #102 -&gt;</td><td align="right">Server B</td></tr></tbody></table><img src="/2023/02/03/tcp-3-way-handshakes/01.png" class="" title="Client2Server"><p>再來就是 Server 會 PUSH 資料給 Client …</p><p>Client 要結束對話時，</p><table><thead><tr><th>Client</th><th align="center">Action</th><th align="right">Server</th></tr></thead><tbody><tr><td>Client A</td><td align="center">- <strong>FIN</strong>: 我要結束對話 -&gt;</td><td align="right">Server B</td></tr><tr><td>Client A</td><td align="center">&lt;- **ACK&#x2F;FIN** - <br/> &lt;- OK…Tell App to stop - <br/> &lt;- App stopped … I’m done - -</td><td align="right">Server B</td></tr><tr><td>Client A</td><td align="center">- <strong>ACK</strong> -&gt; <br/> - OK… -&gt;</td><td align="right">Server B</td></tr></tbody></table><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="https://www.sciencedirect.com/topics/computer-science/three-way-handshake#:~:text=The%20TCP%20handshake,as%20shown%20in%20Figure%203.8.">Three-Way Handshake</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;常常聽到 TCP Three-Way Handshake，它們是如何運作的呢?&lt;br&gt;開始之前，先看了解一下， TCP 使用到的 Heade</summary>
      
    
    
    
    
    <category term="TCP" scheme="https://rainmakerho.github.io/tags/TCP/"/>
    
    <category term="Handshake" scheme="https://rainmakerho.github.io/tags/Handshake/"/>
    
  </entry>
  
  <entry>
    <title>Azure Storage Queue - Message has reached MaxDequeueCount of 5. Moving message to queue poison</title>
    <link href="https://rainmakerho.github.io/2023/02/03/message-has-reached-MaxDequeueCount-of-5/"/>
    <id>https://rainmakerho.github.io/2023/02/03/message-has-reached-MaxDequeueCount-of-5/</id>
    <published>2023-02-03T01:05:53.000Z</published>
    <updated>2023-02-03T01:21:44.217Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>透過 Azure Function 的 Queue trigger Function 來取得資料(JSON 字串)時，<br>在 Queue 中的資料都還沒有被 Function 處理，<br>Console 就 Log 出 <strong>Message has reached MaxDequeueCount of 5. Moving message to queue {myQueueName}-poison</strong> ，<br>然後 Queue 中的內容就搬到了 {myQueueName}-poison 去了。<br>如果在 Azure Function 的 Application Insights 看到的錯誤有可能是 <code>System.Text.DecoderFallbackException at System.Text.DecoderExceptionFallbackBuffer.Throw</code></p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>Search 一下網路發現是因為要將 Json 字串送給 Azure Storage Queue 時，<br>需要將 Json 字串轉成 Base64 字串再傳送，如下</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> connectionString = <span class="string">&quot;AZURE_STORAGE_CONNECTION_STRING&quot;</span>;</span><br><span class="line">QueueClient queue = <span class="keyword">new</span> QueueClient(connectionString, <span class="string">&quot;myQueueName&quot;</span>);</span><br><span class="line"><span class="built_in">string</span> jsonData = <span class="string">@&quot;&#123;json 字串&#125;&quot;</span>;</span><br><span class="line"><span class="comment">//要轉成 base64 字串再傳送</span></span><br><span class="line"><span class="comment">//await queue.SendMessageAsync(jsonData);</span></span><br><span class="line"><span class="built_in">string</span> jsonBase64 = Convert.ToBase64String(System.Text.Encoding.UTF8.GetBytes(jsonData));</span><br><span class="line"><span class="keyword">await</span> queue.SendMessageAsync(jsonBase64);</span><br></pre></td></tr></table></figure><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="https://briancaos.wordpress.com/2020/10/16/sending-json-with-net-core-queueclient-sendmessageasync/">Sending JSON with .NET Core QueueClient.SendMessageAsync</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;透過 Azure Function 的 Queue trigger Function 來取得資料(JSON 字串)時，&lt;br&gt;在 Queue</summary>
      
    
    
    
    
    <category term="Azure" scheme="https://rainmakerho.github.io/tags/Azure/"/>
    
    <category term="Storage" scheme="https://rainmakerho.github.io/tags/Storage/"/>
    
    <category term="Queue" scheme="https://rainmakerho.github.io/tags/Queue/"/>
    
    <category term="MaxDequeueCount" scheme="https://rainmakerho.github.io/tags/MaxDequeueCount/"/>
    
    <category term="Function" scheme="https://rainmakerho.github.io/tags/Function/"/>
    
    <category term="poison" scheme="https://rainmakerho.github.io/tags/poison/"/>
    
  </entry>
  
  <entry>
    <title>Oracle 在查詢時，有時會出現 遠端主機已強制關閉一個現存的連線</title>
    <link href="https://rainmakerho.github.io/2023/01/11/oracle-17002-io-error-sometimes/"/>
    <id>https://rainmakerho.github.io/2023/01/11/oracle-17002-io-error-sometimes/</id>
    <published>2023-01-11T05:07:35.000Z</published>
    <updated>2023-01-11T07:49:20.771Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>最近有遇到使用 <a href="https://dbeaver.io/">DBeaver</a> 連線 Oracle 11.2 時，<br>在下 SQL 時，有時會出現 <strong>SQL Error[17002][08006]:IO Error:遠端主機已強制關閉一個現存的連線</strong>的錯誤，</p><img src="/2023/01/11/oracle-17002-io-error-sometimes/01.png" class="" title="IO Error"><h3 id="解決"><a href="#解決" class="headerlink" title="解決"></a>解決</h3><p>但如果連 MS-SQL 卻是很順，<br>有討論到是否因為 firewall, IPS, 或是少裝 Oracle Client 的問題。<br>但另一個廠商也是去連 Oacle 卻不會有這樣子的狀況。<br>於是請同事詢問一下他們的連線方式，<br>後來 … 同事回報，他們 <strong>安裝 Oracle Client</strong> 之後，查詢就沒問題了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;最近有遇到使用 &lt;a href=&quot;https://dbeaver.io/&quot;&gt;DBeaver&lt;/a&gt; 連線 Oracle 11.2 時，&lt;br</summary>
      
    
    
    
    
    <category term="oracle" scheme="https://rainmakerho.github.io/tags/oracle/"/>
    
    <category term="17002" scheme="https://rainmakerho.github.io/tags/17002/"/>
    
    <category term="08006" scheme="https://rainmakerho.github.io/tags/08006/"/>
    
    <category term="IO Error" scheme="https://rainmakerho.github.io/tags/IO-Error/"/>
    
  </entry>
  
  <entry>
    <title>ML.NET p-Value calculated outside expected [0,1] range</title>
    <link href="https://rainmakerho.github.io/2023/01/07/ml-net-p-value-outside-0-1-range/"/>
    <id>https://rainmakerho.github.io/2023/01/07/ml-net-p-value-outside-0-1-range/</id>
    <published>2023-01-07T05:25:46.000Z</published>
    <updated>2023-01-07T06:44:57.139Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>使用 ML.NET 中的 OlsTrainer 來預測資料，<br>當使用到某些資料進行模型定型時，<br>卻會發生 <code>System.InvalidOperationException: p-Value calculated outside expected [0,1] range</code> 的錯誤</p><h3 id="解決"><a href="#解決" class="headerlink" title="解決"></a>解決</h3><p>類似<a href="https://learn.microsoft.com/zh-tw/dotnet/machine-learning/tutorials/predict-prices?source=recommendations">使用回歸搭配 ML.net 來預測價格</a>的程式如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> datePipeline = mlContext.Transforms.Text.NormalizeText(<span class="string">&quot;Date&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> featuresPipeline = mlContext.Transforms.Concatenate(<span class="string">&quot;Features&quot;</span>, <span class="string">&quot;X1&quot;</span>, <span class="string">&quot;X2&quot;</span>, <span class="string">&quot;X3&quot;</span>);</span><br><span class="line">IEstimator&lt;ITransformer&gt; pipeline = datePipeline.Append(featuresPipeline);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">pipeline.Append(mlContext.Regression.Trainers.Ols());</span><br><span class="line"><span class="comment">//在某些資料以下會噴 p-Value calculated outside expected [0,1] range error</span></span><br><span class="line"><span class="keyword">var</span> model = pipeline.Fit(dataView);</span><br></pre></td></tr></table></figure><p>後來參考 <a href="https://learn.microsoft.com/zh-tw/dotnet/machine-learning/how-to-guides/prepare-data-ml-net">準備資料以建置模型</a> ，<br>針對各個 <code>Feature</code> 加入<strong>正規化</strong>處理，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> datePipeline = mlContext.Transforms.Text.NormalizeText(<span class="string">&quot;Date&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> featuresPipeline = mlContext.Transforms.Concatenate(<span class="string">&quot;Features&quot;</span>, <span class="string">&quot;X1&quot;</span>, <span class="string">&quot;X2&quot;</span>, <span class="string">&quot;X3&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//Fix p-Value calculated outside expected [0,1] range error</span></span><br><span class="line">IEstimator&lt;ITransformer&gt; pipeline = datePipeline</span><br><span class="line">    .Append(mlContext.Transforms.NormalizeMinMax(<span class="string">&quot;X1&quot;</span>))</span><br><span class="line">    .Append(mlContext.Transforms.NormalizeMinMax(<span class="string">&quot;X2&quot;</span>))</span><br><span class="line">    .Append(mlContext.Transforms.NormalizeMinMax(<span class="string">&quot;X3&quot;</span>))</span><br><span class="line">    .Append(featuresPipeline);</span><br><span class="line"></span><br><span class="line"><span class="comment">// var featuresNormalize = mlContext.Transforms.NormalizeMinMax(&quot;Features&quot;, &quot;Features&quot;);</span></span><br><span class="line"><span class="comment">// pipeline.Append(featuresNormalize);</span></span><br><span class="line"></span><br><span class="line">pipeline.Append(mlContext.Regression.Trainers.Ols());</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> model = pipeline.Fit(dataView);</span><br></pre></td></tr></table></figure><ul><li>註:您也可以使用其他的正規化 Method，詳細請參考 <a href="https://learn.microsoft.com/zh-tw/dotnet/api/microsoft.ml.normalizationcatalog?view=ml-dotnet">NormalizationCatalog 類別</a></li></ul><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="https://learn.microsoft.com/zh-tw/dotnet/machine-learning/how-to-guides/prepare-data-ml-net">準備資料以建置模型</a><br><a href="https://learn.microsoft.com/zh-tw/dotnet/machine-learning/tutorials/predict-prices?source=recommendations">使用回歸搭配 ML.net 來預測價格</a><br><a href="https://rubikscode.net/2021/01/11/machine-learning-with-ml-net-linear-regression/">Machine Learning with ML.NET – Linear Regression</a><br><a href="https://learn.microsoft.com/zh-tw/dotnet/api/microsoft.ml.normalizationcatalog?view=ml-dotnet">NormalizationCatalog 類別</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;使用 ML.NET 中的 OlsTrainer 來預測資料，&lt;br&gt;當使用到某些資料進行模型定型時，&lt;br&gt;卻會發生 &lt;code&gt;Syste</summary>
      
    
    
    
    
    <category term="ML.NET" scheme="https://rainmakerho.github.io/tags/ML-NET/"/>
    
    <category term="p-Value" scheme="https://rainmakerho.github.io/tags/p-Value/"/>
    
    <category term="0x80131509" scheme="https://rainmakerho.github.io/tags/0x80131509/"/>
    
    <category term="outside expected" scheme="https://rainmakerho.github.io/tags/outside-expected/"/>
    
    <category term="Regression.Trainers.Ols" scheme="https://rainmakerho.github.io/tags/Regression-Trainers-Ols/"/>
    
  </entry>
  
  <entry>
    <title>C# Input string was not in a correct format.</title>
    <link href="https://rainmakerho.github.io/2023/01/06/input-string-was-not-in-a-correct-format/"/>
    <id>https://rainmakerho.github.io/2023/01/06/input-string-was-not-in-a-correct-format/</id>
    <published>2023-01-06T03:58:29.000Z</published>
    <updated>2023-01-06T04:04:47.411Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>程式要要透過 string.Format 的方式來改變 json 字串的內容。<br>結果發生了 <strong>Input string was not in a correct format</strong> 的錯誤</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>因為 <strong>string.Format</strong> 會看字串中的 <code>&#123;&#125;</code> 所以 json 就會遇到了問題。<br>原本的程式如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> tempStr = <span class="string">@&quot;&#123;</span></span><br><span class="line"><span class="string">        &quot;&quot;FormNo&quot;&quot;:&quot;&quot;&#123;0&#125;&quot;&quot;,</span></span><br><span class="line"><span class="string">        &quot;&quot;TenantDataList&quot;&quot;: [</span></span><br><span class="line"><span class="string">        &#123;&quot;&quot;TenantID&quot;&quot;:&quot;&quot;G001&quot;&quot;&#125;,</span></span><br><span class="line"><span class="string">        &#123;&quot;&quot;TenantID&quot;&quot;:&quot;&quot;G002&quot;&quot;&#125;</span></span><br><span class="line"><span class="string">          ]</span></span><br><span class="line"><span class="string">        &#125;&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> json = <span class="built_in">string</span>.Format(tempStr, <span class="string">&quot;Doc1&quot;</span>);</span><br></pre></td></tr></table></figure><p>那怎麼解呢?<br>就是重覆 <code>&#123;</code> or <code>&#125;</code> ，<br>所以調整後的程式如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> tempStr = <span class="string">@&quot;&#123;&#123;</span></span><br><span class="line"><span class="string">        &quot;&quot;FormNo&quot;&quot;:&quot;&quot;&#123;0&#125;&quot;&quot;,</span></span><br><span class="line"><span class="string">        &quot;&quot;TenantDataList&quot;&quot;: [</span></span><br><span class="line"><span class="string">        &#123;&#123;&quot;&quot;TenantID&quot;&quot;:&quot;&quot;G001&quot;&quot;&#125;&#125;,</span></span><br><span class="line"><span class="string">        &#123;&#123;&quot;&quot;TenantID&quot;&quot;:&quot;&quot;G002&quot;&quot;&#125;&#125;</span></span><br><span class="line"><span class="string">          ]</span></span><br><span class="line"><span class="string">        &#125;&#125;&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> json = <span class="built_in">string</span>.Format(tempStr, <span class="string">&quot;Doc1&quot;</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;程式要要透過 string.Format 的方式來改變 json 字串的內容。&lt;br&gt;結果發生了 &lt;strong&gt;Input string </summary>
      
    
    
    
    
    <category term="C#" scheme="https://rainmakerho.github.io/tags/C/"/>
    
    <category term="string.Format" scheme="https://rainmakerho.github.io/tags/string-Format/"/>
    
    <category term="json" scheme="https://rainmakerho.github.io/tags/json/"/>
    
    <category term="System.FormatException" scheme="https://rainmakerho.github.io/tags/System-FormatException/"/>
    
    <category term="Input string was not in a correct format" scheme="https://rainmakerho.github.io/tags/Input-string-was-not-in-a-correct-format/"/>
    
  </entry>
  
  <entry>
    <title>Checkmarx DOM_Open_Redirect</title>
    <link href="https://rainmakerho.github.io/2023/01/06/checkmarx-client-dom-open-redirect/"/>
    <id>https://rainmakerho.github.io/2023/01/06/checkmarx-client-dom-open-redirect/</id>
    <published>2023-01-06T03:31:40.000Z</published>
    <updated>2023-01-06T03:48:52.792Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>程式中的 js 檔中，在 click event 中，從 DOM 取得它的屬性做為 url 去改變 Anchor 的 href 屬性。<br>Checkmarx 就會出 <strong>Client_Potential_DOM_Open_Redirect</strong> 的問題，<br>從 <code>attr</code> 到 <code>href</code></p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>原本的 js 類似如下，</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> actionUrl = $tablist.<span class="title function_">attr</span>(<span class="string">&quot;action-url&quot;</span>);</span><br><span class="line"><span class="comment">//.... other codes</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">a.<span class="property">target</span> = <span class="string">&quot;_blank&quot;</span>;</span><br><span class="line">a.<span class="property">href</span> = actionUrl;</span><br></pre></td></tr></table></figure><p>因為 url 是從 DOM 屬性得，所以有被竄改的風險。<br>所以修改方式有以下方式，</p><p>1.固定的 url</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//var actionUrl = $tablist.attr(&#x27;action-url&#x27;);</span></span><br><span class="line"><span class="keyword">var</span> actionUrl = <span class="string">&quot;https://localhost/doc/action/&quot;</span>;</span><br><span class="line"><span class="comment">//.... other codes</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">a.<span class="property">target</span> = <span class="string">&quot;_blank&quot;</span>;</span><br><span class="line">a.<span class="property">href</span> = actionUrl;</span><br></pre></td></tr></table></figure><p>2.從 Server 端取回需要的 url</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//var actionUrl = $tablist.attr(&#x27;action-url&#x27;);</span></span><br><span class="line"><span class="keyword">var</span> urlId = $tablist.<span class="title function_">attr</span>(<span class="string">&quot;action-url-id&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> actionUrl = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="title function_">fetch</span>(<span class="string">&quot;./api/urls/&quot;</span> + urlId)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function">(<span class="params">response</span>) =&gt;</span> response.<span class="title function_">json</span>())</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function">(<span class="params">data</span>) =&gt;</span> (actionUrl = data.<span class="property">url</span>));</span><br><span class="line"><span class="comment">//.... other codes</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">a.<span class="property">target</span> = <span class="string">&quot;_blank&quot;</span>;</span><br><span class="line">a.<span class="property">href</span> = actionUrl;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;程式中的 js 檔中，在 click event 中，從 DOM 取得它的屬性做為 url 去改變 Anchor 的 href 屬性。&lt;br</summary>
      
    
    
    
    
    <category term="Checkmarx" scheme="https://rainmakerho.github.io/tags/Checkmarx/"/>
    
    <category term="Client_DOM_Open_Redirect" scheme="https://rainmakerho.github.io/tags/Client-DOM-Open-Redirect/"/>
    
    <category term="Client_Potential_DOM_Open_Redirect" scheme="https://rainmakerho.github.io/tags/Client-Potential-DOM-Open-Redirect/"/>
    
  </entry>
  
  <entry>
    <title>將 Http Trigger Function 內容寫到 Queue 中，並透過 Queue trigger Function 取出來，存到 Blob</title>
    <link href="https://rainmakerho.github.io/2022/12/29/azure-function-bindings-triggers/"/>
    <id>https://rainmakerho.github.io/2022/12/29/azure-function-bindings-triggers/</id>
    <published>2022-12-29T07:32:05.000Z</published>
    <updated>2022-12-29T13:01:44.392Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在前一篇<a href="https://rainmakerho.github.io/2022/12/29/azure-function-by-vs/">使用 Visual Studio 建立 Azure Function</a>，<br>建立了一個 Http Trigger Function ，是將 訊息 Response 出去，<br>接下來可以將<strong>訊息</strong>放到 Storage Queue 之中，<br>並新增一個 Queue trigger Function 來取得 Queue 中的資料，<br>並存到 Blob 之中</p><h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><p>1.加入 Microsoft.Azure.WebJobs.Extensions.Storage 及 Azure.Storage.Blobs 套件</p><img src="/2022/12/29/azure-function-bindings-triggers/01.png" class="" title="nuget"><p>在 Nuget 中加入 Microsoft.Azure.WebJobs.Extensions.Storage 及 Azure.Storage.Blobs 套件</p><p>2.加入 Queue 的 Binding<br>原有的 Function1 加入 Queue 的 Binding (<code>[Queue(&quot;messages&quot;, Connection=&quot;AzureWebJobsStorage&quot;)] IAsyncCollector&lt;string&gt; messageQueue</code>)，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Mvc;</span><br><span class="line"><span class="keyword">using</span> Microsoft.Azure.WebJobs;</span><br><span class="line"><span class="keyword">using</span> Microsoft.Azure.WebJobs.Extensions.Http;</span><br><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Http;</span><br><span class="line"><span class="keyword">using</span> Microsoft.Extensions.Logging;</span><br><span class="line"><span class="keyword">using</span> Newtonsoft.Json;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">Function1</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">FunctionName(<span class="string">&quot;Function1&quot;</span>)</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> Task&lt;IActionResult&gt; <span class="title">Run</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">        [HttpTrigger(AuthorizationLevel.Anonymous, <span class="string">&quot;get&quot;</span>, <span class="string">&quot;post&quot;</span>, Route = <span class="literal">null</span></span>)] HttpRequest req,</span></span><br><span class="line"><span class="function">        [<span class="title">Queue</span>(<span class="params"><span class="string">&quot;messages&quot;</span>, Connection=<span class="string">&quot;AzureWebJobsStorage&quot;</span></span>)] IAsyncCollector&lt;<span class="built_in">string</span>&gt; messageQueue,</span></span><br><span class="line"><span class="function">        ILogger log)</span></span><br><span class="line">    &#123;</span><br><span class="line">        log.LogInformation(<span class="string">&quot;C# HTTP trigger function processed a request.&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">string</span> name = req.Query[<span class="string">&quot;name&quot;</span>];</span><br><span class="line"></span><br><span class="line">        <span class="built_in">string</span> requestBody = <span class="keyword">await</span> <span class="keyword">new</span> StreamReader(req.Body).ReadToEndAsync();</span><br><span class="line">        <span class="built_in">dynamic</span> data = JsonConvert.DeserializeObject(requestBody);</span><br><span class="line">        name = name ?? data?.name;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">string</span> responseMessage = <span class="built_in">string</span>.IsNullOrEmpty(name)</span><br><span class="line">            ? <span class="string">&quot;This HTTP triggered function executed successfully. Pass a name in the query string or in the request body for a personalized response.&quot;</span></span><br><span class="line">            : <span class="string">$&quot;Hello, <span class="subst">&#123;name&#125;</span>. This HTTP triggered function executed successfully.&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">await</span> messageQueue.AddAsync(responseMessage);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> OkObjectResult(responseMessage);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>設定好 Queue 的 Binding 後，就可以將訊息放到 Queue 之中(<code>await messageQueue.AddAsync(responseMessage)</code>)<br>因為是使用 Local 測試，所以 Connection 設定為 AzureWebJobsStorage</p><p>這裡可以先執行程式，試一下訊息是否會新增到 Queue 之中，<br>可以透過 <a href="https://azure.microsoft.com/en-us/products/storage/storage-explorer/">Azure Storage Explorer</a> 來查看</p><img src="/2022/12/29/azure-function-bindings-triggers/02.png" class="" title="Queue"><p>3.新增 Queue trigger Function<br>新增名稱為 QueueListeners 的 Queue trigger Function，<br>並設定 Connection string setting name 及 Queue name</p><img src="/2022/12/29/azure-function-bindings-triggers/03.png" class="" title="Queue trigger Function"><p>4.加入 Blob 的 Binding<br>因為要將 Queue 內的訊息寫到 Blog 之中，<br>所以在 QueueListeners 的 Run Method 要加入 Blob 的 Binding</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> Azure.Storage.Blobs;</span><br><span class="line"><span class="keyword">using</span> Microsoft.Azure.WebJobs;</span><br><span class="line"><span class="keyword">using</span> Microsoft.Extensions.Logging;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">QueueListeners</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">FunctionName(<span class="string">&quot;QueueListeners&quot;</span>)</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">Run</span>(<span class="params">[QueueTrigger(<span class="string">&quot;messages&quot;</span>, Connection = <span class="string">&quot;AzureWebJobsStorage&quot;</span></span>)]<span class="built_in">string</span> message,</span></span><br><span class="line"><span class="function">        [<span class="title">Blob</span>(<span class="params"><span class="string">&quot;messages&quot;</span>, Connection = <span class="string">&quot;AzureWebJobsStorage&quot;</span></span>)] BlobContainerClient container,</span></span><br><span class="line"><span class="function">        ILogger log)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">await</span> container.CreateIfNotExistsAsync();</span><br><span class="line">        <span class="keyword">var</span> blob = container.GetBlobClient(<span class="string">$&quot;<span class="subst">&#123;Guid.NewGuid().ToString(<span class="string">&quot;N&quot;</span>)&#125;</span>.txt&quot;</span>);</span><br><span class="line">        <span class="keyword">await</span> blob.UploadAsync(BinaryData.FromString(<span class="string">$&quot;Message:<span class="subst">&#123;message&#125;</span>&quot;</span>), overwrite: <span class="literal">true</span>);</span><br><span class="line">        log.LogInformation(<span class="string">$&quot;C# Queue trigger function processed: <span class="subst">&#123;message&#125;</span>&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>當 messages Queue 有訊息時，就會 Trigger QueueListeners Function，<br>並將訊息當成參數傳入，所以再將訊息透過 <code>UploadAsync</code> 寫到 Blob</p><p>執行後，可以發現 message Queue 中的訊息已被 QueueListeners Function 處理完畢，<br>messages Blob 將每個 message Queue 的訊息存成文字檔。</p><img src="/2022/12/29/azure-function-bindings-triggers/04.png" class="" title="message Blob"><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/storage/Azure.Storage.Blobs/AzureStorageNetMigrationV12.md#migrating-from-cloudblockblob">Migration Guide: From Microsoft.Azure.Storage.Blob to Azure.Storage.Blobs</a><br><a href="https://markheath.net/post/azure-functions-table-storage">Update Your Azure Functions Table Storage Bindings</a><br><a href="https://azure.microsoft.com/en-us/products/storage/storage-explorer/">Azure Storage Explorer</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;在前一篇&lt;a href=&quot;https://rainmakerho.github.io/2022/12/29/azure-function-b</summary>
      
    
    
    
    
    <category term="Azure Function" scheme="https://rainmakerho.github.io/tags/Azure-Function/"/>
    
    <category term="Function App" scheme="https://rainmakerho.github.io/tags/Function-App/"/>
    
    <category term="Queue trigger" scheme="https://rainmakerho.github.io/tags/Queue-trigger/"/>
    
    <category term="Blob" scheme="https://rainmakerho.github.io/tags/Blob/"/>
    
  </entry>
  
  <entry>
    <title>使用 Visual Studio 建立 Azure Function</title>
    <link href="https://rainmakerho.github.io/2022/12/29/azure-function-by-vs/"/>
    <id>https://rainmakerho.github.io/2022/12/29/azure-function-by-vs/</id>
    <published>2022-12-29T01:51:28.000Z</published>
    <updated>2022-12-29T05:20:17.362Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在 <a href="https://portal.azure.com/">Azure Portal</a> 可以容易的建立 Function App。<br>以下將一步步透過 Visual Studio 來建立 Azure Function App</p><h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><p>1.確認 <strong>Azure 開發</strong> 有安裝<br>在 Visual Studio Installer 中，請確認 <strong>Azure 開發</strong> 有安裝</p><img src="/2022/12/29/azure-function-by-vs/01.png" class="" title="Azure開發"><p>2.建立 <strong>Azure Functions</strong> 專案</p><img src="/2022/12/29/azure-function-by-vs/02.png" class="" title="Filter-Template"><p>輸入 function 來篩選 Visual Studio 的範本</p><img src="/2022/12/29/azure-function-by-vs/03.png" class="" title="Project Name"><p>設定專案名稱為 FunctionApp1</p><img src="/2022/12/29/azure-function-by-vs/04.png" class="" title="Others"><p>設定 .NET 6.0 ，先不建立 Function ，並勾選<strong>將 Azurite 用於執行階段 儲存帳戶(AzureWebJobsStorage)</strong>(在 local 模擬)</p><img src="/2022/12/29/azure-function-by-vs/05.png" class="" title="azurite.exe"><p>因為勾選 <strong>azuite</strong> 所以專案建立好之後，會啟動它</p><p>3.Check local.settings.json</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;IsEncrypted&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;Values&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;AzureWebJobsStorage&quot;</span><span class="punctuation">:</span> <span class="string">&quot;UseDevelopmentStorage=true&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;FUNCTIONS_WORKER_RUNTIME&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dotnet&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>因為勾選**將 Azurite 用於執行階段 儲存帳戶(AzureWebJobsStorage)**，<br>所以 local.settings.json 中 AzureWebJobsStorage 值為 <strong>UseDevelopmentStorage&#x3D;true</strong></p><p>4.新增 Http Trigger Function</p><img src="/2022/12/29/azure-function-by-vs/06.png" class="" title="new function"><p>新增 Http Trigger 為範本的 Function，並將 Authorization level 設定為 Anonymous，<br>讓測試時，不需要驗證</p><p>5.Check 專案內容</p><img src="/2022/12/29/azure-function-by-vs/07.png" class="" title="project"><p>Function1 附檔名是 cs (在 Portal 上的是 csx)，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">Function1</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">FunctionName(<span class="string">&quot;Function1&quot;</span>)</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> Task&lt;IActionResult&gt; <span class="title">Run</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">        [HttpTrigger(AuthorizationLevel.Anonymous, <span class="string">&quot;get&quot;</span>, <span class="string">&quot;post&quot;</span>, Route = <span class="literal">null</span></span>)] HttpRequest req,</span></span><br><span class="line"><span class="function">        ILogger log)</span></span><br><span class="line">    &#123;</span><br><span class="line">        log.LogInformation(<span class="string">&quot;C# HTTP trigger function processed a request.&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">string</span> name = req.Query[<span class="string">&quot;name&quot;</span>];</span><br><span class="line"></span><br><span class="line">        <span class="built_in">string</span> requestBody = <span class="keyword">await</span> <span class="keyword">new</span> StreamReader(req.Body).ReadToEndAsync();</span><br><span class="line">        <span class="built_in">dynamic</span> data = JsonConvert.DeserializeObject(requestBody);</span><br><span class="line">        name = name ?? data?.name;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">string</span> responseMessage = <span class="built_in">string</span>.IsNullOrEmpty(name)</span><br><span class="line">            ? <span class="string">&quot;This HTTP triggered function executed successfully. Pass a name in the query string or in the request body for a personalized response.&quot;</span></span><br><span class="line">            : <span class="string">$&quot;Hello, <span class="subst">&#123;name&#125;</span>. This HTTP triggered function executed successfully.&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> OkObjectResult(responseMessage);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>FunctionName 設定為 Function1 ，<br>可以發現並沒有 <strong>Function.json</strong> ，<br>因為在 Build 專案後，自動產生出來。</p><img src="/2022/12/29/azure-function-by-vs/08.png" class="" title="net6.0"><img src="/2022/12/29/azure-function-by-vs/09.png" class="" title="function.json"><p>執行 Function1 會執行 FunctionApp1.dll 中的 Function1.Run Method</p><p>6.執行程式<br>按下執行會開啟命令視窗，並顯示 Function1 的 Url，<br>在 Browser 輸入該 Url 就可以進行測試，</p><img src="/2022/12/29/azure-function-by-vs/10.png" class="" title="Run"><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://learn.microsoft.com/zh-tw/azure/azure-functions/functions-run-local">使用 Azure Functions Core Tools</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;在 &lt;a href=&quot;https://portal.azure.com/&quot;&gt;Azure Portal&lt;/a&gt; 可以容易的建立 Functio</summary>
      
    
    
    
    
    <category term="C#" scheme="https://rainmakerho.github.io/tags/C/"/>
    
    <category term="Visual Studio" scheme="https://rainmakerho.github.io/tags/Visual-Studio/"/>
    
    <category term="Azure Function" scheme="https://rainmakerho.github.io/tags/Azure-Function/"/>
    
    <category term="Function App" scheme="https://rainmakerho.github.io/tags/Function-App/"/>
    
  </entry>
  
  <entry>
    <title>在 SQL Graph 資料表中找某個 Node 的所有 Path</title>
    <link href="https://rainmakerho.github.io/2022/12/27/mssql-graph-query-find-all-path-node/"/>
    <id>https://rainmakerho.github.io/2022/12/27/mssql-graph-query-find-all-path-node/</id>
    <published>2022-12-27T07:17:58.000Z</published>
    <updated>2022-12-27T08:00:08.586Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近將資料存到 MSSQL 的 Graph Table 之中，<br>想要查到某個 Node 在所有關系中路徑，例如下圖 C 的所有 Path。<br>剛好跟這篇<a href="https://stackoverflow.com/questions/59632206/sql-server-graph-query-find-all-paths-to-node">sql server graph query, find all paths to node</a>的問題相同。</p><img src="/2022/12/27/mssql-graph-query-find-all-path-node/01.png" class="" title="關係圖"><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>依<a href="https://stackoverflow.com/users/6609966/sanora">sanora</a>提供的<a href="https://dbfiddle.uk/47z650iA">範例</a>可以分別取得 開始為 C 的整個路徑 及 結束為 C 的整個路徑。<br>初始資料如下，</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> Person;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Person (userName <span class="type">VARCHAR</span>(<span class="number">100</span>)  <span class="keyword">PRIMARY</span> KEY) <span class="keyword">AS</span> NODE;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> Person (userName) <span class="keyword">VALUES</span> (<span class="string">&#x27;A&#x27;</span>),(<span class="string">&#x27;B&#x27;</span>),(<span class="string">&#x27;C&#x27;</span>),(<span class="string">&#x27;D&#x27;</span>),(<span class="string">&#x27;E&#x27;</span>),(<span class="string">&#x27;F&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> Follow;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Follow <span class="keyword">AS</span> EDGE;</span><br><span class="line"></span><br><span class="line"><span class="comment">--建立如上圖的關係資料</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> Follow ($from_id, $to_id) <span class="keyword">VALUES</span> (</span><br><span class="line">   (<span class="keyword">SELECT</span> $node_id <span class="keyword">FROM</span> dbo.Person <span class="keyword">WHERE</span> userName <span class="operator">=</span> <span class="string">&#x27;A&#x27;</span>),</span><br><span class="line">   (<span class="keyword">SELECT</span> $node_id <span class="keyword">FROM</span> dbo.Person <span class="keyword">WHERE</span> userName <span class="operator">=</span> <span class="string">&#x27;E&#x27;</span>)),</span><br><span class="line"></span><br><span class="line">   ((<span class="keyword">SELECT</span> $node_id <span class="keyword">FROM</span> dbo.Person <span class="keyword">WHERE</span> userName <span class="operator">=</span> <span class="string">&#x27;E&#x27;</span>),</span><br><span class="line">   (<span class="keyword">SELECT</span> $node_id <span class="keyword">FROM</span> dbo.Person <span class="keyword">WHERE</span> userName <span class="operator">=</span> <span class="string">&#x27;C&#x27;</span>)),</span><br><span class="line"></span><br><span class="line">   ((<span class="keyword">SELECT</span> $node_id <span class="keyword">FROM</span> dbo.Person <span class="keyword">WHERE</span> userName <span class="operator">=</span> <span class="string">&#x27;C&#x27;</span>),</span><br><span class="line">   (<span class="keyword">SELECT</span> $node_id <span class="keyword">FROM</span> dbo.Person <span class="keyword">WHERE</span> userName <span class="operator">=</span> <span class="string">&#x27;A&#x27;</span>)),</span><br><span class="line"></span><br><span class="line">   ((<span class="keyword">SELECT</span> $node_id <span class="keyword">FROM</span> dbo.Person <span class="keyword">WHERE</span> userName <span class="operator">=</span> <span class="string">&#x27;A&#x27;</span>),</span><br><span class="line">   (<span class="keyword">SELECT</span> $node_id <span class="keyword">FROM</span> dbo.Person <span class="keyword">WHERE</span> userName <span class="operator">=</span> <span class="string">&#x27;F&#x27;</span>)),</span><br><span class="line"></span><br><span class="line">   ((<span class="keyword">SELECT</span> $node_id <span class="keyword">FROM</span> dbo.Person <span class="keyword">WHERE</span> userName <span class="operator">=</span> <span class="string">&#x27;F&#x27;</span>),</span><br><span class="line">   (<span class="keyword">SELECT</span> $node_id <span class="keyword">FROM</span> dbo.Person <span class="keyword">WHERE</span> userName <span class="operator">=</span> <span class="string">&#x27;B&#x27;</span>)),</span><br><span class="line"></span><br><span class="line">   ((<span class="keyword">SELECT</span> $node_id <span class="keyword">FROM</span> dbo.Person <span class="keyword">WHERE</span> userName <span class="operator">=</span> <span class="string">&#x27;B&#x27;</span>),</span><br><span class="line">   (<span class="keyword">SELECT</span> $node_id <span class="keyword">FROM</span> dbo.Person <span class="keyword">WHERE</span> userName <span class="operator">=</span> <span class="string">&#x27;F&#x27;</span>)),</span><br><span class="line"></span><br><span class="line">   ((<span class="keyword">SELECT</span> $node_id <span class="keyword">FROM</span> dbo.Person <span class="keyword">WHERE</span> userName <span class="operator">=</span> <span class="string">&#x27;B&#x27;</span>),</span><br><span class="line">   (<span class="keyword">SELECT</span> $node_id <span class="keyword">FROM</span> dbo.Person <span class="keyword">WHERE</span> userName <span class="operator">=</span> <span class="string">&#x27;E&#x27;</span>)),</span><br><span class="line"></span><br><span class="line">   ((<span class="keyword">SELECT</span> $node_id <span class="keyword">FROM</span> dbo.Person <span class="keyword">WHERE</span> userName <span class="operator">=</span> <span class="string">&#x27;E&#x27;</span>),</span><br><span class="line">   (<span class="keyword">SELECT</span> $node_id <span class="keyword">FROM</span> dbo.Person <span class="keyword">WHERE</span> userName <span class="operator">=</span> <span class="string">&#x27;B&#x27;</span>));</span><br></pre></td></tr></table></figure><p>要找路徑的話，可以透過 <a href="https://learn.microsoft.com/en-us/sql/relational-databases/graphs/sql-graph-shortest-path?view=sql-server-ver16">SHORTEST_PATH</a> 這個 Fuction ，<br>並給它要查詢的 Node 及 Edge Pattern ，<br>例如 Query 1 ，找開始節點為 C (<code>p1.userName = &#39;C&#39;</code>)的所有路徑(使用 <strong>+</strong>)，</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">        p1.userName,</span><br><span class="line">        p1.userName <span class="keyword">as</span> StartNode,</span><br><span class="line">        <span class="built_in">LAST_VALUE</span>(p2.userName) <span class="keyword">WITHIN</span> <span class="keyword">GROUP</span> (GRAPH PATH) <span class="keyword">AS</span> FinalNode,</span><br><span class="line">        STRING_AGG(p2.userName,<span class="string">&#x27;-&gt;&#x27;</span>) <span class="keyword">WITHIN</span> <span class="keyword">GROUP</span> (GRAPH PATH) <span class="keyword">AS</span> [Edges Path],</span><br><span class="line">        <span class="built_in">COUNT</span>(p2.userName) <span class="keyword">WITHIN</span> <span class="keyword">GROUP</span> (GRAPH PATH) <span class="keyword">AS</span> Levels</span><br><span class="line">    <span class="keyword">FROM</span></span><br><span class="line">        dbo.Person p1,</span><br><span class="line">        dbo.Person <span class="keyword">FOR</span> PATH p2,</span><br><span class="line">        dbo.Follow <span class="keyword">FOR</span> PATH Follow</span><br><span class="line">    <span class="keyword">WHERE</span></span><br><span class="line">        <span class="keyword">MATCH</span>(SHORTEST_PATH(p1(<span class="operator">-</span>(Follow)<span class="operator">-</span><span class="operator">&gt;</span>p2)<span class="operator">+</span>))</span><br><span class="line">        <span class="keyword">AND</span> p1.userName <span class="operator">=</span> <span class="string">&#x27;C&#x27;</span>;</span><br></pre></td></tr></table></figure><p>結果如下，</p><img src="/2022/12/27/mssql-graph-query-find-all-path-node/02.png" class="" title="C開頭"><p>再來要找出最後節點為 C 的所有路徑，<br>因為最後節點要 Search 過之後才會知道，<br>所以這裡用 SubQuery 後，再來過濾 <code>FinalNode = &#39;C&#39;</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- Query 2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- To find all the incoming connection for a node,</span></span><br><span class="line"><span class="comment">-- we need to wrap the query and filter for the final node like below:</span></span><br><span class="line"><span class="comment">--</span></span><br><span class="line"><span class="comment">-- <span class="doctag">NOTE:</span> There is a TYPO in the SO thread. The regex &#x27;+&#x27; is missing from SHORTEST_PATH.</span></span><br><span class="line"><span class="comment">-- See above Query 1 for the correct syntax</span></span><br><span class="line"><span class="comment">--</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    username, StartNode, [Edges Path], FinalNode, Levels</span><br><span class="line"><span class="keyword">FROM</span> (</span><br><span class="line">    <span class="keyword">SELECT</span></span><br><span class="line">        P1.username,</span><br><span class="line">        P1.username <span class="keyword">as</span> StartNode,</span><br><span class="line">        STRING_AGG(P2.userName,<span class="string">&#x27;-&gt;&#x27;</span>) <span class="keyword">WITHIN</span> <span class="keyword">GROUP</span> (GRAPH PATH) <span class="keyword">AS</span> [Edges Path],</span><br><span class="line">        <span class="built_in">LAST_VALUE</span>(P2.userName) <span class="keyword">WITHIN</span> <span class="keyword">GROUP</span> (GRAPH PATH) <span class="keyword">AS</span> FinalNode,</span><br><span class="line">        <span class="built_in">COUNT</span>(P2.userName) <span class="keyword">WITHIN</span> <span class="keyword">GROUP</span> (GRAPH PATH) <span class="keyword">AS</span> Levels</span><br><span class="line">    <span class="keyword">FROM</span></span><br><span class="line">        Person P1,</span><br><span class="line">        Person <span class="keyword">FOR</span> PATH P2,</span><br><span class="line">        Follow <span class="keyword">FOR</span> PATH Follow</span><br><span class="line">    <span class="keyword">WHERE</span></span><br><span class="line">        <span class="keyword">MATCH</span>(SHORTEST_PATH(P1(<span class="operator">-</span>(Follow)<span class="operator">-</span><span class="operator">&gt;</span>P2)<span class="operator">+</span>))</span><br><span class="line"> ) <span class="keyword">AS</span> Q</span><br><span class="line"> <span class="keyword">WHERE</span> Q.FinalNode <span class="operator">=</span> <span class="string">&#x27;C&#x27;</span></span><br></pre></td></tr></table></figure><p>結果如下，</p><img src="/2022/12/27/mssql-graph-query-find-all-path-node/03.png" class="" title="C結尾"><p>所以如果要 C 在關係中的所有路徑，就將它們 Union 起來就可以了，</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">        p1.userName,</span><br><span class="line">        p1.userName <span class="keyword">as</span> StartNode,</span><br><span class="line">        <span class="built_in">LAST_VALUE</span>(p2.userName) <span class="keyword">WITHIN</span> <span class="keyword">GROUP</span> (GRAPH PATH) <span class="keyword">AS</span> FinalNode,</span><br><span class="line">        STRING_AGG(p2.userName,<span class="string">&#x27;-&gt;&#x27;</span>) <span class="keyword">WITHIN</span> <span class="keyword">GROUP</span> (GRAPH PATH) <span class="keyword">AS</span> [Edges Path],</span><br><span class="line">        <span class="built_in">COUNT</span>(p2.userName) <span class="keyword">WITHIN</span> <span class="keyword">GROUP</span> (GRAPH PATH) <span class="keyword">AS</span> Levels</span><br><span class="line">    <span class="keyword">FROM</span></span><br><span class="line">        dbo.Person p1,</span><br><span class="line">        dbo.Person <span class="keyword">FOR</span> PATH p2,</span><br><span class="line">        dbo.Follow <span class="keyword">FOR</span> PATH Follow</span><br><span class="line">    <span class="keyword">WHERE</span></span><br><span class="line">        <span class="keyword">MATCH</span>(SHORTEST_PATH(p1(<span class="operator">-</span>(Follow)<span class="operator">-</span><span class="operator">&gt;</span>p2)<span class="operator">+</span>))</span><br><span class="line">        <span class="keyword">AND</span> p1.userName <span class="operator">=</span> <span class="string">&#x27;C&#x27;</span></span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    username, StartNode, [Edges Path], FinalNode, Levels</span><br><span class="line"><span class="keyword">FROM</span> (</span><br><span class="line">    <span class="keyword">SELECT</span></span><br><span class="line">        P1.username,</span><br><span class="line">        P1.username <span class="keyword">as</span> StartNode,</span><br><span class="line">        STRING_AGG(P2.userName,<span class="string">&#x27;-&gt;&#x27;</span>) <span class="keyword">WITHIN</span> <span class="keyword">GROUP</span> (GRAPH PATH) <span class="keyword">AS</span> [Edges Path],</span><br><span class="line">        <span class="built_in">LAST_VALUE</span>(P2.userName) <span class="keyword">WITHIN</span> <span class="keyword">GROUP</span> (GRAPH PATH) <span class="keyword">AS</span> FinalNode,</span><br><span class="line">        <span class="built_in">COUNT</span>(P2.userName) <span class="keyword">WITHIN</span> <span class="keyword">GROUP</span> (GRAPH PATH) <span class="keyword">AS</span> Levels</span><br><span class="line">    <span class="keyword">FROM</span></span><br><span class="line">        Person P1,</span><br><span class="line">        Person <span class="keyword">FOR</span> PATH P2,</span><br><span class="line">        Follow <span class="keyword">FOR</span> PATH Follow</span><br><span class="line">    <span class="keyword">WHERE</span></span><br><span class="line">        <span class="keyword">MATCH</span>(SHORTEST_PATH(P1(<span class="operator">-</span>(Follow)<span class="operator">-</span><span class="operator">&gt;</span>P2)<span class="operator">+</span>))</span><br><span class="line"> ) <span class="keyword">AS</span> Q</span><br><span class="line"> <span class="keyword">WHERE</span> Q.FinalNode <span class="operator">=</span> <span class="string">&#x27;C&#x27;</span></span><br></pre></td></tr></table></figure><p>結果如下，</p><img src="/2022/12/27/mssql-graph-query-find-all-path-node/04.png" class="" title="C在關係中的所有路徑"><p>另外，本來要針對 Levels 來過濾，但發現查詢速度會變慢，<br>例如原本近 0 秒結果會出來，加上 Levels 來過濾會變成 4~10 秒。</p><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="https://stackoverflow.com/questions/59632206/sql-server-graph-query-find-all-paths-to-node">sql server graph query, find all paths to node</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;最近將資料存到 MSSQL 的 Graph Table 之中，&lt;br&gt;想要查到某個 Node 在所有關系中路徑，例如下圖 C 的所有 Pat</summary>
      
    
    
    
    
    <category term="node" scheme="https://rainmakerho.github.io/tags/node/"/>
    
    <category term="mssql" scheme="https://rainmakerho.github.io/tags/mssql/"/>
    
    <category term="graph" scheme="https://rainmakerho.github.io/tags/graph/"/>
    
    <category term="all path" scheme="https://rainmakerho.github.io/tags/all-path/"/>
    
    <category term="edge" scheme="https://rainmakerho.github.io/tags/edge/"/>
    
  </entry>
  
  <entry>
    <title>AntV G6 資料更新顯示</title>
    <link href="https://rainmakerho.github.io/2022/12/27/ant-g6-update-graph/"/>
    <id>https://rainmakerho.github.io/2022/12/27/ant-g6-update-graph/</id>
    <published>2022-12-27T05:20:40.000Z</published>
    <updated>2022-12-27T05:50:32.339Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>最近將資料存到 MSSQL 的 Graph Table 之中，然後再取出資料透過 <a href="https://g6.antv.antgroup.com/">G6 图可视化引擎</a>，只要給 起點、Label 及終點就可以把關係圖畫出來。<br>在 Button 的 Click 事件之中，取得資料，建立 graph ，給 graph 資料，呼叫 graph.render 來畫面關係圖。<br>但第 2 次資料有更新時，圖卻不會跟著更新，要怎麼解決呢?</p><h3 id="解決"><a href="#解決" class="headerlink" title="解決"></a>解決</h3><p>在 Button 的 Click 事件之中，取得資料，建立 graph ，給 graph 資料，呼叫 graph.render 來畫面關係圖</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//const data = 依條件取得資料 ...</span></span><br><span class="line">$(<span class="string">&quot;#btnSearch&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> graph = <span class="keyword">new</span> <span class="variable constant_">G6</span>.<span class="title class_">Graph</span>(&#123;</span><br><span class="line">    <span class="attr">container</span>: <span class="string">&quot;mountNode&quot;</span>,</span><br><span class="line">    <span class="attr">width</span>: <span class="number">800</span>,</span><br><span class="line">    <span class="attr">height</span>: <span class="number">500</span>,</span><br><span class="line">  &#125;);</span><br><span class="line">  graph.<span class="title function_">data</span>(data);</span><br><span class="line">  graph.<span class="title function_">render</span>();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>但是雖然資料有改變，但圖還是沒有更新。</p><p>後來參考 <a href="https://stackoverflow.com/questions/67108651/antv-g6-and-react-how-to-update-graph">antv&#x2F;g6 and react. How to update graph?</a> ，建立全域的 graph 變數，當 graph 不是 null 時，再建立 <strong>G6.Graph</strong> 就可以正常更新圖了。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> graph = <span class="literal">null</span>;</span><br><span class="line"><span class="comment">//const data = 依條件取得資料 ...</span></span><br><span class="line">$(<span class="string">&quot;#btnSearch&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (!graph) &#123;</span><br><span class="line">    <span class="keyword">const</span> graph = <span class="keyword">new</span> <span class="variable constant_">G6</span>.<span class="title class_">Graph</span>(&#123;</span><br><span class="line">      <span class="attr">container</span>: <span class="string">&quot;mountNode&quot;</span>,</span><br><span class="line">      <span class="attr">width</span>: <span class="number">800</span>,</span><br><span class="line">      <span class="attr">height</span>: <span class="number">500</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  graph.<span class="title function_">data</span>(data);</span><br><span class="line">  graph.<span class="title function_">render</span>();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://stackoverflow.com/questions/67108651/antv-g6-and-react-how-to-update-graph">antv&#x2F;g6 and react. How to update graph?</a><br><a href="https://g6.antv.antgroup.com/">G6 图可视化引擎</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;最近將資料存到 MSSQL 的 Graph Table 之中，然後再取出資料透過 &lt;a href=&quot;https://g6.antv.antg</summary>
      
    
    
    
    
    <category term="AntV" scheme="https://rainmakerho.github.io/tags/AntV/"/>
    
    <category term="G6" scheme="https://rainmakerho.github.io/tags/G6/"/>
    
    <category term="Update" scheme="https://rainmakerho.github.io/tags/Update/"/>
    
    <category term="Graph" scheme="https://rainmakerho.github.io/tags/Graph/"/>
    
    <category term="G6.Graph" scheme="https://rainmakerho.github.io/tags/G6-Graph/"/>
    
  </entry>
  
  <entry>
    <title>AxiosError &#39;127.0.0.1&#39; &#39;ECONNREFUSED&#39;</title>
    <link href="https://rainmakerho.github.io/2022/12/20/AxiosError-127-0-0-1-ECONNREFUSED/"/>
    <id>https://rainmakerho.github.io/2022/12/20/AxiosError-127-0-0-1-ECONNREFUSED/</id>
    <published>2022-12-20T10:09:25.000Z</published>
    <updated>2022-12-20T09:50:45.608Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>同事詢問，程式透過 axios 來發出 post ，<br>URL 給的是 <code>http://localhost:3978</code> ，<br>但卻會發生 AxiosError ECONNREFUSED 的錯誤，</p><img src="/2022/12/20/AxiosError-127-0-0-1-ECONNREFUSED/01.jpg" class="" title="AxiosError"><h3 id="解決"><a href="#解決" class="headerlink" title="解決"></a>解決</h3><p>同事開啟 Browser 連到 <code>http://localhost:3978</code> 卻是可以正常顯示網頁，<br>看 axios 噴出的錯誤 Address 是 127.0.0.1 ，<br>於是請同事在 Browser 上改輸入 <code>http://127.0.0.1:3978</code> 結果會出現 <strong>ERR_CONNECTION_REFUSED</strong> 的錯誤，<br>改用自已的 IP ，也是會出現 <strong>ERR_CONNECTION_REFUSED</strong> 的錯誤。</p><p>Bingo….<br>從這個問題想帶給大家的是 Debug 的觀念，<br>有時在 Debug 時，會因為習慣，而導致忽略掉細微的資訊，<br>大家都會認為 localhost 就是 127.0.0.1 ，<br>所以在 Browser 上 <code>http://localhost</code> 可以正常呈現，<code>http://127.0.0.1</code> 也一定可以。<br>就會導致將問題導向程式本身，懷疑程式是不是寫的有問題，而浪費的許多時間。</p><p>殊不知，<code>localhost</code> 是對應到 ipv6 的 <code>::1:</code> ，而同事的本機 ipv4 是被連到的。<br>後來請同事參考 <a href="https://stackoverflow.com/questions/25652409/localhost-is-working-but-not-127-0-0-1-in-windows-7">localhost is working but not 127.0.0.1 in windows 7</a> ，讓它的 ipv4 可以被連到。</p><blockquote><p>雖然這問題不難，但容易讓除錯的人進入到誤區之中<br>筆者有時也會進入到這種偵錯的誤區之中，還好有同事、朋友的一起幫忙來找到正確的方向<br>在此也希望大家在除錯時，可以多跟同事、朋友討論，或許他們的一句話，就會讓你有突錯點<br>大家一起加油 ^_^</p></blockquote><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://stackoverflow.com/questions/25652409/localhost-is-working-but-not-127-0-0-1-in-windows-7">localhost is working but not 127.0.0.1 in windows 7</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;同事詢問，程式透過 axios 來發出 post ，&lt;br&gt;URL 給的是 &lt;code&gt;http://localhost:3978&lt;/cod</summary>
      
    
    
    
    
    <category term="Node.js" scheme="https://rainmakerho.github.io/tags/Node-js/"/>
    
    <category term="axios" scheme="https://rainmakerho.github.io/tags/axios/"/>
    
    <category term="AxiosError" scheme="https://rainmakerho.github.io/tags/AxiosError/"/>
    
    <category term="ECONNREFUSED" scheme="https://rainmakerho.github.io/tags/ECONNREFUSED/"/>
    
    <category term="127.0.0.1" scheme="https://rainmakerho.github.io/tags/127-0-0-1/"/>
    
    <category term="ipv4" scheme="https://rainmakerho.github.io/tags/ipv4/"/>
    
  </entry>
  
  <entry>
    <title>多執行緒/多行程在 Node.js 的使用時機</title>
    <link href="https://rainmakerho.github.io/2022/12/20/multithreading-in-node-js/"/>
    <id>https://rainmakerho.github.io/2022/12/20/multithreading-in-node-js/</id>
    <published>2022-12-20T03:12:38.000Z</published>
    <updated>2022-12-20T07:36:00.014Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近在研究如何讓 Node.js 的程式可以同時接受大量的 Request ，<br>因為 Node.js 是單執行緖，想要達到目的，大約幾種方式，<br>1.) 增加 Thread 的數量<br>2.) 增加 Process 的數量<br>3.) 減少 Request 處理時間<br>減少 Request 處理時間可透過重構，調整程式 Logic 等方式，<br>接下來就 增加 Thread or Process 的方式及適用情況來說明</p><p>以下依 <a href="https://www.digitalocean.com/community/tutorials/how-to-use-multithreading-in-node-js">How To Use Multithreading in Node.js</a> 及 <a href="https://stackoverflow.com/questions/34855352/how-in-general-does-node-js-handle-10-000-concurrent-requests">How, in general, does Node.js handle 10,000 concurrent requests?</a> 內容來分享</p><h3 id="測試"><a href="#測試" class="headerlink" title="測試"></a>測試</h3><p>1.) 增加 Thread 的數量<br>來自 <a href="https://www.digitalocean.com/community/tutorials/how-to-use-multithreading-in-node-js">How To Use Multithreading in Node.js</a> 說明，<br>一個 Node.js Process 包含 7 條 Thread，1 條 Main Thread， 4 條 Node.js Thread 及 2 條 V8 Thread<br>4 條 Node.js Thread 就是來幫忙處理 I&#x2F;O 操作，讓它不會 Block 住 main thread，<br>所以針對 I&#x2F;O 操作幾乎不需要自已建立 Thread 來處理，有時自已建立 Thread 來處理 I&#x2F;O 操作還可能會有效能問題。<br>那什麼狀況下，需要增加 Thread 來處理呢?<br>如果是 CPU-bound 的工作，就可以透過增加的 Thread 來處理，以避免 Block 住 Main Thread<br>以下建立程式來試試看，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir multi-threading</span><br><span class="line">cd multi-threading</span><br><span class="line">npm init -y</span><br><span class="line">npm install express</span><br></pre></td></tr></table></figure><p>新增 index.js 來測試 CPU-bound 工作會 Block 住 Main thread</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="keyword">const</span> port = process.<span class="property">env</span>.<span class="property">PORT</span> || <span class="number">3000</span>;</span><br><span class="line"><span class="comment">//the task itself of reading a file or a network request happens in parallel with the help of the threads</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/non-blocking/&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">status</span>(<span class="number">200</span>).<span class="title function_">send</span>(<span class="string">&quot;this page is non-blocking&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/blocking&quot;</span>, <span class="keyword">async</span> (req, res) =&gt; &#123;</span><br><span class="line">  <span class="comment">// let counter = 0;</span></span><br><span class="line">  <span class="comment">// for(let i =0;i&lt;20_000_000_000;i++)&#123;</span></span><br><span class="line">  <span class="comment">//     counter++;</span></span><br><span class="line">  <span class="comment">// &#125;</span></span><br><span class="line">  <span class="keyword">const</span> counter = <span class="keyword">await</span> <span class="title function_">calculateCounter</span>();</span><br><span class="line">  res.<span class="title function_">status</span>(<span class="number">200</span>).<span class="title function_">send</span>(<span class="string">`result is <span class="subst">$&#123;counter&#125;</span>`</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">calculateCounter</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> counter = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">20_000_000_000</span>; i++) &#123;</span><br><span class="line">      counter++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">resolve</span>(counter);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(port, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`App listening on port:<span class="subst">$&#123;port&#125;</span>`</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>程式中，在 <code>const counter = await calculateCounter()</code> 已使用了 <strong>async&#x2F;await</strong> ，<br>它還是會 Block 住其他的 Request ，<br>執行 <code>node index.js</code><br>使用 Browser 連到 <code>http://localhost:3000/blocking</code> 後，<br>開啟另一個 Browser 連到 <code>http://localhost:3000/non-blocking</code>，<br>該網頁要等 <code>/blocking</code> 處理完後，才會呈現出來。</p><p>所以 CPU-bound 的工作，使用 <strong>async&#x2F;await</strong> 並無法讓它 non-blocking ，<br>這時就可以透過 Node.js 的 <code>worker-threads</code> 模組來將 CPU-bound 的工作放到額外的 Thread 中執行，讓它變成 <strong>non-blocking</strong><br>因為建立<code>Worker</code>要傳入 js 檔案，所以新增<code>worker.js</code>，裡面是 CPU-bound 的工作</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; parentPort &#125; = <span class="built_in">require</span>(<span class="string">&quot;worker_threads&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> counter = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">20_000_000_000</span>; i++) &#123;</span><br><span class="line">  counter++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">parentPort.<span class="title function_">postMessage</span>(counter);</span><br></pre></td></tr></table></figure><p>將執行後的結果，透過<code>parentPort.postMessage</code>傳回給 Parent Thread，<br>新增 index2.js 透過 <code>Worker</code> 來建立額外的 Thread ，<br>並透過 <code>worker.on(&#39;Event&#39;, fun)</code> 來取得資料</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; <span class="title class_">Worker</span> &#125; = <span class="built_in">require</span>(<span class="string">&quot;worker_threads&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="keyword">const</span> port = process.<span class="property">env</span>.<span class="property">PORT</span> || <span class="number">3000</span>;</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/non-blocking/&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">status</span>(<span class="number">200</span>).<span class="title function_">send</span>(<span class="string">&quot;this page is non-blocking&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/blocking&quot;</span>, <span class="keyword">async</span> (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> worker = <span class="keyword">new</span> <span class="title class_">Worker</span>(<span class="string">&quot;./worker.js&quot;</span>);</span><br><span class="line">  worker.<span class="title function_">on</span>(<span class="string">&quot;message&quot;</span>, <span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">200</span>).<span class="title function_">send</span>(<span class="string">`result is <span class="subst">$&#123;data&#125;</span>`</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">  worker.<span class="title function_">on</span>(<span class="string">&quot;error&quot;</span>, <span class="function">(<span class="params">msg</span>) =&gt;</span> &#123;</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">404</span>).<span class="title function_">send</span>(<span class="string">`An error occurred:<span class="subst">$&#123;msg&#125;</span>`</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(port, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`App listening on port <span class="subst">$&#123;port&#125;</span>`</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>執行 <code>node index2.js</code><br>使用 Browser 連到 <code>http://localhost:3000/blocking</code> 後，<br>開啟另一個 Browser 連到 <code>http://localhost:3000/non-blocking</code>，<br>該網頁會馬上呈現，並不會被 <code>/blocking</code> Block 住。</p><p>那如果一個 CPU-bound 的工作執行太久，則可以想辦法將它們拆分成不同個工作，<br>然後建立多個 <code>Worker</code> 來處理，<br>就像 <a href="https://www.digitalocean.com/community/tutorials/how-to-use-multithreading-in-node-js">How To Use Multithreading in Node.js</a> 最後的範例，<br>建立 4 個 Worker 並將回傳的 Promise 放到 Array 之中，最後透過 <code>Promise.all</code> 等它們執行完畢。</p><p>2.) 增加 Process 的數量<br>如果已將 CPU-bound 工作放到額外的 Thread 執行，效能還是有問題，<br>則可以透過 <code>Cluster</code> 來增加 Process 處理大量的 Request<br>建立 index4.js ，在 <code>/blocking</code> 中還是執行 CPU-bound 工作，<br>最後透過 <code>cluster.fork</code> 建立多個 Process，</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> cluster = <span class="built_in">require</span>(<span class="string">&quot;cluster&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="keyword">const</span> port = process.<span class="property">env</span>.<span class="property">PORT</span> || <span class="number">3000</span>;</span><br><span class="line"><span class="keyword">let</span> globalVar = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">let</span> globalVarB = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//the task itself of reading a file or a network request happens in parallel with the help of the threads</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/non-blocking/&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  globalVarB++;</span><br><span class="line">  res</span><br><span class="line">    .<span class="title function_">status</span>(<span class="number">200</span>)</span><br><span class="line">    .<span class="title function_">send</span>(</span><br><span class="line">      <span class="string">`this page is non-blocking,Worker <span class="subst">$&#123;process.pid&#125;</span>,globalVarB: <span class="subst">$&#123;globalVarB&#125;</span>`</span></span><br><span class="line">    );</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/blocking&quot;</span>, <span class="keyword">async</span> (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> counter = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">20_000_000_000</span>; i++) &#123;</span><br><span class="line">    counter++;</span><br><span class="line">  &#125;</span><br><span class="line">  globalVar++;</span><br><span class="line">  <span class="comment">//const counter = await calculateCounter();</span></span><br><span class="line">  res</span><br><span class="line">    .<span class="title function_">status</span>(<span class="number">200</span>)</span><br><span class="line">    .<span class="title function_">send</span>(<span class="string">`Worker <span class="subst">$&#123;process.pid&#125;</span>,globalVar: <span class="subst">$&#123;globalVar&#125;</span>,result is <span class="subst">$&#123;counter&#125;</span>`</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">calculateCounter</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> counter = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">20_000_000_000</span>; i++) &#123;</span><br><span class="line">      counter++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">resolve</span>(counter);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// app.listen(port, ()=&gt;&#123;</span></span><br><span class="line"><span class="comment">//     console.log(`App listening on port:$&#123;port&#125;`);</span></span><br><span class="line"><span class="comment">// &#125;);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Check the number of available CPU.</span></span><br><span class="line"><span class="keyword">const</span> numCPUs = <span class="built_in">require</span>(<span class="string">&quot;os&quot;</span>).<span class="title function_">cpus</span>().<span class="property">length</span>;</span><br><span class="line"><span class="comment">// For Master process</span></span><br><span class="line"><span class="keyword">if</span> (cluster.<span class="property">isMaster</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Master <span class="subst">$&#123;process.pid&#125;</span> is running`</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Fork workers.</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; numCPUs; i++) &#123;</span><br><span class="line">    cluster.<span class="title function_">fork</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// This event is firs when worker died</span></span><br><span class="line">  cluster.<span class="title function_">on</span>(<span class="string">&quot;exit&quot;</span>, <span class="function">(<span class="params">worker, code, signal</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`worker <span class="subst">$&#123;worker.process.pid&#125;</span> died`</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// For Worker</span></span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="comment">// Workers can share any TCP connection</span></span><br><span class="line">  <span class="comment">// In this case it is an HTTP server</span></span><br><span class="line">  app.<span class="title function_">listen</span>(port, <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">    err</span><br><span class="line">      ? <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Error in server setup&quot;</span>)</span><br><span class="line">      : <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Worker <span class="subst">$&#123;process.pid&#125;</span> started`</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>執行 <code>node index4.js</code><br>如果開啟 Browser 連到 <code>http://localhost:3000/blocking</code> 或是 <code>http://localhost:3000/non-blocking</code> ，<br>可以發現有時會被 Block 住，有時又不會，<br>當執行在同一個 Process 中，就會被 Block，不同就不會 Block 到。<br>另外要注意的是，因為是不同的 Process ，所以是不同的 Memory ，<br>可以發現 <code>globalVar</code> 及 <code>globalVarB</code> 在不同的 Process 是不會影響到的。</p><p>3.) iisNode 的設定<br>iisNode 並不 Support Cluster ，如果要多個 Node.js Process ，<br>則可以透過設定 <code>nodeProcessCountPerApplication</code> 的值(預設是 1)<br>詳細可以參考 <a href="https://github.com/tjanczuk/iisnode/blob/master/src/samples/configuration/iisnode.yml#L21">iisnode.yml</a></p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://www.digitalocean.com/community/tutorials/how-to-use-multithreading-in-node-js">How To Use Multithreading in Node.js</a><br><a href="https://stackoverflow.com/questions/34855352/how-in-general-does-node-js-handle-10-000-concurrent-requests">How, in general, does Node.js handle 10,000 concurrent requests?</a><br><a href="https://blog.logrocket.com/optimizing-node-js-app-performance-clustering/">Optimizing your Node.js app’s performance with clustering</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;最近在研究如何讓 Node.js 的程式可以同時接受大量的 Request ，&lt;br&gt;因為 Node.js 是單執行緖，想要達到目的，大約幾</summary>
      
    
    
    
    
    <category term="iisnode" scheme="https://rainmakerho.github.io/tags/iisnode/"/>
    
    <category term="Node.js" scheme="https://rainmakerho.github.io/tags/Node-js/"/>
    
    <category term="Worker" scheme="https://rainmakerho.github.io/tags/Worker/"/>
    
    <category term="worker_threads" scheme="https://rainmakerho.github.io/tags/worker-threads/"/>
    
    <category term="cluster" scheme="https://rainmakerho.github.io/tags/cluster/"/>
    
  </entry>
  
</feed>
