<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>亂馬客</title>
  <icon>https://www.gravatar.com/avatar/cd3aed042ccd7a5a5d9956b0bc07dc81</icon>
  <subtitle>Re:從零開始的軟體開發生活</subtitle>
  <link href="https://rainmakerho.github.io/atom.xml" rel="self"/>
  
  <link href="https://rainmakerho.github.io/"/>
  <updated>2023-12-28T09:38:59.765Z</updated>
  <id>https://rainmakerho.github.io/</id>
  
  <author>
    <name>亂馬客</name>
    <email>rainmaker_ho@gss.com.tw</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>dotnet 專案如何設定將某目錄建置時 Copy 到輸出目錄呢?</title>
    <link href="https://rainmakerho.github.io/2023/12/28/vs-copy-folder-to-output-directory/"/>
    <id>https://rainmakerho.github.io/2023/12/28/vs-copy-folder-to-output-directory/</id>
    <published>2023-12-28T09:25:46.000Z</published>
    <updated>2023-12-28T09:38:59.765Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>dotnet 專案如何設定將某目錄建置時 Copy 到輸出目錄呢?</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>開啟專案檔(.csproj)，<br>在 <code>ItemGroup</code> 區段中加入 <code>None</code> 項目，設定要 Copy 的 目錄，如下，</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ItemGroup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">None</span> <span class="attr">Update</span>=<span class="string">&quot;prompts\**&quot;</span> <span class="attr">CopyToOutputDirectory</span>=<span class="string">&quot;PreserveNewest&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ItemGroup</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>CopyToOutputDirectory</code> 的值可以為 <code>Never</code>, <code>Always</code> 或是 <code>PreserveNewest</code></p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://github.com/dotnet/msbuild/issues/2949#issuecomment-362824225">How to copy a folder to output directory and keep its root folder?</a><br><a href="https://learn.microsoft.com/en-us/visualstudio/msbuild/common-msbuild-project-items?view=vs-2022">Common MSBuild project items</a></p><blockquote><p>冬不可以廢葛，夏不可以廢裘 : 不能因為眼前一時用不著，便不作預防，為人應作長遠計劃。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;dotnet 專案如何設定將某目錄建置時 Copy 到輸出目錄呢?&lt;/p&gt;
&lt;h3 id=&quot;解法&quot;&gt;&lt;a href=&quot;#解法&quot; class=</summary>
      
    
    
    
    
    <category term="Visual Studio" scheme="https://rainmakerho.github.io/tags/Visual-Studio/"/>
    
    <category term="dotnet" scheme="https://rainmakerho.github.io/tags/dotnet/"/>
    
    <category term="copy" scheme="https://rainmakerho.github.io/tags/copy/"/>
    
    <category term="folder" scheme="https://rainmakerho.github.io/tags/folder/"/>
    
    <category term="output" scheme="https://rainmakerho.github.io/tags/output/"/>
    
  </entry>
  
  <entry>
    <title>CS8652 功能 &#39;collection literals&#39; 目前處理預覽階段，且*不受支援*。若要使用預覽功能，請使用「預覽語言」版本。</title>
    <link href="https://rainmakerho.github.io/2023/12/28/vs-CS8652/"/>
    <id>https://rainmakerho.github.io/2023/12/28/vs-CS8652/</id>
    <published>2023-12-28T03:47:39.000Z</published>
    <updated>2023-12-28T09:29:32.375Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>原本使用 Visual Studio Code 建置並沒有錯誤，<br>改用 Visual Studio 2022 開始後，<br>在錯誤清單中出現了 <strong>CS8652</strong> <code>CS8652 功能 &#39;collection literals&#39; 目前處理預覽階段，且*不受支援*。若要使用預覽功能，請使用「預覽語言」版本。</code> 錯誤要如何解決呢?</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>那就是要設定<strong>使用「預覽語言」版本</strong>，<br>開啟專案檔(.csproj)，<br>在<code>PropertyGroup</code>中加入<code>LangVersion</code>的設定(<code>&lt;LangVersion&gt;preview&lt;/LangVersion&gt;</code>)，如下，</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Project</span> <span class="attr">Sdk</span>=<span class="string">&quot;Microsoft.NET.Sdk&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">PropertyGroup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">OutputType</span>&gt;</span>Exe<span class="tag">&lt;/<span class="name">OutputType</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TargetFramework</span>&gt;</span>net8.0<span class="tag">&lt;/<span class="name">TargetFramework</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ImplicitUsings</span>&gt;</span>enable<span class="tag">&lt;/<span class="name">ImplicitUsings</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Nullable</span>&gt;</span>enable<span class="tag">&lt;/<span class="name">Nullable</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LangVersion</span>&gt;</span>preview<span class="tag">&lt;/<span class="name">LangVersion</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">PropertyGroup</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">ItemGroup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">PackageReference</span> <span class="attr">Include</span>=<span class="string">&quot;Microsoft.Extensions.Logging&quot;</span> <span class="attr">Version</span>=<span class="string">&quot;8.0.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">PackageReference</span> <span class="attr">Include</span>=<span class="string">&quot;Microsoft.Extensions.Logging.Console&quot;</span> <span class="attr">Version</span>=<span class="string">&quot;8.0.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">PackageReference</span> <span class="attr">Include</span>=<span class="string">&quot;Microsoft.Extensions.Logging.Debug&quot;</span> <span class="attr">Version</span>=<span class="string">&quot;8.0.0&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ItemGroup</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">Project</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://learn.microsoft.com/zh-tw/dotnet/csharp/language-reference/configure-language-version">C# 語言版本控制</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;原本使用 Visual Studio Code 建置並沒有錯誤，&lt;br&gt;改用 Visual Studio 2022 開始後，&lt;br&gt;在錯誤清</summary>
      
    
    
    
    
    <category term="Visual Studio" scheme="https://rainmakerho.github.io/tags/Visual-Studio/"/>
    
    <category term="CS8652" scheme="https://rainmakerho.github.io/tags/CS8652/"/>
    
  </entry>
  
  <entry>
    <title>Semantic Kernel(SK) - Kernel Memory (KM) 使用 Postgres 當 Vector DB</title>
    <link href="https://rainmakerho.github.io/2023/12/26/sk-kernel-memory-postgresql/"/>
    <id>https://rainmakerho.github.io/2023/12/26/sk-kernel-memory-postgresql/</id>
    <published>2023-12-26T01:05:19.000Z</published>
    <updated>2023-12-26T03:25:03.826Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>現在開始 Kernel Memory 可以使用 <a href="https://github.com/pgvector/pgvector">Postgres+pgvector</a> 來當作 vector storage 了哦~</p><h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><h4 id="安裝-PostgreSQL-pgvector"><a href="#安裝-PostgreSQL-pgvector" class="headerlink" title="安裝 PostgreSQL + pgvector"></a>安裝 PostgreSQL + pgvector</h4><p>到 <a href="https://www.postgresql.org/">PostgreSQL</a> 下載安裝後，<br>再到 <a href="https://github.com/pgvector/pgvector">pgvector</a> 依說明安裝。<br>目前 <a href="https://github.com/pgvector/pgvector">pgvector</a> 在 Windows 平台上還是實驗性的，在透過 <code>nmake</code> 建置時，<br>如果在<code>nmake /F Makefile.win install</code>無法 Copy 檔案，請<strong>以系統管理員身份執行</strong>來開啟命令視窗，再執行一次。<br>沒問題後，開啟 PostgreSQL ，執行 <code>CREATE EXTENSION vector;</code>來啟用 vector;</p><h4 id="設定-vector-storage-為-PostgreSQL"><a href="#設定-vector-storage-為-PostgreSQL" class="headerlink" title="設定 vector storage 為 PostgreSQL"></a>設定 vector storage 為 PostgreSQL</h4><p>要使用 PostgreSQL ，要加入 <code>Microsoft.KernelMemory.Postgres</code> 套件。<br>以下 VSCode 建立 <code>ipynb</code> 檔，並用 OpenAI 及 PostgreSQL 來測試，<br>建立 <code>.env</code> 檔案，並放入相關的設定值，如下，</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">OPENAI_APIKEY</span>=你的OpenAI API Key</span><br><span class="line"><span class="attr">POSTGRESQL_CONNSTRING</span>=<span class="string">&quot;Host=localhost;Port=5432;Username=你的UID;Password=你的pwd&quot;</span></span><br></pre></td></tr></table></figure><p>1.加入套件</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#r &quot;nuget:Microsoft.KernelMemory.Core, *-*&quot;</span></span><br><span class="line"><span class="meta">#r &quot;nuget:Microsoft.KernelMemory.Postgres, *-*&quot;</span></span><br><span class="line"><span class="keyword">using</span> Microsoft.KernelMemory;</span><br><span class="line"><span class="keyword">using</span> Microsoft.KernelMemory.Handlers;</span><br><span class="line"><span class="meta">#r &quot;nuget:dotenv.net&quot;</span></span><br><span class="line">dotenv.net.DotEnv.Load();</span><br><span class="line"><span class="keyword">var</span> env = dotenv.net.DotEnv.Read();</span><br></pre></td></tr></table></figure><p>2.設定 PostgreSQL</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Microsoft.KernelMemory.Postgres;</span><br><span class="line"><span class="keyword">using</span> Microsoft.Extensions.Configuration;</span><br><span class="line"><span class="keyword">var</span> openaiApikey = env[<span class="string">&quot;OPENAI_APIKEY&quot;</span>];</span><br><span class="line"><span class="keyword">var</span> postgreConnString = env[<span class="string">&quot;POSTGRESQL_CONNSTRING&quot;</span>];</span><br><span class="line"><span class="keyword">var</span> postgresConfig = <span class="keyword">new</span> PostgresConfig&#123;</span><br><span class="line">    ConnectionString = postgreConnString</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> memory = <span class="keyword">new</span> KernelMemoryBuilder()</span><br><span class="line">    .WithPostgres(postgresConfig)</span><br><span class="line">    .WithOpenAIDefaults(openaiApikey)</span><br><span class="line">    .Build&lt;MemoryServerless&gt;();</span><br></pre></td></tr></table></figure><p>3.extract,partition,gen_embeddings,save_records<br>接下來將上傳檔案，讀取內容，切 Chunks 並透過 OpenAI 建立內容 embedding ，存到 PostgreSQL 並設定 index 為 <strong>tooth</strong>。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> id = <span class="string">&quot;tooth&quot;</span>;</span><br><span class="line"><span class="keyword">await</span> memory.ImportDocumentAsync(<span class="keyword">new</span> Document(id)</span><br><span class="line">    .AddFiles(<span class="keyword">new</span> [] &#123;<span class="string">@&quot;C:\OpenAI\docs\tooth\qa.docx&quot;</span></span><br><span class="line">     ,<span class="string">@&quot;C:\OpenAI\docs\tooth\stdtable.docx&quot;</span></span><br><span class="line">     , <span class="string">@&quot;C:\OpenAI\docs\tooth\terms.docx&quot;</span>&#125;)</span><br><span class="line">    .AddTag(<span class="string">&quot;type&quot;</span>,<span class="string">&quot;tooth&quot;</span>)</span><br><span class="line">    , index:id);</span><br></pre></td></tr></table></figure><p>所以在 PostgreSQL 上可以看到這次建立的 <strong>tooth</strong> index，會放在 <code>km-tooth</code> Table 之中。</p><img src="/2023/12/26/sk-kernel-memory-postgresql/01.png" class="" title="PostgreSQL"><p>4.將使用者問題轉成 Embeddings 到 PostgreSQL 進行搜尋，並將相關內容透過 OpenAI 進行 Summary</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> answer = <span class="keyword">await</span> memory.AskAsync(<span class="string">&quot;請總結關於洗牙的相關規定&quot;</span>, index:id);</span><br><span class="line">Console.WriteLine(<span class="string">$&quot;\nAnswer: <span class="subst">&#123;answer.Result&#125;</span>&quot;</span>);</span><br><span class="line">Console.WriteLine(<span class="string">$&quot; ====== 參考資訊 ======&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> x <span class="keyword">in</span> answer.RelevantSources)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(x.SourceUrl != <span class="literal">null</span></span><br><span class="line">        ? <span class="string">$&quot;  - <span class="subst">&#123;x.SourceUrl&#125;</span> [<span class="subst">&#123;x.Partitions.First().LastUpdate:D&#125;</span>]&quot;</span></span><br><span class="line">        : <span class="string">$&quot;  - <span class="subst">&#123;x.SourceName&#125;</span>  - <span class="subst">&#123;x.Link&#125;</span> [<span class="subst">&#123;x.Partitions.First().LastUpdate:D&#125;</span>]&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">answer</span><br></pre></td></tr></table></figure><img src="/2023/12/26/sk-kernel-memory-postgresql/02.png" class="" title="Answer"><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://github.com/microsoft/kernel-memory-postgres">kernel-memory-postgres</a><br><a href="https://github.com/pgvector/pgvector">pgvector</a><br><a href="https://github.com/microsoft/kernel-memory">kernel-memory</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;現在開始 Kernel Memory 可以使用 &lt;a href=&quot;https://github.com/pgvector/pgvector&quot;</summary>
      
    
    
    
    
    <category term="Semantic Kernel" scheme="https://rainmakerho.github.io/tags/Semantic-Kernel/"/>
    
    <category term="Kernel Memory" scheme="https://rainmakerho.github.io/tags/Kernel-Memory/"/>
    
    <category term="Postgres" scheme="https://rainmakerho.github.io/tags/Postgres/"/>
    
    <category term="pgvector" scheme="https://rainmakerho.github.io/tags/pgvector/"/>
    
  </entry>
  
  <entry>
    <title>Semantic Kernel(SK) - Kernel Memory (KM) 設定內容切段的 Tokens 數</title>
    <link href="https://rainmakerho.github.io/2023/12/25/sk-kernel-memory-custom-partitioning/"/>
    <id>https://rainmakerho.github.io/2023/12/25/sk-kernel-memory-custom-partitioning/</id>
    <published>2023-12-25T05:03:18.000Z</published>
    <updated>2023-12-26T03:40:41.242Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在前幾篇文章中，從直接使用 <a href="https://rainmakerho.github.io/2023/12/22/sk-kernel-memory/">MemoryServerless</a> 到將 <a href="https://rainmakerho.github.io/2023/12/22/sk-kernel-memory-service-memorywebclient/">Kernel Memory 啟動為 Service</a> ，並以 <code>MemoryWebClient</code> 去操作它。<br>接下來我們將 Embedding DB 改存到 Qdrant 並透過 <code>TextPartitioningOptions</code> 來設定切 Chunks 的 Token 數</p><h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><h4 id="使用-Qdrant"><a href="#使用-Qdrant" class="headerlink" title="使用 Qdrant"></a>使用 Qdrant</h4><p>您可以透過 Docker 來啟動 <code>Qdrant</code> 或是到 <a href="https://cloud.qdrant.io/">cloud.qdrant</a> 建立免費試用的 DB。<br>如果是 cloud Qdrant 會多一個 Apikey 才可以存取它。</p><h4 id="設定-Qdrant-及-TextPartitioningOptions"><a href="#設定-Qdrant-及-TextPartitioningOptions" class="headerlink" title="設定 Qdrant 及 TextPartitioningOptions"></a>設定 Qdrant 及 TextPartitioningOptions</h4><p>以下 VSCode 建立 <code>ipynb</code> 檔，並用 OpenAI 及 <a href="https://cloud.qdrant.io/">cloud.qdrant</a> 來測試，<br>建立 <code>.env</code> 檔案，並放入相關的設定值，如下，</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">OPENAI_APIKEY</span>=你的OpenAI API Key</span><br><span class="line"><span class="attr">QDRANT_ENDPOINT</span>=qdrant endpoint</span><br><span class="line"><span class="attr">QDRANT_APIKEY</span>=qdrant apikey</span><br></pre></td></tr></table></figure><p>1.加入套件</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#r &quot;nuget:Microsoft.KernelMemory.Core, *-*&quot;</span></span><br><span class="line"><span class="keyword">using</span> Microsoft.KernelMemory;</span><br><span class="line"><span class="keyword">using</span> Microsoft.KernelMemory.Handlers;</span><br><span class="line"><span class="meta">#r &quot;nuget:dotenv.net&quot;</span></span><br><span class="line">dotenv.net.DotEnv.Load();</span><br><span class="line"><span class="keyword">var</span> env = dotenv.net.DotEnv.Read();</span><br></pre></td></tr></table></figure><p>2.設定 Qdrant 及 TextPartitioningOptions</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> openaiApikey = env[<span class="string">&quot;OPENAI_APIKEY&quot;</span>];</span><br><span class="line"><span class="keyword">var</span> qdrantEndpoint = env[<span class="string">&quot;QDRANT_ENDPOINT&quot;</span>];</span><br><span class="line"><span class="keyword">var</span> qdrantApikey = env[<span class="string">&quot;QDRANT_APIKEY&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> memoryBuilder = <span class="keyword">new</span> KernelMemoryBuilder()</span><br><span class="line">    .WithQdrant(qdrantEndpoint, qdrantApikey)</span><br><span class="line">    .WithOpenAIDefaults(openaiApikey)</span><br><span class="line">    .With(<span class="keyword">new</span> TextPartitioningOptions&#123;</span><br><span class="line">        MaxTokensPerParagraph = <span class="number">800</span>,</span><br><span class="line">        MaxTokensPerLine = <span class="number">150</span>,</span><br><span class="line">        OverlappingTokens = <span class="number">50</span></span><br><span class="line">    &#125;);</span><br><span class="line"><span class="keyword">var</span> memory = memoryBuilder.Build&lt;MemoryServerless&gt;();</span><br><span class="line"><span class="built_in">string</span>.Join(<span class="string">&quot;,&quot;</span> , Constants.DefaultPipeline)</span><br></pre></td></tr></table></figure><p><a href="https://github.com/microsoft/kernel-memory/blob/main/service/Core/Handlers/TextPartitioningOptions.cs">TextPartitioningOptions</a>的各屬性初始值如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> <span class="built_in">int</span> _maxTokensPerParagraph = <span class="number">1000</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> <span class="built_in">int</span> _maxTokensPerLine = <span class="number">300</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> <span class="built_in">int</span> _overlappingTokens = <span class="number">100</span>;</span><br></pre></td></tr></table></figure><p>以上改成每段最大的 Token 數為 800，每行最多的 Token 數為 150，Overlapping 的 Token 為 50。<br><code>Constants.DefaultPipeline</code> 就是預設會進行處理的 Tasks ，分別是 extract,partition,gen_embeddings 及 save_records</p><p>3.extract,partition,gen_embeddings,save_records<br>接下來將上傳檔案，讀取內容，依<code>TextPartitioningOptions</code>設定切Chunk的大小，<br>透過 OpenAI 建立內容 embedding ，存到 Qdrant 並設定 index 為 <strong>tooth</strong>。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> id = <span class="string">&quot;tooth&quot;</span>;</span><br><span class="line"><span class="keyword">await</span> memory.ImportDocumentAsync(<span class="keyword">new</span> Document(id)</span><br><span class="line">    .AddFiles(<span class="keyword">new</span> [] &#123;<span class="string">@&quot;C:\OpenAI\docs\tooth\qa.docx&quot;</span></span><br><span class="line">     ,<span class="string">@&quot;C:\OpenAI\docs\tooth\stdtable.docx&quot;</span></span><br><span class="line">     , <span class="string">@&quot;C:\OpenAI\docs\tooth\terms.docx&quot;</span>&#125;)</span><br><span class="line">    .AddTag(<span class="string">&quot;type&quot;</span>,<span class="string">&quot;tooth&quot;</span>)</span><br><span class="line">    , index:id);</span><br></pre></td></tr></table></figure><p>所以在 Qdrant 上可以看到這次建立的 <strong>tooth</strong> index。</p><img src="/2023/12/25/sk-kernel-memory-custom-partitioning/01.png" class="" title="Qdrant"><p>從 <strong>tooth</strong> index 可以看到設定的 documentId, Tag 及檔案名稱，</p><img src="/2023/12/25/sk-kernel-memory-custom-partitioning/02.png" class="" title="Qdrant index"><p>4.將使用者問題轉成 Embeddings 到 Qdrant <strong>tooth</strong> index 進行搜尋，並將相關內容透過 OpenAI 進行 Summary</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> answer = <span class="keyword">await</span> memory.AskAsync(<span class="string">&quot;請問洗牙有什麼規定?&quot;</span>, index:id);</span><br><span class="line">Console.WriteLine(<span class="string">$&quot;\nAnswer: <span class="subst">&#123;answer.Result&#125;</span>&quot;</span>);</span><br><span class="line">Console.WriteLine(<span class="string">$&quot; ====== 參考資訊 ======&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> x <span class="keyword">in</span> answer.RelevantSources)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(x.SourceUrl != <span class="literal">null</span></span><br><span class="line">        ? <span class="string">$&quot;  - <span class="subst">&#123;x.SourceUrl&#125;</span> [<span class="subst">&#123;x.Partitions.First().LastUpdate:D&#125;</span>]&quot;</span></span><br><span class="line">        : <span class="string">$&quot;  - <span class="subst">&#123;x.SourceName&#125;</span>  - <span class="subst">&#123;x.Link&#125;</span> [<span class="subst">&#123;x.Partitions.First().LastUpdate:D&#125;</span>]&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2023/12/25/sk-kernel-memory-custom-partitioning/03.png" class="" title="Answer"><p>5.刪除 index ，<br>最後如果不想再用這個 index ，可以刪除它</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">await</span> memory.DeleteIndexAsync(id);</span><br></pre></td></tr></table></figure><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://rainmakerho.github.io/2023/12/22/sk-kernel-memory/">SK-Kernel Memory (KM) 初探</a><br><a href="https://rainmakerho.github.io/2023/12/22/sk-kernel-memory-service-memorywebclient/">SK-Kernel Memory (KM) Service 與 MemoryWebClient</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;在前幾篇文章中，從直接使用 &lt;a href=&quot;https://rainmakerho.github.io/2023/12/22/sk-ker</summary>
      
    
    
    
    
    <category term="Semantic Kernel" scheme="https://rainmakerho.github.io/tags/Semantic-Kernel/"/>
    
    <category term="Kernel Memory" scheme="https://rainmakerho.github.io/tags/Kernel-Memory/"/>
    
    <category term="TextPartitioningOptions" scheme="https://rainmakerho.github.io/tags/TextPartitioningOptions/"/>
    
    <category term="Qdrant" scheme="https://rainmakerho.github.io/tags/Qdrant/"/>
    
    <category term="MaxTokensPerParagraph" scheme="https://rainmakerho.github.io/tags/MaxTokensPerParagraph/"/>
    
    <category term="MaxTokensPerLine" scheme="https://rainmakerho.github.io/tags/MaxTokensPerLine/"/>
    
    <category term="OverlappingTokens" scheme="https://rainmakerho.github.io/tags/OverlappingTokens/"/>
    
    <category term="Chunks" scheme="https://rainmakerho.github.io/tags/Chunks/"/>
    
  </entry>
  
  <entry>
    <title>Semantic Kernel(SK) - Kernel Memory (KM) Service 與 MemoryWebClient</title>
    <link href="https://rainmakerho.github.io/2023/12/22/sk-kernel-memory-service-memorywebclient/"/>
    <id>https://rainmakerho.github.io/2023/12/22/sk-kernel-memory-service-memorywebclient/</id>
    <published>2023-12-22T09:19:26.000Z</published>
    <updated>2023-12-26T01:07:20.720Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在<a href="https://rainmakerho.github.io/2023/12/22/sk-kernel-memory/">SK-Kernel Memory (KM) 初探</a>透過 <code>KernelMemoryBuilder</code> 來建立 <code>MemoryServerless</code>，<br>讓我們將一些檔案進行讀取、切段、轉成 Embeddings，最後存到資料庫。<br>並可以讓我們詢問問題後，再取回答案。</p><p><code>Kernel Memory</code> 可以讓我們啟動為一個 Web API 的服務，<br>這樣就有一個服務來專門來匯入資料，並提供問問題及回覆問題，<br>使用別的開發語言也可以使用它，例如 JavaScript, Java …<br>或是檔案太大的話，先上傳上去，不會 Block 使用的動作 …<br>以下就來看將 <code>Kernel Memory</code> 設定成 Service ，<br>並透過 <code>MemoryWebClient</code> 來操作它。</p><h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><h4 id="Kernel-Memory-as-a-Service"><a href="#Kernel-Memory-as-a-Service" class="headerlink" title="Kernel Memory as a Service"></a>Kernel Memory as a Service</h4><h5 id="設定-Kernel-Memory-Service"><a href="#設定-Kernel-Memory-Service" class="headerlink" title="設定 Kernel Memory Service"></a>設定 Kernel Memory Service</h5><p>依 <a href="https://github.com/microsoft/kernel-memory/blob/main/service/Service/README.md">Kernel Memory as a Service</a> 的說明，先從 Github <a href="https://github.com/microsoft/kernel-memory">kernel-memory</a> 將程式下載下來。<br>開啟 Command 視窗，切到 <code>/service/Service</code> 目錄，執行 <code>dotnet build</code> 沒錯誤後，<br>再執行 <code>dotnet run setup</code> 來進行各項設定，<br>除了 <code>Open AI</code> or <code>AOAI</code> 外，先設定為 Memory 方式執行(<code>Simple</code>系列)，及使用 Azure OpenAI，<br>因為 Kernel Memory 會卡 Apikey，所以會讓我們設定 2 組 Apikey，可以輸入 GUID。<br>預設是 Development 環境，所以會建立 <code>appsettings.Development.json</code>，<br>內容如下，</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;KernelMemory&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;Service&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;RunWebService&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;RunHandlers&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;OpenApiEnabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;ContentStorageType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;SimpleFileStorage&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;TextGeneratorType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;AzureOpenAIText&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;ServiceAuthorization&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;Enabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;AuthenticationType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;APIKey&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;HttpHeaderName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Authorization&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;AccessKey1&quot;</span><span class="punctuation">:</span> <span class="string">&quot;9de9b81e-8ecb-45dd-b8ac-f18d3baa0a4f&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;AccessKey2&quot;</span><span class="punctuation">:</span> <span class="string">&quot;62ad1718-decb-46d8-ab4d-40fadf2f6833&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;DataIngestion&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;OrchestrationType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Distributed&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;DistributedOrchestration&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;QueueType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;SimpleQueues&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;EmbeddingGenerationEnabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;EmbeddingGeneratorTypes&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;AzureOpenAIEmbedding&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;MemoryDbTypes&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;SimpleVectorDb&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;ImageOcrType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;None&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;DefaultSteps&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;Retrieval&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;MemoryDbType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;SimpleVectorDb&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;EmbeddingGeneratorType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;AzureOpenAIEmbedding&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;SearchClient&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;MaxAskPromptSize&quot;</span><span class="punctuation">:</span> <span class="number">-1</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;MaxMatchesCount&quot;</span><span class="punctuation">:</span> <span class="number">100</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;AnswerTokens&quot;</span><span class="punctuation">:</span> <span class="number">300</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;EmptyAnswer&quot;</span><span class="punctuation">:</span> <span class="string">&quot;INFO NOT FOUND&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;Services&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;SimpleQueues&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;Directory&quot;</span><span class="punctuation">:</span> <span class="string">&quot;_queues&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;SimpleFileStorage&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;Directory&quot;</span><span class="punctuation">:</span> <span class="string">&quot;_files&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;AzureOpenAIEmbedding&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;APIType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;EmbeddingGeneration&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;Auth&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ApiKey&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;Endpoint&quot;</span><span class="punctuation">:</span> <span class="string">&quot;AOAI的 Endpoint&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;Deployment&quot;</span><span class="punctuation">:</span> <span class="string">&quot;AOAI Embedding Model 部署名稱&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;APIKey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;你的AOAI API Key&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;SimpleVectorDb&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;Directory&quot;</span><span class="punctuation">:</span> <span class="string">&quot;_vectors&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;AzureOpenAIText&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;APIType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ChatCompletion&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;Auth&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ApiKey&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;Endpoint&quot;</span><span class="punctuation">:</span> <span class="string">&quot;AOAI的 Endpoint&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;Deployment&quot;</span><span class="punctuation">:</span> <span class="string">&quot;AOAI Chat Model 部署名稱&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;APIKey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;你的AOAI API Key&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;MaxRetries&quot;</span><span class="punctuation">:</span> <span class="number">10</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;Logging&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;LogLevel&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;Default&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Trace&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;AllowedHosts&quot;</span><span class="punctuation">:</span> <span class="string">&quot;*&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h5 id="執行-Kernel-Memory-Service"><a href="#執行-Kernel-Memory-Service" class="headerlink" title="執行 Kernel Memory Service"></a>執行 Kernel Memory Service</h5><p>設定好了之後，就可以執行 <code>dotnet run</code> 跑起來，</p><img src="/2023/12/22/sk-kernel-memory-service-memorywebclient/01.png" class="" title="Service"><p>正常啟動後，可以連到 <code>http://127.0.0.1:9001/swagger/index.html</code> 查看有多少 API 可以使用。</p><img src="/2023/12/22/sk-kernel-memory-service-memorywebclient/02.png" class="" title="Swagger"><h4 id="透過-MemoryWebClient-操作"><a href="#透過-MemoryWebClient-操作" class="headerlink" title="透過 MemoryWebClient 操作"></a>透過 MemoryWebClient 操作</h4><p>一樣在 VSCode 建立 <code>ipynb</code> 檔來測試，</p><p>1.上傳檔案建立個人知識庫<br>先將檔案透過 MemoryWebClient 呼叫 API 上傳上去，<br>這裡可以多設定 <code>index</code>名稱(<code>index:&quot;tooth&quot;</code>)，並檢查是否上傳過。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#r &quot;nuget:Microsoft.KernelMemory.WebClient, *-*&quot;</span></span><br><span class="line"><span class="keyword">using</span> Microsoft.KernelMemory;</span><br><span class="line"><span class="keyword">var</span> serverApiKey = <span class="string">&quot;9de9b81e-8ecb-45dd-b8ac-f18d3baa0a4f&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> memory = <span class="keyword">new</span> MemoryWebClient(<span class="string">&quot;http://127.0.0.1:9001/&quot;</span>, serverApiKey);</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">await</span> memory.IsDocumentReadyAsync(documentId: <span class="string">&quot;tooth&quot;</span>))&#123;</span><br><span class="line">    <span class="keyword">await</span> memory.ImportDocumentAsync(<span class="keyword">new</span> Document(<span class="string">&quot;tooth&quot;</span>)</span><br><span class="line">        .AddFiles(<span class="keyword">new</span> [] &#123;<span class="string">@&quot;C:\OpenAI\docs\tooth\qa.docx&quot;</span></span><br><span class="line">        ,<span class="string">@&quot;C:\OpenAI\docs\tooth\stdtable.docx&quot;</span></span><br><span class="line">        , <span class="string">@&quot;C:\OpenAI\docs\tooth\terms.docx&quot;</span>&#125;)</span><br><span class="line">        .AddTag(<span class="string">&quot;type&quot;</span>,<span class="string">&quot;tooth&quot;</span>)</span><br><span class="line">        , index:<span class="string">&quot;tooth&quot;</span>);</span><br><span class="line">    Console.WriteLine(<span class="string">&quot;檔案上傳完成~~&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    Console.WriteLine(<span class="string">&quot;檔案已上傳~~&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.詢問問題<br>建立好知識庫後，就可以進行詢問，因為剛才有指定 <code>index</code>名稱，<br>所以在詢問問題時，也要給 <code>index</code>名稱</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> answer = <span class="keyword">await</span> memory.AskAsync(<span class="string">&quot;請問洗牙有什麼規定&quot;</span>, index:<span class="string">&quot;tooth&quot;</span>);</span><br><span class="line">Console.WriteLine(<span class="string">$&quot;\nAnswer: <span class="subst">&#123;answer.Result&#125;</span>&quot;</span>);</span><br><span class="line">Console.WriteLine(<span class="string">$&quot; ====== 參考資訊 ======&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> x <span class="keyword">in</span> answer.RelevantSources)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(x.SourceUrl != <span class="literal">null</span></span><br><span class="line">        ? <span class="string">$&quot;  - <span class="subst">&#123;x.SourceUrl&#125;</span> [<span class="subst">&#123;x.Partitions.First().LastUpdate:D&#125;</span>]&quot;</span></span><br><span class="line">        : <span class="string">$&quot;  - <span class="subst">&#123;x.SourceName&#125;</span>  - <span class="subst">&#123;x.Link&#125;</span> [<span class="subst">&#123;x.Partitions.First().LastUpdate:D&#125;</span>]&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">answer</span><br></pre></td></tr></table></figure><p>結果如下，</p><img src="/2023/12/22/sk-kernel-memory-service-memorywebclient/03.png" class="" title="answer"><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://github.com/microsoft/kernel-memory">kernel-memory</a><br><a href="https://github.com/microsoft/kernel-memory/blob/main/service/Service/README.md">Kernel Memory as a Service</a><br><a href="https://www.cnblogs.com/xbotter/p/kernel_memory_service.html">Kernel Memory 入门系列：Kernel Memory Service</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;在&lt;a href=&quot;https://rainmakerho.github.io/2023/12/22/sk-kernel-memory/&quot;&gt;</summary>
      
    
    
    
    
    <category term="Semantic Kernel" scheme="https://rainmakerho.github.io/tags/Semantic-Kernel/"/>
    
    <category term="Kernel Memory" scheme="https://rainmakerho.github.io/tags/Kernel-Memory/"/>
    
    <category term="MemoryWebClient" scheme="https://rainmakerho.github.io/tags/MemoryWebClient/"/>
    
  </entry>
  
  <entry>
    <title>Semantic Kernel(SK) - Kernel Memory (KM) 初探</title>
    <link href="https://rainmakerho.github.io/2023/12/22/sk-kernel-memory/"/>
    <id>https://rainmakerho.github.io/2023/12/22/sk-kernel-memory/</id>
    <published>2023-12-22T03:19:54.000Z</published>
    <updated>2023-12-26T08:52:54.495Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>現在很多企業都在使用 Retrieval Augmented Generation(RAG)，<br>先把各個文件先切一段一段(例如 利用各種 Library 將文件讀進來，再將 200 個字，每段又 overlap 50 個字)轉成 embeddings 再放到 embeddings 資料庫，<br>這裡會使用到 LLM 的 embeddings model ，例如 <code>text-embedding-ada-002</code>。<br>當使用者輸入問題後，同時也將這個問題轉成 embeddings ，再與 embeddings 資料庫找相似度，例如使用 BM25 來比較。<br>取得相似度高的內容後，再呼叫 <code>GPT-3.5 Turbo</code> 轉成較口語化的回答內容。<br>這麼多的 Task ，現在可以透過 <a href="https://github.com/microsoft/kernel-memory">kernel-memory</a> 來達成，<br>以下就來看看它有多簡單 ^_^</p><h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><p>以下 VSCode 建立 <code>ipynb</code> 檔，並用 AOAI 及 OpenAI 來測試，<br>建立 <code>.env</code> 檔案，並放入相關的設定值，如下，</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">AOAI_APIKEY</span>=你的AOAI API Key</span><br><span class="line"><span class="attr">EMBEDDING_DEPLOYMENT</span>=AOAI Embedding Model 部署名稱</span><br><span class="line"><span class="attr">CHAT_DEPLOYMENT</span>=AOAI Chat Model 部署名稱</span><br><span class="line"><span class="attr">ENDPOINT</span>=AOAI的 Endpoint</span><br><span class="line"><span class="attr">OPENAI_APIKEY</span>=你的OpenAI API Key</span><br></pre></td></tr></table></figure><p>1.加入套件</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#r &quot;nuget:Microsoft.KernelMemory.Core, *-*&quot;</span></span><br><span class="line"><span class="keyword">using</span> Microsoft.KernelMemory;</span><br><span class="line"><span class="meta">#r &quot;nuget:dotenv.net&quot;</span></span><br><span class="line"></span><br><span class="line">dotenv.net.DotEnv.Load();</span><br><span class="line"><span class="keyword">var</span> env = dotenv.net.DotEnv.Read();</span><br></pre></td></tr></table></figure><p>2.透過 OpenAI 建立知識庫(存在 Memory 之中)</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> openaiApikey = env[<span class="string">&quot;OPENAI_APIKEY&quot;</span>];</span><br><span class="line"><span class="keyword">var</span> memory = <span class="keyword">new</span> KernelMemoryBuilder()</span><br><span class="line">    .WithOpenAIDefaults(openaiApikey)</span><br><span class="line">    .Build&lt;MemoryServerless&gt;();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 讓 Kernel Memory 自動幫我們切段，並轉成 Embeddings</span></span><br><span class="line"><span class="keyword">await</span> memory.ImportDocumentAsync(<span class="keyword">new</span> Document(<span class="string">&quot;tooth&quot;</span>)</span><br><span class="line">    .AddFiles(<span class="keyword">new</span> [] &#123;<span class="string">@&quot;C:\OpenAI\docs\tooth\qa.docx&quot;</span></span><br><span class="line">     ,<span class="string">@&quot;C:\OpenAI\docs\tooth\stdtable.docx&quot;</span></span><br><span class="line">     , <span class="string">@&quot;C:\OpenAI\docs\tooth\terms.docx&quot;</span>&#125;)</span><br><span class="line">    .AddTag(<span class="string">&quot;type&quot;</span>,<span class="string">&quot;tooth&quot;</span>));</span><br></pre></td></tr></table></figure><p>3.透過 AOAI 建立知識庫(存在 Memory 之中)</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> embeddingDeployment = env[<span class="string">&quot;EMBEDDING_DEPLOYMENT&quot;</span>];</span><br><span class="line"><span class="keyword">var</span> chatDeployment = env[<span class="string">&quot;CHAT_DEPLOYMENT&quot;</span>];</span><br><span class="line"><span class="keyword">var</span> endpoint = env[<span class="string">&quot;ENDPOINT&quot;</span>];</span><br><span class="line"><span class="keyword">var</span> apiKey = env[<span class="string">&quot;AOAI_APIKEY&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> azureOpenAIEmbeddingConfig = <span class="keyword">new</span> AzureOpenAIConfig</span><br><span class="line">&#123;</span><br><span class="line">    Endpoint = endpoint,</span><br><span class="line">    APIKey = apiKey,</span><br><span class="line">    Deployment = embeddingDeployment,</span><br><span class="line">    APIType = AzureOpenAIConfig.APITypes.EmbeddingGeneration,</span><br><span class="line">    Auth = AzureOpenAIConfig.AuthTypes.APIKey</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> azureOpenAITextConfig = <span class="keyword">new</span> AzureOpenAIConfig</span><br><span class="line">&#123;</span><br><span class="line">    Endpoint = endpoint,</span><br><span class="line">    APIKey = apiKey,</span><br><span class="line">    Deployment = chatDeployment,</span><br><span class="line">    APIType = AzureOpenAIConfig.APITypes.ChatCompletion,</span><br><span class="line">    Auth = AzureOpenAIConfig.AuthTypes.APIKey</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> memory2 = <span class="keyword">new</span> KernelMemoryBuilder()</span><br><span class="line">    .WithAzureOpenAITextEmbeddingGeneration(azureOpenAIEmbeddingConfig)</span><br><span class="line">    .WithAzureOpenAITextGeneration(azureOpenAITextConfig)</span><br><span class="line">    .Build&lt;MemoryServerless&gt;();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 讓 Kernel Memory 自動幫我們切段，並轉成 Embeddings</span></span><br><span class="line"><span class="keyword">await</span> memory2.ImportDocumentAsync(<span class="keyword">new</span> Document(<span class="string">&quot;tooth&quot;</span>)</span><br><span class="line">    .AddFiles(<span class="keyword">new</span> [] &#123;<span class="string">@&quot;C:\OpenAI\docs\tooth\qa.docx&quot;</span></span><br><span class="line">     ,<span class="string">@&quot;C:\OpenAI\docs\tooth\stdtable.docx&quot;</span></span><br><span class="line">     , <span class="string">@&quot;C:\OpenAI\docs\tooth\terms.docx&quot;</span>&#125;)</span><br><span class="line">    .AddTag(<span class="string">&quot;type&quot;</span>,<span class="string">&quot;tooth&quot;</span>));</span><br></pre></td></tr></table></figure><p>上述設定好之後，透過 ImportDocumentAsync 就幫我們做到，<br>取出文件的內容，<br>將文件的內容切成一段段易於搜尋，<br>將一段段的內容透過 embedding model 來轉成 embedding，<br>將這些內容存在 Memory 之中(目前是使用 MemoryServerless)</p><p>3.分別詢問 OpenAI 及 AOAI</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> answer = <span class="keyword">await</span> memory.AskAsync(<span class="string">&quot;請問洗牙有什麼規定&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> answer2 = <span class="keyword">await</span> memory2.AskAsync(<span class="string">&quot;請問洗牙有什麼規定&quot;</span>);</span><br></pre></td></tr></table></figure><p>OpenAI (Embeddings + GPT-3.5 Turbo)結果如下，</p><img src="/2023/12/22/sk-kernel-memory/01.png" class="" title="OpenAI"><p>AOAI (Embeddings + GPT-4)結果如下，</p><img src="/2023/12/22/sk-kernel-memory/02.png" class="" title="AOAI"><p>比較起來，OpenAI 似乎比 AOAI 來的簡潔一些，<br>另外筆者覺得利害的地方是，洗牙的同義詞是建立在 qa.docx 文件之中，<br>但是 <a href="https://github.com/microsoft/kernel-memory">kernel-memory</a> 卻可以將它們與其他文件關連起來找出對應的內容，</p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://github.com/microsoft/kernel-memory">kernel-memory</a><br><a href="https://medium.com/@evertongomede/understanding-the-bm25-ranking-algorithm-19f6d45c6ce">Understanding the BM25 Ranking Algorithm</a><br><a href="https://rainmakerho.github.io/2023/11/29/openai-assistant-api/">OpenAI Assistants API 初體驗</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;現在很多企業都在使用 Retrieval Augmented Generation(RAG)，&lt;br&gt;先把各個文件先切一段一段(例如 利用各</summary>
      
    
    
    
    
    <category term="Semantic Kernel" scheme="https://rainmakerho.github.io/tags/Semantic-Kernel/"/>
    
    <category term="Kernel Memory" scheme="https://rainmakerho.github.io/tags/Kernel-Memory/"/>
    
    <category term="LLM" scheme="https://rainmakerho.github.io/tags/LLM/"/>
    
    <category term="RAG" scheme="https://rainmakerho.github.io/tags/RAG/"/>
    
    <category term="embeddings" scheme="https://rainmakerho.github.io/tags/embeddings/"/>
    
    <category term="KernelMemoryBuilder" scheme="https://rainmakerho.github.io/tags/KernelMemoryBuilder/"/>
    
    <category term="MemoryServerless" scheme="https://rainmakerho.github.io/tags/MemoryServerless/"/>
    
  </entry>
  
  <entry>
    <title>AADSTS700016 Application with identifier &#39;c4c9c950-2042-1234-b487-3a1234567890&#39; was not found in the directory &#39;Bot Framework&#39;. This can happen if the application has not been installed by the administrator of the tenant or consented to by any user in the tenant.</title>
    <link href="https://rainmakerho.github.io/2023/12/21/AADSTS700016-azure-bot/"/>
    <id>https://rainmakerho.github.io/2023/12/21/AADSTS700016-azure-bot/</id>
    <published>2023-12-21T05:30:38.000Z</published>
    <updated>2023-12-21T05:54:36.520Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>在 Microsoft Entra ID(Azure AD)的 App registrations 建立 App (Supported account types 設定為 <code>Accounts in this organizational directory only (你的組織 only - Single tenant)</code>)並建立它的 Certificates &amp; secrets ，然後建立 Azure Bot 並設定 Microsoft App ID ，<code>Type of App</code> 設定為 <strong>Single Tenant</strong> 對應到上述的 App。<br>透過 App 的 clientId 及 secrets 到 <code>https://login.microsoftonline.com/botframework.com/oauth2/v2.0/token</code> 取得 token 時，發生<strong>AADSTS700016</strong>的錯誤。</p><blockquote><p>AADSTS700016: Application with identifier ‘c4c9c950-2042-1234-b487-3a1234567890’ was not found in the directory ‘Bot Framework’. This can happen if the application has not been installed by the administrator of the tenant or consented to by any user in the tenant.You may have sent your authentication request to the wrong tenant.</p></blockquote><h3 id="解決"><a href="#解決" class="headerlink" title="解決"></a>解決</h3><p>依 <a href="https://learn.microsoft.com/zh-tw/azure/bot-service/rest-api/bot-framework-rest-connector-authentication?view=azure-bot-service-4.0&tabs=multitenant#step-1-request-an-access-token-from-the-microsoft-entra-id-account-login-service">從 Microsoft Entra ID 帳戶登入服務要求存取權杖</a> 說明，<br>要透過 <code>https://login.microsoftonline.com/botframework.com/oauth2/v2.0/token</code> 取得 token ，<br>App 的 <strong>Supported account types</strong> 及 Azure Bot 中 Microsoft App ID 的 <code>Type of App</code> ，要設定為 <code>Multi Tenant</code>。<br>如果是 <code>Single Tenant</code>，那取得 token 的 url 要改成 <code>https://login.microsoftonline.com/&lt;你的-TENANT-ID&gt;/oauth2/v2.0/token</code><br>這樣就不會有問題了哦~</p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://learn.microsoft.com/zh-tw/azure/bot-service/rest-api/bot-framework-rest-connector-authentication?view=azure-bot-service-4.0&tabs=multitenant#step-1-request-an-access-token-from-the-microsoft-entra-id-account-login-service">從 Microsoft Entra ID 帳戶登入服務要求存取權杖</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;在 Microsoft Entra ID(Azure AD)的 App registrations 建立 App (Supported ac</summary>
      
    
    
    
    
    <category term="Teams" scheme="https://rainmakerho.github.io/tags/Teams/"/>
    
    <category term="AADSTS700016" scheme="https://rainmakerho.github.io/tags/AADSTS700016/"/>
    
    <category term="Azure Bot" scheme="https://rainmakerho.github.io/tags/Azure-Bot/"/>
    
    <category term="Single Tenant" scheme="https://rainmakerho.github.io/tags/Single-Tenant/"/>
    
    <category term="Type of App" scheme="https://rainmakerho.github.io/tags/Type-of-App/"/>
    
    <category term="Supported account types" scheme="https://rainmakerho.github.io/tags/Supported-account-types/"/>
    
  </entry>
  
  <entry>
    <title>Azure 設定 OIDC App 額外的 宣告(claim)</title>
    <link href="https://rainmakerho.github.io/2023/12/21/azure-oidc-add-claims-sso/"/>
    <id>https://rainmakerho.github.io/2023/12/21/azure-oidc-add-claims-sso/</id>
    <published>2023-12-21T01:04:27.000Z</published>
    <updated>2023-12-21T02:17:33.922Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近同仁透過 CAS 接 Azure OIDC ，當同仁登入 Azure 後，Azure 傳給 CAS 的 Claims 只有預設的那些。<br>但是在 Azure User 的屬性中有一個<code>mailnickname</code>，我們想要把這個屬性當作額外的 Claim 傳給 CAS。<br>這樣要怎麼設定呢?</p><h3 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h3><p>一般在設定時，一定會在 Microsoft Entra ID(舊 Azure AD) 中的 <code>App registrations</code> 建立 App(Supported account types 為 <code>Single tenant</code>)，<br>它同時也會在 <code>Enterprise applications</code> 建立該 App。</p><p>1.在 <code>App registrations</code> 中的 App 設定 <strong>Manifest</strong> 中的 <code>acceptMappedClaims</code><br>在 <code>App registrations</code> 中選到建立的 App ，點選 <code>Manifest</code> ，將 <code>acceptMappedClaims</code> 設定為 <code>true</code>。<br><code>accessTokenAcceptedVersion</code> 預設值為 null ，也就是 v1.0 id_tokens 的版本，如果需要 v2.0 ，就將它改成 2。<br>詳細設定請參考: <a href="https://learn.microsoft.com/zh-tw/entra/identity-platform/reference-app-manifest?WT.mc_id=Portal-Microsoft_AAD_RegisteredApps">Microsoft Entra 應用程式資訊清單</a></p><img src="/2023/12/21/azure-oidc-add-claims-sso/01.png" class="" title="Manifest"><p>2.在 <code>Enterprise applications</code> 中的 App 的 <code>Single sing-on</code> 中增加 Claims<br>在 <code>Enterprise applications</code> 中選到建立的 App，點選 <code>Single sing-on</code> 在 <strong>2</strong> <code>Atrributes &amp; Claims</code> 按下 Edit</p><img src="/2023/12/21/azure-oidc-add-claims-sso/02.png" class="" title="Single sing-on"><p>在<code>Atrributes &amp; Claims</code>功能中，按下<code>+ Add new claim</code>，</p><img src="/2023/12/21/azure-oidc-add-claims-sso/03.png" class="" title="Add new claim"><p>填入 <code>name</code> 並選擇 <code>Source attribute</code> 為 <code>user.mailnickname</code> (請依需求調整)，最後按下 <code>Save</code></p><img src="/2023/12/21/azure-oidc-add-claims-sso/04.png" class="" title="Save"><p>設定完成後，在 CAS 那透過 Azrue OIDC 登入後，就可以多取到一個叫 <code>mailnickname</code> 的 Claim 了哦~</p><ul><li>註:如果 CAS 出現 <code>This application is required to be configured with an application-specific signing key. It is either not configured with one, or the key has expired or is not yet valid.</code> 表示沒設定 <strong>Manifest</strong></li></ul><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://learn.microsoft.com/en-us/answers/questions/390941/app-registrations-vs-enterprise-applications-in-az">App Registrations vs Enterprise Applications in Azure AD - Certificate Significance</a><br><a href="https://stackoverflow.com/questions/54071385/difference-between-enterprise-application-and-app-registration-in-azure">Difference between “enterprise application” and “app registration” in Azure</a><br><a href="https://learn.microsoft.com/zh-tw/entra/identity-platform/reference-app-manifest?WT.mc_id=Portal-Microsoft_AAD_RegisteredApps">Microsoft Entra 應用程式資訊清單</a><br><a href="https://stackoverflow.com/questions/73746617/when-using-a-custom-azure-claimsmappingpolicy-cant-sign-in-this-application-is">When using a custom Azure ClaimsMappingPolicy can’t sign in “This application is required to be configured with an application-specific signing key. “</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;最近同仁透過 CAS 接 Azure OIDC ，當同仁登入 Azure 後，Azure 傳給 CAS 的 Claims 只有預設的那些。&lt;</summary>
      
    
    
    
    
    <category term="oidc" scheme="https://rainmakerho.github.io/tags/oidc/"/>
    
    <category term="azure" scheme="https://rainmakerho.github.io/tags/azure/"/>
    
    <category term="add" scheme="https://rainmakerho.github.io/tags/add/"/>
    
    <category term="claims" scheme="https://rainmakerho.github.io/tags/claims/"/>
    
    <category term="oauth" scheme="https://rainmakerho.github.io/tags/oauth/"/>
    
  </entry>
  
  <entry>
    <title>C# 把字串變短，以 GUID 為例</title>
    <link href="https://rainmakerho.github.io/2023/12/18/short-string-c/"/>
    <id>https://rainmakerho.github.io/2023/12/18/short-string-c/</id>
    <published>2023-12-18T05:56:06.000Z</published>
    <updated>2023-12-18T08:31:46.115Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>有時會覺得某字串太長了，例如 GUID, 網址 …<br>那有什麼方式可以將它們變短嗎?</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>以下以 GUID 為例子，</p><p>1.取 Byte Array 轉成 Base64 字串。<br>GUID 原始長度為 <strong>36</strong> ，取 byte Array 的值轉成 Base64 ，長度就會短為 <strong>22</strong>。<br>這個做法的好處是可以再轉回 GUID</p><p>如果上述長度<strong>22</strong>還是覺得太長，那就要自行取一個不會重覆的值去對應到原本的 GUID 。<br>這個重覆的值，可以是流水號、timestamp、Hash 前段的值 …<br>還要判斷值是否重覆。</p><p>2.取 MD5 or SHA Hash 值，取後取前幾個字出來，或是取<code>GetHashCode()</code> 轉 Base64</p><p>3.隨機取亂數值</p><p>測試的程式如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//dotnet add package Microsoft.AspNetCore.WebUtilities</span></span><br><span class="line"><span class="keyword">using</span> System.Numerics;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.WebUtilities;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> newGuid = Guid.NewGuid();</span><br><span class="line"><span class="keyword">var</span> strGuid = newGuid.ToString();</span><br><span class="line"><span class="comment">// GUID 長度為 36</span></span><br><span class="line">Console.WriteLine(<span class="string">$&quot;guid:<span class="subst">&#123;strGuid&#125;</span>, Len:<span class="subst">&#123;strGuid.Length&#125;</span>&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Guid Byte Array 轉成 Base64 長度為 22</span></span><br><span class="line"><span class="keyword">var</span> base64Guid = Guid2Base64(newGuid);</span><br><span class="line">Console.WriteLine(<span class="string">$&quot;base64:<span class="subst">&#123;base64Guid&#125;</span>, Len:<span class="subst">&#123;base64Guid.Length&#125;</span>&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> reverseGuid = Base642Guid(base64Guid);</span><br><span class="line">Console.WriteLine(<span class="string">$&quot;base64Guid:<span class="subst">&#123;reverseGuid&#125;</span>, Len:<span class="subst">&#123;reverseGuid.Length&#125;</span>&quot;</span>);</span><br><span class="line"><span class="comment">// 可再轉回 Guid</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// GUID 用 MD5 計算 Hash , 取前10</span></span><br><span class="line"><span class="keyword">var</span> md5Guid = Guid2Md5Pre10(strGuid);</span><br><span class="line">Console.WriteLine(<span class="string">$&quot;MD5 Base62:<span class="subst">&#123;md5Guid&#125;</span>, Len:<span class="subst">&#123;md5Guid.Length&#125;</span>&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// GUID HashCode , Base62 長度為 10~11</span></span><br><span class="line"><span class="keyword">var</span> hashCode = HashCode2Base62(strGuid);</span><br><span class="line">Console.WriteLine(<span class="string">$&quot;HashCode :<span class="subst">&#123;hashCode&#125;</span>, Len:<span class="subst">&#123;hashCode.Length&#125;</span>&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// GUID HashCode , Base64 長度為 10~11</span></span><br><span class="line"><span class="keyword">var</span> hashCodeB64 = HashCode2Base64(strGuid);</span><br><span class="line">Console.WriteLine(<span class="string">$&quot;HashCode :<span class="subst">&#123;hashCodeB64&#125;</span>, Len:<span class="subst">&#123;hashCodeB64.Length&#125;</span>&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 取隨機值，長度為 3~5</span></span><br><span class="line"><span class="keyword">var</span> randomStr = GenerateRandom();</span><br><span class="line">Console.WriteLine(<span class="string">$&quot;randomStr :<span class="subst">&#123;randomStr&#125;</span>, Len:<span class="subst">&#123;randomStr.Length&#125;</span>&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="built_in">string</span> <span class="title">Guid2Base64</span>(<span class="params">Guid guid</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span> modifiedBase64 = ConvertToBase64(guid.ToByteArray());</span><br><span class="line">    <span class="keyword">return</span> modifiedBase64;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="built_in">string</span> <span class="title">Base642Guid</span>(<span class="params"><span class="built_in">string</span> base64</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> bytesDecode = ConvertFromBase64(base64);</span><br><span class="line">    <span class="keyword">var</span> guid = <span class="keyword">new</span> Guid(bytesDecode);</span><br><span class="line">    <span class="keyword">return</span> guid.ToString();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="built_in">string</span> <span class="title">Guid2Md5Pre10</span>(<span class="params"><span class="built_in">string</span> guid</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> guidHash = System.Security.Cryptography.MD5.Create().ComputeHash(Encoding.UTF8.GetBytes(guid));</span><br><span class="line">    <span class="keyword">var</span> result = BitConverter.ToString(guidHash).Replace(<span class="string">&quot;-&quot;</span>, <span class="string">&quot;&quot;</span>).Substring(<span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="built_in">string</span> <span class="title">HashCode2Base62</span>(<span class="params"><span class="built_in">string</span> guid</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> guidHash = Encoding.UTF8.GetBytes(<span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0:X&#125;&quot;</span>, guid.GetHashCode()));</span><br><span class="line">    <span class="keyword">var</span> result = ConvertToBase62(guidHash);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="built_in">string</span> <span class="title">HashCode2Base64</span>(<span class="params"><span class="built_in">string</span> guid</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> guidHash = Encoding.UTF8.GetBytes(<span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0:X&#125;&quot;</span>, guid.GetHashCode()));</span><br><span class="line">    <span class="keyword">var</span> result = ConvertToBase64(guidHash);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="built_in">string</span> <span class="title">GenerateRandom</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span> urlsafe = <span class="built_in">string</span>.Empty;</span><br><span class="line">    Enumerable.Range(<span class="number">48</span>, <span class="number">75</span>)</span><br><span class="line">        .Where(i =&gt; i &lt; <span class="number">58</span> || i &gt; <span class="number">64</span> &amp;&amp; i &lt; <span class="number">91</span> || i &gt; <span class="number">96</span>)</span><br><span class="line">        .OrderBy(o =&gt; <span class="keyword">new</span> Random().Next())</span><br><span class="line">        .ToList()</span><br><span class="line">        .ForEach(i =&gt; urlsafe += Convert.ToChar(i));</span><br><span class="line">    <span class="keyword">var</span> result = urlsafe.Substring(<span class="keyword">new</span> Random().Next(<span class="number">0</span>, urlsafe.Length), <span class="keyword">new</span> Random().Next(<span class="number">2</span>, <span class="number">6</span>));</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="built_in">string</span> <span class="title">EzConvertToBase62</span>(<span class="params"><span class="built_in">byte</span>[] buffer</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="built_in">string</span> chars = <span class="string">&quot;0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="keyword">var</span> b <span class="keyword">in</span> buffer)</span><br><span class="line">    &#123;</span><br><span class="line">        sb.Append(chars[b % <span class="number">62</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sb.ToString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>結果如下，</p><img src="/2023/12/18/short-string-c/01.png" class="" title="執行結果"><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://dvoituron.com/2022/04/07/generate-small-unique-identifier/">A shorter, more user-friendly GUID</a><br><a href="https://dayvster.com/blog/make-a-url-shortener-csharp">Make a URL Shortener in C#</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;有時會覺得某字串太長了，例如 GUID, 網址 …&lt;br&gt;那有什麼方式可以將它們變短嗎?&lt;/p&gt;
&lt;h3 id=&quot;解法&quot;&gt;&lt;a href=&quot;</summary>
      
    
    
    
    
    <category term="C#" scheme="https://rainmakerho.github.io/tags/C/"/>
    
    <category term="Base64" scheme="https://rainmakerho.github.io/tags/Base64/"/>
    
    <category term="GUID" scheme="https://rainmakerho.github.io/tags/GUID/"/>
    
    <category term="Short" scheme="https://rainmakerho.github.io/tags/Short/"/>
    
    <category term="URL" scheme="https://rainmakerho.github.io/tags/URL/"/>
    
    <category term="短網址" scheme="https://rainmakerho.github.io/tags/%E7%9F%AD%E7%B6%B2%E5%9D%80/"/>
    
    <category term="Base62" scheme="https://rainmakerho.github.io/tags/Base62/"/>
    
    <category term="Base64UrlEncode" scheme="https://rainmakerho.github.io/tags/Base64UrlEncode/"/>
    
  </entry>
  
  <entry>
    <title>為什麼 OpenAI Assistants API 選不到 GPT4?</title>
    <link href="https://rainmakerho.github.io/2023/12/11/why-openai-assistants-api-no-gpt4/"/>
    <id>https://rainmakerho.github.io/2023/12/11/why-openai-assistants-api-no-gpt4/</id>
    <published>2023-12-11T01:19:18.000Z</published>
    <updated>2023-12-11T01:46:03.680Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>在測試 OpenAI Assistants API 時，為什麼選不到 GPT 4 model 呢?</p><h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p>原本以為升級到 <strong>ChatGPT Plus</strong> 才會有，<br>後來發現是因為 <strong>Usage tiers</strong> 的關系。<br>預設的 <strong>Usage tiers</strong> 是 <strong>Free</strong>，所以選不到 <strong>GPT4</strong> 的 Model。<br>起碼要付費成為 <strong>非 Free Tier</strong> 帳號才選得到 GPT4 哦~</p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://platform.openai.com/docs/guides/rate-limits/usage-tiers?context=tier-free">Usage tiers</a><br><a href="https://rainmakerho.github.io/2023/11/29/openai-assistant-api/">OpenAI Assistants API 初體驗</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;在測試 OpenAI Assistants API 時，為什麼選不到 GPT 4 model 呢?&lt;/p&gt;
&lt;h3 id=&quot;原因&quot;&gt;&lt;a h</summary>
      
    
    
    
    
    <category term="openai" scheme="https://rainmakerho.github.io/tags/openai/"/>
    
    <category term="assistants api" scheme="https://rainmakerho.github.io/tags/assistants-api/"/>
    
    <category term="gpt4" scheme="https://rainmakerho.github.io/tags/gpt4/"/>
    
    <category term="ChatGPT" scheme="https://rainmakerho.github.io/tags/ChatGPT/"/>
    
    <category term="Usage tiers" scheme="https://rainmakerho.github.io/tags/Usage-tiers/"/>
    
  </entry>
  
  <entry>
    <title>Checkmarx Path Traversal 的怪問題(File.)</title>
    <link href="https://rainmakerho.github.io/2023/12/11/path-traversal-checkmarx-file/"/>
    <id>https://rainmakerho.github.io/2023/12/11/path-traversal-checkmarx-file/</id>
    <published>2023-12-11T00:42:23.000Z</published>
    <updated>2023-12-11T01:18:04.850Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>最近同事詢問在處理 Checkmarx (V 9.4.5.1012 HF24) Path Traversal 透過 <code>Replace</code> 卻無法消除問題。<br>來源是 <code>data</code> ，目的地是 <code>FilesName</code><br>程式如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">HttpPost</span>]</span><br><span class="line"><span class="function"><span class="keyword">public</span> ActionResult <span class="title">UploadArichiveClassficationReport</span>(<span class="params">UploadArichiveClassficationReportForm data</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> filePath = data.File.FilesName.Replace(<span class="string">&quot;..&quot;</span>, <span class="string">&quot;&quot;</span>).Replace(<span class="string">&quot;/&quot;</span>, <span class="string">&quot;&quot;</span>).Replace(<span class="string">&quot;\\&quot;</span>, <span class="string">&quot;&quot;</span>).Replace(<span class="string">&quot;&#x27;&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>從 Checkmarx 管理 UI 中發現，Checkmarx 似乎不理會 <code>FilesName</code> 後面的 <code>Replace</code>，<br>直接就決定 <code>FilesName</code> 這裡有問題。</p><img src="/2023/12/11/path-traversal-checkmarx-file/01.png" class="" title="Checkmarx UI"><p>都還在處理 File 的路徑，Checkmarx 怎麼直接就噴有問題呢?</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>從 <code>data.File</code>，<code>File</code> 是 <code>UploadArichiveClassficationReportForm</code> 類別的屬性名稱。<br>但從上述來看， Checkmarx 將 <code>File.FilesName</code> 的 <code>File</code> 當成是 <code>System.IO.File</code>。<br>看來是因為 <strong>屬性</strong> 名稱取成 <code>File</code> ，所以中招了 …<br>那怎麼辦呢?</p><p>1.改屬性名稱，將<code>File</code>改成 別的屬性名稱，儘量別跟 <code>System.IO</code> 類別名稱一樣</p><p>2.先將 <code>data.File</code> 放到變數之中，再來操作，如下</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">HttpPost</span>]</span><br><span class="line"><span class="function"><span class="keyword">public</span> ActionResult <span class="title">UploadArichiveClassficationReport</span>(<span class="params">UploadArichiveClassficationReportForm data</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> file = data.File;</span><br><span class="line">    <span class="keyword">var</span> filePath = file.FilesName.Replace(<span class="string">&quot;..&quot;</span>, <span class="string">&quot;&quot;</span>).Replace(<span class="string">&quot;/&quot;</span>, <span class="string">&quot;&quot;</span>).Replace(<span class="string">&quot;\\&quot;</span>, <span class="string">&quot;&quot;</span>).Replace(<span class="string">&quot;&#x27;&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://rainmakerho.github.io/2021/05/21/Path-Traversal-Vulnerability-Checkmarx/">Checkmarx Path Traversal 的解法</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;最近同事詢問在處理 Checkmarx (V 9.4.5.1012 HF24) Path Traversal 透過 &lt;code&gt;Replac</summary>
      
    
    
    
    
    <category term="C#" scheme="https://rainmakerho.github.io/tags/C/"/>
    
    <category term="Checkmarx" scheme="https://rainmakerho.github.io/tags/Checkmarx/"/>
    
    <category term="Path Traversal" scheme="https://rainmakerho.github.io/tags/Path-Traversal/"/>
    
    <category term="File" scheme="https://rainmakerho.github.io/tags/File/"/>
    
  </entry>
  
  <entry>
    <title>OpenAI Assistants API 初體驗</title>
    <link href="https://rainmakerho.github.io/2023/11/29/openai-assistant-api/"/>
    <id>https://rainmakerho.github.io/2023/11/29/openai-assistant-api/</id>
    <published>2023-11-29T08:11:17.000Z</published>
    <updated>2023-12-08T08:32:17.977Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近 OpenAI 有推出 GPTs 可以很方便的讓人直接上傳文件做人知識庫並建立 Bot 來對話，<br>對話的理解能力還不輸之前自已將文件內容拆分一段段轉成 Embedding 後再跟使用者的問來來比較相似度。<br>但因為目前 GPTs 還不 Support API 存取，所以改用 OpenAI Assistants API 來試試。<br>另外 OpenAI Assistants API 是用多少算多少$，可以從 <a href="https://platform.openai.com/usage">usage</a> 看到目前的花費(預設有給 <code>5</code>美元)。</p><h3 id="體驗"><a href="#體驗" class="headerlink" title="體驗"></a>體驗</h3><p>如果要手動測試的話，可以直接到 <a href="https://platform.openai.com/playground?mode=assistant">Assistants playground</a> ，<br>建立新的 Assistant、上傳文件、設定 Model (<code>gpt-3.5-turbo-1106</code> or …) 、啟用 Tools <code>Retrieval</code>)後，就可以進行對話。</p><img src="/2023/11/29/openai-assistant-api/01.png" class="" title="Assistants playground"><h3 id="說明"><a href="#說明" class="headerlink" title="說明"></a>說明</h3><p>開始之前，先來了解什麼是 Assistant, Thread, Message, Run 及 File。</p><table><thead><tr><th>Assistant</th><th>就是一個知識助理，包含要使用的 instructions, model, files 及 tools</th></tr></thead><tbody><tr><td>Thread</td><td>使用者的 Session，所有的對話都會在這裡面。以前在 Chat 需要多輪對話時，需要自已將多次的對話訊息包含在一起，現在則不需要，會自動被記錄在 Thread 之中。</td></tr><tr><td>Message</td><td>使用者發送的問題及 Assistant 回覆的內容</td></tr><tr><td>Run</td><td>當使用者發送問題後，透過 <code>Run</code> 來讓 Assistant 回覆使用者的問題</td></tr><tr><td>File</td><td>要給 Fine-tuning 或 Assistants 使用的檔案</td></tr></tbody></table><h3 id="使用-API"><a href="#使用-API" class="headerlink" title="使用 API"></a>使用 API</h3><p>以下介紹使用 C# HttpClient 呼叫 Assistants API 來建立 Assistant 並對話及取得 Assistant 回覆內容。<br>要達到這樣子的過程有以下幾個步驟，</p><ol start="0"><li>取得 API Key</li><li>上傳要做為知識庫的文件</li><li>建立 Assistant</li><li>為一個使用者建立 Thread</li><li>在這個 Thread 中發送使用者 Message</li><li>發送 Run 來讓 Assistant 處理使用者詢問的問題</li><li>取回 Message</li><li>最後跟使用者結束所有對話時，可以將 Thread 刪除掉</li></ol><p>以下我們一步步展開來看，</p><h5 id="0-取得-API-Key"><a href="#0-取得-API-Key" class="headerlink" title="0. 取得 API Key"></a>0. 取得 API Key</h5><p>到 <a href="https://platform.openai.com/api-keys">API Keys</a> 建立 Secretkey ，並將它 Copy 下來</p><h5 id="1-上傳要做為知識庫的文件"><a href="#1-上傳要做為知識庫的文件" class="headerlink" title="1. 上傳要做為知識庫的文件"></a>1. 上傳要做為知識庫的文件</h5><p>這裡的文件格式目前只支援 <code>&#39;c&#39;, &#39;cpp&#39;, &#39;csv&#39;, &#39;docx&#39;, &#39;html&#39;, &#39;java&#39;, &#39;json&#39;, &#39;md&#39;, &#39;pdf&#39;, &#39;php&#39;, &#39;pptx&#39;, &#39;py&#39;, &#39;rb&#39;, &#39;tex&#39;, &#39;txt&#39;, &#39;css&#39;, &#39;jpeg&#39;, &#39;jpg&#39;, &#39;js&#39;, &#39;gif&#39;, &#39;png&#39;, &#39;tar&#39;, &#39;ts&#39;, &#39;xlsx&#39;, &#39;xml&#39;, &#39;zip&#39;</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> jsonContentType = <span class="string">&quot;application/json&quot;</span>;</span><br><span class="line"><span class="built_in">string</span> apiKey = <span class="string">&quot;取得的Secretkey&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> leaveDoc = <span class="string">@&quot;C:\OpenAI\docs\請假規則.docx&quot;</span>;</span><br><span class="line"><span class="keyword">await</span> UploadFile(leaveDoc);</span><br><span class="line"><span class="comment">//將 fileId 記錄下來，在建立 Assistant 會使用到</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//要查看有上傳那些檔案可以呼叫</span></span><br><span class="line"><span class="comment">//await ListUploadFiles();</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">async</span> Task <span class="title">UploadFile</span>(<span class="params"><span class="built_in">string</span> filePath</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> url = <span class="string">&quot;https://api.openai.com/v1/files&quot;</span>;</span><br><span class="line">    <span class="keyword">using</span> <span class="keyword">var</span> client = <span class="keyword">new</span> HttpClient();</span><br><span class="line">    client.DefaultRequestHeaders.Add(<span class="string">&quot;Authorization&quot;</span>, <span class="string">$&quot;Bearer <span class="subst">&#123;apiKey&#125;</span>&quot;</span>);</span><br><span class="line">    <span class="keyword">using</span> <span class="keyword">var</span> content = <span class="keyword">new</span> MultipartFormDataContent();</span><br><span class="line">    <span class="keyword">using</span> <span class="keyword">var</span> fileStream = <span class="keyword">new</span> FileStream(filePath, FileMode.Open);</span><br><span class="line">    content.Add(<span class="keyword">new</span> StreamContent(fileStream), <span class="string">&quot;file&quot;</span>, Path.GetFileName(filePath));</span><br><span class="line">    <span class="keyword">var</span> purpose = <span class="keyword">new</span> StringContent(<span class="string">&quot;assistants&quot;</span>);</span><br><span class="line">    content.Add(purpose, <span class="string">&quot;purpose&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> response = <span class="keyword">await</span> client.PostAsync(url, content);</span><br><span class="line">    <span class="keyword">if</span> (response.IsSuccessStatusCode)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> responseBody = <span class="keyword">await</span> response.Content.ReadAsStringAsync();</span><br><span class="line">        Console.WriteLine(responseBody);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;錯誤：<span class="subst">&#123;response.StatusCode&#125;</span> - <span class="subst">&#123;response.ReasonPhrase&#125;</span>&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> responseBody = <span class="keyword">await</span> response.Content.ReadAsStringAsync();</span><br><span class="line">        Console.WriteLine(responseBody);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">async</span> Task <span class="title">ListUploadFiles</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> url = <span class="string">&quot;https://api.openai.com/v1/files&quot;</span>;</span><br><span class="line">    <span class="keyword">using</span> <span class="keyword">var</span> client = <span class="keyword">new</span> HttpClient();</span><br><span class="line">    client.DefaultRequestHeaders.Add(<span class="string">&quot;Authorization&quot;</span>, <span class="string">$&quot;Bearer <span class="subst">&#123;apiKey&#125;</span>&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> response = <span class="keyword">await</span> client.GetAsync(url);</span><br><span class="line">    <span class="keyword">if</span> (response.IsSuccessStatusCode)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> responseBody = <span class="keyword">await</span> response.Content.ReadAsStringAsync();</span><br><span class="line">        Console.WriteLine(responseBody);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;錯誤：<span class="subst">&#123;response.StatusCode&#125;</span> - <span class="subst">&#123;response.ReasonPhrase&#125;</span>&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> responseBody = <span class="keyword">await</span> response.Content.ReadAsStringAsync();</span><br><span class="line">        Console.WriteLine(responseBody);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>結果如下，</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;file&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;file-9xpwQr4rni98mUcrQtlkDkvc&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;purpose&quot;</span><span class="punctuation">:</span> <span class="string">&quot;assistants&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;filename&quot;</span><span class="punctuation">:</span> <span class="string">&quot;請假規則.docx&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;bytes&quot;</span><span class="punctuation">:</span> <span class="number">33078</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;created_at&quot;</span><span class="punctuation">:</span> <span class="number">1701237463</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="string">&quot;processed&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;status_details&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h5 id="2-建立-Assistant"><a href="#2-建立-Assistant" class="headerlink" title="2. 建立 Assistant"></a>2. 建立 Assistant</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> file1Id = <span class="string">&quot;file-9xpwQr4rni98mUcrQtlkDkvc&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> instructions = <span class="string">@&quot;你是GSS的請假助手，你的任務是基於上傳的檔案內容，回答使用者的問題。</span></span><br><span class="line"><span class="string">任務說明:</span></span><br><span class="line"><span class="string">- 當使用者提問時，仔細分析問題並基於上傳的檔案內容給出回答。</span></span><br><span class="line"><span class="string">- 如果上傳的檔案內容沒有能回答使用者問題的參考內容，請直接回答&#x27;我不知道&#x27;&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> assistantName = <span class="string">&quot;GSS的請假助手&quot;</span>;</span><br><span class="line"><span class="comment">//code_interpreter, retrieval, or function</span></span><br><span class="line"><span class="keyword">var</span> tools = <span class="keyword">new</span> List&lt;<span class="built_in">object</span>&gt; &#123; <span class="keyword">new</span> &#123; type = <span class="string">&quot;retrieval&quot;</span> &#125; &#125;;</span><br><span class="line"><span class="keyword">var</span> model = <span class="string">&quot;gpt-3.5-turbo-1106&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> file_ids = <span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt; &#123; file1Id &#125;;</span><br><span class="line"><span class="keyword">await</span> CreateAssistant(instructions, assistantName, tools, model, file_ids);</span><br><span class="line"><span class="comment">//將  assistantId 記錄下來</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//要查看有那些 Assistants 可以呼叫 ListAssistants()</span></span><br><span class="line"><span class="comment">//await ListAssistants();</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">async</span> Task <span class="title">CreateAssistant</span>(<span class="params"><span class="built_in">string</span> instructions, <span class="built_in">string</span> name, List&lt;<span class="built_in">object</span>&gt; tools, <span class="built_in">string</span> model, List&lt;<span class="built_in">string</span>&gt; file_ids</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> url = <span class="string">&quot;https://api.openai.com/v1/assistants&quot;</span>;</span><br><span class="line">    <span class="keyword">using</span> <span class="keyword">var</span> client = <span class="keyword">new</span> HttpClient();</span><br><span class="line">    client.DefaultRequestHeaders.Add(<span class="string">&quot;Authorization&quot;</span>, <span class="string">$&quot;Bearer <span class="subst">&#123;apiKey&#125;</span>&quot;</span>);</span><br><span class="line">    client.DefaultRequestHeaders.Add(<span class="string">&quot;OpenAI-Beta&quot;</span>, <span class="string">&quot;assistants=v1&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> jsonStr = JsonSerializer.Serialize(<span class="keyword">new</span></span><br><span class="line">    &#123;</span><br><span class="line">        instructions = instructions,</span><br><span class="line">        name = name,</span><br><span class="line">        tools = tools,</span><br><span class="line">        model = model,</span><br><span class="line">        file_ids = file_ids</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">using</span> <span class="keyword">var</span> jsonContent = <span class="keyword">new</span> StringContent(jsonStr,</span><br><span class="line">        Encoding.UTF8,</span><br><span class="line">        <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> response = <span class="keyword">await</span> client.PostAsync(url, jsonContent);</span><br><span class="line">    <span class="keyword">if</span> (response.IsSuccessStatusCode)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> responseBody = <span class="keyword">await</span> response.Content.ReadAsStringAsync();</span><br><span class="line">        Console.WriteLine(responseBody);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;Err:<span class="subst">&#123;response.StatusCode&#125;</span>-<span class="subst">&#123;response.ReasonPhrase&#125;</span>&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> responseBody = <span class="keyword">await</span> response.Content.ReadAsStringAsync();</span><br><span class="line">        Console.WriteLine(responseBody);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">async</span> Task <span class="title">ListAssistants</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> url = <span class="string">&quot;https://api.openai.com/v1/assistants?order=desc&amp;limit=20&quot;</span>;</span><br><span class="line">    <span class="keyword">using</span> <span class="keyword">var</span> client = <span class="keyword">new</span> HttpClient();</span><br><span class="line">    client.DefaultRequestHeaders.Add(<span class="string">&quot;Authorization&quot;</span>, <span class="string">$&quot;Bearer <span class="subst">&#123;apiKey&#125;</span>&quot;</span>);</span><br><span class="line">    client.DefaultRequestHeaders.Add(<span class="string">&quot;OpenAI-Beta&quot;</span>, <span class="string">&quot;assistants=v1&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> response = <span class="keyword">await</span> client.GetAsync(url);</span><br><span class="line">    <span class="keyword">if</span> (response.IsSuccessStatusCode)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> responseBody = <span class="keyword">await</span> response.Content.ReadAsStringAsync();</span><br><span class="line">        Console.WriteLine(responseBody);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;錯誤：<span class="subst">&#123;response.StatusCode&#125;</span> - <span class="subst">&#123;response.ReasonPhrase&#125;</span>&quot;</span>);</span><br><span class="line">        <span class="built_in">string</span> responseBody = <span class="keyword">await</span> response.Content.ReadAsStringAsync();</span><br><span class="line">        Console.WriteLine(responseBody);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>執行結果如下，</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;asst_zsAKidrHJw3GwgI0mtsLFTnf&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;assistant&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;created_at&quot;</span><span class="punctuation">:</span> <span class="number">1701237547</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;GSS的請假助手&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;gpt-3.5-turbo-1106&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;instructions&quot;</span><span class="punctuation">:</span> <span class="string">&quot;你是GSS的請假助手，你的任務是基於上傳的檔案內容，回答使用者的問題。\r\n任務說明:\r\n- 當使用者提問時，仔細分析問題並基於上傳的檔案內容給出回答。\r\n- 如</span></span><br><span class="line"><span class="string">果上傳的檔案內容沒有能回答使用者問題的參考內容，請直接回答&#x27;我不知道&#x27;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;tools&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;retrieval&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;file_ids&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;file-9xpwQr4rni98mUcrQtlkDkvc&quot;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;metadata&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h5 id="3-為一個使用者建立-Thread"><a href="#3-為一個使用者建立-Thread" class="headerlink" title="3. 為一個使用者建立 Thread"></a>3. 為一個使用者建立 Thread</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> assistantId = <span class="string">&quot;asst_zsAKidrHJw3GwgI0mtsLFTnf&quot;</span>;</span><br><span class="line"><span class="comment">//為使用者建立 Thread</span></span><br><span class="line"><span class="keyword">await</span> CreateThread();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">async</span> Task <span class="title">CreateThread</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> url = <span class="string">&quot;https://api.openai.com/v1/threads&quot;</span>;</span><br><span class="line">    <span class="keyword">using</span> <span class="keyword">var</span> client = <span class="keyword">new</span> HttpClient();</span><br><span class="line">    client.DefaultRequestHeaders.Add(<span class="string">&quot;Authorization&quot;</span>, <span class="string">$&quot;Bearer <span class="subst">&#123;apiKey&#125;</span>&quot;</span>);</span><br><span class="line">    client.DefaultRequestHeaders.Add(<span class="string">&quot;OpenAI-Beta&quot;</span>, <span class="string">&quot;assistants=v1&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> response = <span class="keyword">await</span> client.PostAsync(url, <span class="literal">null</span>);</span><br><span class="line">    <span class="keyword">if</span> (response.IsSuccessStatusCode)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> responseBody = <span class="keyword">await</span> response.Content.ReadAsStringAsync();</span><br><span class="line">        Console.WriteLine(responseBody);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;Err:<span class="subst">&#123;response.StatusCode&#125;</span>-<span class="subst">&#123;response.ReasonPhrase&#125;</span>&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> responseBody = <span class="keyword">await</span> response.Content.ReadAsStringAsync();</span><br><span class="line">        Console.WriteLine(responseBody);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>執行結果如下，</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;thread_CwNorPHLj7eGt7UmoCEp7PxV&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;thread&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;created_at&quot;</span><span class="punctuation">:</span> <span class="number">1701237686</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;metadata&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h5 id="4-在這個-Thread-中發送使用者-Message"><a href="#4-在這個-Thread-中發送使用者-Message" class="headerlink" title="4. 在這個 Thread 中發送使用者 Message"></a>4. 在這個 Thread 中發送使用者 Message</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> threadId = <span class="string">&quot;thread_CwNorPHLj7eGt7UmoCEp7PxV&quot;</span>;</span><br><span class="line"><span class="comment">//發送問題</span></span><br><span class="line"><span class="keyword">var</span> q1 = <span class="string">@&quot;請問出差有什麼規定嗎?&quot;</span>;</span><br><span class="line"><span class="keyword">await</span> CreateMessage(threadId, q1);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">async</span> Task <span class="title">CreateMessage</span>(<span class="params"><span class="built_in">string</span> threadId, <span class="built_in">string</span> question</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> url = <span class="string">$&quot;https://api.openai.com/v1/threads/<span class="subst">&#123;threadId&#125;</span>/messages&quot;</span>;</span><br><span class="line">    <span class="keyword">using</span> <span class="keyword">var</span> client = <span class="keyword">new</span> HttpClient();</span><br><span class="line">    client.DefaultRequestHeaders.Add(<span class="string">&quot;Authorization&quot;</span>, <span class="string">$&quot;Bearer <span class="subst">&#123;apiKey&#125;</span>&quot;</span>);</span><br><span class="line">    client.DefaultRequestHeaders.Add(<span class="string">&quot;OpenAI-Beta&quot;</span>, <span class="string">&quot;assistants=v1&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> jsonStr = JsonSerializer.Serialize(<span class="keyword">new</span></span><br><span class="line">    &#123;</span><br><span class="line">        role = <span class="string">&quot;user&quot;</span>,</span><br><span class="line">        content = question</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">using</span> <span class="keyword">var</span> jsonContent = <span class="keyword">new</span> StringContent(jsonStr,</span><br><span class="line">        Encoding.UTF8,</span><br><span class="line">        <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> response = <span class="keyword">await</span> client.PostAsync(url, jsonContent);</span><br><span class="line">    <span class="keyword">if</span> (response.IsSuccessStatusCode)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> responseBody = <span class="keyword">await</span> response.Content.ReadAsStringAsync();</span><br><span class="line">        Console.WriteLine(responseBody);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;Err:<span class="subst">&#123;response.StatusCode&#125;</span>-<span class="subst">&#123;response.ReasonPhrase&#125;</span>&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> responseBody = <span class="keyword">await</span> response.Content.ReadAsStringAsync();</span><br><span class="line">        Console.WriteLine(responseBody);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>執行結果如下，</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;msg_RY12iYrr14wESdn4v6xUuwHJ&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;thread.message&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;created_at&quot;</span><span class="punctuation">:</span> <span class="number">1701237757</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;thread_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;thread_CwNorPHLj7eGt7UmoCEp7PxV&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;role&quot;</span><span class="punctuation">:</span> <span class="string">&quot;user&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;content&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;請問出差有什麼規定嗎?&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;annotations&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;file_ids&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;assistant_id&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;run_id&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;metadata&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h5 id="5-發送-Run-來讓-Assistant-處理使用者詢問的問題"><a href="#5-發送-Run-來讓-Assistant-處理使用者詢問的問題" class="headerlink" title="5. 發送 Run 來讓 Assistant 處理使用者詢問的問題"></a>5. 發送 Run 來讓 Assistant 處理使用者詢問的問題</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">await</span> CreateRun(assistantId, threadId);</span><br><span class="line"><span class="comment">//將 runId 記錄下來</span></span><br><span class="line"><span class="keyword">var</span> run1Id = <span class="string">&quot;run_B62wmGcFQyBllyRDGhNXfTBG&quot;</span>;</span><br><span class="line">Thread.Sleep(<span class="number">2000</span>);</span><br><span class="line"><span class="comment">//Loop 等到 Run 的狀態為 completed 才離開</span></span><br><span class="line"><span class="keyword">await</span> RetrievesRun(threadId, run1Id);</span><br></pre></td></tr></table></figure><p>結果如下，</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;run_B62wmGcFQyBllyRDGhNXfTBG&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;thread.run&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;created_at&quot;</span><span class="punctuation">:</span> <span class="number">1701237910</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;assistant_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;asst_zsAKidrHJw3GwgI0mtsLFTnf&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;thread_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;thread_CwNorPHLj7eGt7UmoCEp7PxV&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="string">&quot;queued&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;started_at&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;expires_at&quot;</span><span class="punctuation">:</span> <span class="number">1701238510</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;cancelled_at&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;failed_at&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;completed_at&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;last_error&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;gpt-3.5-turbo-1106&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;instructions&quot;</span><span class="punctuation">:</span> <span class="string">&quot;你是GSS的請假助手，你的任務是基於上傳的檔案內容，回答使用者的問題。\r\n任務說明:\r\n- 當使用者提問時，仔細分析問題並基於上傳的檔案內容給出回答。\r\n- 如</span></span><br><span class="line"><span class="string">果上傳的檔案內容沒有能回答使用者問題的參考內容，請直接回答&#x27;我不知道&#x27;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;tools&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;retrieval&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;file_ids&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;file-9xpwQr4rni98mUcrQtlkDkvc&quot;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;metadata&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;run_B62wmGcFQyBllyRDGhNXfTBG&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;thread.run&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;created_at&quot;</span><span class="punctuation">:</span> <span class="number">1701237910</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;assistant_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;asst_zsAKidrHJw3GwgI0mtsLFTnf&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;thread_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;thread_CwNorPHLj7eGt7UmoCEp7PxV&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="string">&quot;completed&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;started_at&quot;</span><span class="punctuation">:</span> <span class="number">1701237910</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;expires_at&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;cancelled_at&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;failed_at&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;completed_at&quot;</span><span class="punctuation">:</span> <span class="number">1701237918</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;last_error&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;gpt-3.5-turbo-1106&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;instructions&quot;</span><span class="punctuation">:</span> <span class="string">&quot;你是GSS的請假助手，你的任務是基於上傳的檔案內容，回答使用者的問題。\r\n任務說明:\r\n- 當使用者提問時，仔細分析問題並基於上傳的檔案內容給出回答。\r\n- 如</span></span><br><span class="line"><span class="string">果上傳的檔案內容沒有能回答使用者問題的參考內容，請直接回答&#x27;我不知道&#x27;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;tools&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;retrieval&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;file_ids&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;file-9xpwQr4rni98mUcrQtlkDkvc&quot;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;metadata&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h5 id="6-取回-Message"><a href="#6-取回-Message" class="headerlink" title="6. 取回 Message"></a>6. 取回 Message</h5><p>取得最後回 2 個訊息</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">await</span> ListMessages(threadId);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">async</span> Task <span class="title">ListMessages</span>(<span class="params"><span class="built_in">string</span> threadId</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">var</span> url = <span class="string">$&quot;https://api.openai.com/v1/threads/<span class="subst">&#123;threadId&#125;</span>/messages?order=desc&amp;limit=2&quot;</span>;</span><br><span class="line">  <span class="keyword">using</span> <span class="keyword">var</span> client = <span class="keyword">new</span> HttpClient();</span><br><span class="line">  client.DefaultRequestHeaders.Add(<span class="string">&quot;Authorization&quot;</span>, <span class="string">$&quot;Bearer <span class="subst">&#123;apiKey&#125;</span>&quot;</span>);</span><br><span class="line">  client.DefaultRequestHeaders.Add(<span class="string">&quot;OpenAI-Beta&quot;</span>, <span class="string">&quot;assistants=v1&quot;</span>);</span><br><span class="line">  <span class="keyword">var</span> response = <span class="keyword">await</span> client.GetAsync(url);</span><br><span class="line">  <span class="keyword">if</span> (response.IsSuccessStatusCode)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">string</span> responseBody = <span class="keyword">await</span> response.Content.ReadAsStringAsync();</span><br><span class="line">    Console.WriteLine(responseBody);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    Console.WriteLine(<span class="string">$&quot;錯誤：<span class="subst">&#123;response.StatusCode&#125;</span> - <span class="subst">&#123;response.ReasonPhrase&#125;</span>&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> responseBody = <span class="keyword">await</span> response.Content.ReadAsStringAsync();</span><br><span class="line">    Console.WriteLine(responseBody);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>結果如下，</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;list&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;msg_TfOynQ2UdfJUaJ77HAjiuytv&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;thread.message&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;created_at&quot;</span><span class="punctuation">:</span> <span class="number">1701237913</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;thread_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;thread_CwNorPHLj7eGt7UmoCEp7PxV&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;role&quot;</span><span class="punctuation">:</span> <span class="string">&quot;assistant&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;content&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;根據公司的請假規定，有幾個主要的規則需要注意：\n1. 請假時數計算：每週一至五的工作日有具體的時間計算，上午8:30~12:00計3.5小時，下午13:00~17:30計4.5小</span></span><br><span class="line"><span class="string">時，共計8小時【7†source】。\n2. 特休假的核算方式以休假年資為準，依特定規定給予特別休假，具體以年資表為準。\n3. 遇到臨時狀況，如果因突發事件或生病必須於當日請假，可以於當日</span></span><br><span class="line"><span class="string">10:00前以電話向主管報備，並在事後補辦請假手續【7†source】。\n\n以上是關於請假的一些規定，如果你有其他問題或需要進一步了解請假的相關規定，請隨時告訴我。&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;annotations&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;file_citation&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;【7†source】&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;start_index&quot;</span><span class="punctuation">:</span> <span class="number">96</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;end_index&quot;</span><span class="punctuation">:</span> <span class="number">106</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;file_citation&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;file_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;file-9xpwQr4rni98mUcrQtlkDkvc&quot;</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;quote&quot;</span><span class="punctuation">:</span> <span class="string">&quot;臨時狀況\n同仁因突發事件或生病必須於當日請假者，得於當日10:00前以電話向主管報備，並於事後補辦請假手續。\n同仁未依規定辦理請假手續者，事後又不補</span></span><br><span class="line"><span class="string">辦請假手續並說明原因者，視同曠職。\n\n第一條 請假時數計算\n＊每週一～五，上午8:30~12:00，計3.5小時；\n 下午13:00~17:30，計4.5小時，共8小時。\n＊請假最小單位依各假別規定。</span></span><br><span class="line"><span class="string">\n\n第二條 給假規定 \n特休假\n\t特休假的核算方式以休假年資為準，依下列規定給予特別休假：\n六個月以上一年未滿者，三日。\n一年以上二年未滿者，七日。\n二年以上三年未滿者，十</span></span><br><span class="line"><span class="string">日。\n三年以上五年未滿者，每年十四日。\n五年以上十年未滿者，每年十五日。\n十年以上者，每一年加給一日，加至三十日為止。\n\n＊ 同仁於年度開始時應做休假規劃，以期達到身心舒展</span></span><br><span class="line"><span class="string">的目的。休假之規劃應與主管取得溝通，以免造成工作安排之困擾。\n＊ 因年度終結或終止契約而應休未休之日數，由本公司發給工資。經勞資雙方協商，同仁可選擇全數遞延一年或結算薪資；</span></span><br><span class="line"><span class="string">遞延者，至多以遞延一年為限；若員工未於期限內回覆者，將一律結算薪資予同仁。\n＊ 如特休年度屆滿或終止契約而應休未休之日數，將依原始年度之薪資結算給同仁。\n＊ 特休假期間薪資</span></span><br><span class="line"><span class="string">照給。\n＊ 請假最小單位為0.5小時。\n\n加班補休\n＊ 加班補休時數使用期限以當年度特休假使用期限之迄日做為加班補休之迄日。\n＊ 加班補休期限屆滿於約定之工資給付日結算薪資發給</span></span><br><span class="line"><span class="string">。\n＊ 請假最小單位為0.5小時。\n\n生日假\n＊ 同仁到職當年度即享有一天生日假，生日當月可擇一日請 ( 放 ) 生日假。\n＊ 生日假於生日當月有效，棄權者不得再補休。\n＊ 生日假薪資</span></span><br><span class="line"><span class="string">照給。\n＊ 請假最小單位為1天。\n\n普通傷病假\n＊ 同仁因普通傷害、疾病或生理原因造成身體狀況無法正常工作，而必須治療或休養者，得請普通傷病假。\n1. 未住院者，一年內合計不得</span></span><br><span class="line"><span class="string">超過30日。\n2. 住院者，二年內合計不得超過一年。\n3. 未住院及住院者，二年內合計不得超過一年。\n＊ 普通傷病假第一年合計未超過30日部份，工資折半發給。超過30日時以特休假或事假</span></span><br><span class="line"><span class="string">抵充，抵充後若仍然不夠者，得予留職停薪，以一年為限，之後若仍然無法工作者，依法資遣或自請退休。\n＊ 請假超過五日者，須於事後持醫院證明銷假，未持證明者以特休假處理，超過十五</span></span><br><span class="line"><span class="string">日而又未能提出醫院證明者，以曠職論。\n＊ 一次連續請普通傷病假超過三十日以上之期間，如遇例假日、紀念日、勞動節日及由中央主管機關規定應放假之日，併計於請假期間內。\n＊ 薪資</span></span><br><span class="line"><span class="string">減半發給&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;file_citation&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;【7†source】&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;start_index&quot;</span><span class="punctuation">:</span> <span class="number">207</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;end_index&quot;</span><span class="punctuation">:</span> <span class="number">217</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;file_citation&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;file_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;file-9xpwQr4rni98mUcrQtlkDkvc&quot;</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;quote&quot;</span><span class="punctuation">:</span> <span class="string">&quot;臨時狀況\n同仁因突發事件或生病必須於當日請假者，得於當日10:00前以電話向主管報備，並於事後補辦請假手續。\n同仁未依規定辦理請假手續者，事後又不補</span></span><br><span class="line"><span class="string">辦請假手續並說明原因者，視同曠職。\n\n第一條 請假時數計算\n＊每週一～五，上午8:30~12:00，計3.5小時；\n 下午13:00~17:30，計4.5小時，共8小時。\n＊請假最小單位依各假別規定。</span></span><br><span class="line"><span class="string">\n\n第二條 給假規定 \n特休假\n\t特休假的核算方式以休假年資為準，依下列規定給予特別休假：\n六個月以上一年未滿者，三日。\n一年以上二年未滿者，七日。\n二年以上三年未滿者，十</span></span><br><span class="line"><span class="string">日。\n三年以上五年未滿者，每年十四日。\n五年以上十年未滿者，每年十五日。\n十年以上者，每一年加給一日，加至三十日為止。\n\n＊ 同仁於年度開始時應做休假規劃，以期達到身心舒展</span></span><br><span class="line"><span class="string">的目的。休假之規劃應與主管取得溝通，以免造成工作安排之困擾。\n＊ 因年度終結或終止契約而應休未休之日數，由本公司發給工資。經勞資雙方協商，同仁可選擇全數遞延一年或結算薪資；</span></span><br><span class="line"><span class="string">遞延者，至多以遞延一年為限；若員工未於期限內回覆者，將一律結算薪資予同仁。\n＊ 如特休年度屆滿或終止契約而應休未休之日數，將依原始年度之薪資結算給同仁。\n＊ 特休假期間薪資</span></span><br><span class="line"><span class="string">照給。\n＊ 請假最小單位為0.5小時。\n\n加班補休\n＊ 加班補休時數使用期限以當年度特休假使用期限之迄日做為加班補休之迄日。\n＊ 加班補休期限屆滿於約定之工資給付日結算薪資發給</span></span><br><span class="line"><span class="string">。\n＊ 請假最小單位為0.5小時。\n\n生日假\n＊ 同仁到職當年度即享有一天生日假，生日當月可擇一日請 ( 放 ) 生日假。\n＊ 生日假於生日當月有效，棄權者不得再補休。\n＊ 生日假薪資</span></span><br><span class="line"><span class="string">照給。\n＊ 請假最小單位為1天。\n\n普通傷病假\n＊ 同仁因普通傷害、疾病或生理原因造成身體狀況無法正常工作，而必須治療或休養者，得請普通傷病假。\n1. 未住院者，一年內合計不得</span></span><br><span class="line"><span class="string">超過30日。\n2. 住院者，二年內合計不得超過一年。\n3. 未住院及住院者，二年內合計不得超過一年。\n＊ 普通傷病假第一年合計未超過30日部份，工資折半發給。超過30日時以特休假或事假</span></span><br><span class="line"><span class="string">抵充，抵充後若仍然不夠者，得予留職停薪，以一年為限，之後若仍然無法工作者，依法資遣或自請退休。\n＊ 請假超過五日者，須於事後持醫院證明銷假，未持證明者以特休假處理，超過十五</span></span><br><span class="line"><span class="string">日而又未能提出醫院證明者，以曠職論。\n＊ 一次連續請普通傷病假超過三十日以上之期間，如遇例假日、紀念日、勞動節日及由中央主管機關規定應放假之日，併計於請假期間內。\n＊ 薪資</span></span><br><span class="line"><span class="string">減半發給&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;file_ids&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;assistant_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;asst_zsAKidrHJw3GwgI0mtsLFTnf&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;run_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;run_B62wmGcFQyBllyRDGhNXfTBG&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;metadata&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;role&quot;</span><span class="punctuation">:</span> <span class="string">&quot;user&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;content&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;請問出差有什麼規定嗎?&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;annotations&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;file_ids&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;assistant_id&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;run_id&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;metadata&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;first_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;msg_TfOynQ2UdfJUaJ77HAjiuytv&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;last_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;msg_RY12iYrr14wESdn4v6xUuwHJ&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;has_more&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>可以發現，第一個內容就是 Assistant 的回覆。</p><h5 id="7-最後跟使用者結束所有對話時，可以將-Thread-刪除掉"><a href="#7-最後跟使用者結束所有對話時，可以將-Thread-刪除掉" class="headerlink" title="7. 最後跟使用者結束所有對話時，可以將 Thread 刪除掉"></a>7. 最後跟使用者結束所有對話時，可以將 Thread 刪除掉</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//清除使用者的 Thread</span></span><br><span class="line"><span class="keyword">await</span> DeleteThread(threadId);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">async</span> Task <span class="title">DeleteThread</span>(<span class="params"><span class="built_in">string</span> threadId</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">var</span> url = <span class="string">$&quot;https://api.openai.com/v1/threads/<span class="subst">&#123;threadId&#125;</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">using</span> <span class="keyword">var</span> client = <span class="keyword">new</span> HttpClient();</span><br><span class="line">  client.DefaultRequestHeaders.Add(<span class="string">&quot;Authorization&quot;</span>, <span class="string">$&quot;Bearer <span class="subst">&#123;apiKey&#125;</span>&quot;</span>);</span><br><span class="line">  client.DefaultRequestHeaders.Add(<span class="string">&quot;OpenAI-Beta&quot;</span>, <span class="string">&quot;assistants=v1&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> response = <span class="keyword">await</span> client.DeleteAsync(url);</span><br><span class="line">  <span class="keyword">if</span> (response.IsSuccessStatusCode)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">var</span> responseBody = <span class="keyword">await</span> response.Content.ReadAsStringAsync();</span><br><span class="line">    Console.WriteLine(responseBody);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    Console.WriteLine(<span class="string">$&quot;Err:<span class="subst">&#123;response.StatusCode&#125;</span>-<span class="subst">&#123;response.ReasonPhrase&#125;</span>&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> responseBody = <span class="keyword">await</span> response.Content.ReadAsStringAsync();</span><br><span class="line">    Console.WriteLine(responseBody);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h3><p>從整個測試下來，只要給文件就幫忙做成知識庫，<br>省去了之前建立 Bot 時，要依不同文件格式，切節章、轉成 Embedding 再跟使用者問題比對相似度的成本。<br>透過 Thread 來掌控 Bot 與 使用者對話的內容，不需要將所有的對話一直附加到對話中，導致 Token 逾來逾多的問題。<br>不過要 loop 看 <code>Run</code> 是否執行完成對使用 API 來說，不是很方便。</p><ul><li>註: 要看 HTTP 的過程，可以在 <a href="https://platform.openai.com/playground?mode=assistant">Assistants playground</a> 的 <code>Log</code> 中查看哦~</li></ul><img src="/2023/11/29/openai-assistant-api/02.png" class="" title="playground log"><ul><li>註: 如果要使用到 <code>GPT 4</code> ，會員等級起碼要是 <code>Tier 1</code> 以上，就是起碼要付 <strong>5 美元</strong></li></ul><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://platform.openai.com/docs/assistants/overview">Assistants API</a><br><a href="https://pakotinia.medium.com/openais-assistants-api-a-hands-on-demo-110a861cf2d0">OpenAI’s Assistants API — A hands-on demo</a><br><a href="https://platform.openai.com/docs/guides/rate-limits?context=tier-one">Assistants API - Rate limits</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;最近 OpenAI 有推出 GPTs 可以很方便的讓人直接上傳文件做人知識庫並建立 Bot 來對話，&lt;br&gt;對話的理解能力還不輸之前自已將文</summary>
      
    
    
    
    
    <category term="C#" scheme="https://rainmakerho.github.io/tags/C/"/>
    
    <category term="HttpClient" scheme="https://rainmakerho.github.io/tags/HttpClient/"/>
    
    <category term="Upload" scheme="https://rainmakerho.github.io/tags/Upload/"/>
    
    <category term="OpenAI" scheme="https://rainmakerho.github.io/tags/OpenAI/"/>
    
    <category term="Assistants" scheme="https://rainmakerho.github.io/tags/Assistants/"/>
    
  </entry>
  
  <entry>
    <title>在地端 Firewall 中的 Teams Bot 要如何設定 Egress 及 Ingress?</title>
    <link href="https://rainmakerho.github.io/2023/11/29/teams-bot-behind-firewall/"/>
    <id>https://rainmakerho.github.io/2023/11/29/teams-bot-behind-firewall/</id>
    <published>2023-11-29T07:39:11.000Z</published>
    <updated>2023-11-29T08:07:08.944Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>在企業內的 Teams Bot ，Firewall 要怎麼設定才能讓使用者在 Teams 中可以順利跟 Bot 對話呢?</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>在開發 Bot 時，通常會透過 ngrok 來測試，所以可以看到 teams 打過來的 ip 是 <code>52.187.55.201</code>，<br>但下次測試又是別的 ip ，直接請網管設定 firewall 允許進來的 ip 為它又不太保險。<br>後來有查到 <a href="https://blog.botframework.com/2020/11/23/bots-secured-behind-a-firewall-teams/">Bots Secured Behind a Firewall &amp; Teams</a> ，<br>Ingress 設定為允許 <code>52.112.0.0/14</code>，Egress 設定為允許 <code>52.112.0.0/14</code>，<code>login.microsoftonline.com</code> 及 <code>login.botframework.com</code>。</p><p>後來再問 Microsoft Support 則建議參考，<a href="https://learn.microsoft.com/en-us/microsoft-365/enterprise/urls-and-ip-address-ranges?view=o365-worldwide#skype-for-business-online-and-microsoft-teams">Office 365 URLs and IP address ranges-Skype for Business Online and Microsoft Teams</a> 中的 ID 12 的部份，<br>FQDN 則設定 <code>*.lync.com</code>, <code>*.teams.microsoft.com</code>, <code>teams.microsoft.com</code><br>IPv4 則設定 <code>13.107.64.0/18</code>, <code>52.112.0.0/14</code>, <code>52.122.0.0/15</code>, <code>52.238.119.141/32</code>, <code>52.244.160.207/32</code><br>IPv6 則設定 <code>603:1027::/48</code>, <code>2603:1037::/48</code>, <code>2603:1047::/48</code>, <code>2603:1057::/48</code>, <code>2603:1063::/38</code>, <code>2620:1ec:6::/48</code>, <code>2620:1ec:40::/42</code></p><p>當然，還是要隨注 <a href="https://learn.microsoft.com/en-us/microsoft-365/enterprise/urls-and-ip-address-ranges?view=o365-worldwide#skype-for-business-online-and-microsoft-teams">Office 365 URLs and IP address ranges-Skype for Business Online and Microsoft Teams</a> 有沒有改變哦~</p><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="https://blog.botframework.com/2020/11/23/bots-secured-behind-a-firewall-teams/">Bots Secured Behind a Firewall &amp; Teams</a></p><p><a href="https://learn.microsoft.com/en-us/microsoft-365/enterprise/urls-and-ip-address-ranges?view=o365-worldwide#skype-for-business-online-and-microsoft-teams">Office 365 URLs and IP address ranges-Skype for Business Online and Microsoft Teams</a></p><p><a href="https://learn.microsoft.com/en-us/microsoftteams/platform/sbs-teams-conversation-bot?source=recommendations&tabs=dev">Create Teams conversation bot</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;在企業內的 Teams Bot ，Firewall 要怎麼設定才能讓使用者在 Teams 中可以順利跟 Bot 對話呢?&lt;/p&gt;
&lt;h3 i</summary>
      
    
    
    
    
    <category term="Teams" scheme="https://rainmakerho.github.io/tags/Teams/"/>
    
    <category term="Bot" scheme="https://rainmakerho.github.io/tags/Bot/"/>
    
    <category term="Firewall" scheme="https://rainmakerho.github.io/tags/Firewall/"/>
    
    <category term="Ingress" scheme="https://rainmakerho.github.io/tags/Ingress/"/>
    
    <category term="Egress" scheme="https://rainmakerho.github.io/tags/Egress/"/>
    
  </entry>
  
  <entry>
    <title>axios 透過 proxy 連線發生 502 錯誤問題</title>
    <link href="https://rainmakerho.github.io/2023/11/27/axios-proxy-err-502/"/>
    <id>https://rainmakerho.github.io/2023/11/27/axios-proxy-err-502/</id>
    <published>2023-11-27T03:28:46.000Z</published>
    <updated>2023-12-01T07:43:17.901Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>Windows Server 連外要透過 Proxy 時，原本在 Windows 設定中，設定 proxy 。<br>結果我們的 nodejs app 卻沒辦法吃到系統的設定。<br>設定 <code>npm config set https-proxy http://192.168.0.100:808</code> 去跑，<br>也還是會噴 <strong>502</strong> 的錯誤。<br>在 axios 設定 <code>proxy</code> config ，也還是噴 <strong>502</strong> 的錯誤。</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>最後參考 <a href="https://github.com/axios/axios/issues/2937">Axios proxy is not working.</a> 的設定，<br><code>proxy</code> config 設定成 false, 並使用 <code>https-proxy-agent</code> 這個套件來設定 proxy。<br>這個也可以套用到 <code>node-fetch</code> 哦~<br>所以最後，環境變數，npm config 都不用設定，只要設定 <code>httpsAgent</code> 及 <code>proxy</code> 就可以了哦。<br><code>npm install --save axios https-proxy-agent node-fetch dotenv</code><br>package type 為 “module”<br>以下為 axios 及 node-fetch 的測試程式，</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> dotenv <span class="keyword">from</span> <span class="string">&quot;dotenv&quot;</span>;</span><br><span class="line">dotenv.<span class="title function_">config</span>();</span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&quot;axios&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">HttpsProxyAgent</span> &#125; <span class="keyword">from</span> <span class="string">&quot;https-proxy-agent&quot;</span>;</span><br><span class="line"><span class="comment">//http://192.168.0.100:808</span></span><br><span class="line"><span class="keyword">let</span> httpsAgent = <span class="keyword">new</span> <span class="title class_">HttpsProxyAgent</span>(process.<span class="property">env</span>.<span class="property">proxy</span>);</span><br><span class="line"><span class="keyword">const</span> clientId = process.<span class="property">env</span>.<span class="property">clientId</span>;</span><br><span class="line"><span class="keyword">const</span> clientSecret = process.<span class="property">env</span>.<span class="property">clientSecret</span>;</span><br><span class="line"><span class="keyword">const</span> tenantId = process.<span class="property">env</span>.<span class="property">tenantId</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> url = <span class="string">`https://login.microsoftonline.com/<span class="subst">$&#123;tenantId&#125;</span>/oauth2/v2.0/token`</span>;</span><br><span class="line"><span class="keyword">let</span> formData = <span class="keyword">new</span> <span class="title class_">FormData</span>();</span><br><span class="line">formData.<span class="title function_">append</span>(<span class="string">&quot;client_id&quot;</span>, clientId);</span><br><span class="line">formData.<span class="title function_">append</span>(<span class="string">&quot;scope&quot;</span>, <span class="string">&quot;https://graph.microsoft.com/.default&quot;</span>);</span><br><span class="line">formData.<span class="title function_">append</span>(<span class="string">&quot;client_secret&quot;</span>, clientSecret);</span><br><span class="line">formData.<span class="title function_">append</span>(<span class="string">&quot;grant_type&quot;</span>, <span class="string">&quot;client_credentials&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(</span><br><span class="line">    <span class="string">&quot;============================ Start axios Testing ============================================&quot;</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">const</span> options = &#123;</span><br><span class="line">    <span class="attr">proxy</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">httpsAgent</span>: httpsAgent,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">axios.<span class="title function_">post</span>(url, formData, options).<span class="title function_">then</span>(</span><br><span class="line">    <span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;****** OK ******&quot;</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(response.<span class="property">data</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;XXXXX ERROR XXXXX&quot;</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(error);</span><br><span class="line">    &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> dotenv <span class="keyword">from</span> <span class="string">&quot;dotenv&quot;</span>;</span><br><span class="line">dotenv.<span class="title function_">config</span>();</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">HttpsProxyAgent</span> &#125; <span class="keyword">from</span> <span class="string">&quot;https-proxy-agent&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> fetch <span class="keyword">from</span> <span class="string">&quot;node-fetch&quot;</span>;</span><br><span class="line"><span class="comment">//http://192.168.0.100:808</span></span><br><span class="line"><span class="keyword">let</span> httpsAgent = <span class="keyword">new</span> <span class="title class_">HttpsProxyAgent</span>(process.<span class="property">env</span>.<span class="property">proxy</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> clientId = process.<span class="property">env</span>.<span class="property">clientId</span>;</span><br><span class="line"><span class="keyword">const</span> clientSecret = process.<span class="property">env</span>.<span class="property">clientSecret</span>;</span><br><span class="line"><span class="keyword">const</span> tenantId = process.<span class="property">env</span>.<span class="property">tenantId</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> url = <span class="string">`https://login.microsoftonline.com/<span class="subst">$&#123;tenantId&#125;</span>/oauth2/v2.0/token`</span>;</span><br><span class="line"><span class="keyword">let</span> formData = <span class="keyword">new</span> <span class="title class_">FormData</span>();</span><br><span class="line">formData.<span class="title function_">append</span>(<span class="string">&quot;client_id&quot;</span>, clientId);</span><br><span class="line">formData.<span class="title function_">append</span>(<span class="string">&quot;scope&quot;</span>, <span class="string">&quot;https://graph.microsoft.com/.default&quot;</span>);</span><br><span class="line">formData.<span class="title function_">append</span>(<span class="string">&quot;client_secret&quot;</span>, clientSecret);</span><br><span class="line">formData.<span class="title function_">append</span>(<span class="string">&quot;grant_type&quot;</span>, <span class="string">&quot;client_credentials&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(</span><br><span class="line">    <span class="string">&quot;============================ Start fetch Testing ============================================&quot;</span></span><br><span class="line">);</span><br><span class="line"><span class="title function_">fetch</span>(url, &#123;</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">    <span class="attr">body</span>: formData,</span><br><span class="line">    <span class="attr">agent</span>: httpsAgent,</span><br><span class="line">&#125;)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!response.<span class="property">ok</span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;XXXXX ERROR XXXXX&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 解析 JSON 格式的 response body</span></span><br><span class="line">        <span class="keyword">return</span> response.<span class="title function_">json</span>();</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Response from server:&quot;</span>, data);</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">catch</span>(<span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 處理錯誤</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;Error:&quot;</span>, error);</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><p>查看 npm 的 proxy 設定可以查看</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config get proxy</span><br><span class="line">npm config get https-proxy</span><br></pre></td></tr></table></figure><h3 id="UNABLE-TO-GET-ISSUER-CERT-LOCALLY"><a href="#UNABLE-TO-GET-ISSUER-CERT-LOCALLY" class="headerlink" title="UNABLE_TO_GET_ISSUER_CERT_LOCALLY"></a>UNABLE_TO_GET_ISSUER_CERT_LOCALLY</h3><p>如果噴 <code>UNABLE_TO_GET_ISSUER_CERT_LOCALLY</code> <code>unable to get local issuer certificate</code> 的錯誤，<br>請參考 <a href="https://weekendprojects.dev/posts/fixed-npm-err-code-unable_to_get_issuer_cert_locally/">NPM err code unable_to_get_issuer_cert_locally</a> 調整</p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://github.com/axios/axios/issues/2937">Axios proxy is not working.</a><br><a href="https://github.com/axios/axios/issues/5078">ERR_BAD_RESPONSE 502 when using proxy</a><br><a href="https://weekendprojects.dev/posts/fixed-npm-err-code-unable_to_get_issuer_cert_locally/">NPM err code unable_to_get_issuer_cert_locally</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;Windows Server 連外要透過 Proxy 時，原本在 Windows 設定中，設定 proxy 。&lt;br&gt;結果我們的 nodej</summary>
      
    
    
    
    
    <category term="node" scheme="https://rainmakerho.github.io/tags/node/"/>
    
    <category term="axios" scheme="https://rainmakerho.github.io/tags/axios/"/>
    
    <category term="proxy" scheme="https://rainmakerho.github.io/tags/proxy/"/>
    
    <category term="502" scheme="https://rainmakerho.github.io/tags/502/"/>
    
    <category term="httpsAgent" scheme="https://rainmakerho.github.io/tags/httpsAgent/"/>
    
    <category term="UNABLE_TO_GET_ISSUER_CERT_LOCALLY" scheme="https://rainmakerho.github.io/tags/UNABLE-TO-GET-ISSUER-CERT-LOCALLY/"/>
    
  </entry>
  
  <entry>
    <title>HttpClientFactory.CreateClient 造成 Checkmarx 狂噴 CSRF</title>
    <link href="https://rainmakerho.github.io/2023/11/13/checkmarx-csrf-httpclientfactory-createclient-false-positive/"/>
    <id>https://rainmakerho.github.io/2023/11/13/checkmarx-csrf-httpclientfactory-createclient-false-positive/</id>
    <published>2023-11-13T07:38:41.000Z</published>
    <updated>2023-11-13T07:56:36.990Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>ASP.NET Core MVC 專案中的 WebAPI Controller 被 Checkmarx V9.4.5.1012 HF24 掃出一堆的 <strong>CSRF</strong> 問題。</p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>查看它的 <code>Find_CSRF</code> Rule 中，在過濾掉 <code>Find_CSRF_Sanitize</code> 結果後，<br>又再加入 <code>Find_ASP_MVC_CSRF()</code>。<br>而在 <code>Find_ASP_MVC_CSRF()</code> 中又會去找一些可能跟 DB Update 相關的 Method，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">CxList dbUpdateMethods = methods.FindByShortNames(<span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt; &#123;</span><br><span class="line"><span class="string">&quot;SaveChanges&quot;</span>, <span class="string">&quot;SaveChangesAsync&quot;</span>,</span><br><span class="line"><span class="string">&quot;SubmitChanges&quot;</span>, <span class="string">&quot;TryUpdateModel&quot;</span>,</span><br><span class="line"><span class="string">&quot;TryUpdateModelAsync&quot;</span>, <span class="string">&quot;UpdateModel&quot;</span></span><br><span class="line">&#125;, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">dbUpdateMethods.Add(methods.FindByShortNames(<span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt;()&#123;</span><br><span class="line"><span class="string">&quot;Set*&quot;</span>, <span class="string">&quot;Change*&quot;</span>, <span class="string">&quot;Update*&quot;</span>, <span class="string">&quot;Save*&quot;</span>, <span class="string">&quot;Apply*&quot;</span>, <span class="string">&quot;Create*&quot;</span>, <span class="string">&quot;Add*&quot;</span>, <span class="string">&quot;Delete*&quot;</span></span><br><span class="line">&#125;));</span><br><span class="line">dbUpdateMethods.Add(methods.FindByMemberAccess(<span class="string">&quot;UserManager&quot;</span>, <span class="string">&quot;CreateAsync&quot;</span>, <span class="literal">true</span>));</span><br><span class="line">dbUpdateMethods -= All.FindByMemberAccesses(<span class="keyword">new</span> <span class="built_in">string</span>[]&#123;<span class="string">&quot;ModelState.AddModelError&quot;</span>,<span class="string">&quot;List.Add&quot;</span>&#125;);</span><br></pre></td></tr></table></figure><p>詢問同事 Jer 後，有可能是因為 keyword Create 找到了程式中的 <code>HttpClientFactory.CreateClient</code> 所以它就認為它有 <strong>CSRF</strong> 問題。<br>將原本用 <code>HttpClientFactory.CreateClient</code> 改成 <code>new HttpClient()</code> 後，<br>CSRF 的問題果然就不見了。</p><p>這個問題原廠的回覆如下，</p><blockquote><p>After reviewing your case, we can confirm the issue is as you suspected. The engine is assuming that the “CreateClient()” method is a database access because it contains the keyword “create”, which is used to search for CSRF vulnerabilities in the code.</p></blockquote><p>只能等待以色列原廠的修復了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;ASP.NET Core MVC 專案中的 WebAPI Controller 被 Checkmarx V9.4.5.1012 HF24 掃</summary>
      
    
    
    
    
    <category term="C#" scheme="https://rainmakerho.github.io/tags/C/"/>
    
    <category term="Checkmarx" scheme="https://rainmakerho.github.io/tags/Checkmarx/"/>
    
    <category term="CSRF" scheme="https://rainmakerho.github.io/tags/CSRF/"/>
    
    <category term="HttpClientFactory.CreateClient" scheme="https://rainmakerho.github.io/tags/HttpClientFactory-CreateClient/"/>
    
  </entry>
  
  <entry>
    <title>Azure 看不到訂閱(Subscriptions)</title>
    <link href="https://rainmakerho.github.io/2023/11/09/azure-cannot-see-subscriptions/"/>
    <id>https://rainmakerho.github.io/2023/11/09/azure-cannot-see-subscriptions/</id>
    <published>2023-11-09T03:50:18.000Z</published>
    <updated>2023-11-09T05:46:15.959Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>當你擁有新的訂閱權限時，在訂用帳戶(Subscriptions)中卻看不到它，但卻又能在搜尋到。<br>要怎麼讓這些 訂用帳戶(Subscriptions) 預設顯示出來呢?</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>點選右上方<strong>入口網站設定(Portal settings)</strong> 或是連到 <code>https://portal.azure.com/#settings/directory</code><br>在 <strong><a href="https://portal.azure.com/#settings/directory">目錄+訂閱(Directories + subscriptions)</a></strong> 中，<br>設定 <strong>預設訂用帳戶篩選(Default subscription filter)</strong> 為 <strong>所有訂閱(All subscriptions)</strong> 就可以了哦~<br>如下，</p><img src="/2023/11/09/azure-cannot-see-subscriptions/01.png" class="" title="目錄+訂閱"><img src="/2023/11/09/azure-cannot-see-subscriptions/02.png" class="" title="Directories + subscriptions">]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;當你擁有新的訂閱權限時，在訂用帳戶(Subscriptions)中卻看不到它，但卻又能在搜尋到。&lt;br&gt;要怎麼讓這些 訂用帳戶(Subscr</summary>
      
    
    
    
    
    <category term="Azure" scheme="https://rainmakerho.github.io/tags/Azure/"/>
    
    <category term="Subscription" scheme="https://rainmakerho.github.io/tags/Subscription/"/>
    
    <category term="subscription filter" scheme="https://rainmakerho.github.io/tags/subscription-filter/"/>
    
  </entry>
  
  <entry>
    <title>knex Error Undefined binding(s) detected for keys when compiling RAW query</title>
    <link href="https://rainmakerho.github.io/2023/11/08/knex-undefined-bindings-detected-for-keys/"/>
    <id>https://rainmakerho.github.io/2023/11/08/knex-undefined-bindings-detected-for-keys/</id>
    <published>2023-11-08T07:01:06.000Z</published>
    <updated>2023-11-08T07:12:04.991Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>最近程式透過 <code>knex.raw(...).toQuery</code> 時，發生 <code>Undefined binding(s) detected for keys</code> 的錯誤，詳細如下，</p><blockquote><p>Error: Undefined binding(s) detected for keys [GroupOrRoomId] when compiling RAW query: (?,:GroupOrRoomId,?)at Raw.toSQL</p></blockquote><p>程式碼如下，</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> value = knex</span><br><span class="line">    .<span class="title function_">raw</span>(</span><br><span class="line">        <span class="string">`(</span></span><br><span class="line"><span class="string">                :Id, </span></span><br><span class="line"><span class="string">                :GroupOrRoomId, </span></span><br><span class="line"><span class="string">                :Data</span></span><br><span class="line"><span class="string">                )`</span>,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="title class_">Id</span>: data.<span class="property">id</span>,</span><br><span class="line">            <span class="title class_">GroupOrRoomId</span>: data.<span class="property">groupOrRoomId</span>,</span><br><span class="line">            <span class="title class_">Data</span>: data.<span class="property">data</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">    .<span class="title function_">toQuery</span>();</span><br></pre></td></tr></table></figure><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>錯誤有將 Key 指出來，就是 <code>GroupOrRoomId</code> 對應的物件為 <code>Undefined</code> 。<br>所以就針對 <code>data.groupOrRoomId</code> 檢查它的值為 <code>undefined</code> 是否合理，<br>或是允許它為空字串，就可以加上保護程式，如下，</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!data.<span class="property">groupOrRoomId</span>) data.<span class="property">groupOrRoomId</span>=<span class="string">&#x27;&#x27;</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;最近程式透過 &lt;code&gt;knex.raw(...).toQuery&lt;/code&gt; 時，發生 &lt;code&gt;Undefined binding</summary>
      
    
    
    
    
    <category term="node" scheme="https://rainmakerho.github.io/tags/node/"/>
    
    <category term="knex" scheme="https://rainmakerho.github.io/tags/knex/"/>
    
    <category term="Undefined" scheme="https://rainmakerho.github.io/tags/Undefined/"/>
    
    <category term="Raw.toSQL" scheme="https://rainmakerho.github.io/tags/Raw-toSQL/"/>
    
  </entry>
  
  <entry>
    <title>SqlException (0x80131904) 此憑證鏈結是由不受信任的授權單位發出的</title>
    <link href="https://rainmakerho.github.io/2023/11/06/sqlexception-80131904-ssl-provider/"/>
    <id>https://rainmakerho.github.io/2023/11/06/sqlexception-80131904-ssl-provider/</id>
    <published>2023-11-06T08:15:14.000Z</published>
    <updated>2023-11-06T09:45:56.684Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>透過 Dapper 連到 Microsoft SQL Server 時，使用以下的連線字串，<br><code>Server=SQL2019-01;Database=MYDB;User Id=myUserId;Password=myUserPwd;</code><br>結果發生 <code>Microsoft.Data.SqlClient.SqlException (0x80131904)</code> 的錯誤，詳細如下，</p><blockquote><p>Microsoft.Data.SqlClient.SqlException (0x80131904): A connection was successfully established with the server, but then an error occurred during the login process. (provider: SSL Provider, error: 0 - 此憑證鏈結是由不受信任的授權單位發出的。)<br>—&gt; System.ComponentModel.Win32Exception (0x80090325): 此憑證鏈結是由不受信任的授權單位發出的。<br>at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action&#96;1 wrapCloseInAction)<br>at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)<br>at Microsoft.Data.SqlClient.TdsParserStateObject.ThrowExceptionAndWarning(Boolean callerHasConnectionLock, Boolean asyncClose)<br>at Microsoft.Data.SqlClient.TdsParserStateObject.SNIWritePacket(PacketHandle packet, UInt32&amp; sniError, Boolean canAccumulate, Boolean callerHasConnectionLock, Boolean asyncClose)<br>at Microsoft.Data.SqlClient.TdsParserStateObject.WriteSni(Boolean canAccumulate)<br>at Microsoft.Data.SqlClient.TdsParserStateObject.WritePacket(Byte flushMode, Boolean canAccumulate)<br>at Microsoft.Data.SqlClient.TdsParser.TdsLogin(SqlLogin rec, FeatureExtension requestedFeatures, SessionData recoverySessionData, FederatedAuthenticationFeatureExtensionData fedAuthFeatureExtensionData, SqlConnectionEncryptOption encrypt)<br>at Microsoft.Data.SqlClient.SqlInternalConnectionTds.Login(ServerInfo server, TimeoutTimer timeout, String newPassword, SecureString newSecurePassword, SqlConnectionEncryptOption encrypt)</p></blockquote><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>在連線字串中加入 <code>Encrypt=false;</code>, 如下，<br><code>Server=SQL2019-01;Database=MYDB;User Id=myUserId;Password=myUserPwd;Encrypt=false;</code></p><ul><li>註: 注意 <code>Encrypt=false;</code> 大小寫哦~</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;透過 Dapper 連到 Microsoft SQL Server 時，使用以下的連線字串，&lt;br&gt;&lt;code&gt;Server=SQL2019</summary>
      
    
    
    
    
    <category term="SSL" scheme="https://rainmakerho.github.io/tags/SSL/"/>
    
    <category term="SqlException" scheme="https://rainmakerho.github.io/tags/SqlException/"/>
    
    <category term="0x80131904" scheme="https://rainmakerho.github.io/tags/0x80131904/"/>
    
    <category term="0x80090325" scheme="https://rainmakerho.github.io/tags/0x80090325/"/>
    
    <category term="此憑證鏈結是由不受信任的授權單位發出的" scheme="https://rainmakerho.github.io/tags/%E6%AD%A4%E6%86%91%E8%AD%89%E9%8F%88%E7%B5%90%E6%98%AF%E7%94%B1%E4%B8%8D%E5%8F%97%E4%BF%A1%E4%BB%BB%E7%9A%84%E6%8E%88%E6%AC%8A%E5%96%AE%E4%BD%8D%E7%99%BC%E5%87%BA%E7%9A%84/"/>
    
  </entry>
  
  <entry>
    <title>為什麼系統中新增一堆空白名稱的Cookie?</title>
    <link href="https://rainmakerho.github.io/2023/10/23/why-multiple-empty-name-cookies-iis/"/>
    <id>https://rainmakerho.github.io/2023/10/23/why-multiple-empty-name-cookies-iis/</id>
    <published>2023-10-23T06:29:00.000Z</published>
    <updated>2023-10-23T08:17:49.153Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>最近同事詢問一個怪問題，透過 Browser 操作系統時，會產生出一堆空白名稱的 Cookie，如下，</p><img src="/2023/10/23/why-multiple-empty-name-cookies-iis/01.png" class="" title="Empty Name Cookies"><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>請同事存一下操作系統的網路狀況發現，<strong>每個 Request</strong>都會往 Client 端寫 Cookie，如下，</p><img src="/2023/10/23/why-multiple-empty-name-cookies-iis/02.png" class="" title="set-cookie"><p>從上面的狀況來看，有可能是 <code>Global.asax</code>, <code>Middleware</code> 或是寫在 IIS 的<code>HTTP 回應標頭</code>之中。<br>而操作公司 VM 中的系統，並不會有這種狀況，所以應該是 IIS 的問題。<br>於是請同事檢查一下 IIS 的<code>HTTP 回應標頭</code>，<br>果然，被寫在裡面，如下，</p><img src="/2023/10/23/why-multiple-empty-name-cookies-iis/03.png" class="" title="HTTP 回應標頭"><p>請同事將它移除之後就沒問題了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;最近同事詢問一個怪問題，透過 Browser 操作系統時，會產生出一堆空白名稱的 Cookie，如下，&lt;/p&gt;
&lt;img src=&quot;/202</summary>
      
    
    
    
    
    <category term="IIS" scheme="https://rainmakerho.github.io/tags/IIS/"/>
    
    <category term=".NET" scheme="https://rainmakerho.github.io/tags/NET/"/>
    
    <category term="Cookie" scheme="https://rainmakerho.github.io/tags/Cookie/"/>
    
    <category term="Empty Name" scheme="https://rainmakerho.github.io/tags/Empty-Name/"/>
    
  </entry>
  
  <entry>
    <title>MSDeploy.targets Web 部署工作失敗 基礎連接已關閉 無法從傳輸連接讀取資料 遠端主機已強制關閉一個現存的連線</title>
    <link href="https://rainmakerho.github.io/2023/10/19/msdeploy-an-existing-connection-was-forcibly-closed-by-the-remote-host-140-5/"/>
    <id>https://rainmakerho.github.io/2023/10/19/msdeploy-an-existing-connection-was-forcibly-closed-by-the-remote-host-140-5/</id>
    <published>2023-10-19T01:16:23.000Z</published>
    <updated>2023-10-19T02:02:55.270Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>最近朋友詢問一個從 <code>Visual Studio 2022</code> 透過 Web Deploy 發佈到 <code>Windows 2019</code> IIS 上的問題。<br>主要是因為他將 IIS Server 上的 <code>RC4</code> 及 <code>Triple DES</code> Cipher Disable 掉，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\RC4 128/128]</span><br><span class="line">&quot;Enabled=dword:00000000&quot;</span><br><span class="line"></span><br><span class="line">[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\Triple DES 168]</span><br><span class="line">&quot;Enabled=dword:00000000&quot;</span><br></pre></td></tr></table></figure><p>結果導致發佈發生錯誤，訊息如下，</p><blockquote><p>Microsoft.NET.Sdk.Publish.MSDeploy.targets(140,5): 錯誤 : Web 部署工作失敗。(無法完成對遠端代理程式 URL ‘<a href="https://win2019-test:8172/msdeploy.axd">https://win2019-test:8172/msdeploy.axd</a>?’ 的要求)<br>錯誤詳細資料:<br>無法完成對遠端代理程式 URL ‘<a href="https://win2019-test:8172/msdeploy.axd">https://win2019-test:8172/msdeploy.axd</a>?’ 的要求。<br>基礎連接已關閉: 傳送時發生未預期的錯誤。<br>無法從專輸連接讀取資料: 遠端主機已強制關閉一個現存的連線。。<br>遠端主機已強制關閉一個現存的連線。<br>發佈無法部署。</p></blockquote><p>從 <code>Wireshark</code> 發現，Client 發出 <code>Client Hello</code> 後，就被 Server <code>RST, ACK</code> 掉了。</p><img src="/2023/10/19/msdeploy-an-existing-connection-was-forcibly-closed-by-the-remote-host-140-5/01.png" class="" title="RST"><h3 id="研究與解法"><a href="#研究與解法" class="headerlink" title="研究與解法"></a>研究與解法</h3><p>從網路上有查到 <a href="https://medium.com/@eric.rodriguez/microsoft-web-deployment-an-existing-connection-was-forcibly-closed-by-the-remote-host-fe365980af77">Microsoft.Web.Deployment : An existing connection was forcibly closed by the remote host.</a> 似乎是一樣的錯誤，<br>但設定了 Client 與 Server 的機碼後，還是一樣的錯誤。<br>於是在 <code>PowerShell</code> 中透過 <code>curl</code> 來測試看看<br><code>curl https://win2019-test</code> 會發生 <code>基礎連接已關閉: 無法為SSL/TLS 安全通道建立信任關係</code><br><code>curl https://win2019的FQDN</code> 會正常給出頁面資料<br><code>curl https://win2019-test:8172</code> 會發生 <code>基礎連接已關閉: 傳送時發生未預期的錯誤</code> &#x2F; 客戶端與伺服器無法溝通，因為它們沒有公用的演算法 | The client and server cannot communicate, because they do not possess a common algorithm</p><p>猜想有可能是憑證的問題，與朋友討論是用 FQDN 的憑證或是 自簽憑證，<br>後來朋友將原本使用 自簽憑證 改成 FQDN 的憑證後，<br>就可以正常部署了。</p><img src="/2023/10/19/msdeploy-an-existing-connection-was-forcibly-closed-by-the-remote-host-140-5/02.png" class="" title="FQDN"><blockquote><p>猜想或許 Client 端給出的演算法不在 Server 端 自簽憑證所支援的演算法範圍中, 或許再建立一個新的自簽憑證也可以 Pass</p></blockquote><p>最後，感謝 聖德 一起研究</p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://medium.com/@eric.rodriguez/microsoft-web-deployment-an-existing-connection-was-forcibly-closed-by-the-remote-host-fe365980af77">Microsoft.Web.Deployment : An existing connection was forcibly closed by the remote host.</a><br><a href="https://devbricker.github.io/post/devtools/aspnetcorewebdeploy/">Visual Studio 2019 的 WebDeploy 到 IIS 發生憑證無效</a><br><a href="https://blog.darkthread.net/blog/underlying-conn-closed-error-again/">再遇 C# 與 PowerShell 「基礎連接已關閉」錯誤</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;最近朋友詢問一個從 &lt;code&gt;Visual Studio 2022&lt;/code&gt; 透過 Web Deploy 發佈到 &lt;code&gt;Wind</summary>
      
    
    
    
    
    <category term="TLS" scheme="https://rainmakerho.github.io/tags/TLS/"/>
    
    <category term="基礎連接已關閉" scheme="https://rainmakerho.github.io/tags/%E5%9F%BA%E7%A4%8E%E9%80%A3%E6%8E%A5%E5%B7%B2%E9%97%9C%E9%96%89/"/>
    
    <category term="MSDeploy" scheme="https://rainmakerho.github.io/tags/MSDeploy/"/>
    
    <category term="8172" scheme="https://rainmakerho.github.io/tags/8172/"/>
    
    <category term="無法從傳輸連接讀取資料" scheme="https://rainmakerho.github.io/tags/%E7%84%A1%E6%B3%95%E5%BE%9E%E5%82%B3%E8%BC%B8%E9%80%A3%E6%8E%A5%E8%AE%80%E5%8F%96%E8%B3%87%E6%96%99/"/>
    
    <category term="RC4" scheme="https://rainmakerho.github.io/tags/RC4/"/>
    
    <category term="Triple DES" scheme="https://rainmakerho.github.io/tags/Triple-DES/"/>
    
    <category term="Client Hello" scheme="https://rainmakerho.github.io/tags/Client-Hello/"/>
    
    <category term="RST, ACK" scheme="https://rainmakerho.github.io/tags/RST-ACK/"/>
    
  </entry>
  
</feed>
