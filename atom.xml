<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>亂馬客</title>
  <icon>https://www.gravatar.com/avatar/cd3aed042ccd7a5a5d9956b0bc07dc81</icon>
  <subtitle>Hello! 我是RM</subtitle>
  <link href="https://rainmakerho.github.io/atom.xml" rel="self"/>
  
  <link href="https://rainmakerho.github.io/"/>
  <updated>2025-01-03T01:02:06.126Z</updated>
  <id>https://rainmakerho.github.io/</id>
  
  <author>
    <name>亂馬客</name>
    <email>rainmaker_ho@gss.com.tw</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ABP Dynamic Permissions，動態異動 ABP Permissions，不需重啟系統即可使用 Permissions</title>
    <link href="https://rainmakerho.github.io/2025/01/02/abp-dynamic-add-permissions/"/>
    <id>https://rainmakerho.github.io/2025/01/02/abp-dynamic-add-permissions/</id>
    <published>2025-01-02T08:31:22.000Z</published>
    <updated>2025-01-03T01:02:06.126Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>預設 ABP 的權限會定義在繼承自<code>PermissionDefinitionProvider</code>的類別中，<br>當系統跑起來時，會自動將它們加到 Memory 之中，並存到<code>AbpPermissionGroups</code>及<code>AbpPermissions</code>資料表之中。<br>但是，如果要動態地去新增權限，要怎麼做呢?</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>預設如果在<code>AbpPermissions</code> 資料表中的資料，卻沒定義在程式中，就不會被 Load 到 Memory 之中。<br>如果共用權限系統，那麼會變成需要將那些程式都各自加到各別系統中，而且只要有調整，就需要重新編譯程式!!!<br>所以，ABP Support dynamic permissions, 只要將設定<code>PermissionManagementOptions</code>的<code>IsDynamicPermissionStoreEnabled</code>屬性為<strong>true</strong>。<br>這樣就會連同資料庫中的 Permissions 資料一併加到 Memory 之中。<br>所以要如何動態新增權限呢?<br>可以參考<a href="https://github.com/abpframework/abp-samples/tree/master/DynamicPermission">ABP DynamicPermission Sample</a>的方式，<br>透過<code>IPermissionGroupDefinitionRecordRepository</code>及<code>IPermissionDefinitionRecordRepository</code>將權限加到資料庫，<br>再將 Cache 設定為過期，這樣就可以新增權限後，該權限就會在 Memory Cache 之中。</p><p>1.透過 ABP 建立 <a href="https://abp.io/docs/latest/tutorials/book-store/part-01?UI=MVC&DB=EF">BookStore Web 系統</a></p><p>2.加入<code>FixedLocalizableStringSerializer</code>避免沒設定多國語系而發生錯誤，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">Dependency(ReplaceServices = true)</span>]</span><br><span class="line">[<span class="meta">ExposeServices(typeof(LocalizableStringSerializer), typeof(ILocalizableStringSerializer), typeof(FixedLocalizableStringSerializer))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">FixedLocalizableStringSerializer</span> : <span class="title">LocalizableStringSerializer</span>, <span class="title">ITransientDependency</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">FixedLocalizableStringSerializer</span>(<span class="params">IOptions&lt;AbpLocalizationOptions&gt; localizationOptions</span>) : <span class="title">base</span>(<span class="params">localizationOptions</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> ILocalizableString <span class="title">Deserialize</span>(<span class="params"><span class="built_in">string</span>? <span class="keyword">value</span></span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">value</span> == <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> FixedLocalizableString(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">base</span>.Deserialize(<span class="keyword">value</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> FixedLocalizableString(<span class="keyword">value</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.設定<strong>IsDynamicPermissionStoreEnabled</strong>為<strong>true</strong><br>在<code>BookStoreModule.cs</code>中<code>ConfigureServices</code>最後加入設定，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Configure&lt;PermissionManagementOptions&gt;(options =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    options.IsDynamicPermissionStoreEnabled = <span class="literal">true</span>;</span><br><span class="line">&#125;);</span><br><span class="line">context.Services.Replace(ServiceDescriptor.Singleton&lt;ILocalizableStringSerializer, FixedLocalizableStringSerializer&gt;());</span><br><span class="line">Configure&lt;Microsoft.AspNetCore.Mvc.JsonOptions&gt;(options =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    options.JsonSerializerOptions.ReferenceHandler = ReferenceHandler.IgnoreCycles;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>4.建立<code>PermissionDefinitionAppService.cs</code>來負責新增權限，<br>權限資料可以加入額外的一些屬性，例如 Url, Icon, Target ，可用在 Menu</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PermissionDefinitionAppService</span> : <span class="title">BookStoreAppService</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> IPermissionGroupDefinitionRecordRepository _permissionGroupRepository;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> IPermissionDefinitionRecordRepository _permissionRepository;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> IDistributedCache _distributedCache;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> DynamicPermissionDefinitionStore _dynamicPermissionDefinitionStore;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">readonly</span> AbpDistributedCacheOptions _cacheOptions;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> IDynamicPermissionDefinitionStoreInMemoryCache _cache;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> IPermissionDefinitionManager _permissionDefManager;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PermissionDefinitionAppService</span>(<span class="params">IPermissionGroupDefinitionRecordRepository permissionGroupRepository,</span></span></span><br><span class="line"><span class="params"><span class="function">        IPermissionDefinitionRecordRepository permissionRepository,</span></span></span><br><span class="line"><span class="params"><span class="function">        IDistributedCache distributedCache,</span></span></span><br><span class="line"><span class="params"><span class="function">        DynamicPermissionDefinitionStore dynamicPermissionDefinitionStore,</span></span></span><br><span class="line"><span class="params"><span class="function">        IOptions&lt;AbpDistributedCacheOptions&gt; cacheOptions,</span></span></span><br><span class="line"><span class="params"><span class="function">        IDynamicPermissionDefinitionStoreInMemoryCache cache,</span></span></span><br><span class="line"><span class="params"><span class="function">        IPermissionDefinitionManager permissionDefManager</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        _permissionGroupRepository = permissionGroupRepository;</span><br><span class="line">        _permissionRepository = permissionRepository;</span><br><span class="line">        _distributedCache = distributedCache;</span><br><span class="line">        _dynamicPermissionDefinitionStore = dynamicPermissionDefinitionStore;</span><br><span class="line">        _cacheOptions = cacheOptions.Value;</span><br><span class="line">        _cache = cache;</span><br><span class="line">        _permissionDefManager = permissionDefManager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">PostPermissionAsync</span>(<span class="params"><span class="built_in">string</span> groupName, <span class="built_in">string</span> parentName, <span class="built_in">string</span> name, <span class="built_in">string</span> url, <span class="built_in">string</span> icon, <span class="built_in">string</span> target</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> permissionGroup = <span class="keyword">new</span> PermissionGroupDefinitionRecord</span><br><span class="line">        &#123;</span><br><span class="line">            Name = groupName,</span><br><span class="line">            DisplayName = GetDisplayName(groupName)</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">var</span> <span class="keyword">group</span> = <span class="keyword">await</span> _permissionGroupRepository.GetListAsync();</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">group</span>.All(x =&gt; x.Name != groupName))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">await</span> _permissionGroupRepository.InsertAsync(permissionGroup);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> permissions = <span class="keyword">await</span> _permissionRepository.GetListAsync();</span><br><span class="line">        <span class="keyword">if</span> (permissions.All(x =&gt; x.Name != name))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> testPermission = <span class="keyword">new</span> PermissionDefinitionRecord</span><br><span class="line">            &#123;</span><br><span class="line">                Name = name,</span><br><span class="line">                DisplayName = GetDisplayName(name),</span><br><span class="line">                GroupName = groupName,</span><br><span class="line">                IsEnabled = <span class="literal">true</span>,</span><br><span class="line">                ParentName = parentName,</span><br><span class="line">                MultiTenancySide = MultiTenancySides.Both</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="built_in">string</span>.IsNullOrEmpty(url))</span><br><span class="line">            &#123;</span><br><span class="line">                testPermission.SetProperty(<span class="string">&quot;Url&quot;</span>, url);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (!<span class="built_in">string</span>.IsNullOrEmpty(icon))</span><br><span class="line">            &#123;</span><br><span class="line">                testPermission.SetProperty(<span class="string">&quot;Icon&quot;</span>, icon);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (!<span class="built_in">string</span>.IsNullOrEmpty(target))</span><br><span class="line">            &#123;</span><br><span class="line">                testPermission.SetProperty(<span class="string">&quot;Target&quot;</span>, target);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">await</span> _permissionRepository.InsertAsync(testPermission);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">await</span> _distributedCache.RemoveAsync(<span class="string">$&quot;<span class="subst">&#123;_cacheOptions.KeyPrefix&#125;</span>_AbpInMemoryPermissionCacheStamp&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="built_in">string</span> <span class="title">GetDisplayName</span>(<span class="params"><span class="built_in">string</span> name</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//L:BookStore,Permission:BookStore =&gt; 對應到語系檔內容</span></span><br><span class="line">        <span class="keyword">var</span> resourceName = <span class="string">&quot;BookStore&quot;</span>;</span><br><span class="line">        <span class="keyword">var</span> permissionName = <span class="string">$&quot;Permission&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">$&quot;L:<span class="subst">&#123;resourceName&#125;</span>,<span class="subst">&#123;permissionName&#125;</span>:<span class="subst">&#123;name&#125;</span>&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Task</span>&lt;<span class="title">PermissionDefinition</span>&gt; <span class="title">GetPermissionAsync</span>(<span class="params"><span class="built_in">string</span> name</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> _permissionDefManager.GetAsync(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> LocalizableString <span class="title">L</span>(<span class="params"><span class="built_in">string</span> name</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> LocalizableString.Create&lt;BookStoreResource&gt;(name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5.在 Page 中讓使用者設定權限資料，並呼叫<code>PermissionDefinitionAppService</code>來新增權限<br>Index.cshtml.cs</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">IndexModel</span> : <span class="title">AbpPageModel</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> PermissionDefinition2AppService _permissionDefAppService;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">IndexModel</span>(<span class="params">PermissionDefinition2AppService permissionDefAppService</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        _permissionDefAppService = permissionDefAppService;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">BindProperty</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> GroupName &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">BindProperty</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span>? ParentPermissionName &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">BindProperty</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> PermissionName &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    [<span class="meta">BindProperty</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span>? Icon &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">BindProperty</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span>? Url &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">BindProperty</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span>? Target &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  Task <span class="title">OnPostAddPermission</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> _permissionDefAppService.PostPermissionAsync(GroupName, ParentPermissionName, PermissionName, Url, Icon, Target);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Index.cshtml.cs</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-6&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;card&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;card-header&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;card-title text-body&quot;</span>&gt;</span>Add Permissions<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;card-body pt-0&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">class</span>=<span class="string">&quot;m-2&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;mb-3 col-12&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;formula&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-label&quot;</span></span></span><br><span class="line"><span class="tag">                            &gt;</span>Group Name:&lt;/label</span><br><span class="line">                        &gt;</span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">type</span>=<span class="string">&quot;text&quot;</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">asp-for</span>=<span class="string">&quot;GroupName&quot;</span></span></span><br><span class="line"><span class="tag">                        /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;mb-3 col-12&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;formula&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-label&quot;</span></span></span><br><span class="line"><span class="tag">                            &gt;</span>Parent Permission Name:&lt;/label</span><br><span class="line">                        &gt;</span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">type</span>=<span class="string">&quot;text&quot;</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">asp-for</span>=<span class="string">&quot;ParentPermissionName&quot;</span></span></span><br><span class="line"><span class="tag">                        /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;mb-3 col-12&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;formula&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-label&quot;</span></span></span><br><span class="line"><span class="tag">                            &gt;</span>Permission Name:&lt;/label</span><br><span class="line">                        &gt;</span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">type</span>=<span class="string">&quot;text&quot;</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">asp-for</span>=<span class="string">&quot;PermissionName&quot;</span></span></span><br><span class="line"><span class="tag">                        /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;mb-3 col-12&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;formula&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-label&quot;</span>&gt;</span>Url:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">asp-for</span>=<span class="string">&quot;Url&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;mb-3 col-12&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;formula&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-label&quot;</span>&gt;</span>Icon:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">type</span>=<span class="string">&quot;text&quot;</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">asp-for</span>=<span class="string">&quot;Icon&quot;</span></span></span><br><span class="line"><span class="tag">                        /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;mb-3 col-12&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;formula&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-label&quot;</span>&gt;</span>Target:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">type</span>=<span class="string">&quot;text&quot;</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">asp-for</span>=<span class="string">&quot;Target&quot;</span></span></span><br><span class="line"><span class="tag">                        /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">button</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">class</span>=<span class="string">&quot;btn btn-success col-12&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">asp-page-handler</span>=<span class="string">&quot;AddPermission&quot;</span></span></span><br><span class="line"><span class="tag">                    &gt;</span></span><br><span class="line">                        增加功能</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>6.在 <code>BookStoreMenuContributor.cs</code> 中，動態來依使用者的權限新增 Menu，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">BookStoreMenuContributor</span> : <span class="title">IMenuContributor</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> IServiceCollection _services;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> IPermissionChecker _permissionChecker;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BookStoreMenuContributor</span>(<span class="params">IServiceCollection services</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        _services = services;</span><br><span class="line">        _permissionChecker = services.GetRequiredService&lt;IPermissionChecker&gt;();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">ConfigureMenuAsync</span>(<span class="params">MenuConfigurationContext context</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (context.Menu.Name == StandardMenus.Main)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">await</span> ConfigureMainMenuAsync(context);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">async</span> Task <span class="title">ConfigureMainMenuAsync</span>(<span class="params"> MenuConfigurationContext context</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> administration = context.Menu.GetAdministration();</span><br><span class="line">        <span class="keyword">var</span> l = context.GetLocalizer&lt;BookStoreResource&gt;();</span><br><span class="line"></span><br><span class="line">        context.Menu.Items.Insert(</span><br><span class="line">            <span class="number">0</span>,</span><br><span class="line">            <span class="keyword">new</span> ApplicationMenuItem(</span><br><span class="line">                BookStoreMenus.Home,</span><br><span class="line">                l[<span class="string">&quot;Menu:Home&quot;</span>],</span><br><span class="line">                <span class="string">&quot;~/&quot;</span>,</span><br><span class="line">                icon: <span class="string">&quot;fas fa-home&quot;</span>,</span><br><span class="line">                order: <span class="number">0</span></span><br><span class="line">            )</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> rootPermissionName = <span class="string">&quot;BookStore.RootFun&quot;</span>;</span><br><span class="line">        <span class="keyword">var</span> permissionDefManager = _services.GetRequiredService&lt;IPermissionDefinitionManager&gt;();</span><br><span class="line">        <span class="keyword">var</span> rootPermission = <span class="keyword">await</span> permissionDefManager.GetOrNullAsync(rootPermissionName);</span><br><span class="line">        <span class="keyword">var</span> isGrant = <span class="keyword">await</span> _permissionChecker.IsGrantedAsync(rootPermissionName);</span><br><span class="line">        <span class="keyword">if</span> (rootPermission != <span class="literal">null</span> &amp;&amp; isGrant)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> menu = <span class="keyword">await</span> ConfigureAPMenuAsync(context, rootPermission);</span><br><span class="line">            context.Menu.Items.Add(menu);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (BookStoreModule.IsMultiTenant)</span><br><span class="line">        &#123;</span><br><span class="line">            administration.SetSubItemOrder(TenantManagementMenuNames.GroupName, <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            administration.TryRemoveMenuItem(TenantManagementMenuNames.GroupName);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">async</span> Task&lt;ApplicationMenuItem&gt; <span class="title">ConfigureAPMenuAsync</span>(<span class="params">MenuConfigurationContext context, PermissionDefinition permission</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> l = context.GetLocalizer&lt;BookStoreResource&gt;();</span><br><span class="line">        <span class="keyword">var</span> menu = <span class="keyword">new</span> ApplicationMenuItem(</span><br><span class="line">                permission.Name,</span><br><span class="line">                 l[<span class="string">$&quot;Permission:<span class="subst">&#123;permission.Name&#125;</span>&quot;</span>]</span><br><span class="line">            );</span><br><span class="line">        <span class="keyword">if</span> (permission.Properties.ContainsKey(<span class="string">&quot;Icon&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            menu.Icon = permission.Properties[<span class="string">&quot;Icon&quot;</span>] <span class="keyword">as</span> <span class="built_in">string</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (permission.Properties.ContainsKey(<span class="string">&quot;Url&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            menu.Url = permission.Properties[<span class="string">&quot;Url&quot;</span>] <span class="keyword">as</span> <span class="built_in">string</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (permission.Properties.ContainsKey(<span class="string">&quot;Target&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            menu.Target = permission.Properties[<span class="string">&quot;Target&quot;</span>] <span class="keyword">as</span> <span class="built_in">string</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">var</span> child <span class="keyword">in</span> permission.Children)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> grant = <span class="keyword">await</span> _permissionChecker.IsGrantedAsync(child.Name);</span><br><span class="line">            <span class="keyword">if</span> (grant)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">var</span> childMenu = <span class="keyword">await</span> ConfigureAPMenuAsync(context, child);</span><br><span class="line">                menu.Items.Add(childMenu);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> menu;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用 admin 登入後，動態加入權限</p><img src="/2025/01/02/abp-dynamic-add-permissions/01.png" class="" title="加入權限"><p>在設定權限功能，可以看到上一步新增的權限，已經可以看到並設定，</p><img src="/2025/01/02/abp-dynamic-add-permissions/02.png" class="" title="加入權限"><p>重整畫面，就可以依權限來呈現 Menu。</p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://github.com/abpframework/abp/discussions/21779">How to Dynamic Add&#x2F;Update Permissions and Refresh Cache in ABP</a><br><a href="https://github.com/abpframework/abp-samples/tree/master/DynamicPermission">ABP DynamicPermission Sample</a><br><a href="https://abp.io/support/questions/5671/Generate-Permission-Automatically-from-external-service">Generate Permission Automatically from external service</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;預設 ABP 的權限會定義在繼承自&lt;code&gt;PermissionDefinitionProvider&lt;/code&gt;的類別中，&lt;br&gt;當系統</summary>
      
    
    
    
    
    <category term="ABP" scheme="https://rainmakerho.github.io/tags/ABP/"/>
    
    <category term="Dynamic" scheme="https://rainmakerho.github.io/tags/Dynamic/"/>
    
    <category term="Permission" scheme="https://rainmakerho.github.io/tags/Permission/"/>
    
    <category term="PermissionDefinitionProvider" scheme="https://rainmakerho.github.io/tags/PermissionDefinitionProvider/"/>
    
    <category term="AbpPermissions" scheme="https://rainmakerho.github.io/tags/AbpPermissions/"/>
    
    <category term="AbpPermissionGroups" scheme="https://rainmakerho.github.io/tags/AbpPermissionGroups/"/>
    
    <category term="IsDynamicPermissionStoreEnabled" scheme="https://rainmakerho.github.io/tags/IsDynamicPermissionStoreEnabled/"/>
    
  </entry>
  
  <entry>
    <title>ABP A possible object cycle was detected.</title>
    <link href="https://rainmakerho.github.io/2024/12/31/abp-json-possible-object-cycle-was-detected-err/"/>
    <id>https://rainmakerho.github.io/2024/12/31/abp-json-possible-object-cycle-was-detected-err/</id>
    <published>2024-12-31T06:59:03.000Z</published>
    <updated>2024-12-31T07:11:32.354Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>在 Abp AppService 中回傳的物件如果有 recursion 的狀況，像是取回 <code>PermissionGroupDefinition</code> ，會包含 <code>List&lt;PermissionDefinition&gt;</code> ，而 <code>PermissionDefinition</code> 又會包含 <code>List&lt;PermissionDefinition&gt;</code>，所以就會出現以下的錯誤，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[ERR] A possible object cycle was detected. This can either be due to a cycle or if the object depth is larger than the maximum allowed depth of 32. Consider using ReferenceHandler.Preserve on JsonSerializerOptions to support cycles. Path: $.Permissions.Children.Parent.Children.Parent.Children.Parent.Children.Parent.Children.Parent.Children.Parent.Children.Parent.Children.Parent.Children.Parent.Children.</span><br><span class="line">System.Text.Json.JsonException: A possible object cycle was detected. This can either be due to a cycle or if the object depth is larger than the maximum allowed depth of 32. Consider using ReferenceHandler.Preserve on JsonSerializerOptions to support cycles. Path: $.Permissions.Children.Parent.Children.Parent.Children.Parent.Children.Parent.Children.Parent.Children.Parent.Children.Parent.Children.Parent.Children.Parent.Children.</span><br><span class="line">   at System.Text.Json.ThrowHelper.ThrowJsonException_SerializerCycleDetected(Int32 maxDepth)</span><br><span class="line">   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T&amp; value, JsonSerializerOptions options, WriteStack&amp; state)</span><br></pre></td></tr></table></figure><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>參考<a href="https://github.com/abpframework/abp/issues/10591#issuecomment-1370050436">Adding configuration for JSON serializer providers doesn’t work</a>，在 Web 專案的 Module 檔案中，加入以下的設定就可以正常運作。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Configure&lt;Microsoft.AspNetCore.Mvc.JsonOptions&gt;(options =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    options.JsonSerializerOptions.ReferenceHandler = ReferenceHandler.IgnoreCycles;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://github.com/abpframework/abp/issues/10591#issuecomment-1370050436">Adding configuration for JSON serializer providers doesn’t work</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;在 Abp AppService 中回傳的物件如果有 recursion 的狀況，像是取回 &lt;code&gt;PermissionGroupDef</summary>
      
    
    
    
    
    <category term="json" scheme="https://rainmakerho.github.io/tags/json/"/>
    
    <category term="JsonSerializerOptions" scheme="https://rainmakerho.github.io/tags/JsonSerializerOptions/"/>
    
    <category term="abp" scheme="https://rainmakerho.github.io/tags/abp/"/>
    
    <category term="ReferenceHandler.Preserve" scheme="https://rainmakerho.github.io/tags/ReferenceHandler-Preserve/"/>
    
    <category term="recursion" scheme="https://rainmakerho.github.io/tags/recursion/"/>
    
  </entry>
  
  <entry>
    <title>使用 Vanna 來練習 Text2SQL</title>
    <link href="https://rainmakerho.github.io/2024/12/03/text2sql-nl2sql-use-vanna-ai/"/>
    <id>https://rainmakerho.github.io/2024/12/03/text2sql-nl2sql-use-vanna-ai/</id>
    <published>2024-12-03T05:27:09.000Z</published>
    <updated>2024-12-03T06:42:24.332Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p><a href="https://github.com/vanna-ai/vanna">Vanna</a>可以將 Table Schema, 文件說明, 問題&#x2F;SQL 存到向量資料庫之中。當使用者提出問題時，會以取出相關的 Table 資訊，結合 Prompt 去詢問 LLM 來產生 SQL 。<br>再執行 SQL ，並以不同格式來呈現結果。<br>以下就以 MSSQL 的 AdventureWorks2022 DB 來練習。<br>環境: Windows 10, VS Code, chromadb, openai, SQL Server</p><h3 id="練習"><a href="#練習" class="headerlink" title="練習"></a>練習</h3><p>1.建立 text2sql 目錄</p><p>2.透過 VS Code 開啟 text2sql 目錄</p><p>3.建立 <code>vannasql.ipynb</code> ，選擇 python</p><p>4.安裝 vanna 並包含 chromadb, openai</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%pip install vanna[chromadb,openai]</span><br></pre></td></tr></table></figure><ul><li>註: 如果沒安裝過 pyodbc ，也請安裝它 <code>%pip install pyodbc</code></li></ul><p>5.建立 vanna instance</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyVanna</span>(ChromaDB_VectorStore, OpenAI_Chat):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, config=<span class="literal">None</span></span>):</span><br><span class="line">        ChromaDB_VectorStore.__init__(self, config=config)</span><br><span class="line">        OpenAI_Chat.__init__(self, config=config)</span><br><span class="line">apikey = <span class="string">&#x27;openai apikey&#x27;</span>;</span><br><span class="line">vn = MyVanna(config=&#123;<span class="string">&#x27;api_key&#x27;</span>: apikey, <span class="string">&#x27;model&#x27;</span>: <span class="string">&#x27;gpt-4o&#x27;</span>&#125;)</span><br></pre></td></tr></table></figure><p>6.連接 db</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vn.connect_to_mssql(odbc_conn_str=<span class="string">&#x27;DRIVER=&#123;ODBC Driver 17 for SQL Server&#125;;SERVER=.;DATABASE=AdventureWorks2022;Trusted_Connection=yes;&#x27;</span>)</span><br></pre></td></tr></table></figure><p>7.取出 Table Schema，建立訓練資料</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">df_information_schema = vn.run_sql(<span class="string">&quot;SELECT * FROM INFORMATION_SCHEMA.COLUMNS&quot;</span>)</span><br><span class="line">plan = vn.get_training_plan_generic(df_information_schema)</span><br><span class="line"><span class="comment">#plan</span></span><br><span class="line">vn.train(plan=plan)</span><br></pre></td></tr></table></figure><ul><li>註:在目錄中，它會產生<code>chroma.sqlite3</code>及許多的<code>Guid</code>的目錄，就是 Vanna 的訓練資料，<br>如果要重新訓練資料，就將這些目錄及檔案刪除掉。</li></ul><p>8.詢問問題<br>訓練好之後，就可以開始詢問它，如下，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vn.ask(<span class="string">&#x27;Find out the top 5 best salespeople&#x27;</span>)</span><br></pre></td></tr></table></figure><img src="/2024/12/03/text2sql-nl2sql-use-vanna-ai/01.png" class="" title="vn.ask"><p>9.執行 vanna.flask 來建立 Vanna Web 網站</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> vanna.flask <span class="keyword">import</span> VannaFlaskApp</span><br><span class="line"></span><br><span class="line">app = VannaFlaskApp(vn)</span><br><span class="line">app.run()</span><br></pre></td></tr></table></figure><img src="/2024/12/03/text2sql-nl2sql-use-vanna-ai/02.png" class="" title="vanna.flask"><p>當網站建立起來後，可以在網頁中進行查詢。<br>如果查詢結果有錯誤，可以進行手動修正。</p><img src="/2024/12/03/text2sql-nl2sql-use-vanna-ai/03.png" class="" title="vanna webUI"><p>每個 Table 它會建立的訓練資料如下，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">The following columns are in the SalesTaxRate table in the AdventureWorks2022 database:</span><br><span class="line">| | TABLE_CATALOG | TABLE_SCHEMA | TABLE_NAME | COLUMN_NAME | DATA_TYPE | |---:|:-------------------|:---------------|:-------------|:----------------|:-----------------| | 0 | AdventureWorks2022 | Sales | SalesTaxRate | SalesTaxRateID | int | | 1 | AdventureWorks2022 | Sales | SalesTaxRate | StateProvinceID | int | | 2 | AdventureWorks2022 | Sales | SalesTaxRate | TaxType | tinyint | | 3 | AdventureWorks2022 | Sales | SalesTaxRate | TaxRate | smallmoney | | 4 | AdventureWorks2022 | Sales | SalesTaxRate | Name | nvarchar | | 5 | AdventureWorks2022 | Sales | SalesTaxRate | rowguid | uniqueidentifier | | 6 | AdventureWorks2022 | Sales | SalesTaxRate | ModifiedDate | datetime |</span><br></pre></td></tr></table></figure><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://vanna.ai/docs/mssql-openai-standard-chromadb/">Generating SQL for Microsoft SQL Server using OpenAI, ChromaDB</a><br><a href="https://github.com/vanna-ai/vanna">Vanna</a><br><a href="https://blog.csdn.net/qq_49070564/article/details/139717376">AI 与数据库交互</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/vanna-ai/vanna&quot;&gt;Vanna&lt;/a&gt;可以將 Table Schema,</summary>
      
    
    
    
    
    <category term="mssql" scheme="https://rainmakerho.github.io/tags/mssql/"/>
    
    <category term="Text2SQL" scheme="https://rainmakerho.github.io/tags/Text2SQL/"/>
    
    <category term="NL2SQL" scheme="https://rainmakerho.github.io/tags/NL2SQL/"/>
    
    <category term="vanna-ai" scheme="https://rainmakerho.github.io/tags/vanna-ai/"/>
    
  </entry>
  
  <entry>
    <title>判斷字串是否包含簡體中文(是否為繁體中文)</title>
    <link href="https://rainmakerho.github.io/2024/12/02/determine-string-is-simplified-chinese-hans/"/>
    <id>https://rainmakerho.github.io/2024/12/02/determine-string-is-simplified-chinese-hans/</id>
    <published>2024-12-02T01:04:38.000Z</published>
    <updated>2024-12-02T01:50:51.974Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>最近有個需求是要判斷使用者輸入的字串是否有<strong>簡體中文</strong>，<br>不好透過字串的編碼範圍來判斷。<br>所以，將使用者的輸入轉成<strong>繁體中文</strong>，<br>如果相同，則表示使用者輸入的是<strong>繁體中文</strong>。<br>如果不相同，則表示使用者輸入的<strong>不是繁體中文</strong>。</p><h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><p>所以可以透過<strong>OpenCCNET</strong>這個套件來幫我們進行<strong>簡&#x2F;繁</strong>轉換。</p><p>1.加入 OpenCCNET Nuget 套件</p><p>2.進行轉換測試，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 判斷字串是否為繁體中文</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;s&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> (<span class="params"><span class="built_in">bool</span>, List&lt;<span class="built_in">string</span>&gt;</span>) <span class="title">CheckHant</span>(<span class="params"><span class="built_in">string</span> s</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> result = <span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt;();</span><br><span class="line">    <span class="keyword">var</span> strHant = ZhConverter.HansToHant(s);</span><br><span class="line">    <span class="keyword">var</span> isTW = (strHant == s);</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="built_in">char</span> c <span class="keyword">in</span> s)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> cn = c.ToString();</span><br><span class="line">        <span class="keyword">var</span> tw = ZhConverter.HansToHant(cn);</span><br><span class="line">        <span class="keyword">if</span>(tw != cn)</span><br><span class="line">        &#123;</span><br><span class="line">            result.Add(cn);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (isTW, result);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> s1 = <span class="string">&quot;這是繁體中文abc&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> s2 = <span class="string">&quot;这是繁体中文abc&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> s3 = <span class="string">&quot;これは繁体字中国語のabcです&quot;</span>;</span><br><span class="line">ZhConverter.Initialize();</span><br><span class="line"><span class="keyword">var</span> (isS1TW, s1CnResult) = CheckHant(s1);</span><br><span class="line">Console.WriteLine(<span class="string">$&quot;<span class="subst">&#123;s1&#125;</span>是繁體中文嗎?<span class="subst">&#123;isS1TW&#125;</span>&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> (isS2TW, s2CnResult) = CheckHant(s2);</span><br><span class="line">Console.WriteLine(<span class="string">$&quot;<span class="subst">&#123;s2&#125;</span>是繁體中文嗎?<span class="subst">&#123;isS2TW&#125;</span>&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> (isS3TW, s3CnResult) = CheckHant(s3);</span><br><span class="line">Console.WriteLine(<span class="string">$&quot;<span class="subst">&#123;s3&#125;</span>是繁體中文嗎?<span class="subst">&#123;isS3TW&#125;</span>&quot;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="參考資訊"><a href="#參考資訊" class="headerlink" title="參考資訊"></a>參考資訊</h3><p><a href="https://github.com/CosineG/OpenCC.NET">OpenCCNET</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;最近有個需求是要判斷使用者輸入的字串是否有&lt;strong&gt;簡體中文&lt;/strong&gt;，&lt;br&gt;不好透過字串的編碼範圍來判斷。&lt;br&gt;所以，將</summary>
      
    
    
    
    
    <category term=".NET" scheme="https://rainmakerho.github.io/tags/NET/"/>
    
    <category term="zh-Hans" scheme="https://rainmakerho.github.io/tags/zh-Hans/"/>
    
    <category term="zh-Hant" scheme="https://rainmakerho.github.io/tags/zh-Hant/"/>
    
    <category term="zh-CN" scheme="https://rainmakerho.github.io/tags/zh-CN/"/>
    
    <category term="zh-TW" scheme="https://rainmakerho.github.io/tags/zh-TW/"/>
    
    <category term="OpenCCNET" scheme="https://rainmakerho.github.io/tags/OpenCCNET/"/>
    
  </entry>
  
  <entry>
    <title>Windows 工作排程器中的排程忽然不跑了?</title>
    <link href="https://rainmakerho.github.io/2024/11/29/windows-task-dont-work/"/>
    <id>https://rainmakerho.github.io/2024/11/29/windows-task-dont-work/</id>
    <published>2024-11-29T05:26:31.000Z</published>
    <updated>2024-11-29T05:42:46.746Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>今天同事詢問客戶端將工作排程器中的一個排程更換執行人員後，<br>設定每天週期執行、每天隔 5 分去跑一次。<br>但是，設定完成後，一直都沒有跑。</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>建立一個新的 Task ，並先跑簡單的 Bat 檔案看能不能跑。<br>結果是可以正常執行。<br>再直接去跑 EXE ，也是可以正常執行的。</p><p>於是將有問題的 Task 及沒問題的 Task 匯出 XML 來比較，<br>結果發現有問題的 Task 中，沒有<code>&lt;Duration&gt;P1D&lt;/Duration&gt;</code>這個內容。</p><p>也就是有問題的排程設定每 5 分執行，但<strong>持續時間為(F):<strong>這個欄位是設定成</strong>不限制</strong><br>而沒問題的排程設定中，<strong>持續時間為(F):<strong>這個欄位是設定成</strong>1 天</strong></p><img src="/2024/11/29/windows-task-dont-work/01.png" class="" title="排程設定"><p>將<strong>持續時間為(F):<strong>這個欄位，從</strong>不限制</strong>改成<strong>1 天</strong>，<br>就可以正常執行了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;今天同事詢問客戶端將工作排程器中的一個排程更換執行人員後，&lt;br&gt;設定每天週期執行、每天隔 5 分去跑一次。&lt;br&gt;但是，設定完成後，一直都</summary>
      
    
    
    
    
    <category term="Windows" scheme="https://rainmakerho.github.io/tags/Windows/"/>
    
    <category term="Task" scheme="https://rainmakerho.github.io/tags/Task/"/>
    
    <category term="工作排程器" scheme="https://rainmakerho.github.io/tags/%E5%B7%A5%E4%BD%9C%E6%8E%92%E7%A8%8B%E5%99%A8/"/>
    
    <category term="Duration" scheme="https://rainmakerho.github.io/tags/Duration/"/>
    
  </entry>
  
  <entry>
    <title>abp AppService 覆寫 Method 的 Authorize?</title>
    <link href="https://rainmakerho.github.io/2024/11/08/aspnet-authorize-policy-override/"/>
    <id>https://rainmakerho.github.io/2024/11/08/aspnet-authorize-policy-override/</id>
    <published>2024-11-08T01:21:22.000Z</published>
    <updated>2024-11-08T03:08:24.852Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>同事繼承 Abp 範例中的 AuthorAppService ，將 UpdateAsync 設定成 virtual ，允許子類別去覆寫。<br>子類別在覆寫的 <code>UpdateAsync</code> 上，加上另個 Authorize 的設定，<br>結果要執行<code>UpdateAsync</code>變成需要有 2 個 Policy 的權限才可以執行。</p><h3 id="測試"><a href="#測試" class="headerlink" title="測試"></a>測試</h3><p>範例的<code>AuthorAppService</code>，其中的<code>UpdateAsync</code>設定成<code>virtual</code>，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">Authorize(BookStorePermissions.Authors.Default)</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AuthorAppService</span> : <span class="title">BookStoreAppService</span>, <span class="title">IAuthorAppService</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> IAuthorRepository _authorRepository;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> AuthorManager _authorManager;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">AuthorAppService</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">        IAuthorRepository authorRepository,</span></span></span><br><span class="line"><span class="params"><span class="function">        AuthorManager authorManager</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        _authorRepository = authorRepository;</span><br><span class="line">        _authorManager = authorManager;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;AuthorDto&gt; <span class="title">GetAsync</span>(<span class="params">Guid id</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> author = <span class="keyword">await</span> _authorRepository.GetAsync(id);</span><br><span class="line">        <span class="keyword">return</span> ObjectMapper.Map&lt;Author, AuthorDto&gt;(author);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">async</span> Task&lt;PagedResultDto&lt;AuthorDto&gt;&gt; GetListAsync(GetAuthorListDto input)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(input.Sorting.IsNullOrWhiteSpace())</span><br><span class="line">        &#123;</span><br><span class="line">            input.Sorting = <span class="keyword">nameof</span>(Author.Name);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> authors = <span class="keyword">await</span> _authorRepository.GetListAsync(</span><br><span class="line">            input.SkipCount,</span><br><span class="line">            input.MaxResultCount,</span><br><span class="line">            input.Sorting,</span><br><span class="line">            input.Filter</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> totalCount = input.Filter == <span class="literal">null</span></span><br><span class="line">            ? <span class="keyword">await</span> _authorRepository.CountAsync()</span><br><span class="line">            : <span class="keyword">await</span> _authorRepository.CountAsync(</span><br><span class="line">                author =&gt; author.Name.Contains(input.Filter)</span><br><span class="line">            );</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> PagedResultDto&lt;AuthorDto&gt;(</span><br><span class="line">            totalCount,</span><br><span class="line">            ObjectMapper.Map&lt;List&lt;Author&gt;, List&lt;AuthorDto&gt;&gt;(authors)</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Authorize(BookStorePermissions.Authors.Create)</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;AuthorDto&gt; <span class="title">CreateAsync</span>(<span class="params">CreateAuthorDto input</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> author = <span class="keyword">await</span> _authorManager.CreateAsync(</span><br><span class="line">            input.Name,</span><br><span class="line">            input.BirthDate,</span><br><span class="line">            input.ShortBio</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="keyword">await</span> _authorRepository.InsertAsync(author);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ObjectMapper.Map&lt;Author, AuthorDto&gt;(author);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    [<span class="meta">Authorize(BookStorePermissions.Authors.Delete)</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">DeleteAsync</span>(<span class="params">Guid id</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">await</span> _authorRepository.DeleteAsync(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    [<span class="meta">Authorize(BookStorePermissions.Authors.Edit)</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">async</span> Task <span class="title">UpdateAsync</span>(<span class="params">Guid id, UpdateAuthorDto input</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> author = <span class="keyword">await</span> _authorRepository.GetAsync(id);</span><br><span class="line">        <span class="keyword">if</span>(author.Name != input.Name)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">await</span> _authorManager.ChangeNameAsync(author, input.Name);</span><br><span class="line">        &#125;</span><br><span class="line">        author.BirthDate = input.BirthDate;</span><br><span class="line">        author.ShortBio = input.ShortBio;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">await</span> _authorRepository.UpdateAsync(author);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因為要多加個<code>BookStorePermissions.Authors.Edit2</code> Permission，<br>所以要在 <code>BookStorePermissions中的Authors Class</code> 中加入</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">BookStorePermissions</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">const</span> <span class="built_in">string</span> GroupName = <span class="string">&quot;BookStore&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">Books</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">const</span> <span class="built_in">string</span> Default = GroupName + <span class="string">&quot;.Books&quot;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">const</span> <span class="built_in">string</span> Create = Default + <span class="string">&quot;.Create&quot;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">const</span> <span class="built_in">string</span> Edit = Default + <span class="string">&quot;.Edit&quot;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">const</span> <span class="built_in">string</span> Delete = Default + <span class="string">&quot;.Delete&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">Authors</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">const</span> <span class="built_in">string</span> Default = GroupName + <span class="string">&quot;.Authors&quot;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">const</span> <span class="built_in">string</span> Create = Default + <span class="string">&quot;.Create&quot;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">const</span> <span class="built_in">string</span> Edit = Default + <span class="string">&quot;.Edit&quot;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">const</span> <span class="built_in">string</span> Edit2 = Default + <span class="string">&quot;.Edit2&quot;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">const</span> <span class="built_in">string</span> Delete = Default + <span class="string">&quot;.Delete&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在<code>BookStorePermissionDefinitionProvider</code>中也要加入<code>Edit2</code>，<br><code>authorsPermission.AddChild(BookStorePermissions.Authors.Edit2, L(&quot;Permission:Authors.Edit&quot;));</code>，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">BookStorePermissionDefinitionProvider</span> : <span class="title">PermissionDefinitionProvider</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Define</span>(<span class="params">IPermissionDefinitionContext context</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> bookStoreGroup = context.AddGroup(BookStorePermissions.GroupName, L(<span class="string">&quot;Permission:BookStore&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> booksPermission = bookStoreGroup.AddPermission(BookStorePermissions.Books.Default, L(<span class="string">&quot;Permission:Books&quot;</span>));</span><br><span class="line">        booksPermission.AddChild(BookStorePermissions.Books.Create, L(<span class="string">&quot;Permission:Books.Create&quot;</span>));</span><br><span class="line">        booksPermission.AddChild(BookStorePermissions.Books.Edit, L(<span class="string">&quot;Permission:Books.Edit&quot;</span>));</span><br><span class="line">        booksPermission.AddChild(BookStorePermissions.Books.Delete, L(<span class="string">&quot;Permission:Books.Delete&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> authorsPermission = bookStoreGroup.AddPermission(BookStorePermissions.Authors.Default, L(<span class="string">&quot;Permission:Authors&quot;</span>));</span><br><span class="line">        authorsPermission.AddChild(BookStorePermissions.Authors.Create, L(<span class="string">&quot;Permission:Authors.Create&quot;</span>));</span><br><span class="line">        authorsPermission.AddChild(BookStorePermissions.Authors.Edit, L(<span class="string">&quot;Permission:Authors.Edit&quot;</span>));</span><br><span class="line">        authorsPermission.AddChild(BookStorePermissions.Authors.Delete, L(<span class="string">&quot;Permission:Authors.Delete&quot;</span>));</span><br><span class="line">        authorsPermission.AddChild(BookStorePermissions.Authors.Edit2, L(<span class="string">&quot;Permission:Authors.Edit&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> LocalizableString <span class="title">L</span>(<span class="params"><span class="built_in">string</span> name</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> LocalizableString.Create&lt;BookStoreResource&gt;(name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接著實作要繼承<code>AuthorAppService</code>的子類別<code>CustomAuthorAppService</code>，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">Dependency(ReplaceServices = true)</span>]</span><br><span class="line">[<span class="meta">ExposeServices(typeof(AuthorAppService))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">CustomAuthorAppService</span> : <span class="title">AuthorAppService</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CustomAuthorAppService</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">        IAuthorRepository authorRepository,</span></span></span><br><span class="line"><span class="params"><span class="function">        AuthorManager authorManager</span>)</span></span><br><span class="line"><span class="function">        : <span class="title">base</span>(<span class="params">authorRepository, authorManager</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Authorize(BookStorePermissions.Authors.Edit2)</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">async</span> Task <span class="title">UpdateAsync</span>(<span class="params">Guid id, UpdateAuthorDto input</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">await</span> <span class="keyword">base</span>.UpdateAsync(id, input);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>新增一個<code>MyPermissionChecker</code>來查看執行<code>UpdateAsync</code>會需要那些的 Policy，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MyPermissionChecker</span> : <span class="title">IPermissionChecker</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Task&lt;<span class="built_in">bool</span>&gt; <span class="title">IsGrantedAsync</span>(<span class="params"><span class="built_in">string</span> name</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> TaskCache.TrueResult;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Task&lt;<span class="built_in">bool</span>&gt; <span class="title">IsGrantedAsync</span>(<span class="params">ClaimsPrincipal? claimsPrincipal, <span class="built_in">string</span> name</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> TaskCache.TrueResult;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Task&lt;MultiplePermissionGrantResult&gt; <span class="title">IsGrantedAsync</span>(<span class="params"><span class="built_in">string</span>[] names</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> IsGrantedAsync(<span class="literal">null</span>, names);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Task&lt;MultiplePermissionGrantResult&gt; <span class="title">IsGrantedAsync</span>(<span class="params">ClaimsPrincipal? claimsPrincipal, <span class="built_in">string</span>[] names</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> Task.FromResult(<span class="keyword">new</span> MultiplePermissionGrantResult(names, PermissionGrantResult.Granted));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再到<code>ApplicationModule.cs</code>中設定要以<code>MyPermissionChecker</code>取代原生的<code>PermissionChecker</code>，<br><code>CustomAuthorAppService</code>取代原本的<code>AuthorAppService</code>，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">ConfigureServices</span>(<span class="params">ServiceConfigurationContext context</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//...其他程式 ...</span></span><br><span class="line">    context.Services.Replace(ServiceDescriptor.Singleton&lt;IPermissionChecker, MyPermissionChecker&gt;());</span><br><span class="line">    context.Services.Replace(ServiceDescriptor.Transient&lt;IAuthorAppService, CustomAuthorAppService&gt;());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="測試結果"><a href="#測試結果" class="headerlink" title="測試結果"></a>測試結果</h3><p>透過 Swagger 來測試時，在<code>MyPermissionChecker</code>的<code>IsGrantedAsync</code>方式設中斷點，<br>可以發現檢查順序為<br><code>BookStore.Authors</code>-&gt;<code>BookStore.Authors.Edit</code>-&gt;<code>BookStore.Authors.Edit2</code>-&gt;<code>BookStore.Authors.Edit</code>-&gt;<code>BookStore.Authors</code></p><p>所以可以發現，Method 上的<code>Authorize</code>的設定是疉加的效果。<br>所以如果是要覆寫的話，就使用原本的<code>Authorize</code>，不用特別再加一個新的<code>Authorize</code>。<br>或是新增另一個 Method 去設定不同的<code>Authorize</code>。<br>這個是 ASP.NET 原生的機制，不管是 Abp or ASP.NET 都是一樣的狀況哦。</p><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="https://github.com/abpframework/abp/blob/8.3.0/framework/src/Volo.Abp.Authorization/Volo/Abp/Authorization/Permissions/PermissionChecker.cs">abp PermissionChecker.cs</a><br><a href="https://github.com/abpframework/abp/blob/8.3.0/framework/src/Volo.Abp.Authorization.Abstractions/Volo/Abp/Authorization/Permissions/AlwaysAllowPermissionChecker.cs">abp AlwaysAllowPermissionChecker.cs</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;同事繼承 Abp 範例中的 AuthorAppService ，將 UpdateAsync 設定成 virtual ，允許子類別去覆寫。&lt;b</summary>
      
    
    
    
    
    <category term="ASP.NET" scheme="https://rainmakerho.github.io/tags/ASP-NET/"/>
    
    <category term="Authorize" scheme="https://rainmakerho.github.io/tags/Authorize/"/>
    
    <category term="abp" scheme="https://rainmakerho.github.io/tags/abp/"/>
    
    <category term="AppService" scheme="https://rainmakerho.github.io/tags/AppService/"/>
    
    <category term="Policy" scheme="https://rainmakerho.github.io/tags/Policy/"/>
    
    <category term="IPermissionChecker" scheme="https://rainmakerho.github.io/tags/IPermissionChecker/"/>
    
  </entry>
  
  <entry>
    <title>ASP.NET [AllowAnonymous] 的覆寫問題</title>
    <link href="https://rainmakerho.github.io/2024/10/30/aspnet-allowanonymous-class-level/"/>
    <id>https://rainmakerho.github.io/2024/10/30/aspnet-allowanonymous-class-level/</id>
    <published>2024-10-30T03:12:33.000Z</published>
    <updated>2024-10-30T03:43:29.480Z</updated>
    
    <content type="html"><![CDATA[<h3 id="使用-AllowAnonymous-與-Authorize-在-Class-Level-差異"><a href="#使用-AllowAnonymous-與-Authorize-在-Class-Level-差異" class="headerlink" title="使用 AllowAnonymous 與 Authorize 在 Class Level 差異"></a>使用 AllowAnonymous 與 Authorize 在 Class Level 差異</h3><p>在 Class 上設定 <code>AllowAnonymous</code> 屬性，跟設定 <code>Authorize</code> 效果相同嗎?<br>以下說明</p><h4 id="AllowAnonymous-在-Class-Level"><a href="#AllowAnonymous-在-Class-Level" class="headerlink" title="[AllowAnonymous] 在 Class Level"></a><code>[AllowAnonymous]</code> 在 Class Level</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">AllowAnonymous</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PublicController</span> : <span class="title">Controller</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> IActionResult <span class="title">Index</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> View();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Authorize</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> IActionResult <span class="title">Secure</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> View();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>雖然 Method Secure 設定 <code>[Authorize]</code>，但它會被 Class 的 <code>[AllowAnonymous]</code>，<br>所以 Secure Method 還是允許匿名訪問。</p><h4 id="Authorize-在-Class-Level"><a href="#Authorize-在-Class-Level" class="headerlink" title="[Authorize] 在 Class Level"></a><code>[Authorize]</code> 在 Class Level</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">Authorize</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SecureController</span> : <span class="title">Controller</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> IActionResult <span class="title">Index</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> View();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">AllowAnonymous</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> IActionResult <span class="title">Public</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> View();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>整個 Class 設定為 <code>[Authorize]</code>，除了 <code>Public</code> Method 設定 <code>[AllowAnonymous]</code> 會覆寫 <code>[Authorize]</code>，所以允許匿名訪問。</p><p>詳細請參考 <a href="https://learn.microsoft.com/zh-tw/aspnet/core/diagnostics/asp0026">ASP0026：[AllowAnonymous] 從「更遠」覆寫 [Authorize]</a></p><p>所以在使用 <code>[AllowAnonymous]</code> 時，要小心哦~</p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://learn.microsoft.com/zh-tw/aspnet/core/diagnostics/asp0026">ASP0026：[AllowAnonymous] 從「更遠」覆寫 [Authorize]</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;使用-AllowAnonymous-與-Authorize-在-Class-Level-差異&quot;&gt;&lt;a href=&quot;#使用-AllowAnonymous-與-Authorize-在-Class-Level-差異&quot; class=&quot;headerlink&quot; title=&quot;</summary>
      
    
    
    
    
    <category term="AllowAnonymous" scheme="https://rainmakerho.github.io/tags/AllowAnonymous/"/>
    
    <category term="Authorize" scheme="https://rainmakerho.github.io/tags/Authorize/"/>
    
    <category term="ASP0026" scheme="https://rainmakerho.github.io/tags/ASP0026/"/>
    
  </entry>
  
  <entry>
    <title>Checkmarx | Permissive Content Security Policy</title>
    <link href="https://rainmakerho.github.io/2024/10/07/checkmarx-permissive-content-security-policy/"/>
    <id>https://rainmakerho.github.io/2024/10/07/checkmarx-permissive-content-security-policy/</id>
    <published>2024-10-07T06:29:58.000Z</published>
    <updated>2024-10-07T07:57:36.218Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Issue"><a href="#Issue" class="headerlink" title="Issue"></a>Issue</h3><p>ASP.NET Core Web 專案中，加入許多 Header 時，其中包含<strong>Content-Security-Policy</strong>，<br>被 Checkmarx 掃出有<strong>Permissive Content Security Policy</strong>的問題，程式碼如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">context.Response.Headers.Add(<span class="string">&quot;X-Content-Security-Policy&quot;</span>, <span class="string">&quot;default-src &#x27;self&#x27; http://localhost:61161; img-src &#x27;self&#x27; blob: data:; frame-ancestors &#x27;self&#x27;; form-action &#x27;self&#x27;; object-src &#x27;none&#x27;;&quot;</span>);</span><br><span class="line">context.Response.Headers.Add(<span class="string">&quot;X-Frame-Options&quot;</span>, <span class="string">&quot;DENY&quot;</span>);</span><br><span class="line">context.Response.Headers.Add(<span class="string">&quot;Strict-Transport-Security&quot;</span>, <span class="string">&quot;max-age=31536000; includeSubDomains; preload&quot;</span>);</span><br><span class="line">context.Response.Headers.Add(<span class="string">&quot;X-Content-Type-Options&quot;</span>, <span class="string">&quot;nosniff&quot;</span>);</span><br></pre></td></tr></table></figure><p>但 Checkmarx 指的位置卻是在<br><code>context.Response.Headers.Add(&quot;X-Content-Type-Options&quot;, &quot;nosniff&quot;);</code><br><code>context.Response.Headers.Add(&quot;Strict-Transport-Security&quot;, &quot;max-age=31536000; includeSubDomains; preload&quot;);</code><br>…其他非<code>X-Content-Security-Policy</code> Header 的地方。</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>查看 Checkmarx 的 Rule 會檢查是否有 <strong>Content-Security-Policy</strong> Header, 值是否有 <code>default-src *</code> ，<code>form-action *</code>，<code>frame-ancestors *</code> ，才會有問題。</p><p>詢問同事 Jer 建議將 <strong>Content-Security-Policy</strong> 設定移到最後，以避免 Checkmarx 的誤判，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">context.Response.Headers.Add(<span class="string">&quot;X-Frame-Options&quot;</span>, <span class="string">&quot;DENY&quot;</span>);</span><br><span class="line">context.Response.Headers.Add(<span class="string">&quot;Strict-Transport-Security&quot;</span>, <span class="string">&quot;max-age=31536000; includeSubDomains; preload&quot;</span>);</span><br><span class="line">context.Response.Headers.Add(<span class="string">&quot;X-Content-Type-Options&quot;</span>, <span class="string">&quot;nosniff&quot;</span>);</span><br><span class="line">context.Response.Headers.Add(<span class="string">&quot;X-Content-Security-Policy&quot;</span>, <span class="string">&quot;default-src &#x27;self&#x27; http://localhost:61161; img-src &#x27;self&#x27; blob: data:; frame-ancestors &#x27;self&#x27;; form-action &#x27;self&#x27;; object-src &#x27;none&#x27;;&quot;</span>);</span><br></pre></td></tr></table></figure><p>再掃一次就沒有<strong>Permissive Content Security Policy</strong>的問題了。<br>或是將<code>context.Response.Headers.Add</code>改成<code>context.Response.Headers.Append</code>也 OK 哦~</p><h3 id="環境"><a href="#環境" class="headerlink" title="環境"></a>環境</h3><ul><li>Checkmarx 版本：9.5.5.1007 HF14</li><li>類別：Permissive Content Security Policy</li><li>嚴重程度：低風險</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Issue&quot;&gt;&lt;a href=&quot;#Issue&quot; class=&quot;headerlink&quot; title=&quot;Issue&quot;&gt;&lt;/a&gt;Issue&lt;/h3&gt;&lt;p&gt;ASP.NET Core Web 專案中，加入許多 Header 時，其中包含&lt;strong&gt;Content-Sec</summary>
      
    
    
    
    
    <category term="Content-Security-Policy" scheme="https://rainmakerho.github.io/tags/Content-Security-Policy/"/>
    
    <category term="Checkmarx" scheme="https://rainmakerho.github.io/tags/Checkmarx/"/>
    
    <category term="Permissive Content Security Policy" scheme="https://rainmakerho.github.io/tags/Permissive-Content-Security-Policy/"/>
    
  </entry>
  
  <entry>
    <title>透過 GPT-4o/Azure OCR 解析 手寫發票 圖片</title>
    <link href="https://rainmakerho.github.io/2024/08/07/gpt-parse-invoice-image/"/>
    <id>https://rainmakerho.github.io/2024/08/07/gpt-parse-invoice-image/</id>
    <published>2024-08-07T07:02:02.000Z</published>
    <updated>2024-10-23T02:24:00.089Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在前一章<a href="https://rainmakerho.github.io/2024/07/16/gpt-parse-captcha-image/">透過 GPT-4o 解析 Captcha 圖片</a>，<br>GPT-4o 可以輕易解析出台灣大多數銀行登入的<strong>Captcha 圖片</strong>，<br>那接下來試看看解析<strong>手寫發票</strong>來看看狀況如下</p><h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><p>程式碼跟<a href="https://rainmakerho.github.io/2024/07/16/gpt-parse-captcha-image/">透過 GPT-4o 解析 Captcha 圖片</a>一樣，<br>只是這裡的圖片來源我們改用網路上的圖片來測試，<br>分別是<a href="https://www.tron-island.com/blog/issue-a-gui-fapiao">如何開發票（手開發票）</a>及<br><a href="https://www.hway.tw/index.php/zh/blog-list-for-content/transport/vat">開始賣東西了，發票怎麼開，好難喔~</a><br>程式如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Azure.AI.OpenAI;</span><br><span class="line"><span class="keyword">using</span> OpenAI.Chat;</span><br><span class="line"><span class="keyword">using</span> SkiaSharp;</span><br><span class="line"><span class="keyword">using</span> System.Diagnostics;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> endpoint = <span class="string">&quot;你的aoai endpoint&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> deploymentName = <span class="string">&quot;你的gpt4o的deploymentName&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> apikey = <span class="string">&quot;你的apikey&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">AzureOpenAIClient azureClient = <span class="keyword">new</span>(<span class="keyword">new</span> Uri(endpoint), apikey);</span><br><span class="line">ChatClient chatClient = azureClient.GetChatClient(deploymentName);</span><br><span class="line"><span class="comment">//請依圖片格式進行調整</span></span><br><span class="line"><span class="keyword">var</span> imgUri = <span class="keyword">new</span> Uri(<span class="string">@&quot;https://www.hway.tw/images/3INVOICE.jpg&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> input = <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">請解析發票圖片，取出裡面的內容，</span></span><br><span class="line"><span class="string">請僅輸出以下發票文本的 JSON 格式內容，不要包含其他文字或解釋，</span></span><br><span class="line"><span class="string">例如，</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">&quot;</span>Id<span class="string">&quot;:&quot;</span>RY33724453<span class="string">&quot;,</span></span><br><span class="line"><span class="string">&quot;</span>買受人<span class="string">&quot;:&quot;</span>叡揚資訊股份有限公司<span class="string">&quot;,</span></span><br><span class="line"><span class="string">&quot;</span>統一編號<span class="string">&quot;:&quot;</span><span class="number">22425662</span><span class="string">&quot;,</span></span><br><span class="line"><span class="string">&quot;</span>日期<span class="string">&quot;:&quot;</span><span class="number">2023</span>/<span class="number">09</span>/<span class="number">28</span><span class="string">&quot;,</span></span><br><span class="line"><span class="string">&quot;</span>項目<span class="string">&quot;:[</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">&quot;</span>品名<span class="string">&quot;:&quot;</span>Asus筆電<span class="string">&quot;,</span></span><br><span class="line"><span class="string">&quot;</span>數量<span class="string">&quot;:1,</span></span><br><span class="line"><span class="string">&quot;</span>單價<span class="string">&quot;:35000,</span></span><br><span class="line"><span class="string">&quot;</span>金額<span class="string">&quot;:35000</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">],</span></span><br><span class="line"><span class="string">&quot;</span>稅別<span class="string">&quot;:&quot;</span>應稅<span class="string">&quot;,</span></span><br><span class="line"><span class="string">&quot;</span>營業稅<span class="string">&quot;:1750,</span></span><br><span class="line"><span class="string">&quot;</span>總計<span class="string">&quot;:&quot;</span><span class="number">36750</span><span class="string">&quot;,</span></span><br><span class="line"><span class="string">&quot;</span>備註<span class="string">&quot;:&quot;</span><span class="number">112.09</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> prompt = <span class="keyword">new</span> List&lt;ChatMessageContentPart&gt;(<span class="number">2</span>) &#123;</span><br><span class="line">    ChatMessageContentPart.CreateTextMessageContentPart(input),</span><br><span class="line">    ChatMessageContentPart.CreateImageMessageContentPart(imgUri) &#125;;</span><br><span class="line">Stopwatch stopWatch = <span class="keyword">new</span> Stopwatch();</span><br><span class="line">stopWatch.Start();</span><br><span class="line">ChatCompletion completion = chatClient.CompleteChat(</span><br><span class="line">[</span><br><span class="line">    <span class="keyword">new</span> UserChatMessage(prompt)</span><br><span class="line">]);</span><br><span class="line"><span class="keyword">var</span> result = completion.Content[<span class="number">0</span>].Text;</span><br><span class="line">Console.WriteLine(<span class="string">$&quot;[<span class="subst">&#123;completion.Role&#125;</span>: <span class="subst">&#123;result&#125;</span>]&quot;</span>);</span><br><span class="line">stopWatch.Stop();</span><br><span class="line">TimeSpan ts = stopWatch.Elapsed;</span><br><span class="line"><span class="built_in">string</span> elapsedTime = String.Format(<span class="string">&quot;&#123;0:00&#125;:&#123;1:00&#125;:&#123;2:00&#125;.&#123;3:00&#125;&quot;</span>,</span><br><span class="line">    ts.Hours, ts.Minutes, ts.Seconds,</span><br><span class="line">    ts.Milliseconds / <span class="number">10</span>);</span><br><span class="line">Console.WriteLine(<span class="string">&quot;RunTime &quot;</span> + elapsedTime);</span><br></pre></td></tr></table></figure><p>執行結果如下，</p><img src="/2024/08/07/gpt-parse-invoice-image/01.png" class="" title="發票1"><ul><li>註:圖片來自 <a href="https://www.tron-island.com/blog/issue-a-gui-fapiao">如何開發票（手開發票）</a></li></ul><img src="/2024/08/07/gpt-parse-invoice-image/02.png" class="" title="發票2"><ul><li>註:圖片來自 <a href="https://www.hway.tw/index.php/zh/blog-list-for-content/transport/vat">開始賣東西了，發票怎麼開，好難喔~</a></li></ul><p>目前測試起來，處理每張圖大約是<strong>6~7 秒</strong>，<br>手寫解析方面還是不是很精確。</p><h4 id="Azure-OCR"><a href="#Azure-OCR" class="headerlink" title="Azure OCR"></a>Azure OCR</h4><p>使用 <a href="https://portal.vision.cognitive.azure.com/demo/extract-text-from-images">Vision Studio 的 Extract text from images</a> 來處理辨識中文字效果還蠻好的，而且速度還蠻快的哦~，如下，</p><img src="/2024/08/07/gpt-parse-invoice-image/03.png" class="" title="Extract text from images"><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://www.hway.tw/index.php/zh/blog-list-for-content/transport/vat">開始賣東西了，發票怎麼開，好難喔~</a><br><a href="https://www.tron-island.com/blog/issue-a-gui-fapiao">如何開發票（手開發票）</a><br><a href="https://rainmakerho.github.io/2024/07/16/gpt-parse-captcha-image/">透過 GPT-4o 解析 Captcha 圖片</a><br><a href="https://learn.microsoft.com/zh-tw/azure/ai-services/computer-vision/overview-ocr">Azure OCR</a><br><a href="https://portal.vision.cognitive.azure.com/demo/extract-text-from-images">Vision Studio 的 Extract text from images</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;在前一章&lt;a href=&quot;https://rainmakerho.github.io/2024/07/16/gpt-parse-captch</summary>
      
    
    
    
    
    <category term="Azure" scheme="https://rainmakerho.github.io/tags/Azure/"/>
    
    <category term="GPT-4o" scheme="https://rainmakerho.github.io/tags/GPT-4o/"/>
    
    <category term="OCR" scheme="https://rainmakerho.github.io/tags/OCR/"/>
    
    <category term="Image" scheme="https://rainmakerho.github.io/tags/Image/"/>
    
    <category term="手寫辨識" scheme="https://rainmakerho.github.io/tags/%E6%89%8B%E5%AF%AB%E8%BE%A8%E8%AD%98/"/>
    
    <category term="發票" scheme="https://rainmakerho.github.io/tags/%E7%99%BC%E7%A5%A8/"/>
    
    <category term="invoice" scheme="https://rainmakerho.github.io/tags/invoice/"/>
    
    <category term="Cognitive" scheme="https://rainmakerho.github.io/tags/Cognitive/"/>
    
  </entry>
  
  <entry>
    <title>Checkmarx | Server_Dos_by_Loop (Node.js)</title>
    <link href="https://rainmakerho.github.io/2024/08/02/checkmarx-server-dos-by-loop-nodejs/"/>
    <id>https://rainmakerho.github.io/2024/08/02/checkmarx-server-dos-by-loop-nodejs/</id>
    <published>2024-08-02T07:18:07.000Z</published>
    <updated>2024-08-02T07:38:10.364Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>最近 Node.js 的程式被 Checkmarx 掃出有 <strong>Server_Dos_by_Loop</strong> Issue.<br>依 Checkmarx 的建議需要加上迴圈數量的限制，例如，</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="variable constant_">MAX_ITERATIONS</span> = <span class="number">120</span>;</span><br><span class="line"><span class="keyword">const</span> iterations = req.<span class="property">query</span>.<span class="property">iterations</span>;</span><br><span class="line"><span class="keyword">if</span> (iterations &lt; <span class="variable constant_">MAX_ITERATIONS</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; iterations; i++) &#123;</span><br><span class="line">        <span class="comment">// Perform action</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但依建議這樣子改，還是會噴一樣的問題。<br>而且有的還會改噴<strong>Unchecked_Input_For_Loop_Condition</strong>的 Issue。</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>後來同事 Jer 建議直接將限制數放在 Loop 中，<br>在裡面去判斷大小，再跳出迴圈，就可以解掉 Checkmarx 亂噴的問題。<br>一開始的程式如下，</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">replaceNullToEmpty</span>(<span class="params">data</span>) &#123;</span><br><span class="line"><span class="keyword">let</span> keys = <span class="title class_">Object</span>.<span class="title function_">keys</span>(data);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; keys.<span class="property">length</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (!data[keys[i]]) &#123;</span><br><span class="line">data[keys[i]] = <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> data;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>改成取最小的迴圈數，</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">replaceNullToEmpty</span>(<span class="params">data</span>) &#123;</span><br><span class="line"><span class="keyword">let</span> keys = <span class="title class_">Object</span>.<span class="title function_">keys</span>(data);</span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">MAX_ITERATIONS</span> = <span class="number">120</span>;</span><br><span class="line"><span class="keyword">const</span> loopCount =<span class="title class_">Math</span>.<span class="title function_">min</span>(keys.<span class="property">length</span>, <span class="variable constant_">MAX_ITERATIONS</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; loopCount; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (!data[keys[i]]) &#123;</span><br><span class="line">data[keys[i]] = <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> data;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Checkmarx 還是噴 ….</p><p>改成先用 限制迴圈 ，再到 Loop 中判斷要不要跳出去，如下，</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">replaceNullToEmpty</span>(<span class="params">data</span>) &#123;</span><br><span class="line"><span class="keyword">let</span> keys = <span class="title class_">Object</span>.<span class="title function_">keys</span>(data);</span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">MAX_ITERATIONS</span> = <span class="number">120</span>;</span><br><span class="line"><span class="keyword">const</span> loopCount = <span class="title class_">Math</span>.<span class="title function_">min</span>(keys.<span class="property">length</span>, <span class="variable constant_">MAX_ITERATIONS</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="variable constant_">MAX_ITERATIONS</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (i &gt;= loopCount) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">if</span> (!data[keys[i]]) &#123;</span><br><span class="line">data[keys[i]] = <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> data;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>一筆難寫兩個字，一心難帶兩個人: 一心不可二用，凡事要專注一致。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;最近 Node.js 的程式被 Checkmarx 掃出有 &lt;strong&gt;Server_Dos_by_Loop&lt;/strong&gt; Issu</summary>
      
    
    
    
    
    <category term="Node.js" scheme="https://rainmakerho.github.io/tags/Node-js/"/>
    
    <category term="Checkmarx" scheme="https://rainmakerho.github.io/tags/Checkmarx/"/>
    
    <category term="Server_Dos_by_Loop" scheme="https://rainmakerho.github.io/tags/Server-Dos-by-Loop/"/>
    
    <category term="Unchecked_Input_For_Loop_Condition" scheme="https://rainmakerho.github.io/tags/Unchecked-Input-For-Loop-Condition/"/>
    
  </entry>
  
  <entry>
    <title>Semantic Kernel | OpenAI Assistants API RAG</title>
    <link href="https://rainmakerho.github.io/2024/07/19/sk-openai-assistant-rag/"/>
    <id>https://rainmakerho.github.io/2024/07/19/sk-openai-assistant-rag/</id>
    <published>2024-07-19T06:42:51.000Z</published>
    <updated>2024-07-19T07:00:03.319Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在<a href="https://rainmakerho.github.io/2023/11/29/openai-assistant-api/">OpenAI Assistants API 初體驗</a>是透過呼叫 OpenAI Assistants API 的方式。<br>Semantic Kernel 也有封裝<strong>OpenAIAssistantAgent</strong>來讓我們方便地使用 OpenAI Assistants。</p><h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><p>1.安裝 SemanticKernel 1.15.1-alpha 套件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Microsoft.SemanticKernel.Agents.Abstractions</span><br><span class="line">Microsoft.SemanticKernel.Agents.Core</span><br><span class="line">Microsoft.SemanticKernel.Agents.OpenAI</span><br><span class="line">Microsoft.SemanticKernel.Connectors.OpenAI</span><br></pre></td></tr></table></figure><p>2.上傳要 Retrieval 的文件, 透過 OpenAIAssistantAgent 來建立 Assistant ，並透過 AgentGroupChat 來問問題</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> <span class="keyword">warning</span> disable SKEXP0010 // 類型僅供評估之用，可能會在未來更新中變更或移除。抑制此診斷以繼續。</span></span><br><span class="line">    <span class="keyword">var</span> apiKey = <span class="string">@&quot;你的 openai apikey&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> instructions = <span class="string">@&quot;你是GSS的請假助手，你的任務是基於上傳的檔案內容，回答使用者的問題。</span></span><br><span class="line"><span class="string">任務說明:</span></span><br><span class="line"><span class="string">- 當使用者提問時，仔細分析問題並基於上傳的檔案內容給出回答。</span></span><br><span class="line"><span class="string">- 如果上傳的檔案內容沒有能回答使用者問題的參考內容，請直接回答&#x27;我不知道&#x27;&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> assistantName = <span class="string">&quot;GSS的請假助手&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> model = <span class="string">&quot;gpt-4-turbo-preview&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> fileName = <span class="string">&quot;請假規則.docx&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> leaveDoc = @<span class="string">$&quot;C:\你的檔案路徑\&#123;fileName&#125;&quot;</span>;</span><br><span class="line">    <span class="built_in">byte</span>[] binaryContent = File.ReadAllBytes(leaveDoc);</span><br><span class="line">    OpenAIFileService fileService = <span class="keyword">new</span>(apiKey);</span><br><span class="line">    <span class="comment">//依檔案設定不同的 Mimetype</span></span><br><span class="line">    <span class="keyword">var</span> docContent = <span class="keyword">new</span> BinaryContent(binaryContent,</span><br><span class="line">        <span class="string">&quot;application/vnd.openxmlformats-officedocument.wordprocessingml.document&quot;</span>);</span><br><span class="line">    OpenAIFileReference uploadFile =</span><br><span class="line">            <span class="keyword">await</span> fileService.UploadContentAsync(docContent,</span><br><span class="line">                <span class="keyword">new</span> OpenAIFileUploadExecutionSettings(fileName, OpenAIFilePurpose.Assistants));</span><br><span class="line">    <span class="comment">// Define the agent</span></span><br><span class="line">    OpenAIAssistantAgent agent =</span><br><span class="line">        <span class="keyword">await</span> OpenAIAssistantAgent.CreateAsync(</span><br><span class="line">            kernel: <span class="keyword">new</span>(),</span><br><span class="line">            config: <span class="keyword">new</span>(apiKey),</span><br><span class="line">            <span class="keyword">new</span>()</span><br><span class="line">            &#123;</span><br><span class="line">                EnableRetrieval = <span class="literal">true</span>, <span class="comment">// Enable retrieval</span></span><br><span class="line">                ModelId = model,</span><br><span class="line">                FileIds = [uploadFile.Id] <span class="comment">// Associate uploaded file</span></span><br><span class="line">            &#125;);</span><br><span class="line">    <span class="comment">// Create a chat for agent interaction.</span></span><br><span class="line">    AgentGroupChat chat = <span class="keyword">new</span>();</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.OutputEncoding = Encoding.UTF8;</span><br><span class="line">        <span class="keyword">var</span> input = <span class="string">&quot;請問請病假有什麼規定嗎?&quot;</span>;</span><br><span class="line">        chat.AddChatMessage(<span class="keyword">new</span> ChatMessageContent(AuthorRole.User, input));</span><br><span class="line"></span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;# <span class="subst">&#123;AuthorRole.User&#125;</span>: &#x27;<span class="subst">&#123;input&#125;</span>&#x27;&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">await</span> <span class="keyword">foreach</span> (ChatMessageContent content <span class="keyword">in</span> chat.InvokeAsync(agent))</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">$&quot;# <span class="subst">&#123;content.Role&#125;</span> - <span class="subst">&#123;content.AuthorName ?? <span class="string">&quot;*&quot;</span>&#125;</span>: &#x27;<span class="subst">&#123;content.Content&#125;</span>&#x27;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">finally</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">await</span> agent.DeleteAsync();</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> <span class="keyword">warning</span> restore SKEXP0010 // 類型僅供評估之用，可能會在未來更新中變更或移除。抑制此診斷以繼續。</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>執行結果如下，</p><img src="/2024/07/19/sk-openai-assistant-rag/01.png" class="" title="output"><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://rainmakerho.github.io/2023/11/29/openai-assistant-api/">OpenAI Assistants API 初體驗</a><br><a href="https://github.com/microsoft/semantic-kernel/blob/main/dotnet/samples/Concepts/Agents/OpenAIAssistant_Retrieval.cs">OpenAIAssistant_Retrieval</a></p><blockquote><p>一鼓作氣，再而衰，三而竭: 比喻做事時要趁著初起時的勇氣去做才容易成功。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;在&lt;a href=&quot;https://rainmakerho.github.io/2023/11/29/openai-assistant-ap</summary>
      
    
    
    
    
    <category term="SK" scheme="https://rainmakerho.github.io/tags/SK/"/>
    
    <category term="Semantic Kernel" scheme="https://rainmakerho.github.io/tags/Semantic-Kernel/"/>
    
    <category term="OpenAI" scheme="https://rainmakerho.github.io/tags/OpenAI/"/>
    
    <category term="Assistants" scheme="https://rainmakerho.github.io/tags/Assistants/"/>
    
    <category term="RAG" scheme="https://rainmakerho.github.io/tags/RAG/"/>
    
    <category term="OpenAIAssistantAgent" scheme="https://rainmakerho.github.io/tags/OpenAIAssistantAgent/"/>
    
  </entry>
  
  <entry>
    <title>透過 GPT-4o 解析 Captcha 圖片</title>
    <link href="https://rainmakerho.github.io/2024/07/16/gpt-parse-captcha-image/"/>
    <id>https://rainmakerho.github.io/2024/07/16/gpt-parse-captcha-image/</id>
    <published>2024-07-16T07:04:22.000Z</published>
    <updated>2024-07-17T00:41:27.128Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>很多登入頁面為了防止機器人登入都有再加上 CAPTCHA 的機制。<br>有些 CAPTCHA 圖片只有數字，可以很容易透過<strong>GPT-4o</strong>來解析出裡面的數字。<br>以下就來測試<strong>GPT-4o</strong>的能力。</p><h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><p>以下使用 Azure OpenAI 的 GPT-4o 模型，</p><p>1.加入 Nuget 套件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Azure.AI.OpenAI</span><br><span class="line">SkiaSharp</span><br></pre></td></tr></table></figure><p>2.將圖片轉成 Base64，再給 GPT-4o 進行解析，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Azure.AI.OpenAI;</span><br><span class="line"><span class="keyword">using</span> OpenAI.Chat;</span><br><span class="line"><span class="keyword">using</span> SkiaSharp;</span><br><span class="line"><span class="keyword">using</span> System.Diagnostics;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> endpoint = <span class="string">&quot;你的aoai endpoint&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> deploymentName = <span class="string">&quot;你的gpt4o的deploymentName&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> apikey = <span class="string">&quot;你的apikey&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> imageFilePath = <span class="string">&quot;要解析的Captcha 圖片檔路徑&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> SKBitmap originalBitmap = SKBitmap.Decode(imageFilePath);</span><br><span class="line"><span class="keyword">using</span> SKImage image = SKImage.FromBitmap(originalBitmap);</span><br><span class="line"><span class="keyword">using</span> SKData data = image.Encode(SKEncodedImageFormat.Jpeg, <span class="number">100</span>);</span><br><span class="line"><span class="built_in">byte</span>[] imageArray = data.ToArray();</span><br><span class="line"><span class="built_in">string</span> base64Image = Convert.ToBase64String(imageArray);</span><br><span class="line"></span><br><span class="line">AzureOpenAIClient azureClient = <span class="keyword">new</span>(<span class="keyword">new</span> Uri(endpoint), apikey);</span><br><span class="line">ChatClient chatClient = azureClient.GetChatClient(deploymentName);</span><br><span class="line"><span class="comment">//請依圖片格式進行調整</span></span><br><span class="line"><span class="keyword">var</span> imageMsg = <span class="keyword">new</span> Uri(<span class="string">$&quot;data:image/jpg;&quot;</span> + <span class="string">$&quot;base64,<span class="subst">&#123;base64Image&#125;</span>&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> prompt = <span class="keyword">new</span> List&lt;ChatMessageContentPart&gt;(<span class="number">2</span>) &#123;</span><br><span class="line">    ChatMessageContentPart.CreateTextMessageContentPart(<span class="string">&quot;請檢視這張圖片，並且只回傳圖片中的數字內容，不要包含空白。&quot;</span>),</span><br><span class="line">    ChatMessageContentPart.CreateImageMessageContentPart(imageMsg) &#125;;</span><br><span class="line">Stopwatch stopWatch = <span class="keyword">new</span> Stopwatch();</span><br><span class="line">stopWatch.Start();</span><br><span class="line">ChatCompletion completion = chatClient.CompleteChat(</span><br><span class="line">[</span><br><span class="line">    <span class="keyword">new</span> UserChatMessage(prompt)</span><br><span class="line">]);</span><br><span class="line"><span class="keyword">var</span> result = completion.Content[<span class="number">0</span>].Text;</span><br><span class="line">Console.WriteLine(<span class="string">$&quot;[<span class="subst">&#123;completion.Role&#125;</span>: <span class="subst">&#123;result&#125;</span>]&quot;</span>);</span><br><span class="line">stopWatch.Stop();</span><br><span class="line">TimeSpan ts = stopWatch.Elapsed;</span><br><span class="line"><span class="built_in">string</span> elapsedTime = String.Format(<span class="string">&quot;&#123;0:00&#125;:&#123;1:00&#125;:&#123;2:00&#125;.&#123;3:00&#125;&quot;</span>,</span><br><span class="line">    ts.Hours, ts.Minutes, ts.Seconds,</span><br><span class="line">    ts.Milliseconds / <span class="number">10</span>);</span><br><span class="line">Console.WriteLine(<span class="string">&quot;RunTime &quot;</span> + elapsedTime);</span><br></pre></td></tr></table></figure><p>最後結果如下，</p><img src="/2024/07/16/gpt-parse-captcha-image/01.png" class="" title="CAPTCHA圖片1"><img src="/2024/07/16/gpt-parse-captcha-image/02.png" class="" title="CAPTCHA圖片2"><p>目前測試的結果都是正確的，處理時間大約是<strong>3 秒</strong>。</p><blockquote><p>中文手寫辨識 效果也蠻好的哦 ~</p></blockquote><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://github.com/tsjdev-apps/openai-imagedescription-comparison/tree/main">Getting an image description using OpenAI Large Language Models</a></p><blockquote><p>一握之善行，優於七斛之學問 : 小小的善行，勝於高深的學問。要多做善事。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;很多登入頁面為了防止機器人登入都有再加上 CAPTCHA 的機制。&lt;br&gt;有些 CAPTCHA 圖片只有數字，可以很容易透過&lt;strong&gt;</summary>
      
    
    
    
    
    <category term="GPT-4o" scheme="https://rainmakerho.github.io/tags/GPT-4o/"/>
    
    <category term="Captcha" scheme="https://rainmakerho.github.io/tags/Captcha/"/>
    
    <category term="OCR" scheme="https://rainmakerho.github.io/tags/OCR/"/>
    
    <category term="Image" scheme="https://rainmakerho.github.io/tags/Image/"/>
    
    <category term="手寫辨識" scheme="https://rainmakerho.github.io/tags/%E6%89%8B%E5%AF%AB%E8%BE%A8%E8%AD%98/"/>
    
  </entry>
  
  <entry>
    <title>Semantic Kernel | Multi-Agent system using Semantic Kernel</title>
    <link href="https://rainmakerho.github.io/2024/07/05/sk-multi-agent-system-using-semantic-kernel/"/>
    <id>https://rainmakerho.github.io/2024/07/05/sk-multi-agent-system-using-semantic-kernel/</id>
    <published>2024-07-05T09:40:25.000Z</published>
    <updated>2024-07-08T06:58:41.929Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>Semantic Kernel 允許載入許多 Plugin，當啟用<strong>Function calling</strong>(<code>ToolCallBehavior = ToolCallBehavior.AutoInvokeKernelFunctions</code>)後，<br>會讓 LLM 將解析用戶的問題，看看是否需要呼叫<strong>Plugin</strong>來完成用戶的問題。<br>例如要 onboard 一位新員工時，需要 1.建立員工帳號(MIS), 2.購買筆電(MIS), 3.申請識別證(HR), 4.寄送歡迎信件(HR) …等工作，<br>如果在一個 Agent 的狀況下，我們需要將這些工作全都轉成 Function 來讓 LLM 排出要完成的計劃(組合各個 Function)。<br>或是建立多個 Agent (<code>ChatCompletionAgent</code>)來協同完成用戶的問題。<br>之前<a href="https://rainmakerho.github.io/2024/04/02/sk-exploring-application-in-customer-service-bots/">探索 Semantic Kernel 在客服 ChatBot 中的應用(我的客服 Bot 除了會說，還會做)</a>中已說明一個 Agent 的方式，<br>接下來，就來實作多個 Agent 一起來完成企業中的問題。</p><h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><p>1.加入套件(套件使用 1.15.1-alpha)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Microsoft.SemanticKernel.Agents.Abstractions</span><br><span class="line">Microsoft.SemanticKernel.Agents.Core</span><br><span class="line">Microsoft.SemanticKernel.Agents.OpenAI</span><br><span class="line">Microsoft.SemanticKernel.Connectors.OpenAI</span><br></pre></td></tr></table></figure><p>2.建立 MIS, HR 及 MIS 的 Plugin，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">KMPlugin</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">KernelFunction</span>]</span><br><span class="line">    [<span class="meta">Description(<span class="string">&quot;Search Guidelines by Question&quot;</span>)</span>]</span><br><span class="line">    [<span class="meta">return: Description(<span class="string">&quot;Guidelines&quot;</span>)</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;<span class="built_in">string</span>&gt; <span class="title">Search</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">        [Description(<span class="string">&quot;Question&quot;</span></span>)] <span class="built_in">string</span> question</span></span><br><span class="line"><span class="function">    )</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Call KMPlugin=&gt;Search&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> result = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (question.ToLower().Contains(<span class="string">&quot;password&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            result = <span class="string">@&quot;</span></span><br><span class="line"><span class="string">#### 1. Reset user password , which is organised by MIS.</span></span><br><span class="line"><span class="string">#### 2. Send Reset Password , which is organised by MIS.</span></span><br><span class="line"><span class="string">&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            result = <span class="string">@&quot;</span></span><br><span class="line"><span class="string">#### 1. set up their office 365 account and software access, which is organised by MIS.</span></span><br><span class="line"><span class="string">#### 2. Order laptop for the employee, which is organised by MIS.</span></span><br><span class="line"><span class="string">#### 3. Send an email welcoming the employee to the company, which is organised by HR.</span></span><br><span class="line"><span class="string">#### 4. Order a badge for the employee so they can get access to the office, which is organised by HR.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">await</span> Task.FromResult(result);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">HRPlugin</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">KernelFunction</span>]</span><br><span class="line">    [<span class="meta">Description(<span class="string">&quot;申請Badge&quot;</span>)</span>]</span><br><span class="line">    [<span class="meta">return: Description(<span class="string">&quot;申請結果&quot;</span>)</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;<span class="built_in">string</span>&gt; <span class="title">IssueBadge</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">        [Description(<span class="string">&quot;Email&quot;</span></span>)] <span class="built_in">string</span> email</span></span><br><span class="line"><span class="function">    )</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Call HRPlugin=&gt;IssueBadge&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> result = <span class="string">$&quot;The badge has been provisioned for: <span class="subst">&#123;email&#125;</span>&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">await</span> Task.FromResult(result);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">KernelFunction</span>]</span><br><span class="line">    [<span class="meta">Description(<span class="string">&quot;Send Welcome Email&quot;</span>)</span>]</span><br><span class="line">    [<span class="meta">return: Description(<span class="string">&quot;send result&quot;</span>)</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;<span class="built_in">string</span>&gt; <span class="title">SendWelcomeEmail</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">        [Description(<span class="string">&quot;Email&quot;</span></span>)] <span class="built_in">string</span> email</span></span><br><span class="line"><span class="function">    )</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Call HRPlugin=&gt;SendWelcomeEmail&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> result = <span class="string">$&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">The welcome email has been send successfully to:&#123;email&#125;</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">await</span> Task.FromResult(result);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MISPlugin</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">KernelFunction</span>]</span><br><span class="line">    [<span class="meta">Description(<span class="string">&quot;Setup Office 365 account&quot;</span>)</span>]</span><br><span class="line">    [<span class="meta">return: Description(<span class="string">&quot;setup result&quot;</span>)</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;<span class="built_in">string</span>&gt; <span class="title">CreateOffice365Account</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">        [Description(<span class="string">&quot;Email&quot;</span></span>)] <span class="built_in">string</span> email</span></span><br><span class="line"><span class="function">    )</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Call MISPlugin=&gt;CreateOffice365Account&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> result = <span class="string">$&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">The office 365 account has beend created successfully.</span></span><br><span class="line"><span class="string">The credentials are send to the employee&#x27;s email address at : &#123;email&#125;</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">await</span> Task.FromResult(result);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    [<span class="meta">KernelFunction</span>]</span><br><span class="line">    [<span class="meta">Description(<span class="string">&quot;Order Laptop&quot;</span>)</span>]</span><br><span class="line">    [<span class="meta">return: Description(<span class="string">&quot;order result&quot;</span>)</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;<span class="built_in">string</span>&gt; <span class="title">OrderLaptop</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">        [Description(<span class="string">&quot;Email&quot;</span></span>)] <span class="built_in">string</span> email</span></span><br><span class="line"><span class="function">    )</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Call MISPlugin=&gt;OrderLaptop&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> result = <span class="string">$&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">The laptio has been order for : &#123;email&#125;</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">await</span> Task.FromResult(result);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">KernelFunction</span>]</span><br><span class="line">    [<span class="meta">Description(<span class="string">&quot;Reset User Password&quot;</span>)</span>]</span><br><span class="line">    [<span class="meta">return: Description(<span class="string">&quot;reset password result&quot;</span>)</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;<span class="built_in">string</span>&gt; <span class="title">ResetPassword</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">        [Description(<span class="string">&quot;Email&quot;</span></span>)] <span class="built_in">string</span> email</span></span><br><span class="line"><span class="function">    )</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Call MISPlugin=&gt;ResetPassword&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> result = <span class="string">$&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">Reset Password for : &#123;email&#125;</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">await</span> Task.FromResult(result);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    [<span class="meta">KernelFunction</span>]</span><br><span class="line">    [<span class="meta">Description(<span class="string">&quot;Send Reset Password Link Email&quot;</span>)</span>]</span><br><span class="line">    [<span class="meta">return: Description(<span class="string">&quot;send email result&quot;</span>)</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;<span class="built_in">string</span>&gt; <span class="title">SendResetPasswordLinkEmail</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">        [Description(<span class="string">&quot;Email&quot;</span></span>)] <span class="built_in">string</span> email</span></span><br><span class="line"><span class="function">    )</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Call MISPlugin=&gt;SendResetPasswordLinkEmail&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> result = <span class="string">$&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">Send Reset Password Link Email for : &#123;email&#125;</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">await</span> Task.FromResult(result);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>註: 主要會依 KMPlugin 的 Search Function 來找出要執行的 Guidelines 來讓 LLM 幫我們編排工作</li><li>註: Guidelines 中有各 Agent 要做的 Tasks</li></ul><p>3.建立 Agetns (MIS, HR, AgentsManager, Manager)<br>AgentsManager: 依用戶的問題呼叫負責任的 Agent 去找出要執行的 Guidelines ，解析 Guidelines 指定給負責任的 Agent 執行<br>MIS, HR: 透過 KernelBuilder 來載入各別的 Plugin(<code>BuildHRKernel</code>,<code>BuildMISKernel</code>)，並負責執行 AgentsManager 指派的工作<br>Manager: 負責判斷所有工作是否完成，如果完成就回覆<strong>approve</strong>，做為結束的依據<br>最後建立<code>AgentGroupChat</code>，並加入上述 Agents, 並設定結束的策略為<code>Manager</code>發出<code>approve</code>就結束</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用 AOAI</span></span><br><span class="line"><span class="keyword">var</span> endpoint = <span class="string">&quot;https://你的aoai.openai.azure.com/&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> deploymentName = <span class="string">&quot;你的aoai LLM deploymentName&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> apikey = <span class="string">&quot;你的aoai apikey&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> agentsManager = <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">你是 Agents Manager ，你的任務是將用戶的問題呼叫 Search Function 取得要執行的內容。</span></span><br><span class="line"><span class="string">依上述的內容，並依照順序，指定給所屬的Agent去執行。</span></span><br><span class="line"><span class="string">不要重覆執行 Search ，如果沒有內容，就回結束</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> hr = <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">你是 HR，你的目標是處理 Agents Manager 指派的工作。</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> mis = <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">你是 MIS，你的目標是處理 Agents Manager 指派的工作。</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> manager = <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">You are Manager which will review agents output</span></span><br><span class="line"><span class="string">and make sure all tasks are completed.</span></span><br><span class="line"><span class="string">Once all requirements are completed,</span></span><br><span class="line"><span class="string">you can approve the request by just responding &quot;</span>approve<span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">ChatCompletionAgent agentsManagerAgent =</span><br><span class="line">            <span class="keyword">new</span>()</span><br><span class="line">            &#123;</span><br><span class="line">                Instructions = agentsManager,</span><br><span class="line">                Name = <span class="string">&quot;AgentsManager&quot;</span>,</span><br><span class="line">                ExecutionSettings = <span class="keyword">new</span> OpenAIPromptExecutionSettings() &#123; ToolCallBehavior = ToolCallBehavior.AutoInvokeKernelFunctions &#125;,</span><br><span class="line">                Kernel = BuildKMKernel()</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">ChatCompletionAgent hrAgent =</span><br><span class="line">            <span class="keyword">new</span>()</span><br><span class="line">            &#123;</span><br><span class="line">                Instructions = hr,</span><br><span class="line">                Name = <span class="string">&quot;HR&quot;</span>,</span><br><span class="line">                Kernel = BuildHRKernel(),</span><br><span class="line">                ExecutionSettings = <span class="keyword">new</span> OpenAIPromptExecutionSettings() &#123; ToolCallBehavior = ToolCallBehavior.AutoInvokeKernelFunctions &#125;,</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ChatCompletionAgent misAgent =</span><br><span class="line">            <span class="keyword">new</span>()</span><br><span class="line">            &#123;</span><br><span class="line">                Instructions = hr,</span><br><span class="line">                Name = <span class="string">&quot;MIS&quot;</span>,</span><br><span class="line">                Kernel = BuildMISKernel(),</span><br><span class="line">                ExecutionSettings = <span class="keyword">new</span> OpenAIPromptExecutionSettings() &#123; ToolCallBehavior = ToolCallBehavior.AutoInvokeKernelFunctions &#125;,</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ChatCompletionAgent managerAgent =</span><br><span class="line">            <span class="keyword">new</span>()</span><br><span class="line">            &#123;</span><br><span class="line">                Instructions = manager,</span><br><span class="line">                Name = <span class="string">&quot;Manager&quot;</span>,</span><br><span class="line">                Kernel = GetChatCompletionBuilder().Build()</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">AgentGroupChat groupChat =</span><br><span class="line">        <span class="keyword">new</span>(agentsManagerAgent, misAgent, hrAgent, managerAgent)</span><br><span class="line">        &#123;</span><br><span class="line">            ExecutionSettings = <span class="keyword">new</span>()</span><br><span class="line">            &#123;</span><br><span class="line">                TerminationStrategy = <span class="keyword">new</span> ApprovalTerminationStrategy</span><br><span class="line">                &#123;</span><br><span class="line">                    Agents = [managerAgent],</span><br><span class="line">                    MaximumIterations = <span class="number">6</span>,</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line"><span class="function">IKernelBuilder <span class="title">GetChatCompletionBuilder</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    IKernelBuilder builder = Kernel.CreateBuilder();</span><br><span class="line">    builder.AddAzureOpenAIChatCompletion(deploymentName, endpoint, apikey);</span><br><span class="line">    <span class="keyword">return</span> builder;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Kernel <span class="title">BuildKMKernel</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> builder = GetChatCompletionBuilder();</span><br><span class="line">    builder.Plugins.AddFromType&lt;KMPlugin&gt;();</span><br><span class="line">    <span class="keyword">return</span> builder.Build();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Kernel <span class="title">BuildHRKernel</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> builder = GetChatCompletionBuilder();</span><br><span class="line">    builder.Plugins.AddFromType&lt;HRPlugin&gt;();</span><br><span class="line">    <span class="keyword">return</span> builder.Build();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Kernel <span class="title">BuildMISKernel</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> builder = GetChatCompletionBuilder();</span><br><span class="line">    builder.Plugins.AddFromType&lt;MISPlugin&gt;();</span><br><span class="line">    <span class="keyword">return</span> builder.Build();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">sealed</span> <span class="keyword">class</span> <span class="title">ApprovalTerminationStrategy</span> : <span class="title">TerminationStrategy</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> Task&lt;<span class="built_in">bool</span>&gt; <span class="title">ShouldAgentTerminateAsync</span>(<span class="params">Agent agent, IReadOnlyList&lt;ChatMessageContent&gt; history, CancellationToken cancellationToken</span>)</span></span><br><span class="line">        =&gt; Task.FromResult(history[history.Count - <span class="number">1</span>].Content?.Contains(<span class="string">&quot;approve&quot;</span>, StringComparison.OrdinalIgnoreCase) ?? <span class="literal">false</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.將用戶問題發送到 AgentGroupChat 中，並執行<code>InvokeAsync</code>來取得結果，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Console.WriteLine(<span class="string">&quot;Please input question:&quot;</span>);</span><br><span class="line"><span class="built_in">string</span> input = Console.ReadLine();</span><br><span class="line"></span><br><span class="line">groupChat.AddChatMessage(<span class="keyword">new</span> ChatMessageContent(AuthorRole.User, input));</span><br><span class="line">Console.WriteLine(<span class="string">$&quot;# <span class="subst">&#123;AuthorRole.User&#125;</span>: &#x27;<span class="subst">&#123;input&#125;</span>&#x27;&quot;</span>);</span><br><span class="line"><span class="keyword">await</span> <span class="keyword">foreach</span> (<span class="keyword">var</span> content <span class="keyword">in</span> groupChat.InvokeAsync())</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(<span class="string">$&quot;# <span class="subst">&#123;content.Role&#125;</span> - <span class="subst">&#123;content.AuthorName ?? <span class="string">&quot;*&quot;</span>&#125;</span>: &#x27;<span class="subst">&#123;content.Content&#125;</span>&#x27;&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>輸入<code>i want to onboard a new employee. ther email is rm@gss.com.tw</code>，如果如下，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">Please input question:</span><br><span class="line">i want to onboard a new employee. ther email is rm@gss.com.tw</span><br><span class="line"># user: &#x27;i want to onboard a new employee. ther email is rm@gss.com.tw&#x27;</span><br><span class="line">Call KMPlugin=&gt;Search</span><br><span class="line"># assistant - AgentsManager: &#x27;Here are the steps to onboard the new employee with email rm@gss.com.tw:</span><br><span class="line"></span><br><span class="line">1. Set up their Office 365 account and software access (organized by MIS).</span><br><span class="line">2. Order a laptop for the employee (organized by MIS).</span><br><span class="line">3. Send an email welcoming the employee to the company (organized by HR).</span><br><span class="line">4. Order a badge for the employee so they can get access to the office (organized by HR).</span><br><span class="line"></span><br><span class="line">Depending on your company&#x27;s workflow, you might need to coordinate with both MIS and HR departments for these tasks.&#x27;</span><br><span class="line">Call MISPlugin=&gt;CreateOffice365Account</span><br><span class="line">Call MISPlugin=&gt;OrderLaptop</span><br><span class="line"># assistant - MIS: &#x27;The Office 365 account has been created successfully, and the credentials have been sent to the email address rm@gss.com.tw. Additionally, a laptop has been ordered for the new employee.</span><br><span class="line"></span><br><span class="line">Next steps:</span><br><span class="line">1. Send a welcome email to the new employee.</span><br><span class="line">2. Order a badge for the employee so they can access the office.&#x27;</span><br><span class="line">Call HRPlugin=&gt;SendWelcomeEmail</span><br><span class="line">Call HRPlugin=&gt;IssueBadge</span><br><span class="line"># assistant - HR: &#x27;The welcome email has been successfully sent to rm@gss.com.tw, and the badge has been provisioned for the new employee.</span><br><span class="line"></span><br><span class="line">The onboarding process for the new employee is now completed!&#x27;</span><br><span class="line"># assistant - Manager: &#x27;approve&#x27;</span><br></pre></td></tr></table></figure><blockquote><p>Search 來取出 Guidelines 1.建帳號, 2.訂筆電, 3.寄 Welcom email, 4.申請識別證<br>知道要執行的 Agents ，執行的順序與加入 AgentGroupChat 順序有關</p></blockquote><p>輸入<code>i forgot password. ther email is rm@gss.com.tw</code>，如果如下，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Please input question:</span><br><span class="line">i forgot password. ther email is rm@gss.com.tw</span><br><span class="line"># user: &#x27;i forgot password. ther email is rm@gss.com.tw&#x27;</span><br><span class="line">Call KMPlugin=&gt;Search</span><br><span class="line"># assistant - AgentsManager: &#x27;To reset the password for the email address rm@gss.com.tw, follow these steps:</span><br><span class="line"></span><br><span class="line">1. Contact your MIS (Management Information Systems) department to reset the user password.</span><br><span class="line">2. After the password is reset, the MIS department will send the new password or password reset instructions to you.</span><br><span class="line"></span><br><span class="line">Please reach out to your MIS department for further assistance.&#x27;</span><br><span class="line">Call MISPlugin=&gt;ResetPassword</span><br><span class="line">Call MISPlugin=&gt;SendResetPasswordLinkEmail</span><br><span class="line"># assistant - MIS: &#x27;The password for rm@gss.com.tw has been reset, and a reset password link email has been sent to the same address. Please check your email for further instructions.&#x27;</span><br><span class="line"># assistant - HR: &#x27;The password for rm@gss.com.tw has been reset, and the MIS department has sent a reset password link email to the same address. Please check your email for further instructions.&#x27;</span><br><span class="line"># assistant - Manager: &#x27;approve&#x27;</span><br></pre></td></tr></table></figure><blockquote><p>Guidelines 要執行 1.重設密碼, 2.寄送重設密碼連結的 Email</p></blockquote><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://medium.com/@akshaykokane09/step-by-step-guide-to-develop-ai-multi-agent-system-using-microsoft-semantic-kernel-and-gpt-4o-f5991af40ea6">Step by Step guide to develop AI Multi-Agent system using Microsoft Semantic Kernel and GPT-4o</a><br><a href="https://techcommunity.microsoft.com/t5/ai-azure-ai-services-blog/business-in-a-box-applying-autogen-and-multi-agent-systems-to-an/ba-p/4150736">Business-in-a-box: Applying AutoGen and multi-agent systems to an enterprise context</a><br><a href="https://rainmakerho.github.io/2024/04/02/sk-exploring-application-in-customer-service-bots/">探索 Semantic Kernel 在客服 ChatBot 中的應用(我的客服 Bot 除了會說，還會做)</a></p><blockquote><p>一條大路十二彎，這頭不彎那頭彎: 喻同一件事，同一個道理，有各種不同的看法，和不同的發展。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;Semantic Kernel 允許載入許多 Plugin，當啟用&lt;strong&gt;Function calling&lt;/strong&gt;(&lt;co</summary>
      
    
    
    
    
    <category term="SK" scheme="https://rainmakerho.github.io/tags/SK/"/>
    
    <category term="Semantic Kernel" scheme="https://rainmakerho.github.io/tags/Semantic-Kernel/"/>
    
    <category term="ChatCompletionAgent" scheme="https://rainmakerho.github.io/tags/ChatCompletionAgent/"/>
    
    <category term="AutoGen" scheme="https://rainmakerho.github.io/tags/AutoGen/"/>
    
    <category term="AgentGroupChat" scheme="https://rainmakerho.github.io/tags/AgentGroupChat/"/>
    
    <category term="ApprovalTerminationStrategy" scheme="https://rainmakerho.github.io/tags/ApprovalTerminationStrategy/"/>
    
  </entry>
  
  <entry>
    <title>PowerBI Embed Service Principal embed token generation error for effective identity</title>
    <link href="https://rainmakerho.github.io/2024/07/03/power-bi-embed-rls/"/>
    <id>https://rainmakerho.github.io/2024/07/03/power-bi-embed-rls/</id>
    <published>2024-07-03T09:01:30.000Z</published>
    <updated>2024-07-04T02:04:37.982Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>透過<a href="https://github.com/rainmakerho/PowerBI-Developer-Samples/tree/master/.NET%20Framework/Embed%20for%20your%20customers/AppOwnsData">PowerBI-Developer-Samples&#x2F;AppOwnsData</a>來開啟 PowerBI 報表時，<br>會出現<code>Creating embed token for accessing dataset ... requires effective identity to be provided</code>的錯誤</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>錯誤說明在取得 Token 時，沒有給<strong>effective identity</strong>，<br>透過 Power BI Desktop 在 Modeling 功能選 Manage roles ，<br>可以發現在 Roles 中有一個 <code>User</code> 的值，如下圖，</p><img src="/2024/07/03/power-bi-embed-rls/01.png" class="" title="Manage roles"><p>在 app.powerbi.com 的 workspace 中，查看報表的 dataset ，<br>按右鍵點選<strong>安全性</strong>也可以發現在<strong>資料列層級安全性</strong>中，<br>有<code>User (0)</code>，如下圖，</p><img src="/2024/07/03/power-bi-embed-rls/02.png" class="" title="資料列層級安全性"><p>所以在<a href="https://github.com/rainmakerho/PowerBI-Developer-Samples/blob/master/.NET%20Framework/Embed%20for%20your%20customers/AppOwnsData/Services/EmbedService.cs#L156">GetEmbedToken</a>程式碼中，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> EmbedToken <span class="title">GetEmbedToken</span>(<span class="params">PowerBIClient pbiClient, Guid reportId, IList&lt;Guid&gt; datasetIds, [Optional] Guid targetWorkspaceId</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> tokenRequest = <span class="keyword">new</span> GenerateTokenRequestV2(</span><br><span class="line"></span><br><span class="line">    reports: <span class="keyword">new</span> List&lt;GenerateTokenRequestV2Report&gt;() &#123; <span class="keyword">new</span> GenerateTokenRequestV2Report(reportId) &#125;,</span><br><span class="line"></span><br><span class="line">    datasets: datasetIds.Select(datasetId =&gt; <span class="keyword">new</span> GenerateTokenRequestV2Dataset(datasetId.ToString())).ToList(),</span><br><span class="line"></span><br><span class="line">    targetWorkspaces: targetWorkspaceId != Guid.Empty ? <span class="keyword">new</span> List&lt;GenerateTokenRequestV2TargetWorkspace&gt;() &#123; <span class="keyword">new</span> GenerateTokenRequestV2TargetWorkspace(targetWorkspaceId) &#125; : <span class="literal">null</span></span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> embedToken = pbiClient.EmbedToken.GenerateToken(tokenRequest);</span><br><span class="line">    <span class="keyword">return</span> embedToken;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要建立<strong>EffectiveIdentity</strong>，並在建立<strong>GenerateTokenRequestV2</strong>類別時，多指定<strong>identities</strong>參數，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> EmbedToken <span class="title">GetEmbedToken</span>(<span class="params">PowerBIClient pbiClient, Guid reportId, IList&lt;Guid&gt; datasetIds, [Optional] Guid targetWorkspaceId</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> identities = <span class="keyword">new</span> List&lt;EffectiveIdentity&gt;();</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="keyword">var</span> datasetId <span class="keyword">in</span> datasetIds)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> dataSet = pbiClient.Datasets.GetDatasetInGroup(ConfigValidatorService.WorkspaceId, datasetId.ToString());</span><br><span class="line">        <span class="keyword">if</span> (dataSet.IsEffectiveIdentityRolesRequired==<span class="literal">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> userName = <span class="string">&quot;你的使用者&quot;</span>;</span><br><span class="line">            <span class="keyword">var</span> roles = <span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt;();</span><br><span class="line">            roles.Add(<span class="string">&quot;User&quot;</span>);</span><br><span class="line">            <span class="keyword">var</span> rlsidentity = <span class="keyword">new</span> EffectiveIdentity(</span><br><span class="line">                username: userName,</span><br><span class="line">                datasets: <span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt; &#123; datasetId.ToString() &#125;,</span><br><span class="line">                roles: roles.ToArray()</span><br><span class="line">            );</span><br><span class="line">            identities.Add(rlsidentity );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> tokenRequest = <span class="keyword">new</span> GenerateTokenRequestV2(</span><br><span class="line">        reports: <span class="keyword">new</span> List&lt;GenerateTokenRequestV2Report&gt;() &#123; <span class="keyword">new</span> GenerateTokenRequestV2Report(reportId) &#125;,</span><br><span class="line">        datasets: datasetIds.Select(datasetId =&gt; <span class="keyword">new</span> GenerateTokenRequestV2Dataset(datasetId.ToString())).ToList(),</span><br><span class="line">        identities: identities,</span><br><span class="line">        targetWorkspaces: targetWorkspaceId != Guid.Empty ? <span class="keyword">new</span> List&lt;GenerateTokenRequestV2TargetWorkspace&gt;() &#123; <span class="keyword">new</span> GenerateTokenRequestV2TargetWorkspace(targetWorkspaceId) &#125; : <span class="literal">null</span></span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">var</span> embedToken = pbiClient.EmbedToken.GenerateToken(tokenRequest);</span><br><span class="line">    <span class="keyword">return</span> embedToken;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>註 1: 如果出現<code>Unauthorized (401) PowerBINotAuthorizedException</code>，請確定你註冊的 App，是否有加到 PowerBI Workspace 的 管理存取權 之中</p></blockquote><blockquote><p>註 2: EffectiveIdentity 請依報表設定，如果在不需要 RLS 的報表，就會有<code>shouldn&#39;t have effective identit</code>的錯誤哦~</p></blockquote><blockquote><p>註 3: roles 請依系統進行調整</p></blockquote><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://learn.microsoft.com/en-us/power-bi/developer/embedded/cloud-rls#dynamic-security">Embed a report with RLS</a><br><a href="https://blog.simontimms.com/2021/10/22/RLS_with_power_bi/">Using RLS in Power BI Embedded</a><br><a href="https://github.com/rainmakerho/PowerBI-Developer-Samples/tree/master/.NET%20Framework/Embed%20for%20your%20customers/AppOwnsData">PowerBI-Developer-Samples&#x2F;AppOwnsData</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;透過&lt;a href=&quot;https://github.com/rainmakerho/PowerBI-Developer-Samples/tr</summary>
      
    
    
    
    
    <category term="Power BI embedded" scheme="https://rainmakerho.github.io/tags/Power-BI-embedded/"/>
    
    <category term="AppOwnsData" scheme="https://rainmakerho.github.io/tags/AppOwnsData/"/>
    
    <category term="ReportEmbedConfig" scheme="https://rainmakerho.github.io/tags/ReportEmbedConfig/"/>
    
    <category term="EmbedToken" scheme="https://rainmakerho.github.io/tags/EmbedToken/"/>
    
    <category term="RLS" scheme="https://rainmakerho.github.io/tags/RLS/"/>
    
    <category term="EffectiveIdentity" scheme="https://rainmakerho.github.io/tags/EffectiveIdentity/"/>
    
  </entry>
  
  <entry>
    <title>TypeChat 將自然語言轉成定義好的物件</title>
    <link href="https://rainmakerho.github.io/2024/07/02/llm-language-2-type-typechat/"/>
    <id>https://rainmakerho.github.io/2024/07/02/llm-language-2-type-typechat/</id>
    <published>2024-07-02T05:07:46.000Z</published>
    <updated>2024-07-02T06:19:42.773Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>我們可以透過 Prompt 來讓 LLM 產生我們需要的<code>Json</code>內容，<br>例如 請假、訂 Pizza … 。<br>現在我們可以透過<a href="https://github.com/microsoft/typechat.net">TypeChat.NET</a>來幫我們做到這件事。</p><h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><p>以下使用 Calendar 範例來測試，</p><p>1.加入以下 Nuget 套件，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Microsoft.Extensions.Configuration.Binder</span><br><span class="line">Microsoft.Extensions.Configuration.Json</span><br><span class="line">Microsoft.TypeChat</span><br><span class="line">Microsoft.TypeChat.Schema</span><br></pre></td></tr></table></figure><p>2.將<a href="https://github.com/microsoft/typechat.net/blob/main/examples/typechat.examplesLib/Config.cs">Config.cs</a>及<a href="https://github.com/microsoft/typechat.net/blob/main/examples/Calendar/CalendarActionsSchema.cs">CalendarActionsSchema.cs</a>加到專案之中</p><p>3.在<code>appsettings.json</code>中加入 LLM 的設定值，如下，</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// For Azure OpenAI service</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;OpenAI&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;Azure&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;ApiKey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;YOUR API KEY&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;Endpoint&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://YOUR_RESOURCE_NAME.openai.azure.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;Model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;gpt-35-turbo&quot;</span>  <span class="comment">// Name of Azure deployment</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// For OpenAI Service:</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;OpenAI&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;Azure&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;ApiKey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;YOUR API KEY&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;Endpoint&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://api.openai.com/v1/chat/completions&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;Model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;gpt-3.5-turbo&quot;</span>  <span class="comment">// Name of OpenAI model</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>4.因為是關於日期，所以在轉換時，要在最後加上現在的時間，再一起透過<code>JsonTranslator</code>來轉換，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//載入 LLM Config</span></span><br><span class="line"><span class="keyword">var</span> config = Config.LoadOpenAI();</span><br><span class="line"><span class="comment">//建立 Translator</span></span><br><span class="line"><span class="keyword">var</span> translator = <span class="keyword">new</span> JsonTranslator&lt;CalendarActions&gt;(<span class="keyword">new</span> LanguageModel(config));</span><br><span class="line"><span class="comment">//SubscribeAllEvents(translator);</span></span><br><span class="line"><span class="built_in">string</span>[] inputs = [</span><br><span class="line">        <span class="string">&quot;我需要在 2024 年 7 月 15 日星期五中午 12:00 到下午 2:00 更換輪胎&quot;</span>,</span><br><span class="line">        <span class="string">&quot;為週五下午 6 點舉辦名為 Jeffs 披薩派對的活動&quot;</span>,</span><br><span class="line">        <span class="string">&quot;請在下週四將 Jennifer 添加到 scrum 中&quot;</span>,</span><br><span class="line">        <span class="string">&quot;您可以在上午 9 點與 Jerri Skinner 預約2個小時嗎？&quot;</span>,</span><br><span class="line">        <span class="string">&quot;我下週的行程是什麼？&quot;</span>,</span><br><span class="line">        <span class="string">&quot;預訂下週五上午 8:30 與 Sonali 和 Marc 就 GPU 效能舉行會議&quot;</span>,</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line"><span class="keyword">await</span> TranslateCalendarActions(translator, inputs);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">async</span> Task <span class="title">TranslateCalendarActions</span>(<span class="params">JsonTranslator&lt;CalendarActions&gt; translator, <span class="built_in">string</span>[] inputs</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> dateTimeNow = DateTime.Now;</span><br><span class="line">    <span class="built_in">int</span> daysUntilMonday = ((<span class="built_in">int</span>)DayOfWeek.Monday - (<span class="built_in">int</span>)dateTimeNow.DayOfWeek + <span class="number">7</span>) % <span class="number">7</span>;</span><br><span class="line">    DateTime thisWeekMonday = dateTimeNow.AddDays(daysUntilMonday);</span><br><span class="line">    <span class="comment">// 計算下週的星期一</span></span><br><span class="line">    DateTime nextWeekMonday = thisWeekMonday.AddDays(<span class="number">7</span>);</span><br><span class="line">    <span class="keyword">var</span> nowDate = <span class="string">$&quot;<span class="subst">&#123;dateTimeNow:yyyy/MM/dd&#125;</span>&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> nowTime = <span class="string">$&quot;<span class="subst">&#123;dateTimeNow:HH:mm:ss&#125;</span>&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> nextWeek = <span class="string">$&quot;<span class="subst">&#123;nextWeekMonday:yyyy/MM/dd&#125;</span> <span class="subst">&#123;nextWeekMonday:HH:mm:ss&#125;</span>&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> nextMonth = <span class="string">$&quot;<span class="subst">&#123;<span class="keyword">new</span> DateTime(dateTimeNow.Year, dateTimeNow.Month, <span class="number">1</span>).AddMonths(<span class="number">1</span>):yyyy/MM/dd&#125;</span> <span class="subst">&#123;dateTimeNow:HH:mm:ss&#125;</span>&quot;</span>;</span><br><span class="line">    <span class="built_in">string</span> now = <span class="string">$&quot;使用相對於當前日期的精確日期和時間: <span class="subst">&#123;nowDate&#125;</span> 現在時間: <span class="subst">&#123;nowTime&#125;</span>\n&quot;</span>;</span><br><span class="line">    <span class="comment">//now += $&quot;將下週和下個月等範圍轉換為精確日期&quot;;</span></span><br><span class="line">    now += <span class="string">$&quot;將下週(<span class="subst">&#123;nextWeek&#125;</span>)和下個月(<span class="subst">&#123;nextMonth&#125;</span>)等範圍轉換為精確日期&quot;</span>;</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="keyword">var</span> input <span class="keyword">in</span> inputs)</span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;=== Q:<span class="subst">&#123;input&#125;</span> ================================================&quot;</span>);</span><br><span class="line">        <span class="built_in">string</span> request = <span class="string">$&quot;<span class="subst">&#123;input&#125;</span>\n<span class="subst">&#123;now&#125;</span>&quot;</span>;</span><br><span class="line">        <span class="keyword">var</span> actions = <span class="keyword">await</span> translator.TranslateAsync(request);</span><br><span class="line">        <span class="keyword">var</span> jsonString = Microsoft.TypeChat.Json.Stringify(actions);</span><br><span class="line">        <span class="built_in">string</span> deserializedJson = UnicodeToChinese(jsonString);</span><br><span class="line">        Console.WriteLine(deserializedJson);</span><br><span class="line">        PrintUnknown(actions);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">bool</span> <span class="title">PrintUnknown</span>(<span class="params">CalendarActions calendarActions</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">int</span> countUnknown = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="keyword">var</span> action <span class="keyword">in</span> calendarActions.Actions)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (action <span class="keyword">is</span> UnknownAction unknown)</span><br><span class="line">        &#123;</span><br><span class="line">            ++countUnknown;</span><br><span class="line">            <span class="keyword">if</span> (countUnknown == <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;I didn&#x27;t understand the following:&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine(unknown.Text);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> countUnknown &gt; <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="built_in">string</span> <span class="title">UnicodeToChinese</span>(<span class="params"><span class="built_in">string</span> input</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> Regex.Unescape(input);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>測試日期為 2024&#x2F;07&#x2F;02，輸出結果如下，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line">=== Q:我需要在 2024 年 7 月 15 日星期五中午 12:00 到下午 2:00 更換輪胎 ================================================</span><br><span class="line">&#123;</span><br><span class="line">  &quot;actions&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;$type&quot;: &quot;AddEventAction&quot;,</span><br><span class="line">      &quot;event&quot;: &#123;</span><br><span class="line">        &quot;day&quot;: &quot;2024/07/15&quot;,</span><br><span class="line">        &quot;timeRange&quot;: &#123;</span><br><span class="line">          &quot;startTime&quot;: &quot;12:00&quot;,</span><br><span class="line">          &quot;endTime&quot;: &quot;14:00&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;description&quot;: &quot;更換輪胎&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">=== Q:為週五下午 6 點舉辦名為 Jeffs 披薩派對的活動 ================================================</span><br><span class="line">&#123;</span><br><span class="line">  &quot;actions&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;$type&quot;: &quot;AddEventAction&quot;,</span><br><span class="line">      &quot;event&quot;: &#123;</span><br><span class="line">        &quot;day&quot;: &quot;2024/07/05&quot;,</span><br><span class="line">        &quot;timeRange&quot;: &#123;</span><br><span class="line">          &quot;startTime&quot;: &quot;18:00&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;description&quot;: &quot;Jeffs 披薩派對&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">=== Q:請在下週四將 Jennifer 添加到 scrum 中 ================================================</span><br><span class="line">&#123;</span><br><span class="line">  &quot;actions&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;$type&quot;: &quot;AddParticipantsAction&quot;,</span><br><span class="line">      &quot;eventReference&quot;: &#123;</span><br><span class="line">        &quot;day&quot;: &quot;2024/07/18&quot;,</span><br><span class="line">        &quot;description&quot;: &quot;scrum&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;participants&quot;: [</span><br><span class="line">        &quot;Jennifer&quot;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">=== Q:您可以在上午 9 點與 Jerri Skinner 預約2個小時嗎？ ================================================</span><br><span class="line">&#123;</span><br><span class="line">  &quot;actions&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;$type&quot;: &quot;AddEventAction&quot;,</span><br><span class="line">      &quot;event&quot;: &#123;</span><br><span class="line">        &quot;day&quot;: &quot;2024/07/09&quot;,</span><br><span class="line">        &quot;timeRange&quot;: &#123;</span><br><span class="line">          &quot;startTime&quot;: &quot;09:00&quot;,</span><br><span class="line">          &quot;duration&quot;: &quot;2 hours&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;description&quot;: &quot;Meeting with Jerri Skinner&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">=== Q:我下週的行程是什麼？ ================================================</span><br><span class="line">&#123;</span><br><span class="line">  &quot;actions&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;$type&quot;: &quot;FindEventsAction&quot;,</span><br><span class="line">      &quot;eventReference&quot;: &#123;</span><br><span class="line">        &quot;dayRange&quot;: &quot;2024/07/15 14:11:02 to 2024/07/21 14:11:02&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">=== Q:預訂下週五上午 8:30 與 Sonali 和 Marc 就 GPU 效能舉行會議 ================================================</span><br><span class="line">&#123;</span><br><span class="line">  &quot;actions&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;$type&quot;: &quot;AddEventAction&quot;,</span><br><span class="line">      &quot;event&quot;: &#123;</span><br><span class="line">        &quot;day&quot;: &quot;2024/07/12&quot;,</span><br><span class="line">        &quot;timeRange&quot;: &#123;</span><br><span class="line">          &quot;startTime&quot;: &quot;08:30&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;description&quot;: &quot;與 Sonali 和 Marc 就 GPU 效能舉行會議&quot;,</span><br><span class="line">        &quot;participants&quot;: [</span><br><span class="line">          &quot;Sonali&quot;,</span><br><span class="line">          &quot;Marc&quot;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以，透過<a href="https://github.com/microsoft/typechat.net">TypeChat.NET</a>可以很方便用戶輸入的內容，<br>轉成所需要的物件。</p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://github.com/microsoft/typechat.net">TypeChat.NET</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;我們可以透過 Prompt 來讓 LLM 產生我們需要的&lt;code&gt;Json&lt;/code&gt;內容，&lt;br&gt;例如 請假、訂 Pizza … 。&lt;</summary>
      
    
    
    
    
    <category term=".NET" scheme="https://rainmakerho.github.io/tags/NET/"/>
    
    <category term="LLM" scheme="https://rainmakerho.github.io/tags/LLM/"/>
    
    <category term="TypeChat" scheme="https://rainmakerho.github.io/tags/TypeChat/"/>
    
    <category term="JsonTranslator" scheme="https://rainmakerho.github.io/tags/JsonTranslator/"/>
    
  </entry>
  
  <entry>
    <title>將 Unicode escaped characters \uXXXX 轉回看得懂的字</title>
    <link href="https://rainmakerho.github.io/2024/07/01/unicode-escaped-for-chinese-characters/"/>
    <id>https://rainmakerho.github.io/2024/07/01/unicode-escaped-for-chinese-characters/</id>
    <published>2024-07-01T08:43:11.000Z</published>
    <updated>2024-07-01T09:05:57.033Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>Post 或是 Get 的 Json 物件，如果是中文字，會變成 <code>\uXXXX</code>，<br>例如<code>請</code>會是<code>\u8ACB</code>。<br>那要怎麼把<code>\u8ACB</code>轉回<code>請</code>呢?</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>在 C# 可以使用 <code>Regex.Unescape</code>，例如，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Regex.Unescape(<span class="string">&quot;\u8ACB&quot;</span>); <span class="comment">//請</span></span><br></pre></td></tr></table></figure><p>在 JavaScript 可以使用 <code>decodeURIComponent</code>，例如，</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">decodeURIComponent</span>(<span class="string">&quot;\u8ACB&quot;</span>); <span class="comment">// 請</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;Post 或是 Get 的 Json 物件，如果是中文字，會變成 &lt;code&gt;\uXXXX&lt;/code&gt;，&lt;br&gt;例如&lt;code&gt;請&lt;/co</summary>
      
    
    
    
    
    <category term="C#" scheme="https://rainmakerho.github.io/tags/C/"/>
    
    <category term="Decode" scheme="https://rainmakerho.github.io/tags/Decode/"/>
    
    <category term="Unicode escaped" scheme="https://rainmakerho.github.io/tags/Unicode-escaped/"/>
    
    <category term="Json" scheme="https://rainmakerho.github.io/tags/Json/"/>
    
    <category term="Regex.Unescape" scheme="https://rainmakerho.github.io/tags/Regex-Unescape/"/>
    
  </entry>
  
  <entry>
    <title>Checkmarx | ASP.NET Core Minimal API Inject Service 會被掃出 Reflected_XSS_All_Clients</title>
    <link href="https://rainmakerho.github.io/2024/06/28/checkmarx-reflected-xss-all-clients-aspnet-minimal-api/"/>
    <id>https://rainmakerho.github.io/2024/06/28/checkmarx-reflected-xss-all-clients-aspnet-minimal-api/</id>
    <published>2024-06-28T09:04:00.000Z</published>
    <updated>2024-06-28T09:25:33.213Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>Checkmarx 版本為 V9.5.5.1007 HF14。<br>ASP.NET Core Minimal API 的程式中，<br>有 Inject Service 時，全都被 Checkmarx 判斷有*Reflected_XSS_All_Clients***的 Issue。<br>程式碼如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">app.MapGet(<span class="string">&quot;/users/&#123;userId&#125;&quot;</span>, (<span class="built_in">string</span> userId, [FromServices] IAccessControlService accessControlService) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> accessControlService.LoadUserAccessControlAsync(userId);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>Checkmarx 說明如下，</p><blockquote><p>方法 app.MapGet 在 Program.cs 的第 54 行使用 LoadUserAccessControlAsync 將不受信用的資料嵌入生成的輸出。這些不受信任的資料被嵌入輸出而沒有進行適當的消毒或編碼，使攻擊者能夠將惡意程式碼注入生成的網頁。</p></blockquote><blockquote><p>攻擊者可通過簡單地在使用者輸入 accessControlService 中提供修改過的資料，該資料由 Program.cs 中的 app.MapGet 方法在第 54 行讀取。然後該輸入資料直接通過程式碼流到輸出網頁，而不經過任何消毒處理。</p></blockquote><p><strong>在使用者輸入 accessControlService</strong>???，這個是系統的服務，怎麼會從使用者輸入取得呢?</p><p>看來 Checkmarx 應該是不認得<strong>ASP.NET Core Minimal API 注入 Service</strong>的寫法，<br>導致將注入的 Service 當成是使用者的輸入來判斷，而導致<strong>誤判</strong>。</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>要等 Checkmarx 修正!</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;Checkmarx 版本為 V9.5.5.1007 HF14。&lt;br&gt;ASP.NET Core Minimal API 的程式中，&lt;br&gt;有</summary>
      
    
    
    
    
    <category term="ASP.NET" scheme="https://rainmakerho.github.io/tags/ASP-NET/"/>
    
    <category term="Checkmarx" scheme="https://rainmakerho.github.io/tags/Checkmarx/"/>
    
    <category term="Reflected_XSS_All_Clients" scheme="https://rainmakerho.github.io/tags/Reflected-XSS-All-Clients/"/>
    
    <category term="Minimal API" scheme="https://rainmakerho.github.io/tags/Minimal-API/"/>
    
  </entry>
  
  <entry>
    <title>Swashbuckle SwaggerUI 套用 CSP 錯誤的解法</title>
    <link href="https://rainmakerho.github.io/2024/06/25/swashbuckle-swaggerui-csp/"/>
    <id>https://rainmakerho.github.io/2024/06/25/swashbuckle-swaggerui-csp/</id>
    <published>2024-06-25T03:29:19.000Z</published>
    <updated>2024-06-25T05:22:46.419Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>當程式有設定 CSP(Content Security Policy)，值為<code>default-src &#39;self&#39;;</code>後，<br>會發現 SwaggerUI <code>index.html</code> 會一片白白的，<br>Browser 主控台就會顯示<code>CSP</code>的錯誤，如下，</p><blockquote><p>Refused to apply inline style because it violates the following Content Security Policy directive: “default-src ‘self’”. Either the ‘unsafe-inline’ keyword, a hash (‘sha256-wkAU1AW&#x2F;h8YFx0XlzvpTllAKnFEO2tw8aKErs5a26LY&#x3D;’), or a nonce (‘nonce-…’) is required to enable inline execution. Note also that ‘style-src’ was not explicitly set, so ‘default-src’ is used as a fallback.</p></blockquote><blockquote><p>Refused to execute inline script because it violates the following Content Security Policy directive: “default-src ‘self’”. Either the ‘unsafe-inline’ keyword, a hash (‘sha256-Tui7QoFlnLXkJCSl1&#x2F;JvEZdIXTmBttnWNxzJpXomQjg&#x3D;’), or a nonce (‘nonce-…’) is required to enable inline execution. Note also that ‘script-src’ was not explicitly set, so ‘default-src’ is used as a fallback.</p></blockquote><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>因為 SwaggerUI 有使用<strong>inline style</strong>及<strong>inline script</strong>，<br>所以被<strong>CSP</strong>的設定擋掉了。</p><h5 id="解法-1-加入-unsafe-inline"><a href="#解法-1-加入-unsafe-inline" class="headerlink" title="解法 1(加入 unsafe-inline)"></a>解法 1(加入 unsafe-inline)</h5><p>所以在<strong>CSP</strong>中可以加入<code>&#39;unsafe-inline&#39;</code> 及 image 的設定(<code>img-src data: https:;</code>)，如下，<br><code>default-src &#39;self&#39;;style-src &#39;self&#39; &#39;unsafe-inline&#39;;script-src &#39;self&#39; &#39;unsafe-inline&#39;;img-src data: https:;</code></p><h5 id="解法-2-使用-nonce"><a href="#解法-2-使用-nonce" class="headerlink" title="解法 2(使用 nonce)"></a>解法 2(使用 nonce)</h5><p>如果不想使用<code>&#39;unsafe-inline&#39;</code>, 那就需要使用<code>nonce</code>。<br>可以在<code>appsettings.json</code>中設定 CSP 的值及要使用的<code>nonce</code>，<br>將<code>&#39;unsafe-inline&#39;</code> 改以 <code>&#39;nonce-&#123;nonceValue&#125;&#39;</code> 替代，如下，</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;CSP&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;Nonce&quot;</span><span class="punctuation">:</span> <span class="string">&quot;rxa0mkex&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;Content&quot;</span><span class="punctuation">:</span> <span class="string">&quot;default-src &#x27;self&#x27;;style-src &#x27;self&#x27; &#x27;nonce-&#123;nonceValue&#125;&#x27;;script-src &#x27;self&#x27; &#x27;nonce-&#123;nonceValue&#125;&#x27;;img-src data: https:;&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>然後設定<strong>CSP</strong>，<code>nonce</code>的值，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> cspNonce = _configuration[<span class="string">&quot;CSP:Nonce&quot;</span>];</span><br><span class="line"><span class="keyword">var</span> cspContent = _configuration[<span class="string">&quot;CSP:Content&quot;</span>].Replace(<span class="string">&quot;&#123;nonceValue&#125;&quot;</span>, cspNonce);</span><br><span class="line">context.Response.Headers.Append(<span class="string">&quot;Content-Security-Policy&quot;</span>, cspContent);</span><br></pre></td></tr></table></figure><p>再參考<a href="https://mderriey.com/2020/12/14/how-to-lock-down-csp-using-swachbuckle/">How to lock down your CSP when using Swashbuckle</a>，<br>在 SwaggerUI 產生 index.html 時，將 inline script, style ，加上<strong>noce</strong>的值，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">app.UseSwaggerUI(options =&gt;</span><br><span class="line">&#123;</span><br><span class="line">options.SwaggerEndpoint(<span class="string">&quot;/swagger/v1/swagger.json&quot;</span>, <span class="string">&quot;Portal API&quot;</span>);</span><br><span class="line"><span class="comment">//加入處理 SwaggerUI CSP 問題</span></span><br><span class="line"><span class="keyword">var</span> originallIndexStreamFactory = options.IndexStream;</span><br><span class="line">options.IndexStream = () =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">using</span> <span class="keyword">var</span> originalStream = originallIndexStreamFactory();</span><br><span class="line">    <span class="keyword">using</span> <span class="keyword">var</span> originalStreamReader = <span class="keyword">new</span> StreamReader(originalStream); ;</span><br><span class="line">    <span class="keyword">var</span> originalIndexHtmlContents = originalStreamReader.ReadToEnd();</span><br><span class="line">    <span class="keyword">var</span> requestSpecificNonce = config[<span class="string">&quot;CSP:Nonce&quot;</span>];</span><br><span class="line">    <span class="keyword">var</span> nonceEnabledIndexHtmlContents = originalIndexHtmlContents</span><br><span class="line">    .Replace(<span class="string">&quot;&lt;script&gt;&quot;</span>, <span class="string">$&quot;&quot;</span><span class="string">&quot;&lt;script nonce=&quot;</span>&#123;requestSpecificNonce&#125;<span class="string">&quot;&gt;&quot;</span><span class="string">&quot;&quot;</span>, StringComparison.OrdinalIgnoreCase)</span><br><span class="line">    .Replace(<span class="string">&quot;&lt;style&gt;&quot;</span>, <span class="string">$&quot;&quot;</span><span class="string">&quot;&lt;style nonce=&quot;</span>&#123;requestSpecificNonce&#125;<span class="string">&quot;&gt;&quot;</span><span class="string">&quot;&quot;</span>, StringComparison.OrdinalIgnoreCase);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> MemoryStream(Encoding.UTF8.GetBytes(nonceEnabledIndexHtmlContents));</span><br><span class="line">&#125;;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><img src="/2024/06/25/swashbuckle-swaggerui-csp/01.png" class="" title="CSP-nonce"><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://mderriey.com/2020/12/14/how-to-lock-down-csp-using-swachbuckle/">How to lock down your CSP when using Swashbuckle</a></p><blockquote><p>一時花，二時雨: 喻人做事沒有恆心，毫無決斷力，有時好時壞。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;當程式有設定 CSP(Content Security Policy)，值為&lt;code&gt;default-src &amp;#39;self&amp;#39;</summary>
      
    
    
    
    
    <category term="Content-Security-Policy" scheme="https://rainmakerho.github.io/tags/Content-Security-Policy/"/>
    
    <category term="CSP" scheme="https://rainmakerho.github.io/tags/CSP/"/>
    
    <category term="Swashbuckle" scheme="https://rainmakerho.github.io/tags/Swashbuckle/"/>
    
    <category term="SwaggerUI" scheme="https://rainmakerho.github.io/tags/SwaggerUI/"/>
    
    <category term="SwaggerUIOptions" scheme="https://rainmakerho.github.io/tags/SwaggerUIOptions/"/>
    
  </entry>
  
  <entry>
    <title>為什麼VS.NET 2022新增Class時，都是 internal 呢?</title>
    <link href="https://rainmakerho.github.io/2024/06/24/vs-add-new-class-is-always-internal/"/>
    <id>https://rainmakerho.github.io/2024/06/24/vs-add-new-class-is-always-internal/</id>
    <published>2024-06-24T01:29:59.000Z</published>
    <updated>2024-06-24T03:06:20.839Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>在 Microsoft Visual Studio 2022 新增一個 Class 時，<br>為什麼預設會是<code>internal</code>的 Class ，而不是<code>public</code>呢?</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>可以參考<a href="https://stackoverflow.com/questions/700086/how-do-you-default-a-new-class-to-public-when-creating-it-in-visual-studio">How do you default a new class to public when creating it in Visual Studio?</a>，<br>修改<code>C:\Program Files\Microsoft Visual Studio\2022\版本\Common7\IDE\ItemTemplates\CSharp\Code\1033\Class\Class.cs</code>加上<code>public</code>。<br>上面 Code 目錄下的數值，請依地區版本來調整，例如，如果是 TW 版本的話，請 Code 請改成<code>1028</code>，如下<br><code>C:\Program Files\Microsoft Visual Studio\2022\版本\Common7\IDE\ItemTemplates\CSharp\Code\1028\Class\Class.cs</code>。</p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://stackoverflow.com/questions/700086/how-do-you-default-a-new-class-to-public-when-creating-it-in-visual-studio">How do you default a new class to public when creating it in Visual Studio?</a></p><blockquote><p>一發如雷，一敗如灰: 喻人做事，開始時如陣雨，銳不可當，但是，不到五分鐘，便煙消雲散。這種人缺乏毅力和恆心，不論才幹如何，終不能成大事。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;在 Microsoft Visual Studio 2022 新增一個 Class 時，&lt;br&gt;為什麼預設會是&lt;code&gt;internal&lt;</summary>
      
    
    
    
    
    <category term="class" scheme="https://rainmakerho.github.io/tags/class/"/>
    
    <category term="internal" scheme="https://rainmakerho.github.io/tags/internal/"/>
    
    <category term="VS 2022" scheme="https://rainmakerho.github.io/tags/VS-2022/"/>
    
    <category term="public" scheme="https://rainmakerho.github.io/tags/public/"/>
    
  </entry>
  
  <entry>
    <title>Checkmarx | Stream ToArray Read 會被掃出 Stored XSS</title>
    <link href="https://rainmakerho.github.io/2024/06/20/checkmarx-stored-xss-stream-toarray/"/>
    <id>https://rainmakerho.github.io/2024/06/20/checkmarx-stored-xss-stream-toarray/</id>
    <published>2024-06-20T01:28:05.000Z</published>
    <updated>2024-06-28T09:27:13.773Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>最近同事詢問為什麼程式中的<code>Stream.ToArray()</code>, <code>Stream.Read</code>會被 Checkmarx 判斷有<code>Stored XSS</code>的問題呢?<br>Checkmarx 版本為<strong>V9.5.5.1007 HF14</strong>。</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>Checkmarx 描述為，<br><strong>Stream.Read</strong></p><blockquote><p>使用 Read 生成輸出，但未經過適當的消毒或編碼就將不可信資料嵌入生成的輸出中，這使得攻擊者能夠注入惡意程式碼到生成的網頁中。</p></blockquote><p><strong>Stream.ToArray()</strong></p><blockquote><p>使用 ToArray 生成輸出，但未經過適當的消毒或編碼就將不可信資料嵌入生成的輸出中，這使得攻擊者能夠注入惡意程式碼到生成的網頁中。</p></blockquote><p>看 Checkmarx Rule ，如果輸出為 File 可以加入<code>X-Content-Type-Options</code>Header , 值為<code>nosniff</code> 來避免 XSS。<br>但加入後，問題還是存在，應該是 Checkmarx 的 Bug 吧~<br>透過 Jer 測試後發現，在 Checkmarx<strong>V9.6</strong>就不會有這問題~~<br>所以目前的解法可以請原廠拿<strong>V9.6</strong>的 C# Stored XSS Rule 匯到<strong>V9.5</strong>中。<br>或是改做法來避開，<br><code>Stream.ToArray()</code> 就改用 <code>BinaryReader</code> 如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//byte[] fileContent = stream.ToArray();</span></span><br><span class="line"><span class="built_in">byte</span>[] fileContent = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">using</span> (<span class="keyword">var</span> binaryReader = <span class="keyword">new</span> BinaryReader(stream))</span><br><span class="line">&#123;</span><br><span class="line">    stream.Position = <span class="number">0</span>;</span><br><span class="line">    fileContent =  binaryReader.ReadBytes((<span class="built_in">int</span>)stream.Length);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>Stream.Read</code> 就改用<code>StreamReader</code>，例如</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> (<span class="keyword">var</span> reader = <span class="keyword">new</span> StreamReader(stream, Encoding.UTF8, leaveOpen: <span class="literal">true</span>))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span> requestBody = <span class="keyword">await</span> reader.ReadToEndAsync();</span><br><span class="line">    <span class="keyword">return</span> requestBody;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>註: <code>X-Content-Type-Options</code>設為<code>nosniff</code>可避免<strong>MIME 嗅探（MIME sniffing)<strong>，<br>為什麼</strong>MIME 嗅探（MIME sniffing)<strong>會有 XSS 問題呢?<br>例如，如果原本<code>Content-Type</code>設定為<code>text/plain</code>，但裡面包含<code>HTML</code>, <code>JavaScript</code>，<br>Browser 可能會把它當成是 HTML 來執行，就有可能會執行<code>JavaScript</code>，而產生</strong>XSS</strong>問題。</p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options">X-Content-Type-Options</a></p><blockquote><p>一把粉抹在後頭窩: 喻人顧後不顧前，不要臉面。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;最近同事詢問為什麼程式中的&lt;code&gt;Stream.ToArray()&lt;/code&gt;, &lt;code&gt;Stream.Read&lt;/code&gt;會被</summary>
      
    
    
    
    
    <category term="C#" scheme="https://rainmakerho.github.io/tags/C/"/>
    
    <category term="Checkmarx" scheme="https://rainmakerho.github.io/tags/Checkmarx/"/>
    
    <category term="Stream" scheme="https://rainmakerho.github.io/tags/Stream/"/>
    
    <category term="MemoryStream" scheme="https://rainmakerho.github.io/tags/MemoryStream/"/>
    
    <category term="ToArray" scheme="https://rainmakerho.github.io/tags/ToArray/"/>
    
    <category term="Read" scheme="https://rainmakerho.github.io/tags/Read/"/>
    
    <category term="BinaryReader" scheme="https://rainmakerho.github.io/tags/BinaryReader/"/>
    
  </entry>
  
</feed>
