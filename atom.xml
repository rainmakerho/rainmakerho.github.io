<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>亂馬客</title>
  <icon>https://www.gravatar.com/avatar/cd3aed042ccd7a5a5d9956b0bc07dc81</icon>
  <subtitle>Re:從零開始的軟體開發生活</subtitle>
  <link href="https://rainmakerho.github.io/atom.xml" rel="self"/>
  
  <link href="https://rainmakerho.github.io/"/>
  <updated>2023-04-12T05:04:02.626Z</updated>
  <id>https://rainmakerho.github.io/</id>
  
  <author>
    <name>亂馬客</name>
    <email>rainmaker_ho@gss.com.tw</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ABP Web 整合測試結果回傳 302 or 404 錯誤</title>
    <link href="https://rainmakerho.github.io/2023/04/12/abp-web-testing-error/"/>
    <id>https://rainmakerho.github.io/2023/04/12/abp-web-testing-error/</id>
    <published>2023-04-12T02:56:39.000Z</published>
    <updated>2023-04-12T05:04:02.626Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近將 ABP Framework 方案修改好程式後，執行 Web 整合測試時，<br>只是簡單的測試 Web Root 頁面是否運作正常，<br>居然測試不過，而且會回 302 or 404 的錯誤。<br><code>HTTP/1.1 GET http://localhost/ - - - 404</code></p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>猜想有可能是 Config 的問題，但是不知到底是那一個，<br>結果看到 <a href="https://learn.microsoft.com/en-us/aspnet/core/test/integration-tests">Integration tests in ASP.NET Core</a> 這篇在建立 HostBuilder 時，有多設定 <code>Environment</code> 為 <strong>Development</strong>。<br>所以多加上設定為 <strong>Development</strong> 居然就沒問題了。<br>花了好多時間，但還是找不到為什麼原本的 Abp 專案不用特別設定 <strong>Development</strong> 也沒有問題，<br>之後有找到問題點再來補充說明。<br>所以目前的 Workaround 做法就是 設定 <code>Environment</code> 為 <strong>Development</strong>。</p><p>WebTestBase.cs 中的 <code>CreateHostBuilder</code> Method 原本如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> IHostBuilder <span class="title">CreateHostBuilder</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">base</span></span><br><span class="line">        .CreateHostBuilder()</span><br><span class="line">        .UseContentRoot(WebContentDirectoryFinder.CalculateContentRootFolder());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>加上設定 <code>Environment</code> 為 <strong>Development</strong> (<code>.UseEnvironment(&quot;Development&quot;)</code>)。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> IHostBuilder <span class="title">CreateHostBuilder</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">base</span></span><br><span class="line">        .CreateHostBuilder()</span><br><span class="line">        .UseContentRoot(WebContentDirectoryFinder.CalculateContentRootFolder())</span><br><span class="line">        .UseEnvironment(<span class="string">&quot;Development&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>這樣子就沒問題了。</p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://learn.microsoft.com/en-us/aspnet/core/test/integration-tests">Integration tests in ASP.NET Core</a><br><a href="https://holsson.wordpress.com/2018/06/25/integration-testing-asp-net-core-2-1/">Integration Testing ASP.NET Core 2.x</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;最近將 ABP Framework 方案修改好程式後，執行 Web 整合測試時，&lt;br&gt;只是簡單的測試 Web Root 頁面是否運作正常，</summary>
      
    
    
    
    
    <category term="ABP" scheme="https://rainmakerho.github.io/tags/ABP/"/>
    
    <category term="Web.Tests" scheme="https://rainmakerho.github.io/tags/Web-Tests/"/>
    
    <category term="WebTestBase" scheme="https://rainmakerho.github.io/tags/WebTestBase/"/>
    
    <category term="CreateHostBuilder" scheme="https://rainmakerho.github.io/tags/CreateHostBuilder/"/>
    
    <category term="Development" scheme="https://rainmakerho.github.io/tags/Development/"/>
    
  </entry>
  
  <entry>
    <title>ABP 測試遇到 SeedTestData 及 讀取 appsettings 問題</title>
    <link href="https://rainmakerho.github.io/2023/04/10/abp-testing-seed-data-config/"/>
    <id>https://rainmakerho.github.io/2023/04/10/abp-testing-seed-data-config/</id>
    <published>2023-04-10T00:41:42.000Z</published>
    <updated>2023-04-10T01:22:00.803Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在跑 ABP 的測試專案時，卻發現居然會跑到 Domain 專案的那些 <code>DataSeedContributor</code> 類別的 <code>SeedAsync</code> Method?<br>另外，有些 AppService 需要 <code>appsettings</code> 設定值，在 ABP 測試專案中要如何處理呢?</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><h4 id="跑測試專案時，會跑到-Domain-專案的那些-DataSeedContributor-類別的-SeedAsync-Method"><a href="#跑測試專案時，會跑到-Domain-專案的那些-DataSeedContributor-類別的-SeedAsync-Method" class="headerlink" title="跑測試專案時，會跑到 Domain 專案的那些 DataSeedContributor 類別的 SeedAsync Method"></a>跑測試專案時，會跑到 Domain 專案的那些 <code>DataSeedContributor</code> 類別的 <code>SeedAsync</code> Method</h4><p>ABP 的 <code>TestBase</code> 專案中 <code>TestBaseModule</code> 類別中的 <code>OnApplicationInitialization</code> Method ，會執行 <code>SeedTestData(context);</code>。<br>而 <code>SeedTestData(context);</code> 會呼叫 <code>DataSeeder</code> 的 <code>SeedAsync</code> Method。<br>在 <a href="https://rainmakerho.github.io/2023/03/08/abp-dataseedcontributor-duplicate/">ABP 系統建立的 DataSeedContributor 會跑 2 次 SeedAsync，導致發生 DB duplicate key 的錯誤?</a> 可以知道，<br><code>DataSeeder</code> 的 <code>SeedAsync</code> Method 會取得 組件中所有的 <code>DataSeedContributor</code> 類別，<br>並呼叫它們的 <code>SeedAsync</code> Method。<br>所以這也就導致在執行測試專案時，會一起跑 Domain 專案的那些 <code>DataSeedContributor</code> 類別的 <code>SeedAsync</code> Method。<br>那怎麼辦呢?<br>跟 <a href="https://rainmakerho.github.io/2023/03/08/abp-dataseedcontributor-duplicate/">ABP 系統建立的 DataSeedContributor 會跑 2 次 SeedAsync，導致發生 DB duplicate key 的錯誤?</a> 類似，<br>將 <code>AbpDataSeedOptions</code> 的 <code>Contributors</code> 移除 Domain 專案的那些 <code>DataSeedContributor</code> 類別就可以了。</p><p>所以修改 <code>TestBaseModule</code> 類別中 <code>SeedTestData</code> Method，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">SeedTestData</span>(<span class="params">ApplicationInitializationContext context</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    AsyncHelper.RunSync(<span class="keyword">async</span> () =&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">using</span> (<span class="keyword">var</span> scope = context.ServiceProvider.CreateScope())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//原本的程式碼</span></span><br><span class="line">            <span class="comment">//await scope.ServiceProvider</span></span><br><span class="line">            <span class="comment">//    .GetRequiredService&lt;IDataSeeder&gt;()</span></span><br><span class="line">            <span class="comment">//    .SeedAsync();</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 修改後的程式碼</span></span><br><span class="line">            <span class="comment">// 取得 AbpDataSeedOptions</span></span><br><span class="line">            <span class="keyword">var</span> dataSeeder = scope.ServiceProvider</span><br><span class="line">                .GetRequiredService&lt;IDataSeeder&gt;();</span><br><span class="line">            <span class="keyword">var</span> options = scope.ServiceProvider</span><br><span class="line">                .GetRequiredService&lt;IOptions&lt;AbpDataSeedOptions&gt;&gt;()</span><br><span class="line">                .Value;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 先將Domain 專案的那些 `DataSeedContributor` 類別移除</span></span><br><span class="line">            <span class="comment">// 因為 測試的 DataSeedContributor 類別名稱都會包含 Test ，所以用 Test 判斷</span></span><br><span class="line">            options.Contributors.RemoveAll(c =&gt; !c.Name.Contains(<span class="string">&quot;Test&quot;</span>));</span><br><span class="line">            <span class="comment">// 這裡只剩下 測試的 DataSeedContributor 類別</span></span><br><span class="line">            <span class="keyword">await</span> dataSeeder.SeedAsync();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="需要-appsettings-設定值"><a href="#需要-appsettings-設定值" class="headerlink" title="需要 appsettings 設定值"></a>需要 <code>appsettings</code> 設定值</h4><p>測試中，有些類別需要 <code>appsettings</code> 設定值怎麼辦呢?<br>可以參考 <a href="https://dotblogs.com.tw/jakeuj/2022/09/22/abp-test-appsettings">ABP.IO WEB 應用程式框架 UnitTest 讀取 appsettings.json</a> ，<br>在 <code>TestBase</code> 專案中加入 <code>appsettings.test.json</code> 並設定 <strong>複製到輸出目錄</strong> 為 <code>有更新時才複製</code>。<br><code>appsettings.test.json</code> 的內容則是那些類別所需要的一些設定值。</p><p>然後在 <code>TestBaseModule</code> 類別的 <code>ConfigureServices</code> Method 中，<br>讀取 <code>appsettings.test.json</code> ，並設定為 Singleton Service，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">ConfigureServices</span>(<span class="params">ServiceConfigurationContext context</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//讀取 appsettings.test.json 設定為 Singleton Service</span></span><br><span class="line">    IConfiguration configuration = <span class="keyword">new</span> ConfigurationBuilder()</span><br><span class="line">        .SetBasePath(Directory.GetCurrentDirectory())</span><br><span class="line">        .AddJsonFile(<span class="string">&quot;appsettings.test.json&quot;</span>, optional: <span class="literal">false</span>)</span><br><span class="line">        .Build();</span><br><span class="line">    context.Services.AddSingleton(configuration);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 其他的程式碼 ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="參考資訊"><a href="#參考資訊" class="headerlink" title="參考資訊"></a>參考資訊</h3><p><a href="https://weblog.west-wind.com/posts/2018/Feb/18/Accessing-Configuration-in-NET-Core-Test-Projects">Accessing Configuration in .NET Core Test Projects</a><br><a href="https://dotblogs.com.tw/jakeuj/2022/09/22/abp-test-appsettings">ABP.IO WEB 應用程式框架 UnitTest 讀取 appsettings.json</a><br><a href="https://rainmakerho.github.io/2023/03/08/abp-dataseedcontributor-duplicate/">ABP 系統建立的 DataSeedContributor 會跑 2 次 SeedAsync，導致發生 DB duplicate key 的錯誤?</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;在跑 ABP 的測試專案時，卻發現居然會跑到 Domain 專案的那些 &lt;code&gt;DataSeedContributor&lt;/code&gt; 類</summary>
      
    
    
    
    
    <category term="ABP" scheme="https://rainmakerho.github.io/tags/ABP/"/>
    
    <category term="TestBase" scheme="https://rainmakerho.github.io/tags/TestBase/"/>
    
    <category term="TestBaseModule" scheme="https://rainmakerho.github.io/tags/TestBaseModule/"/>
    
    <category term="SeedTestData" scheme="https://rainmakerho.github.io/tags/SeedTestData/"/>
    
    <category term="appsettings" scheme="https://rainmakerho.github.io/tags/appsettings/"/>
    
    <category term="IConfiguration" scheme="https://rainmakerho.github.io/tags/IConfiguration/"/>
    
    <category term="AbpDataSeedOptions" scheme="https://rainmakerho.github.io/tags/AbpDataSeedOptions/"/>
    
  </entry>
  
  <entry>
    <title>為什麼我的 PDF 檔案取出 Byte Array 另存後，再開出來卻變成白白的?</title>
    <link href="https://rainmakerho.github.io/2023/03/31/save-pdf-blank/"/>
    <id>https://rainmakerho.github.io/2023/03/31/save-pdf-blank/</id>
    <published>2023-03-31T05:27:01.000Z</published>
    <updated>2023-03-31T05:53:46.244Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近同事詢問，它把好的 PDF 檔案呼叫 Web Service 另存新檔後，<br>那個 PDF 就壞了，透過 Browser 開起來都是白的，<br>用 Adobe PDF Reader 來開啟會出現 「檔案已損壞且無法修復」 的訊息。<br>想到之前 <a href="https://rainmakerho.github.io/2023/03/15/crystal-report-export-pdf-blank/">為什麼 Crystal Report 匯出成 PDF 內容都是白的?</a> 的問題，<br>該不會又是編碼的問題吧?</p><h3 id="找問題"><a href="#找問題" class="headerlink" title="找問題"></a>找問題</h3><p>首先一樣先透過 Notpad++ 來比較一下好&#x2F;壞的檔案編碼是否不同，<br>結果都是 ANSI 。<br>再來就是比較一下<strong>內容</strong>，<br>可以發現在資料區塊有些內容不相同，</p><img src="/2023/03/31/save-pdf-blank/01.png" class="" title="compare-pdf"><p>有可能是資料編碼跟 ASCII 編碼不同所造成的。</p><p>Web Service 的程式碼如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">WebMethod</span>]</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">FileUpload</span>(<span class="params"><span class="built_in">byte</span>[] fileBytes, <span class="built_in">string</span> fileName</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">using</span> (MemoryStream ms = <span class="keyword">new</span> MemoryStream(fileBytes))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">using</span> (FileStream fileStream = <span class="keyword">new</span> FileStream(fileName, FileMode.Create))</span><br><span class="line">&#123;</span><br><span class="line">ms.WriteTo(fileStream);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> fileName;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看起來是直接將 Byte Array 的資料存起來，<br>完全不會動到編碼，所以應該不是它的問題。</p><p>讀取 PDF 檔案的 Byte Array 程式如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> pdfPath = <span class="string">@&quot;C:\temp\pdf\suc.pdf&quot;</span>;</span><br><span class="line"><span class="built_in">string</span> data = <span class="built_in">string</span>.Empty;</span><br><span class="line"><span class="keyword">using</span> (<span class="keyword">var</span> fs = <span class="keyword">new</span> FileStream(pdfPath, FileMode.Open))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">using</span> (<span class="keyword">var</span> sr = <span class="keyword">new</span> StreamReader(fs, Encoding.Default))</span><br><span class="line">&#123;</span><br><span class="line">data = sr.ReadToEnd();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> fileBytes = Encoding.Default.GetBytes(data);</span><br><span class="line"><span class="comment">// ... call web service</span></span><br></pre></td></tr></table></figure><p>哦~ 這裡有編碼(<code>Encoding.Default</code>)<br>以繁體中文的作業系統，<strong>Encoding.Default</strong> ，應該為 <strong>Big5</strong><br>而 PDF 檔的編碼大多是 <strong>Encoding.ASCII</strong>。<br>所以這裡應該要改成 <strong>Encoding.ASCII</strong>。</p><p>所以這裡改成了 <strong>ASCII</strong> 就可以了。<br>但是，比較好的方式是不要特別去設定讀取的編碼，<br>直接使用 <strong><a href="https://learn.microsoft.com/zh-tw/dotnet/api/system.io.file.readallbytes?view=net-7.0">File.ReadAllBytes</a></strong> 就可以了，<br>程式碼也比較簡潔，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> pdfPath = <span class="string">@&quot;C:\temp\pdf\suc.pdf&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> fileBytes = File.ReadAllBytes(pdfPath);</span><br></pre></td></tr></table></figure><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://rainmakerho.github.io/2023/03/15/crystal-report-export-pdf-blank/">為什麼 Crystal Report 匯出成 PDF 內容都是白的?</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;最近同事詢問，它把好的 PDF 檔案呼叫 Web Service 另存新檔後，&lt;br&gt;那個 PDF 就壞了，透過 Browser 開起來都是</summary>
      
    
    
    
    
    <category term="pdf" scheme="https://rainmakerho.github.io/tags/pdf/"/>
    
    <category term="blank" scheme="https://rainmakerho.github.io/tags/blank/"/>
    
    <category term="檔案已損壞且無法修復" scheme="https://rainmakerho.github.io/tags/%E6%AA%94%E6%A1%88%E5%B7%B2%E6%90%8D%E5%A3%9E%E4%B8%94%E7%84%A1%E6%B3%95%E4%BF%AE%E5%BE%A9/"/>
    
    <category term="Encoding.Default" scheme="https://rainmakerho.github.io/tags/Encoding-Default/"/>
    
  </entry>
  
  <entry>
    <title>透過比較編碼的 Byte 數，取得 BIG5/UTF8/UTF8 BOM 檔案正確的內容</title>
    <link href="https://rainmakerho.github.io/2023/03/23/file-big5-utf8-get-correct/"/>
    <id>https://rainmakerho.github.io/2023/03/23/file-big5-utf8-get-correct/</id>
    <published>2023-03-23T05:37:56.000Z</published>
    <updated>2023-03-23T06:01:26.265Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在 <a href="https://dotblogs.com.tw/rainmaker/2013/05/20/104547">透過 StreamReader.CurrentEncoding 判斷檔案的編碼</a>這篇是透過 <code>StreamReader.CurrentEncoding</code> 來取得檔案的編碼。<br>另外 同事 提供也可透過透過各編碼來取得 Byte 數，來比較出是否為該編碼，<br>以下來看看範例，</p><h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><p>在 c:\temp 目錄下分別建立 BIG5, UTF8 及 UTF8 BOM 的檔案，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//var filePath = @&quot;c:\temp\utf8.txt&quot;;</span></span><br><span class="line"><span class="keyword">var</span> filePath = <span class="string">@&quot;c:\temp\utf8BOM.txt&quot;</span>;</span><br><span class="line"><span class="comment">//var filePath = @&quot;c:\temp\big5.txt&quot;;</span></span><br><span class="line"><span class="keyword">var</span> fileBytes = System.IO.File.ReadAllBytes(filePath);</span><br><span class="line"><span class="comment">//判斷是否為 Big5 編碼</span></span><br><span class="line"><span class="keyword">var</span> big5 = Encoding.GetEncoding(<span class="number">950</span>);</span><br><span class="line"><span class="keyword">var</span> utf8 = Encoding.UTF8;</span><br><span class="line"><span class="keyword">var</span> big5String = big5.GetString(fileBytes);</span><br><span class="line"><span class="keyword">var</span> isBig5 = fileBytes.Length == big5.GetByteCount(big5String);</span><br><span class="line"><span class="comment">//取出正確的內容</span></span><br><span class="line"><span class="keyword">var</span> fileContent = isBig5 ?</span><br><span class="line">big5String :</span><br><span class="line">utf8.GetString(fileBytes);</span><br><span class="line">Console.WriteLine(fileContent);</span><br></pre></td></tr></table></figure><ul><li>註: 同事的系統主要處理的 File 只有 BIG5, UTF8 及 UTF8 BOM</li><li>註: 如果檔案不大，就可以使用上述的方式來取得正確的檔案編碼或是內容</li></ul><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://dotblogs.com.tw/rainmaker/2013/05/20/104547">透過 StreamReader.CurrentEncoding 判斷檔案的編碼</a><br><a href="https://blog.darkthread.net/blog/detect-big5-encoding/">CODE-偵測檔案是否為 BIG5 編碼</a><br><a href="https://github.com/rainmakerho/Vulnerability-Analysis/issues/7">Stored_Path_Traversal - Checkmarx V 9.4.5.1009</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;在 &lt;a href=&quot;https://dotblogs.com.tw/rainmaker/2013/05/20/104547&quot;&gt;透過 Str</summary>
      
    
    
    
    
    <category term="FILE" scheme="https://rainmakerho.github.io/tags/FILE/"/>
    
    <category term="BIG5" scheme="https://rainmakerho.github.io/tags/BIG5/"/>
    
    <category term="UTF8" scheme="https://rainmakerho.github.io/tags/UTF8/"/>
    
    <category term="UTF8 BOM" scheme="https://rainmakerho.github.io/tags/UTF8-BOM/"/>
    
    <category term="Encoding" scheme="https://rainmakerho.github.io/tags/Encoding/"/>
    
    <category term="GetEncoding(950)" scheme="https://rainmakerho.github.io/tags/GetEncoding-950/"/>
    
  </entry>
  
  <entry>
    <title>EF Core Owned Entity Types</title>
    <link href="https://rainmakerho.github.io/2023/03/23/ef-owned-entity-types/"/>
    <id>https://rainmakerho.github.io/2023/03/23/ef-owned-entity-types/</id>
    <published>2023-03-23T03:33:32.000Z</published>
    <updated>2023-03-23T05:06:08.752Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>像<strong>地址</strong>的物件，在 EF Core 中有那些的設定方式呢?<br>預設會是在原有的 Table 中增加欄位。<br>也可以指定欄位名稱，<br>或是讓它存到別的資料表。</p><h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><p>新增 <strong>Address</strong> 物件(它沒有 Id 哦~)</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Address</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Street &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> City &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Country &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>設定 <strong>Customer</strong> 有 2 個 Address 的屬性(ShipToAddress, BillToAddress)</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Customer</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">string</span> _validUsername;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Customer</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Orders = <span class="keyword">new</span> HashSet&lt;Order&gt;();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> Id &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Required, MaxLength(50)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> FirstName &#123; <span class="keyword">get</span>;<span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Required, MaxLength(50)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> LastName &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//public string Username &#123; get; set; &#125;</span></span><br><span class="line">    [<span class="meta">Required, MaxLength(50)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Username</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">get</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> _validUsername;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> FullName =&gt; FirstName+ <span class="string">&quot; &quot;</span> + LastName;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//[NotMapped]</span></span><br><span class="line">    <span class="comment">//public byte[] Checksum &#123; get; set; &#125;</span></span><br><span class="line">    <span class="keyword">public</span> ICollection&lt;Order&gt; Orders &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SetUsername</span>(<span class="params"><span class="built_in">string</span> username</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> specialCharacters = <span class="string">&quot;.*(?=.*[@#$%^&amp;+=()&#123;&#125;&lt;&gt;!~_*?]).*$&quot;</span>;</span><br><span class="line">        <span class="built_in">bool</span> usernameConatinsSpecialCharacters</span><br><span class="line">            = username.Any(x =&gt; specialCharacters.Contains(x));</span><br><span class="line">        <span class="keyword">if</span>(usernameConatinsSpecialCharacters)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ArgumentException(<span class="string">&quot;Special characters are not allowed in username&quot;</span>, username);</span><br><span class="line">        &#125;</span><br><span class="line">        _validUsername = username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">object</span>&gt; _data = <span class="keyword">new</span> Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">object</span>&gt;();</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">object</span> <span class="keyword">this</span>[<span class="built_in">string</span> key]</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">get</span> =&gt; _data[key];</span><br><span class="line">        <span class="keyword">set</span> =&gt; _data[key]= <span class="keyword">value</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Address ShipToAddress &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> Address BillToAddress &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 DbContext 類別中 OnModelCreating Method 設定 <strong>OwnsOne</strong>，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> 你的<span class="title">Context</span>: <span class="title">DbContext</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// ... other codes ...</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">virtual</span> DbSet&lt;Customer&gt; Customers &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; = <span class="literal">null</span>!;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnModelCreating</span>(<span class="params">ModelBuilder modelBuilder</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        modelBuilder.Entity&lt;Customer&gt;(entity =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            entity.HasKey(e=&gt;e.Id);</span><br><span class="line">            <span class="comment">//entity.Property&lt;DateTime&gt;(&quot;LastUpdated&quot;).HasDefaultValue(new DateTime(2020, 4, 9));</span></span><br><span class="line">            <span class="comment">// codes ...</span></span><br><span class="line">            entity.OwnsOne(e =&gt; e.ShipToAddress)</span><br><span class="line">                .Property(e =&gt; e.Street)</span><br><span class="line">                .IsRequired();</span><br><span class="line"></span><br><span class="line">            entity.OwnsOne(e =&gt; e.BillToAddress)</span><br><span class="line">                .Property(e =&gt; e.Street)</span><br><span class="line">                .IsRequired();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更新到 DB 後，就會新增 6 個欄位，如下，</p><img src="/2023/03/23/ef-owned-entity-types/01.png" class="" title="Default"><p>接再來，將 <strong>ShipToAddress</strong> 中 <strong>Street</strong> 的欄位名稱改成 <strong>ShiptoStreet</strong>，<br>將 <strong>BillToAddress</strong> 屬性資料改存到 <strong>BillToAddresses</strong> 資料表。<br>在 DbContext 類別中 OnModelCreating Method 調整，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> 你的<span class="title">Context</span>: <span class="title">DbContext</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// ... other codes ...</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">virtual</span> DbSet&lt;Customer&gt; Customers &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; = <span class="literal">null</span>!;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnModelCreating</span>(<span class="params">ModelBuilder modelBuilder</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        modelBuilder.Entity&lt;Customer&gt;(entity =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            entity.HasKey(e=&gt;e.Id);</span><br><span class="line">            <span class="comment">//entity.Property&lt;DateTime&gt;(&quot;LastUpdated&quot;).HasDefaultValue(new DateTime(2020, 4, 9));</span></span><br><span class="line">            <span class="comment">// codes ...</span></span><br><span class="line">            entity.OwnsOne(e =&gt; e.ShipToAddress)</span><br><span class="line">                .Property(e =&gt; e.Street)</span><br><span class="line">                .IsRequired()</span><br><span class="line">                .HasColumnName(<span class="string">&quot;ShipToAddress&quot;</span>);</span><br><span class="line"></span><br><span class="line">            entity.OwnsOne(e =&gt; e.BillToAddress)</span><br><span class="line">                .ToTable(<span class="string">&quot;BillToAddresses&quot;</span>)</span><br><span class="line">                .Property(e =&gt; e.Street)</span><br><span class="line">                .IsRequired();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>透過 <code>update-database</code> 後，<br>DB 中 <strong>Customers</strong>資料表中欄位名稱從 <strong>ShipToAddress_Street</strong> 已經改成 <strong>ShiptoStreet</strong>，<br>也新增了 <strong>BillToAddress</strong> 。</p><img src="/2023/03/23/ef-owned-entity-types/02.png" class="" title="BillToAddress"><h3 id="參考資訊"><a href="#參考資訊" class="headerlink" title="參考資訊"></a>參考資訊</h3><p><a href="https://learn.microsoft.com/zh-tw/ef/core/modeling/owned-entities">擁有的實體類型</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;像&lt;strong&gt;地址&lt;/strong&gt;的物件，在 EF Core 中有那些的設定方式呢?&lt;br&gt;預設會是在原有的 Table 中增加欄位。</summary>
      
    
    
    
    
    <category term="EF" scheme="https://rainmakerho.github.io/tags/EF/"/>
    
    <category term="Owned Entity Types" scheme="https://rainmakerho.github.io/tags/Owned-Entity-Types/"/>
    
    <category term="OwnsOne" scheme="https://rainmakerho.github.io/tags/OwnsOne/"/>
    
    <category term="ValueObject" scheme="https://rainmakerho.github.io/tags/ValueObject/"/>
    
  </entry>
  
  <entry>
    <title>EF Core Indexer properties and Property bag entity types</title>
    <link href="https://rainmakerho.github.io/2023/03/20/ef-indexer-properties/"/>
    <id>https://rainmakerho.github.io/2023/03/20/ef-indexer-properties/</id>
    <published>2023-03-20T08:34:17.000Z</published>
    <updated>2023-03-23T09:41:45.426Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>假設 Entity Class 要提供 Dictionary 的屬性，<br>可以使用 <strong>Indexer Properties</strong>，例如，<br><code>customer[&quot;CustomerType&quot;]</code>。<br>如果不想在原有的 Table 中新增欄位，<br>則可以使用 <strong>property bag entity types</strong>，例如，<br><code>customerExt[&quot;CustomerType&quot;]</code><br>以下我們來看一下做法。</p><h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><h4 id="Indexer-Properties"><a href="#Indexer-Properties" class="headerlink" title="Indexer Properties"></a>Indexer Properties</h4><p><code>customer[&quot;CustomerType&quot;]</code></p><p>1.在 Customer Class 中加入 <code>Dictionary</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Customer</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> Id &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> FirstName &#123; <span class="keyword">get</span>;<span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> LastName &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> FullName =&gt; FirstName+ <span class="string">&quot; &quot;</span> + LastName;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//Indexer Properties</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">object</span>&gt; _data = <span class="keyword">new</span> Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">object</span>&gt;();</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">object</span> <span class="keyword">this</span>[<span class="built_in">string</span> key]</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">get</span> =&gt; _data[key];</span><br><span class="line">        <span class="keyword">set</span> =&gt; _data[key]= <span class="keyword">value</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.在 DbContext 類別中 OnModelCreating Method 設定 IndexerProperty，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> 你的<span class="title">Context</span>: <span class="title">DbContext</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// ... other codes ...</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">virtual</span> DbSet&lt;Customer&gt; Customers &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; = <span class="literal">null</span>!;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnModelCreating</span>(<span class="params">ModelBuilder modelBuilder</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        modelBuilder.Entity&lt;Customer&gt;(entity =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            entity.HasKey(e=&gt;e.Id);</span><br><span class="line">            <span class="comment">//entity.Property&lt;DateTime&gt;(&quot;LastUpdated&quot;).HasDefaultValue(new DateTime(2020, 4, 9));</span></span><br><span class="line">            entity.IndexerProperty&lt;DateTime&gt;(<span class="string">&quot;LastUpdated&quot;</span>)</span><br><span class="line">                .HasDefaultValue(DateTime.UtcNow);</span><br><span class="line">            entity.IndexerProperty&lt;<span class="built_in">string</span>&gt;(<span class="string">&quot;CustomerType&quot;</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以當 <code>update-database</code> 後，Customers 會增加 2 個欄位(LastUpdated 及 CustomerType)</p><img src="/2023/03/20/ef-indexer-properties/01.png" class="" title="Indexer"><p>3.存&#x2F;取值的方式如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> _dbContext = <span class="keyword">new</span> 你的Context();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> customer = _dbContext</span><br><span class="line">    .Customers</span><br><span class="line">    .AsNoTracking()</span><br><span class="line">    .First();</span><br><span class="line"></span><br><span class="line"><span class="comment">//取值</span></span><br><span class="line"><span class="keyword">var</span> customerType = customer[<span class="string">&quot;CustomerType&quot;</span>];</span><br><span class="line"><span class="keyword">var</span> lastUpdated = customer[<span class="string">&quot;LastUpdated&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//要改值</span></span><br><span class="line">_dbContext.Attach(customer);</span><br><span class="line">customer[<span class="string">&quot;CustomerType&quot;</span>] = <span class="string">&quot;VIP&quot;</span>;</span><br><span class="line">customer[<span class="string">&quot;LastUpdated&quot;</span>] = <span class="keyword">new</span> DateTime(<span class="number">2020</span>, <span class="number">4</span>, <span class="number">9</span>);</span><br><span class="line"><span class="comment">//屬性不在會被忽略掉，不會有錯誤</span></span><br><span class="line">customer[<span class="string">&quot;沒欄位&quot;</span>] = <span class="string">&quot;ABC&quot;</span>;</span><br><span class="line">_dbContext.SaveChanges();</span><br></pre></td></tr></table></figure><h4 id="Property-bag-entity-types"><a href="#Property-bag-entity-types" class="headerlink" title="Property bag entity types"></a>Property bag entity types</h4><p>存到另一個　 Class ，例如，<br><code>customerExt[&quot;CustomerType&quot;]</code></p><p>1.建立 <code>DbSet&lt;Dictionary&lt;string, object&gt;&gt;</code> 及設定 <code>SharedTypeEntity</code><br>例如建立 Customers 及 Orders 的擴充 Table(CustomerExts, OrderExts)</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> 你的<span class="title">Context</span>: <span class="title">DbContext</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// ... other codes ...</span></span><br><span class="line">    <span class="keyword">public</span> DbSet&lt;Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">object</span>&gt;&gt; CustomerExts =&gt; Set&lt;Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">object</span>&gt;&gt;(<span class="string">&quot;CustomerExts&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> DbSet&lt;Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">object</span>&gt;&gt; OrderExts =&gt; Set&lt;Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">object</span>&gt;&gt;(<span class="string">&quot;OrderExts&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnModelCreating</span>(<span class="params">ModelBuilder modelBuilder</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        modelBuilder.SharedTypeEntity&lt;Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">object</span>&gt;&gt;(</span><br><span class="line">            <span class="string">&quot;CustomerExts&quot;</span>, c =&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                c.Property&lt;<span class="built_in">int</span>&gt;(<span class="string">&quot;Id&quot;</span>);</span><br><span class="line">                c.Property&lt;<span class="built_in">int</span>&gt;(<span class="string">&quot;CustomerId&quot;</span>);</span><br><span class="line">                c.Property&lt;<span class="built_in">string</span>&gt;(<span class="string">&quot;CustomerType&quot;</span>);</span><br><span class="line">                c.Property&lt;DateTime&gt;(<span class="string">&quot;LastUpdated&quot;</span>);</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">        modelBuilder.SharedTypeEntity&lt;Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">object</span>&gt;&gt;(</span><br><span class="line">            <span class="string">&quot;OrderExts&quot;</span>, c =&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                c.Property&lt;<span class="built_in">int</span>&gt;(<span class="string">&quot;Id&quot;</span>);</span><br><span class="line">                c.Property&lt;<span class="built_in">int</span>&gt;(<span class="string">&quot;OrderId&quot;</span>);</span><br><span class="line">                c.Property&lt;<span class="built_in">string</span>&gt;(<span class="string">&quot;OrderType&quot;</span>);</span><br><span class="line">                c.Property&lt;DateTime&gt;(<span class="string">&quot;LastUpdated&quot;</span>);</span><br><span class="line">            &#125;);</span><br><span class="line">        <span class="comment">// ... other codes ...</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.存取方式如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> _dbContext = <span class="keyword">new</span> 你的Context();</span><br><span class="line"><span class="comment">//新增</span></span><br><span class="line"><span class="keyword">var</span> newCustomerExt = <span class="keyword">new</span> Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">object</span>&gt;</span><br><span class="line">&#123;</span><br><span class="line">    &#123;<span class="string">&quot;CustomerId&quot;</span>, <span class="number">3</span> &#125;,</span><br><span class="line">    &#123;<span class="string">&quot;CustomerType&quot;</span>, <span class="string">&quot;Invalid&quot;</span> &#125;,</span><br><span class="line">    &#123;<span class="string">&quot;LastUpdated&quot;</span>, <span class="keyword">new</span> DateTime(<span class="number">2020</span>, <span class="number">9</span>, <span class="number">25</span>) &#125;</span><br><span class="line">&#125;;</span><br><span class="line">_dbContext.CustomerExts.Add(newCustomerExt);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> newOrderExt = <span class="keyword">new</span> Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">object</span>&gt;</span><br><span class="line">&#123;</span><br><span class="line">    &#123;<span class="string">&quot;OrderId&quot;</span>, <span class="number">1</span> &#125;,</span><br><span class="line">    &#123;<span class="string">&quot;OrderType&quot;</span>, <span class="string">&quot;NeedConfirm&quot;</span> &#125;,</span><br><span class="line">    &#123;<span class="string">&quot;LastUpdated&quot;</span>, <span class="keyword">new</span> DateTime(<span class="number">2020</span>, <span class="number">9</span>, <span class="number">25</span>) &#125;</span><br><span class="line">&#125;;</span><br><span class="line">_dbContext.OrderExts.Add(newOrderExt);</span><br><span class="line">_dbContext.SaveChanges();</span><br><span class="line"></span><br><span class="line"><span class="comment">//更新</span></span><br><span class="line"><span class="keyword">var</span> customerExt = _dbContext.CustomerExts.First();</span><br><span class="line">customerExt[<span class="string">&quot;CustomerType&quot;</span>] = <span class="string">&quot;VIP&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> orderExt = _dbContext.OrderExts.First();</span><br><span class="line">orderExt[<span class="string">&quot;OrderType&quot;</span>] = <span class="string">&quot;Confirmed&quot;</span>;</span><br><span class="line"></span><br><span class="line">_dbContext.SaveChanges();</span><br></pre></td></tr></table></figure><p>DB 就會建立 CustomerExts 及 OrderExts 資料表，</p><img src="/2023/03/20/ef-indexer-properties/02.png" class="" title="CustomerExts"><img src="/2023/03/20/ef-indexer-properties/03.png" class="" title="OrderExts"><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://learn.microsoft.com/zh-tw/ef/core/modeling/shadow-properties">陰影和索引子屬性</a><br><a href="https://learn.microsoft.com/en-us/dotnet/csharp/programming-guide/indexers/">Indexers</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;假設 Entity Class 要提供 Dictionary 的屬性，&lt;br&gt;可以使用 &lt;strong&gt;Indexer Properties</summary>
      
    
    
    
    
    <category term="EF" scheme="https://rainmakerho.github.io/tags/EF/"/>
    
    <category term="Indexer" scheme="https://rainmakerho.github.io/tags/Indexer/"/>
    
    <category term="property bag entity types" scheme="https://rainmakerho.github.io/tags/property-bag-entity-types/"/>
    
    <category term="Dictionary" scheme="https://rainmakerho.github.io/tags/Dictionary/"/>
    
    <category term="SharedTypeEntity" scheme="https://rainmakerho.github.io/tags/SharedTypeEntity/"/>
    
  </entry>
  
  <entry>
    <title>EF Core Shadow Properties</title>
    <link href="https://rainmakerho.github.io/2023/03/20/ef-shadow-properties/"/>
    <id>https://rainmakerho.github.io/2023/03/20/ef-shadow-properties/</id>
    <published>2023-03-20T07:15:31.000Z</published>
    <updated>2023-03-20T09:03:41.860Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>使用 EF Core 想要 DB Table 中有欄位，但不想出現在 Class 中的屬性要怎麼做呢?<br>例如，要在一個 Customers Table 中新增一個 LastUpdated 的欄位，但不想在 Customer Class 屬性中對應。<br>這時可以設定為 陰影屬性</p><h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><p>Customer 欄位中並沒有 <code>LastUpdated</code> 這個屬性</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Customer</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> Id &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> FirstName &#123; <span class="keyword">get</span>;<span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> LastName &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> FullName =&gt; FirstName+ <span class="string">&quot; &quot;</span> + LastName;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 DbContext 類別中 OnModelCreating Method 設定 Property，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> 你的<span class="title">Context</span>: <span class="title">DbContext</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// ... other codes ...</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">virtual</span> DbSet&lt;Customer&gt; Customers &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; = <span class="literal">null</span>!;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnModelCreating</span>(<span class="params">ModelBuilder modelBuilder</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        modelBuilder.Entity&lt;Customer&gt;(entity =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            entity.HasKey(e=&gt;e.Id);</span><br><span class="line">            entity.Property&lt;DateTime&gt;(<span class="string">&quot;LastUpdated&quot;</span>).HasDefaultValue(<span class="keyword">new</span> DateTime(<span class="number">2020</span>, <span class="number">4</span>, <span class="number">9</span>));</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>當更新到 DB 後，Customers 會有一個 <strong>LastUpdated</strong> 欄位</p><p>要取得它的值，需要透過 EF Property 來取得，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> _dbContext = <span class="keyword">new</span> 你的Context();</span><br><span class="line"></span><br><span class="line"><span class="comment">//方法1</span></span><br><span class="line"><span class="keyword">var</span> customer = _dbContext</span><br><span class="line">    .Customers</span><br><span class="line">    .AsTracking()</span><br><span class="line">    .First();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> lastUpdated = _dbContext.Entry(customer).Property&lt;DateTime&gt;(<span class="string">&quot;LastUpdated&quot;</span>).CurrentValue;</span><br><span class="line"></span><br><span class="line"><span class="comment">//方法2</span></span><br><span class="line"><span class="keyword">var</span> lastUpdated2 = _dbContext</span><br><span class="line">    .Customers</span><br><span class="line">    .AsNoTracking()</span><br><span class="line">    .Select(c =&gt; EF.Property&lt;DateTime&gt;(c, <span class="string">&quot;LastUpdated&quot;</span>))</span><br><span class="line">    .First();</span><br><span class="line"></span><br><span class="line"><span class="comment">//方法3</span></span><br><span class="line"><span class="keyword">var</span> lastUpdated2 = _dbContext</span><br><span class="line">    .Customers</span><br><span class="line">    .Select(c =&gt; EF.Property&lt;DateTime&gt;(c, <span class="string">&quot;LastUpdated&quot;</span>))</span><br><span class="line">    .First();</span><br></pre></td></tr></table></figure><p>更新欄位值則是設定 CurrentValue</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> _dbContext = <span class="keyword">new</span> 你的Context();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> customer = _dbContext</span><br><span class="line">    .Customers</span><br><span class="line">    .AsTracking()</span><br><span class="line">    .First();</span><br><span class="line"></span><br><span class="line">_dbContext.Entry(customer).Property&lt;DateTime&gt;(<span class="string">&quot;LastUpdated&quot;</span>).CurrentValue = DateTime.Now;</span><br><span class="line"></span><br><span class="line">_dbContext.SaveChanges();</span><br></pre></td></tr></table></figure><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://learn.microsoft.com/zh-tw/ef/core/modeling/shadow-properties">陰影和索引子屬性</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;使用 EF Core 想要 DB Table 中有欄位，但不想出現在 Class 中的屬性要怎麼做呢?&lt;br&gt;例如，要在一個 Custome</summary>
      
    
    
    
    
    <category term="EF" scheme="https://rainmakerho.github.io/tags/EF/"/>
    
    <category term="Shadow" scheme="https://rainmakerho.github.io/tags/Shadow/"/>
    
  </entry>
  
  <entry>
    <title>ASPOSE Word 另存成 PDF 只有自造字(EUDC)有顯示，其他字變成了黑點</title>
    <link href="https://rainmakerho.github.io/2023/03/17/aspose-word-pdf-miss-system-fonts/"/>
    <id>https://rainmakerho.github.io/2023/03/17/aspose-word-pdf-miss-system-fonts/</id>
    <published>2023-03-17T06:28:25.000Z</published>
    <updated>2023-03-17T06:56:41.634Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>同事反應參考 <a href="https://dotblogs.com.tw/rainmaker/2016/03/10/164258">透過 Aspose.Words 將 Word 轉出 PDF 時，自造字(EUDC) 可以顯示出來</a> 這篇的做法轉出 PDF 內容，自造字(EUDC)有顯示出來，但其他字卻變成了<strong>黑點</strong>。</p><img src="/2023/03/17/aspose-word-pdf-miss-system-fonts/01.png" class="" title="eudc-pdf"><h3 id="除錯"><a href="#除錯" class="headerlink" title="除錯"></a>除錯</h3><p>1.設定 EUDC 檔案與系統字型連結<br>當拿到字造字型檔(TTE)放到電腦後，要設定機碼讓它連結到系統字型，<br>機碼目錄為 <code>電腦\HKEY_CURRENT_USER\EUDC\950</code>，<br>機碼<code>SystemDefaultEUDCFont</code>，值為<code>EUDC檔案目錄</code>，如下，</p><img src="/2023/03/17/aspose-word-pdf-miss-system-fonts/02.png" class="" title="eudc-regedit"><p>2.重開機<br>重開機後，可直接開啟 Word 檔，另存成 PDF 檔案來驗證 一般字及自造字 是否完整呈現</p><p>3.透過 Aspose.Words 來另存 PDF 檔<br>安裝 Aspose.Words Nuget 套件</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Aspose.Words.Document doc = <span class="keyword">new</span> Aspose.Words.Document(<span class="string">@&quot;c:\eudc\t1.doc&quot;</span>);</span><br><span class="line">FontSettings.DefaultInstance.SetFontsSources(<span class="keyword">new</span> FontSourceBase[]</span><br><span class="line">    &#123; <span class="keyword">new</span> SystemFontSource(), <span class="keyword">new</span> FileFontSource(<span class="string">@&quot;c:\eudc\RM.TTE&quot;</span>) &#125;);</span><br><span class="line">doc.Save(<span class="string">@&quot;c:\eudc\t3.pdf&quot;</span>);</span><br></pre></td></tr></table></figure><p>查看 t3.pdf 一般字及自造字 都是有呈現的。</p><p>詢問同事後，同事給了 VB.NET 的程式碼，如下，</p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Dim</span> doc = <span class="built_in">New</span> Aspose.Words.Document(<span class="string">&quot;c:\eudc\t1.doc&quot;</span>)</span><br><span class="line"><span class="keyword">Dim</span> eudcFontSource = <span class="built_in">New</span> FileFontSource(<span class="string">&quot;c:\eudc\RM.TTE&quot;</span>)</span><br><span class="line">FontSettings.DefaultInstance.SetFontsSources(&#123;eudcFontSource&#125;)</span><br><span class="line">doc.Save(<span class="string">&quot;c:\eudc\t5.pdf&quot;</span>)</span><br></pre></td></tr></table></figure><p>看了一下，原來是少了給 <strong>SystemFontSource</strong> ，補足 <strong>SystemFontSource</strong> 就沒問題了</p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Dim</span> doc = <span class="built_in">New</span> Aspose.Words.Document(<span class="string">&quot;c:\eudc\t1.doc&quot;</span>)</span><br><span class="line"><span class="keyword">Dim</span> sysFontSource = <span class="built_in">New</span> SystemFontSource()</span><br><span class="line"><span class="keyword">Dim</span> eudcFontSource = <span class="built_in">New</span> FileFontSource(<span class="string">&quot;c:\eudc\RM.TTE&quot;</span>)</span><br><span class="line">FontSettings.DefaultInstance.SetFontsSources(&#123;sysFontSource, eudcFontSource&#125;)</span><br><span class="line">doc.Save(<span class="string">&quot;c:\eudc\t5.pdf&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://dotblogs.com.tw/rainmaker/2016/03/10/164258">透過 Aspose.Words 將 Word 轉出 PDF 時，自造字(EUDC) 可以顯示出來</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;同事反應參考 &lt;a href=&quot;https://dotblogs.com.tw/rainmaker/2016/03/10/164258&quot;&gt;透</summary>
      
    
    
    
    
    <category term="PDF" scheme="https://rainmakerho.github.io/tags/PDF/"/>
    
    <category term="Aspose" scheme="https://rainmakerho.github.io/tags/Aspose/"/>
    
    <category term="Word" scheme="https://rainmakerho.github.io/tags/Word/"/>
    
    <category term="EUDC" scheme="https://rainmakerho.github.io/tags/EUDC/"/>
    
    <category term="SystemFontSource" scheme="https://rainmakerho.github.io/tags/SystemFontSource/"/>
    
    <category term="SetFontsSources" scheme="https://rainmakerho.github.io/tags/SetFontsSources/"/>
    
    <category term="FileFontSource" scheme="https://rainmakerho.github.io/tags/FileFontSource/"/>
    
    <category term="TTE" scheme="https://rainmakerho.github.io/tags/TTE/"/>
    
  </entry>
  
  <entry>
    <title>為什麼 Crystal Report 匯出成 PDF 內容都是白的?</title>
    <link href="https://rainmakerho.github.io/2023/03/15/crystal-report-export-pdf-blank/"/>
    <id>https://rainmakerho.github.io/2023/03/15/crystal-report-export-pdf-blank/</id>
    <published>2023-03-15T08:12:37.000Z</published>
    <updated>2023-03-17T06:27:45.679Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>最近同事詢問一個 Crystal Report 匯出成 PDF 檔案時，在 Browser 中呈現會全都是空白的內容。<br>透過 Adobe Reader 開啟卻會出現「<strong>開啟此文件時出錯。 檔案已損壞且無法修復。</strong>」的錯誤。</p><h3 id="除錯"><a href="#除錯" class="headerlink" title="除錯"></a>除錯</h3><p>程式碼很簡單，就是利用 ReportDocument 將報表檔 Load 進來，並設定資料庫連線及報表參數後，<br>呼叫 ExportToHttpResponse 匯出 PDF</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ... ReportDocument 將報表檔 Load 進來，並設定資料庫連線及報表參數 ...</span></span><br><span class="line"><span class="keyword">this</span>.Response.ContentType = <span class="string">&quot;application/pdf&quot;</span>;</span><br><span class="line">rptDoc.ExportToHttpResponse(ExportFormatType.PortableDocFormat, <span class="literal">true</span>, <span class="keyword">this</span>.Response, <span class="literal">true</span>, <span class="string">&quot;報表名稱&quot;</span>);</span><br><span class="line"><span class="keyword">this</span>.Response.Flush()</span><br><span class="line"><span class="keyword">this</span>.Response.End();</span><br></pre></td></tr></table></figure><p><strong>檔案已損壞且無法修復</strong> 有可能是檔案內容有可能被更改，所以導致不符合 PDF 的規範。<br>透過 Notepad++ 開起來比較，正常的 PDF 檔案它的編碼是「ANSI」，<br>損壞的 PDF 檔案它的編碼卻是「UTF8」。</p><p>1.如果調整程式，透過 ExportToDisk 存檔在 Server 上，產出的 PDF 檔案是 OK 的。</p><p>2.不透過 ReportDocument ，直接 Response.WriteFile(正常的 PDF 檔)，結果 PDF 編碼又變成 UTF8 ，Chrome 來看也都是空空的。</p><p>3.在 PostBack 的事件中，Response.WriteFile(正常的 PDF 檔)，結果 PDF 編碼是 ANSI ，檔案就正常了。</p><p>4.行為 GET ，從 Server 端到 Client 之中，應該有什麼程序在處理， 導致<strong>破壞</strong>了原本正常的 PDF 內容。</p><p>5.這種程序在 IIS 上有可能是 ISAPI 篩選器，ASP.NET 中有可能是 HttpModule or HttpHandler，ASP.NET Core 就是 Middleware</p><p>6.檢查 IIS 上並無 ISAPI 篩選器</p><p>7.檢查 web.config 中並沒有設定特別的 HttpModule 或是 HttpHandler 8.檢查 global.asax &#x3D;&gt; 結果在 Application_BeginRequest 中，有設定 <a href="https://learn.microsoft.com/en-us/dotnet/api/system.web.httpresponse.filter?view=netframework-4.8">HttpResponse.Filter</a></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">Application_BeginRequest</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (Request.HttpMethod == <span class="string">&quot;GET&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (Request.AppRelativeCurrentExecutionFilePath.EndsWith(<span class="string">&quot;.aspx&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            Response.Filter = <span class="keyword">new</span> ScriptDeferFilter(Response);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那個 <a href="https://weblogs.asp.net/omarzabir/fast-page-loading-by-moving-asp-net-ajax-scripts-after-visible-content">ScriptDeferFilter</a> 是將頁面中的 script tag 移到最後，並會以 UTF8 輸出，所以就導致匯出 PDF 發生錯誤</p><p>所以調整程式在匯出 Report PDF 那程式程不要使用 Filter 即可。</p><blockquote><p>原來是 Filter 惹的禍，QQ</p></blockquote><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://learn.microsoft.com/en-us/dotnet/api/system.web.httpresponse.filter?view=netframework-4.8">HttpResponse.Filter</a><br><a href="https://www.c-sharpcorner.com/article/tip-how-to-export-a-crystal-report-to-a-pdf-file-programmat/">How to Export a Crystal Report to a PDF file Programmatically in ASP.NET?</a><br><a href="https://rainmakerho.github.io/2022/11/15/Path-GetTempFileName-IOException-The-file-exists/">C# System.IO.Path.GetTempFileName 會產生 IOException 檔案存在(The file exists)的錯誤</a><br><a href="https://weblogs.asp.net/omarzabir/fast-page-loading-by-moving-asp-net-ajax-scripts-after-visible-content">Fast page loading by moving ASP.NET AJAX scripts after visible content</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;最近同事詢問一個 Crystal Report 匯出成 PDF 檔案時，在 Browser 中呈現會全都是空白的內容。&lt;br&gt;透過 Adob</summary>
      
    
    
    
    
    <category term="ExportToHttpResponse" scheme="https://rainmakerho.github.io/tags/ExportToHttpResponse/"/>
    
    <category term="Crystal Report" scheme="https://rainmakerho.github.io/tags/Crystal-Report/"/>
    
    <category term="Response.Filter" scheme="https://rainmakerho.github.io/tags/Response-Filter/"/>
    
    <category term="Blank" scheme="https://rainmakerho.github.io/tags/Blank/"/>
    
  </entry>
  
  <entry>
    <title>ABP Domain Events</title>
    <link href="https://rainmakerho.github.io/2023/03/14/abp-domain-events/"/>
    <id>https://rainmakerho.github.io/2023/03/14/abp-domain-events/</id>
    <published>2023-03-14T03:47:00.000Z</published>
    <updated>2023-03-14T05:20:47.216Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>以下介紹一下 ABP 提供的 Publish Event 的方式(local event 及 distributed event)，</p><h4 id="local-event-bus"><a href="#local-event-bus" class="headerlink" title="local event bus"></a>local event bus</h4><p>在 Aggreate Root Entity 使用 <code>AddLocalEvent(event物件);</code>來加入要被 Publish 的 Event ，<br>透過 <code>ILocalEventHandler&lt;event物件&gt;</code> 來訂閱要 Handle 的 Event，例如，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SetTime</span>(<span class="params">DateTime startTime, DateTime endTime</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (startTime &gt; endTime)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(EventHubErrorCodes</span><br><span class="line">.EndTimeCantBeEarlierThanStartTime);</span><br><span class="line">&#125;</span><br><span class="line">StartTime = startTime;</span><br><span class="line">EndTime = endTime;</span><br><span class="line"><span class="keyword">if</span> (!IsDraft)</span><br><span class="line">&#123;</span><br><span class="line">AddLocalEvent(<span class="keyword">new</span> EventTimeChangedEventData(<span class="keyword">this</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">EventTimeChangedEventData</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span> Event Event &#123;<span class="keyword">get</span>;&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">EventTimeChangedEventData</span>(<span class="params">Event @<span class="keyword">event</span></span>)</span></span><br><span class="line">&#123;</span><br><span class="line">Event = @event;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">UserEmailingHandler</span> :</span><br><span class="line"><span class="title">ILocalEventHandler</span>&lt;<span class="title">EventTimeChangedEventData</span>&gt;,</span><br><span class="line"><span class="title">ITransientDependency</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">HandleEventAsync</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">EventTimeChangedEventData eventData</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">var</span> @event = eventData.Event;</span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> Send email to the registered users!</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Handler 如果發生錯誤沒有 Handle 的話，會讓 DB 交易 Rollback</li></ul><p>在 AppService 也可以使用 eventbus，注入 <code>ILocalEventBus</code>，再透過 <code>PublishAsync</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">EventAppService</span> : <span class="title">EventHubAppService</span>,</span><br><span class="line"><span class="title">IEventAppService</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> IRepository&lt;Event, Guid&gt;</span><br><span class="line">_eventRepository;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> ILocalEventBus _localEventBus;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">EventAppService</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">IRepository&lt;Event, Guid&gt; eventRepository,</span></span></span><br><span class="line"><span class="params"><span class="function">ILocalEventBus localEventBus</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">_eventRepository = eventRepository;</span><br><span class="line">_localEventBus = localEventBus;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">SetTimeAsync</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">Guid eventId, DateTime startTime, DateTime endTime</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">var</span> @event = <span class="keyword">await</span> _eventRepository.GetAsync(eventId);</span><br><span class="line">@event.SetTime(startTime, endTime);</span><br><span class="line"><span class="keyword">await</span> _eventRepository.UpdateAsync(@event);</span><br><span class="line"><span class="keyword">await</span> _localEventBus.PublishAsync(</span><br><span class="line"><span class="keyword">new</span> EventTimeChangedEventData(@event));</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最好是在 Domain Services or Entity 中 Publish 會來的比較合適<br>因為在 AppService 可能會忘了 Publish</p><p>Local events 很適合用來實作一些 side-effects，<br>例如，某些狀態改變時，要做某些 Action<br>像上述範例是使用 Email 通知</p><ul><li>不應該將 商業邏輯流程 交給 事件處理，以防整個過程難以掌控</li><li>Domain Event(包含簡單資訊，Id, CustomId, ClientId)</li><li>Intergation Event (包含詳細資訊，Id, CustomId, CustomName, ClientId, ClientName…)</li></ul><h4 id="distributed-event-bus"><a href="#distributed-event-bus" class="headerlink" title="distributed event bus"></a>distributed event bus</h4><p>透過 message broker service, 像是 RabbitMQ or Kafka<br>在 Aggreate Root Entity 使用 <code>AddDistributedEvent(ETO物件);</code>來加入要被 Publish 的 Event ，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SetTime</span>(<span class="params">DateTime startTime, DateTime endTime</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (startTime &gt; endTime)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(EventHubErrorCodes</span><br><span class="line">.EndTimeCantBeEarlierThanStartTime);</span><br><span class="line">&#125;</span><br><span class="line">StartTime = startTime;</span><br><span class="line">EndTime = endTime;</span><br><span class="line"><span class="keyword">if</span> (!IsDraft)</span><br><span class="line">&#123;</span><br><span class="line">AddDistributedEvent(<span class="keyword">new</span> EventTimeChangedEto&#123;</span><br><span class="line">EventId = Id, Title = Title,</span><br><span class="line">StartTime = StartTime, EndTime = EndTime</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>跟 local event bus 不同的是，這裡傳遞的是類似 DTO 的 ETO(Event Transfer Object)</li></ul><p>其他地方使用則注入 <code>IDistributeEventBus</code> ，然後使用 <code>PublishAsync</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">await</span> _distributedEventBus.PublishAsync(ew EventTimeChangedEto&#123;</span><br><span class="line">EventId = Id, Title = Title,</span><br><span class="line">StartTime = StartTime, EndTime = EndTime</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">UserEmailingHandler</span> :</span><br><span class="line"><span class="title">IDistributedEventHandler</span>&lt;<span class="title">EventTimeChangedEventEto</span>&gt;,</span><br><span class="line"><span class="title">ITransientDependency</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">HandleEventAsync</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">EventTimeChangedEventData eventData</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">var</span> @event = eventData.Event;</span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> Send email to the registered users!</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>An aggregate should preserve its validity and consistency by implementing business rules.<br>The domain layer is used to implement the core, application-independent domain logic of the solution.</p></blockquote><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://docs.abp.io/en/abp/latest/Event-Bus">ABP Event Bus</a><br><a href="https://eopinion.com/should-you-publish-domain-events-or-integration-events/">Should you publish Domain Events or Integration Events?</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;以下介紹一下 ABP 提供的 Publish Event 的方式(local event 及 distributed event)，&lt;/p&gt;</summary>
      
    
    
    
    
    <category term="ABP" scheme="https://rainmakerho.github.io/tags/ABP/"/>
    
    <category term="Domain Events" scheme="https://rainmakerho.github.io/tags/Domain-Events/"/>
    
    <category term="AddLocalEvent" scheme="https://rainmakerho.github.io/tags/AddLocalEvent/"/>
    
    <category term="ILocalEventHandler" scheme="https://rainmakerho.github.io/tags/ILocalEventHandler/"/>
    
    <category term="AddDistributedEvent" scheme="https://rainmakerho.github.io/tags/AddDistributedEvent/"/>
    
  </entry>
  
  <entry>
    <title>Entity Framework Core 產生 Migration DB Script</title>
    <link href="https://rainmakerho.github.io/2023/03/09/ef-generate-migration-scripts/"/>
    <id>https://rainmakerho.github.io/2023/03/09/ef-generate-migration-scripts/</id>
    <published>2023-03-09T06:20:45.000Z</published>
    <updated>2023-03-09T06:59:54.299Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在 Visual Studio 透過 <code>Add-Migration</code> 後，<br>可以透過 <code>Update-Database</code> 將這些 更新到 DB 之中。<br>那如果想要產生 SQL Script ，再拿 SQL Script 手動更新到 DB 之中呢?</p><h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><p>這時可以參考 <a href="https://learn.microsoft.com/zh-tw/ef/core/managing-schemas/migrations/applying?tabs=vs">EF Applying Migrations</a>，<br>在 Visual Studio 透過 <code>Script-Migration</code> 來產生 SQL Script，<br>例如要產生最近一次的 SQL Script ，<br>在 Visual Studio 的 <strong>套件管理器主控台</strong> ，預設專案選擇 <strong>EntityFrameworkCore</strong> 那個專案，<br>輸入 <code>Script-Migration 前次Migration 這次Migration</code>，</p><img src="/2023/03/09/ef-generate-migration-scripts/01.png" class="" title="Script-Migration"><p>如果要在 .NET CLI 中執行，則開啟命令視窗，並在 <strong>EntityFrameworkCore</strong> 那個專案的目錄下，<br>執行 <code>dotnet ef migrations script</code> <strong>-o</strong> 是指定輸出的檔名，如下，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet ef migrations script 20220425092213_add_LicenseAssembly_Deletion_Columns 20230303063806_Upgraded_To_Abp_5 -o abp5.sql</span><br></pre></td></tr></table></figure><img src="/2023/03/09/ef-generate-migration-scripts/02.png" class="" title="dotnet ef"><p>這樣就可以將這些 SQL Script 手動更新到不同的 DB 之中。</p><ul><li>註: 如果在 Visual Studio 的 <strong>套件管理器主控台</strong> 執行時，出現 <strong>Build failed.</strong> ，那應該是因為整個方案無法建置成功，請將方案建置成功後，再執行命令。</li></ul><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://learn.microsoft.com/zh-tw/ef/core/managing-schemas/migrations/applying?tabs=vs">EF Applying Migrations</a><br><a href="https://www.koskila.net/how-to-resolve-persistent-build-started-build-failed-when-trying-to-run-entity-framework-core-commands/">How to resolve persistent “Build started… Build failed.” when trying to run Entity Framework Core commands?</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;在 Visual Studio 透過 &lt;code&gt;Add-Migration&lt;/code&gt; 後，&lt;br&gt;可以透過 &lt;code&gt;Update-</summary>
      
    
    
    
    
    <category term="SQL" scheme="https://rainmakerho.github.io/tags/SQL/"/>
    
    <category term="EF Core" scheme="https://rainmakerho.github.io/tags/EF-Core/"/>
    
  </entry>
  
  <entry>
    <title>ABP 系統建立的 DataSeedContributor 會跑 2 次 SeedAsync，導致發生 DB duplicate key 的錯誤?</title>
    <link href="https://rainmakerho.github.io/2023/03/08/abp-dataseedcontributor-duplicate/"/>
    <id>https://rainmakerho.github.io/2023/03/08/abp-dataseedcontributor-duplicate/</id>
    <published>2023-03-08T06:24:09.000Z</published>
    <updated>2023-03-09T06:18:46.776Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>將 ABP v4.x 版本的方案升級到 ABP v5.x 後，<br>再執行 DbMigrator 專案後，居然發生 <strong>EntityFrameworkCore.DbUpdateException</strong> 的錯誤 (Cannot insert duplicate key row)</p><blockquote><p>SqlException: Cannot insert duplicate key row in object ‘dbo.AbpPermissionGrants’ with unique index ‘IX_AbpPermissionGrants_TenantId_Name_ProviderName_ProviderKey’. The duplicate key value is (51d8723e-1858-cf8a-1a64-3a09b866138a, AbpIdentity.Roles.Update, R, admin).<br>The statement has been terminated.</p></blockquote><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>因為 ABP v5.x 的 Migration 中，會針對 <strong>AbpPermissionGrants</strong> 這個資料表，<br>以 <code>&quot;TenantId&quot;, &quot;Name&quot;, &quot;ProviderName&quot;, &quot;ProviderKey&quot;</code> 這 4 個欄位建立 唯一值索引。<br>查詢更新前資料庫的 <strong>AbpPermissionGrants</strong> 資料，很多資料都是有重覆，</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> TenantId, ProviderKey, Name, <span class="built_in">Count</span>(<span class="operator">*</span>) <span class="keyword">from</span> [dbo].[AbpPermissionGrants]</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> TenantId, ProviderKey, Name, ProviderName</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="operator">&gt;</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><p>所以當升級後，自然就炸了。<br>回來頭來查看一下 DbMigrator 做那些事來追看看。<br>在 <code>DbMigratorHostedService.cs</code> 中的 <code>StartAsync</code> 就是呼叫這個系統 <code>DbMigrationService</code> 的 <code>MigrateAsync</code> Method。<br>而在 <code>MigrateAsync</code> Method 裡會進行 <code>MigrateDatabaseSchema</code>(資料庫升級) 及 <code>SeedDataAsync</code>(資料升級)，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">async</span> Task <span class="title">MigrateDatabaseSchemaAsync</span>(<span class="params">Tenant tenant = <span class="literal">null</span></span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> migrator <span class="keyword">in</span> _dbSchemaMigrators)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">await</span> migrator.MigrateAsync();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">async</span> Task <span class="title">SeedDataAsync</span>(<span class="params">Tenant tenant = <span class="literal">null</span></span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">await</span> _dataSeeder.SeedAsync(<span class="keyword">new</span> DataSeedContext(tenant?.Id)</span><br><span class="line">.WithProperty(IdentityDataSeedContributor.AdminEmailPropertyName, _configuration[<span class="string">&quot;SeedData:AdminEmail&quot;</span>])</span><br><span class="line">.WithProperty(IdentityDataSeedContributor.AdminPasswordPropertyName, <span class="built_in">string</span>.Empty)</span><br><span class="line">);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 Debug 的過程中，發現專案中有 5 個 DataSeedContributor，但只有 2 個自已寫的 DataSeedContributor 會執行 2 次。<br>查看一下 <code>Volo.Abp.Data</code> 中 <code>DataSeeder</code> 的 <code>SeedAsync</code> Method，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">DataSeeder</span> : <span class="title">IDataSeeder</span>, <span class="title">ITransientDependency</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">protected</span> IServiceScopeFactory ServiceScopeFactory &#123; <span class="keyword">get</span>; &#125;</span><br><span class="line">    <span class="keyword">protected</span> AbpDataSeedOptions Options &#123; <span class="keyword">get</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DataSeeder</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">        IOptions&lt;AbpDataSeedOptions&gt; options,</span></span></span><br><span class="line"><span class="params"><span class="function">        IServiceScopeFactory serviceScopeFactory</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        ServiceScopeFactory = serviceScopeFactory;</span><br><span class="line">        Options = options.Value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">UnitOfWork</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">async</span> Task <span class="title">SeedAsync</span>(<span class="params">DataSeedContext context</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">using</span> (<span class="keyword">var</span> scope = ServiceScopeFactory.CreateScope())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="keyword">var</span> contributorType <span class="keyword">in</span> Options.Contributors)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">var</span> contributor = (IDataSeedContributor)scope</span><br><span class="line">                    .ServiceProvider</span><br><span class="line">                    .GetRequiredService(contributorType);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">await</span> contributor.SeedAsync(context);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看起來是呼叫 <code>AbpDataSeedOptions.Contributors</code> 中 <code>Contributor</code> 的 <code>SeedAsync</code> Method。<br>於是在這個系統 <code>DbMigrationService</code> 類別中 注入 <code>IOptions&lt;AbpDataSeedOptions&gt; options</code> ，<br>然後查看 <code>AbpDataSeedOptions.Contributors</code> 裡面有那些 <code>Contributor</code>，<br>結果發現，有 2 個 <strong>Name</strong> 重覆的 <strong>Contributor</strong>，<br>而這 2 個重覆的 <strong>Contributor</strong> ，正是被重覆執行的 <strong>Contributor</strong>，如下，</p><img src="/2023/03/08/abp-dataseedcontributor-duplicate/01.png" class="" title="AbpDataSeedOptions.Contributors"><p>被重覆 Run 到的 <strong>Contributor</strong> ，分別是 <code>IdentityDataSeedContributor</code> 及 <code>PermissionDataSeedContributor</code>，<br>而它們都分別繼承自 Volo.Abp 對應的 <code>IdentityDataSeedContributor</code> 及 <code>PermissionDataSeedContributor</code>，<br>而透過 <code>ServiceProvider.GetRequiredService</code> 給 <code>Volo.Abp.Identity.IdentityDataSeedContributor</code> 取回來的服務則是我們系統的 <code>LicenseManagement.Identity.IdentityDataSeedContributor</code>，<br>而當 <code>ServiceProvider.GetRequiredService</code> 給 <code>LicenseManagement.Identity.IdentityDataSeedContributor</code> 取回來的服務也是我們系統的 <code>LicenseManagement.Identity.IdentityDataSeedContributor</code>，</p><img src="/2023/03/08/abp-dataseedcontributor-duplicate/02.png" class="" title="ServiceProvider.GetRequiredService"><p>所以這 2 個繼承自 Volo.Abp 的 <code>IdentityDataSeedContributor</code> 及 <code>PermissionDataSeedContributor</code>，<br>就執行了 2 次 <strong>SeedAsync</strong> Method。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">Dependency(ReplaceServices = true)</span>]</span><br><span class="line">[<span class="meta">ExposeServices(typeof(Volo.Abp.PermissionManagement.PermissionDataSeedContributor), typeof(PermissionDataSeedContributor))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PermissionDataSeedContributor</span> : <span class="title">Volo.Abp.PermissionManagement.PermissionDataSeedContributor</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">// Codes ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[<span class="meta">Dependency(ReplaceServices = true)</span>]</span><br><span class="line">[<span class="meta">ExposeServices(typeof(IIdentityDataSeeder), typeof(IdentityDataSeeder), typeof(IdentityUserDataSeeder))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">IdentityUserDataSeeder</span> : <span class="title">IdentityDataSeeder</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//Codes...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>知道發生的原因，因為 AbpDataSeedOptions.Contributors 多了重覆的項目，<br>最快的方式就是將重覆的 DataSeedContributor 從 AbpDataSeedOptions.Contributors 中將它們移除，<br>在這個系統 <code>DbMigrationService</code> 類別 <code>MigrateAsync</code> Method 中，<br>在一開始就將重覆中的 Volo DataSeedContributor 移除，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">LicenseManagementDbMigrationService</span> : <span class="title">ITransientDependency</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span> ILogger&lt;LicenseManagementDbMigrationService&gt; Logger &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> IDataSeeder _dataSeeder;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> IEnumerable&lt;ILicenseManagementDbSchemaMigrator&gt; _dbSchemaMigrators;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> ITenantRepository _tenantRepository;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> ICurrentTenant _currentTenant;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> IConfiguration _configuration;</span><br><span class="line"><span class="keyword">protected</span> AbpDataSeedOptions Options &#123; <span class="keyword">get</span>; &#125;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> IServiceScopeFactory _serviceScopeFactory;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">LicenseManagementDbMigrationService</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">IOptions&lt;AbpDataSeedOptions&gt; options,</span></span></span><br><span class="line"><span class="params"><span class="function">IDataSeeder dataSeeder,</span></span></span><br><span class="line"><span class="params"><span class="function">IEnumerable&lt;ILicenseManagementDbSchemaMigrator&gt; dbSchemaMigrators,</span></span></span><br><span class="line"><span class="params"><span class="function">ITenantRepository tenantRepository,</span></span></span><br><span class="line"><span class="params"><span class="function">ICurrentTenant currentTenant,</span></span></span><br><span class="line"><span class="params"><span class="function">IConfiguration configuration</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">_dataSeeder = dataSeeder;</span><br><span class="line">_dbSchemaMigrators = dbSchemaMigrators;</span><br><span class="line">_tenantRepository = tenantRepository;</span><br><span class="line">_currentTenant = currentTenant;</span><br><span class="line">_configuration = configuration;</span><br><span class="line">Options = options.Value;</span><br><span class="line">Logger = NullLogger&lt;LicenseManagementDbMigrationService&gt;.Instance;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">MigrateAsync</span>()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//找到有重覆的 Contributors</span></span><br><span class="line"><span class="keyword">var</span> duplicateContributors = Options.Contributors</span><br><span class="line">.GroupBy(c=&gt;c.Name)</span><br><span class="line">.Where(grp =&gt; grp.Count() &gt; <span class="number">1</span>)</span><br><span class="line">.Select(grp =&gt; grp.Key);</span><br><span class="line"><span class="comment">//重覆中為 Volo 的 Contributors</span></span><br><span class="line"><span class="keyword">var</span> voloDuplicateContributors = Options.Contributors</span><br><span class="line">.Where(c =&gt; duplicateContributors.Contains(c.Name) &amp;&amp; c.FullName.StartsWith(<span class="string">&quot;Volo.&quot;</span>))</span><br><span class="line">.Select(c =&gt; c).ToList();</span><br><span class="line"><span class="comment">//將 重覆中為 Volo 的 Contributors 從 Options.Contributors 中移除</span></span><br><span class="line">Options.Contributors.RemoveAll(voloDuplicateContributors);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//開始系統的 Migration &amp; DataSeed ...</span></span><br><span class="line"><span class="keyword">var</span> initialMigrationAdded = AddInitialMigrationIfNotExist();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (initialMigrationAdded)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Logger.LogInformation(<span class="string">&quot;Started database migrations...&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">await</span> MigrateDatabaseSchemaAsync();</span><br><span class="line"><span class="keyword">await</span> SeedDataAsync();</span><br><span class="line">    <span class="comment">// Other Codes ...</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Other Codes ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再執行 DbMigrator 就不會發生重覆執行的狀況的。<br>而為什麼 AbpDataSeedOptions.Contributors 會有那些 DataSeedContributor ?<br>可以查看 <code>AbpDataModule</code> 的 <code>AutoAddDataSeedContributors</code> Method，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">AutoAddDataSeedContributors</span>(<span class="params">IServiceCollection services</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">var</span> contributors = <span class="keyword">new</span> List&lt;Type&gt;();</span><br><span class="line"></span><br><span class="line">services.OnRegistred(context =&gt;</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span>(IDataSeedContributor).IsAssignableFrom(context.ImplementationType))</span><br><span class="line">&#123;</span><br><span class="line">contributors.Add(context.ImplementationType);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">services.Configure&lt;AbpDataSeedOptions&gt;(options =&gt;</span><br><span class="line">&#123;</span><br><span class="line">options.Contributors.AddIfNotContains(contributors);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://stackoverflow.com/questions/57552207/seeding-initial-user-on-identity-module-without-double-seeding">Seeding initial user on Identity module without double-seeding</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;將 ABP v4.x 版本的方案升級到 ABP v5.x 後，&lt;br&gt;再執行 DbMigrator 專案後，居然發生 &lt;strong&gt;Ent</summary>
      
    
    
    
    
    <category term="ABP" scheme="https://rainmakerho.github.io/tags/ABP/"/>
    
    <category term="DataSeedContributor" scheme="https://rainmakerho.github.io/tags/DataSeedContributor/"/>
    
    <category term="DataSeeder" scheme="https://rainmakerho.github.io/tags/DataSeeder/"/>
    
    <category term="duplicate key" scheme="https://rainmakerho.github.io/tags/duplicate-key/"/>
    
    <category term="AbpPermissionGrants" scheme="https://rainmakerho.github.io/tags/AbpPermissionGrants/"/>
    
    <category term="IX_AbpPermissionGrants_TenantId_Name_ProviderName_ProviderKey" scheme="https://rainmakerho.github.io/tags/IX-AbpPermissionGrants-TenantId-Name-ProviderName-ProviderKey/"/>
    
    <category term="SeedAsync" scheme="https://rainmakerho.github.io/tags/SeedAsync/"/>
    
  </entry>
  
  <entry>
    <title>Sys.Application.notifyScriptLoaded Cannot read properties of null (reading &#39;_notified&#39;) Error in Chrome</title>
    <link href="https://rainmakerho.github.io/2023/03/07/cannot-read-property-notified-of-null/"/>
    <id>https://rainmakerho.github.io/2023/03/07/cannot-read-property-notified-of-null/</id>
    <published>2023-03-07T01:09:53.000Z</published>
    <updated>2023-03-08T02:31:24.858Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近遇到 ASP.NET Ajax 的 web Form 系統使用 Chrome 時會出現以下的錯誤訊息，<br><code>遺漏對 Sys.Application.notifyScriptLoaded() 的呼叫</code><br><code>Cannot read property &#39;_notified&#39; of null</code></p><img src="/2023/03/07/cannot-read-property-notified-of-null/01.png" class="" title="error"><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>一開始看到 <strong>無法存取的路徑。</strong></p><blockquote><p>ScriptResource.axd… Uncaught Sys.ScriptLoadFailedException: Sys.ScriptLoadFailedException: 無法載入指令碼 ‘http:&#x2F;&#x2F;…&#x2F;ScriptResource.axd?’。請檢查:<br>無法存取的路徑。<br>指令碼錯誤。(IE) 在進階設定下啟用 [每次出現 script 錯誤時皆顯示通知]。<br>遺漏對 Sys.Application.notifyScriptLoaded() 的呼叫。<br>at Function.Error$create [as create]<br>  at Function.Sys$_ScriptLoader$_errorScriptLoadFailed<br>  at Sys$WebForms$PageRequestManager.Sys$WebForms$PageRequestManager$_scriptIncludesLoadComplete<br>at Sys$WebForms$PageRequestManager.Sys$WebForms$PageRequestManager$_scriptIncludesLoadFailed</p></blockquote><p>以為是 js 檔案最後沒有加入 <code>if(typeof(Sys)!==&#39;undefined&#39;)Sys.Application.notifyScriptLoaded();</code></p><p>但查看了一下程式，最後面是有加入 <code>if(typeof(Sys)!==&#39;undefined&#39;)Sys.Application.notifyScriptLoaded();</code> 這段程式碼。</p><p>而最下面還有段錯誤是 <code>Uncaught TypeError: Cannot read property of null (reading &#39;_notified&#39;)</code> ，<br>查看 <a href="https://www.blakepell.com/blog/2012-10-22-cannot-read-property-notified-of-null-with-asp-net-ajax-with-webkit-based-browsers">Cannot read property ‘_notified’ of null with ASP.NET Ajax with WebKit based browsers</a> ，<br>是因為 <strong>Sys.Browser.name</strong> 的值設定不對，所導致的錯誤。</p><p>在 Chrome 上測試 <strong>navigator.userAgent</strong> 的值為 <code>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36</code>，<strong>Sys.Browser.name</strong> 的值為 <code>Safari</code>，<br><strong>Sys.Browser.name</strong> 的值應該要為 <code>WebKit</code> Ajax 運作才會正常。<br>所以加入以下的 JS 來判斷 <strong>navigator.userAgent</strong> ，將 <strong>Sys.Browser.name</strong> 改成正確的 <strong>WebKit</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Sys</span>.<span class="property">Browser</span>.<span class="property">WebKit</span> = &#123;&#125;;</span><br><span class="line"><span class="keyword">if</span> (navigator.<span class="property">userAgent</span>.<span class="title function_">indexOf</span>(<span class="string">&quot;WebKit/&quot;</span>) &gt; -<span class="number">1</span>) &#123;</span><br><span class="line">  <span class="title class_">Sys</span>.<span class="property">Browser</span>.<span class="property">agent</span> = <span class="title class_">Sys</span>.<span class="property">Browser</span>.<span class="property">WebKit</span>;</span><br><span class="line">  <span class="title class_">Sys</span>.<span class="property">Browser</span>.<span class="property">version</span> = <span class="built_in">parseFloat</span>(</span><br><span class="line">    navigator.<span class="property">userAgent</span>.<span class="title function_">match</span>(<span class="regexp">/WebKit\/(\d+(\.\d+)?)/</span>)[<span class="number">1</span>]</span><br><span class="line">  );</span><br><span class="line">  <span class="title class_">Sys</span>.<span class="property">Browser</span>.<span class="property">name</span> = <span class="string">&quot;WebKit&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://www.blakepell.com/blog/2012-10-22-cannot-read-property-notified-of-null-with-asp-net-ajax-with-webkit-based-browsers">Cannot read property ‘_notified’ of null with ASP.NET Ajax with WebKit based browsers</a><br><a href="https://social.msdn.microsoft.com/Forums/en-US/a0594a1b-464a-4837-a08d-ccc403e76306/error-in-microsoftajaxjs-cannot-read-property-notified-of-null?forum=aspdotnetajax">error in MicrosoftAjax.js: Cannot read property ‘_notified’ of null</a><br><a href="https://www.c-sharpcorner.com/blogs/resolve-error-cannot-read-property-notified-of-null1">Resolve Error - cannot Read Property ‘_notified’ of Null</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;最近遇到 ASP.NET Ajax 的 web Form 系統使用 Chrome 時會出現以下的錯誤訊息，&lt;br&gt;&lt;code&gt;遺漏對 Sys</summary>
      
    
    
    
    
    <category term="Chrome" scheme="https://rainmakerho.github.io/tags/Chrome/"/>
    
    <category term="ASP.NET" scheme="https://rainmakerho.github.io/tags/ASP-NET/"/>
    
    <category term="Ajax" scheme="https://rainmakerho.github.io/tags/Ajax/"/>
    
    <category term="遺漏對 Sys.Application.notifyScriptLoaded() 的呼叫" scheme="https://rainmakerho.github.io/tags/%E9%81%BA%E6%BC%8F%E5%B0%8D-Sys-Application-notifyScriptLoaded-%E7%9A%84%E5%91%BC%E5%8F%AB/"/>
    
    <category term="Sys.Browser.name" scheme="https://rainmakerho.github.io/tags/Sys-Browser-name/"/>
    
    <category term="Cannot read properties of null (reading &#39;_notified&#39;)" scheme="https://rainmakerho.github.io/tags/Cannot-read-properties-of-null-reading-notified/"/>
    
  </entry>
  
  <entry>
    <title>ABP Domain Services, Repositories</title>
    <link href="https://rainmakerho.github.io/2023/03/06/abp-domain-service-repository/"/>
    <id>https://rainmakerho.github.io/2023/03/06/abp-domain-service-repository/</id>
    <published>2023-03-06T01:04:15.000Z</published>
    <updated>2023-03-06T01:45:24.239Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>以下記錄 ABP 在 Domain Servcice 及 Repository 方面的設計，<br>為何需要 Domain Service?<br>設計 Repository 有什麼要注意的地方?</p><h3 id="Implementing-domain-services"><a href="#Implementing-domain-services" class="headerlink" title="Implementing domain services"></a>Implementing domain services</h3><p>有時為了維持 Domain 物件的正確性，需要針對 Property 值做驗證，<br>但如果需要外部服務(例如 DB Repository …)來驗證，<br>那就需要將 外部服務 當作參數傳進來使用。<br>但這樣就會讓 Domain 物件相依外部服務，<br>也會變的複雜及難以測試。<br>而且也違反單一責任原則(single responsibility principle)。</p><p>所以比較好的方式是將那些需要外部服務的商業邏輯驗證程式放到 Domain Services 之中。<br>而原本的 Domain private 屬性驗證函式就改成 internal<br>，讓同一專案的 Domain Service 可以呼叫，但別專案一樣不能呼叫。<br>例如原本在 Event 物件中檢查 Capacity 的值是否合理的 <a href="https://github.com/abpframework/eventhub/blob/main/src/EventHub.Domain/Events/EventManager.cs#L67">SetCapacityAsync Method</a> 就會移到 <a href="https://github.com/abpframework/eventhub/blob/main/src/EventHub.Domain/Events/EventManager.cs">EventManager Class</a> 之中。</p><p>如果 Domain 的屬性不需要商業邏輯的檢查則不需要特別建立一個 Method 來接受參數並進行驗證。<br>如果在進行 商業邏輯規則驗證 需要外部服務，才需要建立 Domain Service 來進行接受外部服務。</p><h3 id="Implementing-repositories"><a href="#Implementing-repositories" class="headerlink" title="Implementing repositories"></a>Implementing repositories</h3><p>1.在 Domain Layer</p><p>2.只為 Aggreat Root Entity 建立，不為 sub-collection entities 建立，因為 sub-collection entities 的存取要透過 aggreat root entity</p><p>3.使用 domain object ，不是 DTOs</p><p>4.Repository interface 要獨上於 database provider，這樣才可以抽換不同的 provider 5.不要將<strong>商業邏輯</strong>實作在 Repository</p><p>在 Repository Method 實作中，會先取得 IQueryable 再透過它去 Filter，例如，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;List&lt;Event&gt;&gt; GetSpokenEventsAsync(Guid userId)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">var</span> queryable = <span class="keyword">await</span> _eventRepository.GetQueryableAsync();</span><br><span class="line"><span class="keyword">var</span> query = queryable.Where(x=&gt;x.Tracks.</span><br><span class="line">.Any(track=&gt;track.Sessions</span><br><span class="line">.Any(session=&gt;session.Speakers</span><br><span class="line">.Any(speaker =&gt; speaker.UserId == userId))));</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">await</span> AsyncExecuter.ToListAsync(query);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>這樣子的好處是這段程式碼可以被共用 …</p><p>但如果又有別的需求，那就要建立一堆這種 GetList 的 Method !!!</p><p>ABP 的 Respository 提供 GetListAsync ，輸入 predicate 參數(<code>Func&lt;Entity, bool&gt;</code>)即可。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;List&lt;Event&gt;&gt; GetSpokenEventsAsync(Guid userId)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">var</span> startTime = Clock.Now;</span><br><span class="line"><span class="keyword">var</span> endTime = Clock.Now.AddDays(<span class="number">30</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">await</span> _eventRepository.GetListAsync(x =&gt;</span><br><span class="line">x.Tracks</span><br><span class="line">.Any(track =&gt; track.Sessions</span><br><span class="line">.Any(session =&gt; session.Speakers</span><br><span class="line">.Any(speaker =&gt; speaker.UserId == userId)))</span><br><span class="line">&amp;&amp; x.StartTime &gt; startTime &amp;&amp; x.StartTime &lt;=</span><br><span class="line">endTime</span><br><span class="line">);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>這樣這段程式碼就會回到 Application Layer 造成複雜的程式碼，<br>那怎麼辦??<br>可以將 predicate 建立成 ABP Specification 物件</p><h3 id="Building-specifications"><a href="#Building-specifications" class="headerlink" title="Building specifications"></a>Building specifications</h3><p>ABP Specification 物件可以讓我們重用、結合並且可測試的，<br>例如以下建立一個 篩選出 Online Event 的 Specification 物件</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">OnlineEventSpecification</span>:</span><br><span class="line"><span class="title">Specification</span>&lt;<span class="title">Event</span>&gt;</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">override</span> Expression&lt;Func&lt;Event, <span class="built_in">bool</span>&gt;&gt;</span><br><span class="line">ToExpression()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> x=&gt;x.IsOnline == <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以要取得線上的 Event 就可以使用以下方式，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> events = _eventRepository</span><br><span class="line">                .GetListAsync(<span class="keyword">new</span> OnlineEventSpecification());</span><br></pre></td></tr></table></figure><p>測試則可以使用 specification 的 IsSatisfiedBy</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Event evnt = GetEvent();</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">new</span> OnlineEventSpecification().IsSafisfiedBy(<span class="keyword">event</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//..</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>前面取得 Speaker 可以將 Filter 抽到 Specification</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SpeakerSpecification</span>: <span class="title">Specification</span>&lt;<span class="title">Event</span>&gt;</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span> Guid UserId &#123;<span class="keyword">get</span>;&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">SpecakerSpecification</span>(<span class="params">Guid userId</span>)</span>&#123;</span><br><span class="line">UserId = userId;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">override</span> Expression&lt;Func&lt;Event, <span class="built_in">bool</span>&gt;&gt;</span><br><span class="line">ToExpression()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> x=&gt;x.Trackers</span><br><span class="line">.Any(t=&gt;t.Sessions</span><br><span class="line">.Any(s=&gt;s.Speakers</span><br><span class="line">.Any(sp=&gt;sp.UserId == UserId)));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以 Applicatoin Code 就會變得簡潔，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;List&lt;Event&gt;&gt; GetSpokenEventsAsync(Guid userId)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">await</span> _eventRepository.GetListAsync(</span><br><span class="line"><span class="keyword">new</span> SpeakerSpecification(userId));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以透過 使用 And, Or, AndNot 將 Specification 一起使用</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> events = _eventRepository.GetListAsync(</span><br><span class="line"><span class="keyword">new</span> SpeakerSpecification(userId)</span><br><span class="line">.And(<span class="keyword">new</span> DateRangeSpecification(Clock.Now,</span><br><span class="line">Colock.Now.AddDays(<span class="number">30</span>)))</span><br><span class="line">.AndNot(<span class="keyword">new</span> OnlineEventSpecification())</span><br><span class="line">.ToExpression()</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://docs.abp.io/en/abp/latest/Domain-Services">Domain Services</a><br><a href="https://docs.abp.io/en/abp/latest/Repositories">Repositories</a><br><a href="https://docs.abp.io/en/abp/latest/Specifications">Specifications</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;以下記錄 ABP 在 Domain Servcice 及 Repository 方面的設計，&lt;br&gt;為何需要 Domain Service?</summary>
      
    
    
    
    
    <category term="ABP" scheme="https://rainmakerho.github.io/tags/ABP/"/>
    
    <category term="Domain service" scheme="https://rainmakerho.github.io/tags/Domain-service/"/>
    
    <category term="Repository" scheme="https://rainmakerho.github.io/tags/Repository/"/>
    
    <category term="Specification" scheme="https://rainmakerho.github.io/tags/Specification/"/>
    
  </entry>
  
  <entry>
    <title>ABP Framework 從 v4.x 升級到 v5.x</title>
    <link href="https://rainmakerho.github.io/2023/03/03/abp-update-v5/"/>
    <id>https://rainmakerho.github.io/2023/03/03/abp-update-v5/</id>
    <published>2023-03-03T12:00:19.000Z</published>
    <updated>2023-03-04T12:14:21.596Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>有個系統是使用 ABP Framework v4.4.2 (.NET 5)開發的，<br>所以要將它升級到 .NET 6 。<br>但因為 ABP v6 有一個大的調整，就是將原本使用的 IdentityServer 改用 OpenIddict 。<br>所以這次的升級，就從 v4.4.2 升級到 v5.3.5</p><h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><p>1.升級 ABP 版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">abp update --v 5.3.5</span><br></pre></td></tr></table></figure><img src="/2023/03/03/abp-update-v5/01.png" class="" title="abpUpdate"><p>2.安裝 libs<br>因為我使用的是 Razor Page ，所以參考<a href="https://docs.abp.io/en/abp/latest/Migration-Guides/Abp-5-0-MVC">ABP MVC &#x2F; Razor Pages UI v4.x to v5.0 Migration Guide</a> 安裝 libs</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">abp install-libs</span><br></pre></td></tr></table></figure><img src="/2023/03/03/abp-update-v5/02.png" class="" title="installLibs"><p>3.將專案中.NET 版本從 net5.0 改成 net6.0<br>使用 Visual Studio 開啟方案，會有一堆錯誤，<br>主要是說專案不能使用 .net5.0，如下，</p><img src="/2023/03/03/abp-update-v5/03.png" class="" title="net5 error"><p>所以需要將方案中的 <strong>.net5.0</strong> 改成 <strong>.net6.0</strong></p><img src="/2023/03/03/abp-update-v5/04.png" class="" title="search net5"><p>找到後，就將它們改成 <strong>.net6.0</strong></p><p>4.修改 IdentityServer 原本使用 <strong>GetByNameAsync</strong> 改成 <strong>FindByNameAsync</strong></p><img src="/2023/03/03/abp-update-v5/05.png" class="" title="GetByNameAsync"><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//var apiScope = await _apiScopeRepository.GetByNameAsync(name);</span></span><br><span class="line"><span class="keyword">var</span> apiScope = <span class="keyword">await</span> _apiScopeRepository.FindByNameAsync(name);</span><br></pre></td></tr></table></figure><p>5.加入未引用的 namespace<br>像 <strong>IProfileAppService</strong> 就要加入 <code>using Volo.Abp.Account;</code><br>像 cshtml 中的 <code>check-box-hidden-input-render-mode=&quot;None&quot;</code> 要加上 <code>CheckBoxHiddenInputRenderMode.</code> ，變成 <code>check-box-hidden-input-render-mode=&quot;CheckBoxHiddenInputRenderMode.None&quot;</code></p><p>6.調整專案中其他套件使用的版本<br>例如 <code>Microsoft.Extensions.FileProviders.Embedded</code> 及 <code>Microsoft.EntityFrameworkCore.Tools</code> 從 <code>5.0.*</code> 改成 <code>6.0.*</code></p><p>7.建立 DB Migration<br>在 <strong>套件管理器主控台</strong> ，預設專案選擇 <strong>EntityFrameworkCore</strong><br>輸入 <code>Add-Migration &quot;Upgraded_To_Abp_5&quot;</code> 來建立 Database Migration 內容</p><p>註: 請確定<strong>EntityFrameworkCore</strong>專案參考的 <code>Microsoft.EntityFrameworkCore.Tools</code> 版本從 從 <code>5.0.*</code> 改成 <code>6.0.*</code></p><p>8.更新資料庫<br>請先將原有的 DB 備份，再到 <strong>套件管理器主控台</strong> 執行 <code>Update-Database</code></p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://docs.abp.io/en/abp/latest/Migration-Guides/Abp-5_0">ABP Framework v4.x to v5.0 Migration Guide</a><br><a href="https://docs.abp.io/en/abp/latest/Migration-Guides/Abp-4_2#irepository-getqueryableasync">ABP version 4.2 Migration Guide</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;有個系統是使用 ABP Framework v4.4.2 (.NET 5)開發的，&lt;br&gt;所以要將它升級到 .NET 6 。&lt;br&gt;但因為 </summary>
      
    
    
    
    
    <category term="Migration" scheme="https://rainmakerho.github.io/tags/Migration/"/>
    
    <category term="ABP Framework" scheme="https://rainmakerho.github.io/tags/ABP-Framework/"/>
    
    <category term="Upgrade" scheme="https://rainmakerho.github.io/tags/Upgrade/"/>
    
    <category term="v4" scheme="https://rainmakerho.github.io/tags/v4/"/>
    
    <category term="v5" scheme="https://rainmakerho.github.io/tags/v5/"/>
    
  </entry>
  
  <entry>
    <title>「屬性」為 private set 的測試問題</title>
    <link href="https://rainmakerho.github.io/2023/03/03/private-set-in-testing/"/>
    <id>https://rainmakerho.github.io/2023/03/03/private-set-in-testing/</id>
    <published>2023-03-03T00:49:35.000Z</published>
    <updated>2023-03-04T12:31:01.412Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近同事談到因為 Domain 物件的屬性設定為 <strong>private set</strong> ，<br>所以在測試專案中的測試程式要設定該屬性值時，<br>要透過 <strong>Reflection</strong> 方式來設定值。<br>不知大家是否也有類似的問題呢?<br>private set 的屬性，private 的 method …</p><h3 id="討論"><a href="#討論" class="headerlink" title="討論"></a>討論</h3><p>屬性會設定成 <strong>private set</strong> 表示只能在 Class 中設定值，<br>會這樣設計的原因是不想給外部的 class 來直接設定它。<br>所以這樣子的屬性值，通常在 constructor 時給值，<br>或是透過其他的 Public Method 來設定它的值，<br>以保證整個 Class 的商業邏輯屬性值是合法的。<br>所以在測試程式時，通常可以透過建立物件時來設定它的值，<br>或是透過它的 Public Method 來設定。<br>參考 abp 範例中的 <a href="https://github.com/abpframework/eventhub/blob/main/src/EventHub.Domain/Events/Event.cs">Event Class</a></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Event</span> : <span class="title">FullAuditedAggregateRoot</span>&lt;<span class="title">Guid</span>&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> Guid OrganizationId &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> UrlCode &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Url &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Title &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> DateTime StartTime &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> DateTime EndTime &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Description &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">bool</span> IsOnline &#123; <span class="keyword">get</span>; <span class="keyword">internal</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> OnlineLink &#123; <span class="keyword">get</span>; <span class="keyword">internal</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Guid? CountryId &#123; <span class="keyword">get</span>; <span class="keyword">internal</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> CountryName &#123; <span class="keyword">get</span>; <span class="keyword">internal</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> City &#123; <span class="keyword">get</span>; <span class="keyword">internal</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Language &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span>? Capacity &#123; <span class="keyword">get</span>; <span class="keyword">internal</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">bool</span> IsRemindingEmailSent &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">bool</span> IsEmailSentToMembers &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> TimingChangeCount  &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">bool</span> IsTimingChangeEmailSent &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">bool</span> IsDraft &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ICollection&lt;Track&gt; Tracks &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Event</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">internal</span> <span class="title">Event</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">        Guid id,</span></span></span><br><span class="line"><span class="params"><span class="function">        Guid organizationId,</span></span></span><br><span class="line"><span class="params"><span class="function">        <span class="built_in">string</span> urlCode,</span></span></span><br><span class="line"><span class="params"><span class="function">        <span class="built_in">string</span> title,</span></span></span><br><span class="line"><span class="params"><span class="function">        DateTime startTime,</span></span></span><br><span class="line"><span class="params"><span class="function">        DateTime endTime,</span></span></span><br><span class="line"><span class="params"><span class="function">        <span class="built_in">string</span> description</span>)</span></span><br><span class="line"><span class="function">    : <span class="title">base</span>(<span class="params">id</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        OrganizationId = organizationId;</span><br><span class="line">        UrlCode = Check.NotNullOrWhiteSpace(urlCode, <span class="keyword">nameof</span>(urlCode), EventConsts.UrlCodeLength, EventConsts.UrlCodeLength);</span><br><span class="line"></span><br><span class="line">        SetTitle(title);</span><br><span class="line">        SetDescription(description);</span><br><span class="line">        SetTimeInternal(startTime, endTime);</span><br><span class="line"></span><br><span class="line">        Publish(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">        Tracks = <span class="keyword">new</span> Collection&lt;Track&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Event <span class="title">SetTitle</span>(<span class="params"><span class="built_in">string</span> title</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Title = Check.NotNullOrWhiteSpace(title, <span class="keyword">nameof</span>(title), EventConsts.MaxTitleLength, EventConsts.MinTitleLength);</span><br><span class="line">        Url = EventUrlHelper.ConvertTitleToUrlPart(Title) + <span class="string">&quot;-&quot;</span> + UrlCode;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Event <span class="title">SetDescription</span>(<span class="params"><span class="built_in">string</span> description</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Description = Check.NotNullOrWhiteSpace(description, <span class="keyword">nameof</span>(description), EventConsts.MaxDescriptionLength, EventConsts.MinDescriptionLength);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Event <span class="title">SetTime</span>(<span class="params">DateTime startTime, DateTime endTime</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (startTime == StartTime &amp;&amp; endTime == EndTime)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!IsDraft)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (TimingChangeCount &gt;= EventConsts.MaxTimingChangeCountForUser)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(EventHubErrorCodes.CantChangeEventTiming)</span><br><span class="line">                    .WithData(<span class="string">&quot;MaxTimingChangeLimit&quot;</span>, EventConsts.MaxTimingChangeCountForUser);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        SetTimeInternal(startTime, endTime);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!IsDraft)</span><br><span class="line">        &#123;</span><br><span class="line">            TimingChangeCount++;</span><br><span class="line">            IsTimingChangeEmailSent = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Event <span class="title">SetTimeInternal</span>(<span class="params">DateTime startTime, DateTime endTime</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (startTime &gt; endTime)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(EventHubErrorCodes.EndTimeCantBeEarlierThanStartTime);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        StartTime = startTime;</span><br><span class="line">        EndTime = endTime;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">internal</span> Event <span class="title">AddTrack</span>(<span class="params">Guid trackId, <span class="built_in">string</span> name</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (Tracks.Any(x =&gt; x.Name == name))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(EventHubErrorCodes.TrackNameAlreadyExist)</span><br><span class="line">                .WithData(<span class="string">&quot;Name&quot;</span>, name);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Tracks.Add(<span class="keyword">new</span> Track(trackId, <span class="keyword">this</span>.Id, name));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Event <span class="title">UpdateTrack</span>(<span class="params">Guid trackId, <span class="built_in">string</span> name</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (Tracks.Any(x =&gt; x.Name == name))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(EventHubErrorCodes.TrackNameAlreadyExist)</span><br><span class="line">                .WithData(<span class="string">&quot;Name&quot;</span>, name);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> track = Tracks.SingleOrDefault(x =&gt; x.Id == trackId);</span><br><span class="line">        <span class="keyword">if</span> (track <span class="keyword">is</span> <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(EventHubErrorCodes.TrackNotFound);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        track.SetName(name);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Event <span class="title">RemoveTrack</span>(<span class="params">Guid trackId</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> track = Tracks.SingleOrDefault(x =&gt; x.Id == trackId);</span><br><span class="line">        <span class="keyword">if</span> (track <span class="keyword">is</span> <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(EventHubErrorCodes.TrackNotFound);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Tracks.Remove(track);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Event <span class="title">AddSession</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">        Guid trackId,</span></span></span><br><span class="line"><span class="params"><span class="function">        Guid sessionId,</span></span></span><br><span class="line"><span class="params"><span class="function">        <span class="built_in">string</span> title,</span></span></span><br><span class="line"><span class="params"><span class="function">        <span class="built_in">string</span> description,</span></span></span><br><span class="line"><span class="params"><span class="function">        DateTime startTime,</span></span></span><br><span class="line"><span class="params"><span class="function">        DateTime endTime,</span></span></span><br><span class="line"><span class="params"><span class="function">        <span class="built_in">string</span> language,</span></span></span><br><span class="line"><span class="params"><span class="function">        ICollection&lt;Guid&gt; speakerUserIds</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        CheckIfValidSessionTime(startTime, endTime);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> track = GetTrack(trackId);</span><br><span class="line">        track.AddSession(sessionId, title, description,startTime, endTime, language, speakerUserIds);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Event <span class="title">UpdateSession</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">        Guid trackId,</span></span></span><br><span class="line"><span class="params"><span class="function">        Guid sessionId,</span></span></span><br><span class="line"><span class="params"><span class="function">        <span class="built_in">string</span> title,</span></span></span><br><span class="line"><span class="params"><span class="function">        <span class="built_in">string</span> description,</span></span></span><br><span class="line"><span class="params"><span class="function">        DateTime startTime,</span></span></span><br><span class="line"><span class="params"><span class="function">        DateTime endTime,</span></span></span><br><span class="line"><span class="params"><span class="function">        <span class="built_in">string</span> language,</span></span></span><br><span class="line"><span class="params"><span class="function">        ICollection&lt;Guid&gt; speakerUserIds</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        CheckIfValidSessionTime(startTime, endTime);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> track = GetTrack(trackId);</span><br><span class="line">        track.UpdateSession(sessionId, title, description, startTime, endTime, language, speakerUserIds);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Event <span class="title">RemoveSession</span>(<span class="params">Guid trackId, Guid sessionId</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> track = Tracks.SingleOrDefault(x =&gt; x.Id == trackId);</span><br><span class="line">        <span class="keyword">if</span> (track <span class="keyword">is</span> <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(EventHubErrorCodes.TrackNotFound);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        track.RemoveSession(sessionId);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Event <span class="title">Publish</span>(<span class="params"><span class="built_in">bool</span> isPublish = <span class="literal">true</span></span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        IsDraft = !isPublish;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">bool</span> <span class="title">IsLive</span>(<span class="params">DateTime now</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> now.IsBetween(StartTime, EndTime);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Track <span class="title">GetTrack</span>(<span class="params">Guid trackId</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> Tracks.FirstOrDefault(t =&gt; t.Id == trackId) ??</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> EntityNotFoundException(<span class="keyword">typeof</span>(Track), trackId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">CheckIfValidSessionTime</span>(<span class="params">DateTime startTime, DateTime endTime</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (startTime &lt; <span class="keyword">this</span>.StartTime || <span class="keyword">this</span>.EndTime &lt; endTime)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(EventHubErrorCodes.SessionTimeShouldBeInTheEventTime);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>像上述的 <code>Description</code> 屬性，<br>可透過 Constructor 來設定值，或是透過 public 的 <code>SetDescription</code> Method 來設定。<br>那這樣來看，不需要在測試程式中需要使用 Reflection 的方式來設定物件的屬性值。<br>所以要好好地檢視一下物件的設計，是否真的需要使用 <strong>private set</strong> ，<br>還是使用 <strong>internal set</strong> 就可以達到我們的目的呢?<br>例如透過同一個專案中的 Manager 來操作它們(請參考<a href="https://github.com/abpframework/eventhub/blob/main/src/EventHub.Domain/Events/EventManager.cs">EventManager Class</a>)<br>而那些 <strong>private</strong> Method ，是否也可以用 <strong>internal</strong> 呢?<br>還是其實應該會有一個 public method 可以來做這些事呢?</p><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="https://learn.microsoft.com/zh-tw/dotnet/csharp/programming-guide/classes-and-structs/access-modifiers">存取修飾詞</a><br><a href="https://github.com/abpframework/eventhub">abpframework&#x2F;eventhub</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;最近同事談到因為 Domain 物件的屬性設定為 &lt;strong&gt;private set&lt;/strong&gt; ，&lt;br&gt;所以在測試專案中的測試</summary>
      
    
    
    
    
    <category term="C#" scheme="https://rainmakerho.github.io/tags/C/"/>
    
    <category term="Property" scheme="https://rainmakerho.github.io/tags/Property/"/>
    
    <category term="屬性" scheme="https://rainmakerho.github.io/tags/%E5%B1%AC%E6%80%A7/"/>
    
    <category term="private set" scheme="https://rainmakerho.github.io/tags/private-set/"/>
    
    <category term="testing" scheme="https://rainmakerho.github.io/tags/testing/"/>
    
    <category term="private" scheme="https://rainmakerho.github.io/tags/private/"/>
    
    <category term="internal" scheme="https://rainmakerho.github.io/tags/internal/"/>
    
  </entry>
  
  <entry>
    <title>C# 簡單的 Retry Method - Partial, Curry</title>
    <link href="https://rainmakerho.github.io/2023/02/22/fp-retry/"/>
    <id>https://rainmakerho.github.io/2023/02/22/fp-retry/</id>
    <published>2023-02-22T07:30:28.000Z</published>
    <updated>2023-02-22T08:41:49.139Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>當我們要為某段程式碼設定執行錯誤時，讓它 Retry 可以很簡單的建立一個 Retry 的擴充方法來達到，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">class</span> <span class="title">HOFs</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> TResult <span class="title">WithRetry</span>&lt;<span class="title">TResult</span>&gt;(<span class="params"><span class="keyword">this</span> Func&lt;TResult&gt; func, <span class="built_in">int</span> maxRetries</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> result = <span class="literal">default</span>(TResult);</span><br><span class="line">        <span class="built_in">int</span> retryCount = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">bool</span> successful = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                result = func();</span><br><span class="line">                successful = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> (Exception e)</span><br><span class="line">            &#123;</span><br><span class="line">                retryCount++;</span><br><span class="line">                Console.WriteLine(<span class="string">$&quot;發生錯誤，重試<span class="subst">&#123;retryCount&#125;</span>&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">while</span> (retryCount &lt; maxRetries &amp;&amp; !successful);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例如取得網頁內容的 Function 後面再加上 WithRetry(次數)，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Func&lt;<span class="built_in">string</span>&gt; download = () =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> url = <span class="string">&quot;https://www.gss.com.tw&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> client = <span class="keyword">new</span> WebClient();</span><br><span class="line">    <span class="keyword">return</span> client.DownloadString(url);</span><br><span class="line">&#125;;</span><br><span class="line">Console.WriteLine(<span class="string">$&quot;web download:<span class="subst">&#123;download()&#125;</span>&quot;</span>);</span><br><span class="line">Console.WriteLine(<span class="string">$&quot;web download WithRetry:<span class="subst">&#123;download.WithRetry(<span class="number">3</span>)&#125;</span>&quot;</span>);</span><br></pre></td></tr></table></figure><p>那如果 url 要在呼叫時再給呢? 要怎麼辦呢?</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>因為要多一個參數，所以 <code>download</code> 由 <code>Func&lt;string&gt;</code> 要改成 <code>Func&lt;string, string&gt;</code>，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> url = <span class="string">&quot;https://www.gss.com.tw&quot;</span>;</span><br><span class="line">Func&lt;<span class="built_in">string</span>, <span class="built_in">string</span>&gt; download = (url) =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> client = <span class="keyword">new</span> WebClient();</span><br><span class="line">    <span class="keyword">return</span> client.DownloadString(url);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>但因為 <code>WithRetry</code> 接受的是 <code>Func&lt;string&gt;</code>，<br>所以我們有 2 個方式，</p><h5 id="1-Partial-將輸入參數轉由-Partial-接收，傳出-WithRetry-需要的-Func-lt-string-gt"><a href="#1-Partial-將輸入參數轉由-Partial-接收，傳出-WithRetry-需要的-Func-lt-string-gt" class="headerlink" title="1.Partial : 將輸入參數轉由 Partial 接收，傳出 WithRetry 需要的 Func&lt;string&gt;"></a>1.Partial : 將輸入參數轉由 <code>Partial</code> 接收，傳出 <code>WithRetry</code> 需要的 <code>Func&lt;string&gt;</code></h5><p>以我們的例子，接收的是 <code>Func&lt;string, string&gt;</code> 透過 <code>Partial</code> 執行後回傳 <code>Func&lt;string&gt;</code>，<br>參數則由 Partial 的 TParam1 傳給 download，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="title">Func</span>&lt;<span class="title">TResult</span>&gt; <span class="title">Partial</span>&lt;<span class="title">TParam1</span>, <span class="title">TResult</span>&gt;(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">        <span class="keyword">this</span> Func&lt;TParam1, TResult&gt; func, TParam1 parameter1</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> ()=&gt;func(parameter1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以程式可以改成以下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> url = <span class="string">&quot;https://www.gss.com.tw&quot;</span>;</span><br><span class="line">Func&lt;<span class="built_in">string</span>, <span class="built_in">string</span>&gt; download = (url) =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> client = <span class="keyword">new</span> WebClient();</span><br><span class="line">    <span class="keyword">return</span> client.DownloadString(url);</span><br><span class="line">&#125;;</span><br><span class="line">Console.WriteLine(<span class="string">$&quot;web download:<span class="subst">&#123;download(url)&#125;</span>&quot;</span>);</span><br><span class="line">Console.WriteLine(<span class="string">$&quot;web download WithRetry:<span class="subst">&#123;download.Partial(url).WithRetry(<span class="number">3</span>)&#125;</span>&quot;</span>);</span><br></pre></td></tr></table></figure><h5 id="2-Curry-將分解輸入參數，回傳輸入參數及-WithRetry-需要的-Func-lt-string-gt"><a href="#2-Curry-將分解輸入參數，回傳輸入參數及-WithRetry-需要的-Func-lt-string-gt" class="headerlink" title="2.Curry : 將分解輸入參數，回傳輸入參數及 WithRetry 需要的 Func&lt;string&gt;"></a>2.Curry : 將分解輸入參數，回傳輸入參數及 <code>WithRetry</code> 需要的 <code>Func&lt;string&gt;</code></h5><p>download 是 <code>Func&lt;string, string&gt;</code> ，所以傳回 <code>Func&lt;string, Func&lt;string&gt;&gt;</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="title">Func</span>&lt;<span class="title">TParam1</span>, <span class="title">Func</span>&lt;<span class="title">TResult</span>&gt;&gt; <span class="title">Curry</span>&lt;<span class="title">TParam1</span>, <span class="title">TResult</span>&gt;(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="keyword">this</span> Func&lt;TParam1, TResult&gt; func</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> parameter1 =&gt;()=&gt;func(parameter1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以程式可以改成以下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> url = <span class="string">&quot;https://www.gss.com.tw&quot;</span>;</span><br><span class="line">Func&lt;<span class="built_in">string</span>, <span class="built_in">string</span>&gt; download = (url) =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> client = <span class="keyword">new</span> WebClient();</span><br><span class="line">    <span class="keyword">return</span> client.DownloadString(url);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> downloadCurry = download.Curry();</span><br><span class="line">Console.WriteLine(<span class="string">$&quot;web download:<span class="subst">&#123;download(url)&#125;</span>&quot;</span>);</span><br><span class="line">Console.WriteLine(<span class="string">$&quot;web download WithRetry:<span class="subst">&#123;downloadCurry(url).WithRetry(<span class="number">3</span>)&#125;</span>&quot;</span>);</span><br></pre></td></tr></table></figure><p>以上透過 WithRetry 來測試裡面 Method 參數改變時，<br>要如何透過 <code>Partail</code> or <code>Curry</code> 來傳回 <code>WithRetry</code> 所需要的 Func，<br>讓我們更了解 <code>Func</code> 的用法。</p><p>如果要快速使用 Retry 可直接使用 <a href="https://github.com/App-vNext/Polly">Polly</a></p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://learn.microsoft.com/en-us/dotnet/architecture/microservices/implement-resilient-applications/implement-http-call-retries-exponential-backoff-polly">Implement HTTP call retries with exponential backoff with IHttpClientFactory and Polly policies</a><br><a href="https://github.com/App-vNext/Polly">Polly</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;當我們要為某段程式碼設定執行錯誤時，讓它 Retry 可以很簡單的建立一個 Retry 的擴充方法來達到，如下，&lt;/p&gt;
&lt;figure c</summary>
      
    
    
    
    
    <category term="c#" scheme="https://rainmakerho.github.io/tags/c/"/>
    
    <category term="functional programming" scheme="https://rainmakerho.github.io/tags/functional-programming/"/>
    
    <category term="retry" scheme="https://rainmakerho.github.io/tags/retry/"/>
    
    <category term="Partial" scheme="https://rainmakerho.github.io/tags/Partial/"/>
    
    <category term="Curry" scheme="https://rainmakerho.github.io/tags/Curry/"/>
    
  </entry>
  
  <entry>
    <title>Checkmarx Unsafe_Reflection</title>
    <link href="https://rainmakerho.github.io/2023/02/17/checkmarx-unsafe-reflection/"/>
    <id>https://rainmakerho.github.io/2023/02/17/checkmarx-unsafe-reflection/</id>
    <published>2023-02-17T03:01:44.000Z</published>
    <updated>2023-02-17T03:22:14.163Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近系統被 Checkmarx V9.4.5 掃出有 Unsafe_Reflection 的問題，<br>程式碼中有透過傳入的 Type Name 及 參數值來動態建立物件執行該 Method 。<br>問題的<strong>來源</strong>是 Controller Action Method 的<strong>參數</strong>，<br>問題的<strong>目的地</strong>則是 <strong>Invoke Method</strong> 。</p><h3 id="解決"><a href="#解決" class="headerlink" title="解決"></a>解決</h3><p>查看 Checkmarx 中的 Search Rule 如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">CxList inputs = Find_Inputs();</span><br><span class="line">CxList objectCreates = Find_ObjectCreations();</span><br><span class="line">CxList comCreations = objectCreates.FindByTypes(<span class="keyword">new</span> String[]</span><br><span class="line"></span><br><span class="line">&#123; <span class="string">&quot;CodeSnippetExpression&quot;</span>, <span class="string">&quot;CodeEntryPointMethod&quot;</span>, <span class="string">&quot;CodeTypeReference&quot;</span>, <span class="string">&quot;CodeTypeReference&quot;</span>, <span class="string">&quot;CodeObjectCreateExpression&quot;</span>, <span class="string">&quot;CodeMethodInvokeExpression&quot;</span>, <span class="string">&quot;CodeTypeReferenceExpression&quot;</span>, <span class="string">&quot;CodeMethodReturnStatement&quot;</span>, <span class="string">&quot;CodeMemberMethod&quot;</span>&#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">CxList unknownList = Find_UnknownReference();</span><br><span class="line">unknownList.Add(Find_Param());</span><br><span class="line">unknownList.Add(Find_TypeRef());</span><br><span class="line"></span><br><span class="line">CxList methodExpr = Find_Methods();</span><br><span class="line">CxList ifs = Find_Ifs();</span><br><span class="line"></span><br><span class="line">CxList auxInput = inputs.Clone();</span><br><span class="line">auxInput.Add(unknownList.FindAllReferences(auxInput.GetAssignee()));</span><br><span class="line">CxList typeofExpress = Find_TypeOfExpr();</span><br><span class="line">typeofExpress.Add(methodExpr.FindByMemberAccesses(<span class="keyword">new</span> <span class="built_in">string</span>[]</span><br><span class="line"></span><br><span class="line">&#123;<span class="string">&quot;Type.Get*&quot;</span>, <span class="string">&quot;Assembly.GetType&quot;</span>, <span class="string">&quot;*Info.Get*&quot;</span>, <span class="string">&quot;Assembly.Load*&quot;</span>, <span class="string">&quot;Assembly.ReflectionOnly*&quot;</span>&#125;</span><br><span class="line">));</span><br><span class="line"></span><br><span class="line">CxList containsMethods = methodExpr.FindByMemberAccess(<span class="string">&quot;*.Contains&quot;</span>).GetByAncs(ifs);</span><br><span class="line">CxList influenceIfparams = auxInput.GetParameters(containsMethods.FindByParameters(auxInput), <span class="number">0</span>);</span><br><span class="line">CxList allReferencesOfifParams = auxInput.FindAllReferences(influenceIfparams);</span><br><span class="line"></span><br><span class="line">CxList notInfluencedChecks = typeofExpress - typeofExpress.FindByParameters(allReferencesOfifParams);</span><br><span class="line">notInfluencedChecks.Add(All.FindAllReferences(notInfluencedChecks.GetAssignee()));</span><br><span class="line"></span><br><span class="line">CxList notInfluencedComCreations = comCreations - comCreations.FindByParameters(allReferencesOfifParams);</span><br><span class="line">CxList objsC = notInfluencedComCreations.FindByParameters(All.GetParameters(notInfluencedComCreations) * auxInput);</span><br><span class="line"></span><br><span class="line">result = inputs.DataInfluencingOn(notInfluencedChecks.GetMembersOfTarget().FindByShortName(<span class="string">&quot;Invoke*&quot;</span>));</span><br><span class="line">result.Add(inputs.DataInfluencingOn(objsC));</span><br></pre></td></tr></table></figure><p>似乎是透過 Method 的參數找相關的 method 是否有 Invoke ，<br>並且沒透過 <strong>if + 白名單 + Contains</strong> 去排除，<br>所以程式碼中包含 invoke 就被認為是有問題。</p><p>Checkmarx 建議的解法如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> IActionResult <span class="title">MethodInvoker</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> cls = Request.Query[<span class="string">&quot;class&quot;</span>];</span><br><span class="line">    <span class="keyword">var</span> method = Request.Query[<span class="string">&quot;method&quot;</span>];</span><br><span class="line">    <span class="keyword">var</span> val = Request.Query[<span class="string">&quot;val&quot;</span>];</span><br><span class="line">    <span class="keyword">if</span> (allowedClassesList.Contains(cls) &amp;&amp; allowedMethodsList.Contains(method) &#123;</span><br><span class="line">        ViewBag.Result = Type.GetType(cls).GetMethod(method).Invoke(<span class="literal">null</span>, val);</span><br><span class="line">        <span class="keyword">return</span> View();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">//Handle Exception</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>原始程式碼類似如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="built_in">dynamic</span> <span class="title">CreateReport</span>(<span class="params"><span class="built_in">string</span> ReportName, <span class="built_in">string</span> ReportPrintDate, <span class="built_in">string</span> condition</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// ... codes ...</span></span><br><span class="line"><span class="built_in">string</span> reportDll = WebConfigurationManager.AppSettings[<span class="string">&quot;ReportDll&quot;</span>];</span><br><span class="line"><span class="keyword">var</span> types = Assembly.Load(reportDll).GetTypes().Where(t =&gt; t.Name == ReportName);</span><br><span class="line"><span class="keyword">if</span> (types.Count() == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">&quot;無此報表程式&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">Type type = Assembly.Load(reportDll).GetTypes().Where(t =&gt; t.Name == ReportName).FirstOrDefault();</span><br><span class="line"></span><br><span class="line"><span class="built_in">dynamic</span> report = Activator.CreateInstance(type);</span><br><span class="line"><span class="keyword">var</span> queryMethod = type.GetMethod(<span class="string">&quot;Query&quot;</span>);</span><br><span class="line">List&lt;<span class="built_in">object</span>&gt; para = <span class="keyword">new</span> List&lt;<span class="built_in">object</span>&gt;();</span><br><span class="line">para.Add(condition);</span><br><span class="line"><span class="comment">//  Unsafe_Reflection</span></span><br><span class="line">queryMethod.Invoke(report, para.ToArray());</span><br><span class="line"><span class="keyword">return</span> report;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>雖然上述程式碼中有透過 LINQ 的 Where 判斷，但沒有 <strong>if + 白名單 + Contains</strong> 所以還是被 Checkmarx 認為有問題。<br>所以調整程式碼，讓它符合 <strong>if + 白名單 + Contains</strong> 就可以通過了，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="built_in">dynamic</span> <span class="title">CreateReport</span>(<span class="params"><span class="built_in">string</span> ReportName, <span class="built_in">string</span> ReportPrintDate, <span class="built_in">string</span> condition</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// ... codes ...</span></span><br><span class="line"><span class="built_in">string</span> reportDll = WebConfigurationManager.AppSettings[<span class="string">&quot;ReportDll&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> types = Assembly.Load(reportDll).GetTypes().Where(t =&gt; t.Name == ReportName);</span><br><span class="line"><span class="keyword">if</span> (types.Count() == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">&quot;無此報表程式&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">var</span> typeNames = Assembly.Load(reportDll).GetTypes().Select(t=&gt;t.Name);</span><br><span class="line">    <span class="comment">//要 invoke 的 method 要被包在 if + 白名單 + Contains 之中</span></span><br><span class="line">    <span class="keyword">if</span>(typeNames.Contains(ReportName))</span><br><span class="line">    &#123;</span><br><span class="line">        Type type = Assembly.Load(reportDll).GetTypes().Where(t =&gt; t.Name == ReportName).FirstOrDefault();</span><br><span class="line">        <span class="built_in">dynamic</span> report = Activator.CreateInstance(type);</span><br><span class="line">        <span class="keyword">var</span> queryMethod = type.GetMethod(<span class="string">&quot;Query&quot;</span>);</span><br><span class="line">        List&lt;<span class="built_in">object</span>&gt; para = <span class="keyword">new</span> List&lt;<span class="built_in">object</span>&gt;();</span><br><span class="line">        para.Add(condition);</span><br><span class="line">        <span class="comment">//  Unsafe_Reflection</span></span><br><span class="line">        queryMethod.Invoke(report, para.ToArray());</span><br><span class="line">        <span class="keyword">return</span> report;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;<span class="keyword">return</span> <span class="literal">null</span>;&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;最近系統被 Checkmarx V9.4.5 掃出有 Unsafe_Reflection 的問題，&lt;br&gt;程式碼中有透過傳入的 Type N</summary>
      
    
    
    
    
    <category term="Checkmarx" scheme="https://rainmakerho.github.io/tags/Checkmarx/"/>
    
    <category term="Unsafe_Reflection" scheme="https://rainmakerho.github.io/tags/Unsafe-Reflection/"/>
    
    <category term="V9.4.5" scheme="https://rainmakerho.github.io/tags/V9-4-5/"/>
    
    <category term="CWE-470" scheme="https://rainmakerho.github.io/tags/CWE-470/"/>
    
  </entry>
  
  <entry>
    <title>如何在 TypeScript 中動態設定物件的屬性 (How to Set Dynamic Property Keys with TypeScript)</title>
    <link href="https://rainmakerho.github.io/2023/02/06/dynamic-set-property-with-ts/"/>
    <id>https://rainmakerho.github.io/2023/02/06/dynamic-set-property-with-ts/</id>
    <published>2023-02-06T03:01:35.000Z</published>
    <updated>2023-02-06T04:03:31.003Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在 JS ES6 中要動態設定物件的屬性，可以透過 Bracket notation 的方式來設定(<code>myobj[key] = &quot;google&quot;;</code>)，<br>但如果在 TypeScript 的物件這樣寫就會出現 <code>TS7053: Element implicitly has an &#39;any&#39; type because expression of type &#39;string&#39; can&#39;t be used to index type</code> 的編譯錯誤，如下，</p><img src="/2023/02/06/dynamic-set-property-with-ts/01.png" class="" title="TS7053"><h3 id="問題與解法"><a href="#問題與解法" class="headerlink" title="問題與解法"></a>問題與解法</h3><p>一開始的問題是看到 <a href="https://handsonreact.com/docs/labs/ts/CreatingDataStructures">React-TypeScript Lab5-Data</a> 中，<br><code>Project</code>物件的<code>constructor</code>會接受一個 any 物件，再判斷該物件是否有對應的屬性值來設定 <code>Project</code>物件，</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">Project</span> &#123;</span><br><span class="line">  <span class="attr">id</span>: <span class="built_in">number</span> | <span class="literal">undefined</span>;</span><br><span class="line">  <span class="attr">name</span>: <span class="built_in">string</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attr">description</span>: <span class="built_in">string</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attr">imageUrl</span>: <span class="built_in">string</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attr">contractTypeId</span>: <span class="built_in">number</span> | <span class="literal">undefined</span>;</span><br><span class="line">  <span class="attr">contractSignedOn</span>: <span class="title class_">Date</span> = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">  <span class="attr">budget</span>: <span class="built_in">number</span> = <span class="number">0</span>;</span><br><span class="line">  <span class="attr">isActive</span>: <span class="built_in">boolean</span> = <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">get</span> <span class="title function_">isNew</span>(): <span class="built_in">boolean</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">id</span> === <span class="literal">undefined</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">initializer?: <span class="built_in">any</span></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!initializer) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span> (initializer.<span class="property">id</span>) <span class="variable language_">this</span>.<span class="property">id</span> = initializer.<span class="property">id</span>;</span><br><span class="line">    <span class="keyword">if</span> (initializer.<span class="property">name</span>) <span class="variable language_">this</span>.<span class="property">name</span> = initializer.<span class="property">name</span>;</span><br><span class="line">    <span class="keyword">if</span> (initializer.<span class="property">description</span>) <span class="variable language_">this</span>.<span class="property">description</span> = initializer.<span class="property">description</span>;</span><br><span class="line">    <span class="keyword">if</span> (initializer.<span class="property">imageUrl</span>) <span class="variable language_">this</span>.<span class="property">imageUrl</span> = initializer.<span class="property">imageUrl</span>;</span><br><span class="line">    <span class="keyword">if</span> (initializer.<span class="property">contractTypeId</span>)</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">contractTypeId</span> = initializer.<span class="property">contractTypeId</span>;</span><br><span class="line">    <span class="keyword">if</span> (initializer.<span class="property">contractSignedOn</span>)</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">contractSignedOn</span> = <span class="keyword">new</span> <span class="title class_">Date</span>(initializer.<span class="property">contractSignedOn</span>);</span><br><span class="line">    <span class="keyword">if</span> (initializer.<span class="property">budget</span>) <span class="variable language_">this</span>.<span class="property">budget</span> = initializer.<span class="property">budget</span>;</span><br><span class="line">    <span class="keyword">if</span> (initializer.<span class="property">isActive</span>) <span class="variable language_">this</span>.<span class="property">isActive</span> = initializer.<span class="property">isActive</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>new Project 的程式碼如下，</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Project</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./Project&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="variable constant_">MOCK_PROJECTS</span> = [</span><br><span class="line">  <span class="keyword">new</span> <span class="title class_">Project</span>(&#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;Johnson - Kutch&quot;</span>,</span><br><span class="line">    <span class="attr">description</span>:</span><br><span class="line">      <span class="string">&quot;Fully-configurable intermediate framework. Ullam occaecati libero laudantium nihil voluptas omnis.&quot;</span>,</span><br><span class="line">    <span class="attr">imageUrl</span>: <span class="string">&quot;/assets/placeimg_500_300_arch4.jpg&quot;</span>,</span><br><span class="line">    <span class="attr">contractTypeId</span>: <span class="number">3</span>,</span><br><span class="line">    <span class="attr">contractSignedOn</span>: <span class="string">&quot;2013-08-04T22:39:41.473Z&quot;</span>,</span><br><span class="line">    <span class="attr">budget</span>: <span class="number">54637</span>,</span><br><span class="line">    <span class="attr">isActive</span>: <span class="literal">false</span>,</span><br><span class="line">  &#125;),</span><br><span class="line">];</span><br></pre></td></tr></table></figure><p>只是看到一堆的 <code>if (initializer.屬性) this.屬性 = initializer.屬性;</code>，<br>覺得應該是可以動態來設定將這些值。<br>所以就將程式改用 <code>this[v] = initializer[v]</code> 的方式，<br>結果立馬就出現 <code>TS7053: Element implicitly has an &#39;any&#39; type because expression of type &#39;string&#39; can&#39;t be used to index type</code> 的錯誤。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">Project</span> &#123;</span><br><span class="line">  <span class="attr">id</span>: <span class="built_in">number</span> | <span class="literal">undefined</span>;</span><br><span class="line">  <span class="attr">name</span>: <span class="built_in">string</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attr">description</span>: <span class="built_in">string</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attr">imageUrl</span>: <span class="built_in">string</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attr">contractTypeId</span>: <span class="built_in">number</span> | <span class="literal">undefined</span>;</span><br><span class="line">  <span class="attr">contractSignedOn</span>: <span class="title class_">Date</span> = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">  <span class="attr">budget</span>: <span class="built_in">number</span> = <span class="number">0</span>;</span><br><span class="line">  <span class="attr">isActive</span>: <span class="built_in">boolean</span> = <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">get</span> <span class="title function_">isNew</span>(): <span class="built_in">boolean</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">id</span> === <span class="literal">undefined</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">initializer?: <span class="built_in">any</span></span>) &#123;</span><br><span class="line">    <span class="comment">//debug only</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;before assign:&quot;</span>, <span class="variable language_">this</span>);</span><br><span class="line">    <span class="keyword">if</span> (!initializer) <span class="keyword">return</span>;</span><br><span class="line">    <span class="title class_">Object</span>.<span class="title function_">keys</span>(<span class="variable language_">this</span>).<span class="title function_">forEach</span>(<span class="function">(<span class="params">v</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (initializer[v]) <span class="variable language_">this</span>[v] = initializer[v];</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// if(initializer.id) this.id = initializer.id;</span></span><br><span class="line">    <span class="comment">// if(initializer.name) this.name = initializer.name;</span></span><br><span class="line">    <span class="comment">// if(initializer.description) this.description = initializer.description;</span></span><br><span class="line">    <span class="comment">// if(initializer.imageUrl) this.imageUrl = initializer.imageUrl;</span></span><br><span class="line">    <span class="comment">// if(initializer.contractTypeId) this.contractTypeId = initializer.contractTypeId;</span></span><br><span class="line">    <span class="comment">// if(initializer.contractSignedOn) this.contractSignedOn = new Date(initializer.contractSignedOn);</span></span><br><span class="line">    <span class="comment">// if(initializer.budget) this.budget = initializer.budget;</span></span><br><span class="line">    <span class="comment">// if(initializer.isActive) this.isActive = initializer.isActive;</span></span><br><span class="line">    <span class="comment">//debug only</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那要怎麼辦呢?<br>可以參考 <a href="https://stackoverflow.com/questions/34727936/typescript-bracket-notation-property-access">Typescript: bracket notation property access</a> 的方式，<br>在 <code>Project</code>物件中加入 <code>[key: string]: any;</code> 來讓 TypeScript 物件 Support bracket-notation 的方式，如下，</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">Project</span> &#123;</span><br><span class="line">  <span class="comment">//Support bracket-notation</span></span><br><span class="line">  [<span class="attr">key</span>: <span class="built_in">string</span>]: <span class="built_in">any</span>;</span><br><span class="line">  <span class="attr">id</span>: <span class="built_in">number</span> | <span class="literal">undefined</span>;</span><br><span class="line">  <span class="attr">name</span>: <span class="built_in">string</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attr">description</span>: <span class="built_in">string</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attr">imageUrl</span>: <span class="built_in">string</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attr">contractTypeId</span>: <span class="built_in">number</span> | <span class="literal">undefined</span>;</span><br><span class="line">  <span class="attr">contractSignedOn</span>: <span class="title class_">Date</span> = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">  <span class="attr">budget</span>: <span class="built_in">number</span> = <span class="number">0</span>;</span><br><span class="line">  <span class="attr">isActive</span>: <span class="built_in">boolean</span> = <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">get</span> <span class="title function_">isNew</span>(): <span class="built_in">boolean</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">id</span> === <span class="literal">undefined</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">initializer?: <span class="built_in">any</span></span>) &#123;</span><br><span class="line">    <span class="comment">//debug only</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;before assign:&quot;</span>, <span class="variable language_">this</span>);</span><br><span class="line">    <span class="keyword">if</span> (!initializer) <span class="keyword">return</span>;</span><br><span class="line">    <span class="title class_">Object</span>.<span class="title function_">keys</span>(<span class="variable language_">this</span>).<span class="title function_">forEach</span>(<span class="function">(<span class="params">v</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (initializer[v]) <span class="variable language_">this</span>[v] = initializer[v];</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">//debug only</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>這樣就可以透過動態的方式設定屬性值，但是其中日期型態的<code>contractSignedOn</code>卻被改成了字串型態，如下，</p><img src="/2023/02/06/dynamic-set-property-with-ts/02.png" class="" title="contractSignedOn"><p>所以我們可以再補上針對不是字串型態的屬性來設定，如下，</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">Project</span> &#123;</span><br><span class="line">  <span class="comment">//Support bracket-notation</span></span><br><span class="line">  [<span class="attr">key</span>: <span class="built_in">string</span>]: <span class="built_in">any</span>;</span><br><span class="line">  <span class="attr">id</span>: <span class="built_in">number</span> | <span class="literal">undefined</span>;</span><br><span class="line">  <span class="attr">name</span>: <span class="built_in">string</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attr">description</span>: <span class="built_in">string</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attr">imageUrl</span>: <span class="built_in">string</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attr">contractTypeId</span>: <span class="built_in">number</span> | <span class="literal">undefined</span>;</span><br><span class="line">  <span class="attr">contractSignedOn</span>: <span class="title class_">Date</span> = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">  <span class="attr">budget</span>: <span class="built_in">number</span> = <span class="number">0</span>;</span><br><span class="line">  <span class="attr">isActive</span>: <span class="built_in">boolean</span> = <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">get</span> <span class="title function_">isNew</span>(): <span class="built_in">boolean</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">id</span> === <span class="literal">undefined</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">initializer?: <span class="built_in">any</span></span>) &#123;</span><br><span class="line">    <span class="comment">//debug only</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;before assign:&quot;</span>, <span class="variable language_">this</span>);</span><br><span class="line">    <span class="keyword">if</span> (!initializer) <span class="keyword">return</span>;</span><br><span class="line">    <span class="title class_">Object</span>.<span class="title function_">keys</span>(<span class="variable language_">this</span>).<span class="title function_">forEach</span>(<span class="function">(<span class="params">v</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (initializer[v]) <span class="variable language_">this</span>[v] = initializer[v];</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">//針對非字串欄位來設定</span></span><br><span class="line">    <span class="keyword">if</span> (initializer.<span class="property">contractSignedOn</span>)</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">contractSignedOn</span> = <span class="keyword">new</span> <span class="title class_">Date</span>(initializer.<span class="property">contractSignedOn</span>);</span><br><span class="line">    <span class="comment">//debug only</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果不想覆蓋掉非字串型態的屬性，可以建立一個不自動指定的屬性陣列，不在該陣列中的屬性才自動 Assign，如下，</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">Project</span> &#123;</span><br><span class="line">  <span class="comment">//Support bracket-notation</span></span><br><span class="line">  [<span class="attr">key</span>: <span class="built_in">string</span>]: <span class="built_in">any</span>;</span><br><span class="line">  <span class="attr">id</span>: <span class="built_in">number</span> | <span class="literal">undefined</span>;</span><br><span class="line">  <span class="attr">name</span>: <span class="built_in">string</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attr">description</span>: <span class="built_in">string</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attr">imageUrl</span>: <span class="built_in">string</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attr">contractTypeId</span>: <span class="built_in">number</span> | <span class="literal">undefined</span>;</span><br><span class="line">  <span class="attr">contractSignedOn</span>: <span class="title class_">Date</span> = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">  <span class="attr">budget</span>: <span class="built_in">number</span> = <span class="number">0</span>;</span><br><span class="line">  <span class="attr">isActive</span>: <span class="built_in">boolean</span> = <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">get</span> <span class="title function_">isNew</span>(): <span class="built_in">boolean</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">id</span> === <span class="literal">undefined</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">initializer?: <span class="built_in">any</span></span>) &#123;</span><br><span class="line">    <span class="comment">//debug only</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;before assign:&quot;</span>, <span class="variable language_">this</span>);</span><br><span class="line">    <span class="keyword">if</span> (!initializer) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">const</span> manualProps = [<span class="string">&quot;contractSignedOn&quot;</span>];</span><br><span class="line">    <span class="title class_">Object</span>.<span class="title function_">keys</span>(<span class="variable language_">this</span>)</span><br><span class="line">      .<span class="title function_">filter</span>(<span class="function">(<span class="params">v</span>) =&gt;</span> manualProps.<span class="title function_">includes</span>(v) === <span class="literal">false</span> &amp;&amp; initializer[v])</span><br><span class="line">      .<span class="title function_">forEach</span>(<span class="function">(<span class="params">v</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">this</span>[v] = initializer[v];</span><br><span class="line">      &#125;);</span><br><span class="line">    <span class="comment">//針對非字串欄位來設定</span></span><br><span class="line">    <span class="keyword">if</span> (initializer.<span class="property">contractSignedOn</span>)</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">contractSignedOn</span> = <span class="keyword">new</span> <span class="title class_">Date</span>(initializer.<span class="property">contractSignedOn</span>);</span><br><span class="line">    <span class="comment">//debug only</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><p><a href="https://www.samanthaming.com/tidbits/37-dynamic-property-name-with-es6/">How to Set Dynamic Property Keys with ES6</a><br><a href="https://stackoverflow.com/questions/34727936/typescript-bracket-notation-property-access">Typescript: bracket notation property access</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;在 JS ES6 中要動態設定物件的屬性，可以透過 Bracket notation 的方式來設定(&lt;code&gt;myobj[key] = &amp;</summary>
      
    
    
    
    
    <category term="TypeScript" scheme="https://rainmakerho.github.io/tags/TypeScript/"/>
    
    <category term="dynamic" scheme="https://rainmakerho.github.io/tags/dynamic/"/>
    
    <category term="property" scheme="https://rainmakerho.github.io/tags/property/"/>
    
    <category term="bracket-notation" scheme="https://rainmakerho.github.io/tags/bracket-notation/"/>
    
  </entry>
  
  <entry>
    <title>TCP 3-Way Handshake</title>
    <link href="https://rainmakerho.github.io/2023/02/03/tcp-3-way-handshakes/"/>
    <id>https://rainmakerho.github.io/2023/02/03/tcp-3-way-handshakes/</id>
    <published>2023-02-03T03:53:45.000Z</published>
    <updated>2023-02-03T05:52:19.823Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>常常聽到 TCP Three-Way Handshake，它們是如何運作的呢?<br>開始之前，先看了解一下， TCP 使用到的 Header Flags</p><ul><li>SYN: Synchronize(Include a seq #)</li><li>ACK: Acknowledgement (確認收到訊息)</li><li>FIN: Finish</li><li>PSH: Push (送訊息)</li><li>URG: Urgent(馬上送訊息)</li><li>RST: Reset (重設連線)</li></ul><h3 id="Three-Way-Handshake"><a href="#Three-Way-Handshake" class="headerlink" title="Three-Way Handshake"></a>Three-Way Handshake</h3><p>Client 要開始跟 Server 對話時，</p><table><thead><tr><th>Client</th><th align="center">Action</th><th align="right">Server</th></tr></thead><tbody><tr><td>Client A</td><td align="center">- <strong>SYN</strong>: Sequence #101 -&gt;</td><td align="right">Server B</td></tr><tr><td>Client A</td><td align="center">&lt;- **SYN&#x2F;ACK** - <br/> &lt;- (Your) Sequence #102 (你的下次 Seq 是 102) - <br/> &lt;- (My) Sequence #508 -</td><td align="right">Server B</td></tr><tr><td>Client A</td><td align="center">- <strong>ACK</strong> -&gt; <br/> - (Your) Sequence #509 (你的下次 Seq 是 509) -&gt; <br/> - (My) Sequence #102 -&gt;</td><td align="right">Server B</td></tr></tbody></table><img src="/2023/02/03/tcp-3-way-handshakes/01.png" class="" title="Client2Server"><p>再來就是 Server 會 PUSH 資料給 Client …</p><p>Client 要結束對話時，</p><table><thead><tr><th>Client</th><th align="center">Action</th><th align="right">Server</th></tr></thead><tbody><tr><td>Client A</td><td align="center">- <strong>FIN</strong>: 我要結束對話 -&gt;</td><td align="right">Server B</td></tr><tr><td>Client A</td><td align="center">&lt;- **ACK&#x2F;FIN** - <br/> &lt;- OK…Tell App to stop - <br/> &lt;- App stopped … I’m done - -</td><td align="right">Server B</td></tr><tr><td>Client A</td><td align="center">- <strong>ACK</strong> -&gt; <br/> - OK… -&gt;</td><td align="right">Server B</td></tr></tbody></table><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="https://www.sciencedirect.com/topics/computer-science/three-way-handshake#:~:text=The%20TCP%20handshake,as%20shown%20in%20Figure%203.8.">Three-Way Handshake</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;常常聽到 TCP Three-Way Handshake，它們是如何運作的呢?&lt;br&gt;開始之前，先看了解一下， TCP 使用到的 Heade</summary>
      
    
    
    
    
    <category term="TCP" scheme="https://rainmakerho.github.io/tags/TCP/"/>
    
    <category term="Handshake" scheme="https://rainmakerho.github.io/tags/Handshake/"/>
    
  </entry>
  
</feed>
